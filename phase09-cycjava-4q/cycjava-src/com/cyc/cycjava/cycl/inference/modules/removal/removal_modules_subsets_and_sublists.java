package com.cyc.cycjava.cycl.inference.modules.removal;

import com.cyc.cycjava.cycl.constant_handles;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.cycjava.cycl.cyc_testing.generic_testing;
import com.cyc.cycjava.cycl.inference.modules.preference_modules;
import com.cyc.cycjava.cycl.inference.harness.inference_modules;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.cycjava.cycl.cyc_kernel;
import com.cyc.cycjava.cycl.dictionary_contents;
import com.cyc.cycjava.cycl.dictionary_utilities;
import com.cyc.cycjava.cycl.dictionary;
import com.cyc.cycjava.cycl.control_vars;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapping;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.cycjava.cycl.subl_macro_promotions;
import com.cyc.cycjava.cycl.inference.harness.inference_kernel;
import com.cyc.cycjava.cycl.wff;
import com.cyc.cycjava.cycl.variables;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.cycjava.cycl.inference.ask_utilities;
import com.cyc.cycjava.cycl.inference.inference_trampolines;
import com.cyc.cycjava.cycl.mt_relevance_macros;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.cycjava.cycl.backward;
import com.cyc.cycjava.cycl.arguments;
import com.cyc.cycjava.cycl.bindings;
import com.cyc.cycjava.cycl.unification_utilities;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.cycjava.cycl.list_utilities;
import com.cyc.cycjava.cycl.subl_promotions;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.cycjava.cycl.el_utilities;
import com.cyc.cycjava.cycl.cycl_utilities;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class removal_modules_subsets_and_sublists extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists";
    public static final String myFingerPrint = "7c4fb9e1736f45eda716013de32cf84984dc2f1ee3f8ddea7874401f52e43bb2";
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 862L)
    private static SubLSymbol $default_list_has_max_sublist_meeting_condition_cost$;
    private static final SubLObject $const0$listHasMaxSublistMeetingCondition;
    private static final SubLSymbol $kw1$POS;
    private static final SubLSymbol $kw2$REMOVAL_LIST_HAS_MAX_SUBLIST_MEETING_CONDITION;
    private static final SubLList $list3;
    private static final SubLSymbol $kw4$EL_LIST_ARG_IS_NOT_AN_EL_LIST;
    private static final SubLSymbol $kw5$MIN_ARG_IS_NOT_A_POSITIVE_INTEGER;
    private static final SubLSymbol $kw6$MAX_ARG_IS_NOT_A_POSITIVE_INTEGER;
    private static final SubLSymbol $kw7$MAX_ARG_IS_NOT_GREATER_THAN_OR_EQUAL_TO_MIN_ARG;
    private static final SubLObject $const8$Quote;
    private static final SubLSymbol $kw9$QUOTED_QUERY_ARG_IS_NOT_QUOTED;
    private static final SubLSymbol $kw10$QUERY_ARG_IS_NOT_AN_EL_FORMULA;
    private static final SubLSymbol $kw11$NO_OPEN_QUERY_VAR;
    private static final SubLSymbol $kw12$TOO_MANY_OPEN_QUERY_VARS;
    private static final SubLSymbol $kw13$OPAQUE;
    private static final SubLObject $const14$resultOfSubstitutingTermsListForT;
    private static final SubLSymbol $kw15$REMOVAL_RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA;
    private static final SubLList $list16;
    private static final SubLSymbol $sym17$EQUALS_EL_;
    private static final SubLSymbol $sym18$TEST_REMOVAL_RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA_E;
    private static final SubLSymbol $kw19$TEST;
    private static final SubLSymbol $kw20$OWNER;
    private static final SubLSymbol $kw21$CLASSES;
    private static final SubLSymbol $kw22$KB;
    private static final SubLSymbol $kw23$FULL;
    private static final SubLSymbol $kw24$WORKING_;
    private static final SubLObject $list25;
    private static final SubLObject $const26$resultOfSubstitutingListOfTermsLi;
    private static final SubLSymbol $kw27$REMOVAL_RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFO;
    private static final SubLList $list28;
    private static final SubLSymbol $sym29$CATCH_ERROR_MESSAGE_HANDLER;
    private static final SubLSymbol $sym30$TEST_REMOVAL_RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLIS;
    private static final SubLObject $list31;
    private static final SubLObject $const32$maximalCompatibleListsFromList;
    private static final SubLSymbol $sym33$EL_SET_ITEMS;
    private static final SubLSymbol $sym34$EL_LIST_ITEMS;
    private static final SubLSymbol $sym35$SETS_EQUAL_;
    private static final SubLSymbol $kw36$REMOVAL_MAXIMAL_COMPATIBLE_LISTS_FROM_LIST_CHECK_POS;
    private static final SubLList $list37;
    private static final SubLSymbol $kw38$CODE;
    private static final SubLObject $const39$UniversalVocabularyMt;
    private static final SubLSymbol $kw40$TRUE_MON;
    private static final SubLSymbol $kw41$REMOVAL_MAXIMAL_COMPATIBLE_LISTS_FROM_LIST_UNIFY_POS;
    private static final SubLList $list42;
    private static final SubLObject $const43$nthInList;
    private static final SubLSymbol $kw44$REMOVAL_NTHINLIST_UNIFY_POS;
    private static final SubLList $list45;
    private static final SubLObject $const46$numberOfOccurencesOfItemInList;
    private static final SubLSymbol $kw47$REMOVAL_NUMBEROFOCCURENCESOFITEMINLIST_UNIFY_POS;
    private static final SubLList $list48;
    private static final SubLSymbol $sym49$TEST_REMOVAL_NUMBEROFOCCURENCESOFITEMINLIST_EXPAND;
    private static final SubLList $list50;
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 4287L)
    public static SubLObject removal_list_has_max_sublist_meeting_condition_expand(final SubLObject asent, SubLObject sense) {
        if (sense == removal_modules_subsets_and_sublists.UNPROVIDED) {
            sense = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        final SubLObject max_sub_list_arg = cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject min_arg = cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject max_arg = cycl_utilities.atomic_sentence_arg3(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject el_list_arg = cycl_utilities.atomic_sentence_arg4(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject quoted_query_arg = cycl_utilities.atomic_sentence_arg5(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        SubLObject query_arg = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        SubLObject open_query_var = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        if (removal_modules_subsets_and_sublists.NIL == el_utilities.el_list_p(el_list_arg)) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.NIL, (SubLObject)removal_modules_subsets_and_sublists.$kw4$EL_LIST_ARG_IS_NOT_AN_EL_LIST);
        }
        if (removal_modules_subsets_and_sublists.NIL == subl_promotions.positive_integer_p(min_arg)) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.$kw5$MIN_ARG_IS_NOT_A_POSITIVE_INTEGER);
        }
        if (removal_modules_subsets_and_sublists.NIL == subl_promotions.positive_integer_p(max_arg)) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.$kw6$MAX_ARG_IS_NOT_A_POSITIVE_INTEGER);
        }
        if (!max_arg.numGE(min_arg)) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.NIL, (SubLObject)removal_modules_subsets_and_sublists.$kw7$MAX_ARG_IS_NOT_GREATER_THAN_OR_EQUAL_TO_MIN_ARG);
        }
        if (removal_modules_subsets_and_sublists.NIL == el_utilities.el_formula_with_operator_p(quoted_query_arg, removal_modules_subsets_and_sublists.$const8$Quote)) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.NIL, (SubLObject)removal_modules_subsets_and_sublists.$kw9$QUOTED_QUERY_ARG_IS_NOT_QUOTED);
        }
        query_arg = cycl_utilities.el_formula_arg1(quoted_query_arg, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        if (removal_modules_subsets_and_sublists.NIL == el_utilities.el_formula_p(query_arg)) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.NIL, (SubLObject)removal_modules_subsets_and_sublists.$kw10$QUERY_ARG_IS_NOT_AN_EL_FORMULA);
        }
        final SubLObject open_query_vars = el_utilities.expression_free_variables(query_arg, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        if (removal_modules_subsets_and_sublists.NIL == open_query_vars) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.NIL, (SubLObject)removal_modules_subsets_and_sublists.$kw11$NO_OPEN_QUERY_VAR);
        }
        if (removal_modules_subsets_and_sublists.NIL == list_utilities.singletonP(open_query_vars)) {
            return Values.values((SubLObject)removal_modules_subsets_and_sublists.NIL, (SubLObject)removal_modules_subsets_and_sublists.$kw12$TOO_MANY_OPEN_QUERY_VARS);
        }
        open_query_var = open_query_vars.first();
        final SubLObject list_items = el_utilities.el_list_items(el_list_arg);
        final SubLObject list_items_count = Sequences.length(list_items);
        SubLObject max_el_sublists;
        SubLObject sublist_length;
        SubLObject num_sublists_of_sublist_length;
        SubLObject n;
        SubLObject n_plus_sublist_length;
        SubLObject sublist;
        SubLObject el_sublist;
        SubLObject item_var;
        for (max_el_sublists = (SubLObject)removal_modules_subsets_and_sublists.NIL, sublist_length = (SubLObject)removal_modules_subsets_and_sublists.NIL, sublist_length = Numbers.min(max_arg, list_items_count); !sublist_length.numL(min_arg) && removal_modules_subsets_and_sublists.NIL == max_el_sublists; sublist_length = Numbers.subtract(sublist_length, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER)) {
            for (num_sublists_of_sublist_length = Numbers.add((SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, Numbers.subtract(list_items_count, sublist_length)), n = (SubLObject)removal_modules_subsets_and_sublists.NIL, n = (SubLObject)removal_modules_subsets_and_sublists.ZERO_INTEGER; n.numL(num_sublists_of_sublist_length); n = Numbers.add(n, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER)) {
                n_plus_sublist_length = Numbers.add(n, sublist_length);
                sublist = Sequences.subseq(list_items, n, n_plus_sublist_length);
                el_sublist = el_utilities.make_el_list(sublist, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
                if (removal_modules_subsets_and_sublists.NIL != el_list_for_query_var_satisfies_queryP(el_sublist, open_query_var, query_arg)) {
                    item_var = el_sublist;
                    if (removal_modules_subsets_and_sublists.NIL == conses_high.member(item_var, max_el_sublists, Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.EQL), Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.IDENTITY))) {
                        max_el_sublists = (SubLObject)ConsesLow.cons(item_var, max_el_sublists);
                    }
                }
            }
        }
        if (removal_modules_subsets_and_sublists.NIL != max_el_sublists) {
            SubLObject cdolist_list_var = max_el_sublists;
            SubLObject max_el_sublist = (SubLObject)removal_modules_subsets_and_sublists.NIL;
            max_el_sublist = cdolist_list_var.first();
            while (removal_modules_subsets_and_sublists.NIL != cdolist_list_var) {
                final SubLObject v_bindings = unification_utilities.term_unify(max_sub_list_arg, max_el_sublist, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
                if (removal_modules_subsets_and_sublists.NIL != v_bindings) {
                    backward.removal_add_node(arguments.make_hl_support((SubLObject)removal_modules_subsets_and_sublists.$kw13$OPAQUE, bindings.apply_bindings(v_bindings, asent), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED), v_bindings, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
                }
                cdolist_list_var = cdolist_list_var.rest();
                max_el_sublist = cdolist_list_var.first();
            }
        }
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 6702L)
    public static SubLObject el_list_for_query_var_satisfies_queryP(final SubLObject el_sublist, final SubLObject open_query_var, final SubLObject query_arg) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject query_sentence = cycl_utilities.expression_subst(el_sublist, open_query_var, query_arg, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject query_properties = inference_trampolines.determine_sentence_recursive_query_properties(query_sentence, mt_relevance_macros.$mt$.getDynamicValue(thread));
        return ask_utilities.inference_recursive_query(query_sentence, mt_relevance_macros.$mt$.getDynamicValue(thread), query_properties);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 8997L)
    public static SubLObject removal_resultofsubstitutingtermslistfortermslistinformula_expand(final SubLObject asent, SubLObject sense) {
        if (sense == removal_modules_subsets_and_sublists.UNPROVIDED) {
            sense = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject pred = cycl_utilities.atomic_sentence_arg0(asent);
        final SubLObject new_list_arg = cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject old_list_arg = cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject old_formula_arg = cycl_utilities.atomic_sentence_arg3(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject result_formula_arg = cycl_utilities.atomic_sentence_arg4(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        SubLObject result_asent = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        if (removal_modules_subsets_and_sublists.NIL != variables.not_fully_bound_p(result_formula_arg)) {
            final SubLObject new_list = el_utilities.el_list_items(new_list_arg);
            final SubLObject old_list = el_utilities.el_list_items(old_list_arg);
            thread.resetMultipleValues();
            final SubLObject result_formula = list_utilities.list_subst_all_in_tree(new_list, old_list, old_formula_arg, (SubLObject)removal_modules_subsets_and_sublists.$sym17$EQUALS_EL_);
            final SubLObject replacedP = thread.secondMultipleValue();
            thread.resetMultipleValues();
            if (removal_modules_subsets_and_sublists.NIL != replacedP && removal_modules_subsets_and_sublists.NIL != wff.el_wfeP(result_formula, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED)) {
                result_asent = el_utilities.make_quaternary_formula(pred, new_list_arg, old_list_arg, old_formula_arg, result_formula);
            }
        }
        if (removal_modules_subsets_and_sublists.NIL != result_asent) {
            final SubLObject v_bindings = unification_utilities.term_unify(asent, result_asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            if (removal_modules_subsets_and_sublists.NIL != v_bindings) {
                backward.removal_add_node(arguments.make_hl_support((SubLObject)removal_modules_subsets_and_sublists.$kw13$OPAQUE, bindings.apply_bindings(v_bindings, asent), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED), v_bindings, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            }
        }
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 10063L)
    public static SubLObject test_removal_resultofsubstitutingtermslistfortermslistinformula_expand(final SubLObject sentence, SubLObject mt, SubLObject query_properties) {
        if (mt == removal_modules_subsets_and_sublists.UNPROVIDED) {
            mt = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        if (query_properties == removal_modules_subsets_and_sublists.UNPROVIDED) {
            query_properties = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        return inference_kernel.new_cyc_query(sentence, mt, query_properties);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 18169L)
    public static SubLObject removal_resultofsubstitutinglistoftermslistforlistoftermslistinformula_expand(final SubLObject asent, SubLObject sense) {
        if (sense == removal_modules_subsets_and_sublists.UNPROVIDED) {
            sense = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject pred = cycl_utilities.atomic_sentence_arg0(asent);
        final SubLObject new_lists_arg = cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject old_lists_arg = cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        SubLObject result_formula;
        final SubLObject old_formula_arg = result_formula = cycl_utilities.atomic_sentence_arg3(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        SubLObject result_asent = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        SubLObject failureP = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        SubLObject error_message = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        try {
            thread.throwStack.push(subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
            final SubLObject _prev_bind_0 = Errors.$error_handler$.currentBinding(thread);
            try {
                Errors.$error_handler$.bind((SubLObject)removal_modules_subsets_and_sublists.$sym29$CATCH_ERROR_MESSAGE_HANDLER, thread);
                try {
                    if (removal_modules_subsets_and_sublists.NIL == failureP) {
                        SubLObject new_list_arg = (SubLObject)removal_modules_subsets_and_sublists.NIL;
                        SubLObject new_list_arg_$1 = (SubLObject)removal_modules_subsets_and_sublists.NIL;
                        SubLObject old_list_arg = (SubLObject)removal_modules_subsets_and_sublists.NIL;
                        SubLObject old_list_arg_$2 = (SubLObject)removal_modules_subsets_and_sublists.NIL;
                        new_list_arg = el_utilities.el_list_items(new_lists_arg);
                        new_list_arg_$1 = new_list_arg.first();
                        old_list_arg = el_utilities.el_list_items(old_lists_arg);
                        old_list_arg_$2 = old_list_arg.first();
                        while (removal_modules_subsets_and_sublists.NIL == failureP && (removal_modules_subsets_and_sublists.NIL != old_list_arg || removal_modules_subsets_and_sublists.NIL != new_list_arg)) {
                            final SubLObject new_list = el_utilities.el_list_items(new_list_arg_$1);
                            final SubLObject old_list = el_utilities.el_list_items(old_list_arg_$2);
                            thread.resetMultipleValues();
                            final SubLObject possible_result_formula = list_utilities.list_subst_all_in_tree(new_list, old_list, result_formula, (SubLObject)removal_modules_subsets_and_sublists.$sym17$EQUALS_EL_);
                            final SubLObject replacedP = thread.secondMultipleValue();
                            thread.resetMultipleValues();
                            if (removal_modules_subsets_and_sublists.NIL != replacedP && removal_modules_subsets_and_sublists.NIL != wff.el_wfeP(possible_result_formula, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED)) {
                                result_formula = possible_result_formula;
                            }
                            else {
                                failureP = (SubLObject)removal_modules_subsets_and_sublists.T;
                            }
                            new_list_arg = new_list_arg.rest();
                            new_list_arg_$1 = new_list_arg.first();
                            old_list_arg = old_list_arg.rest();
                            old_list_arg_$2 = old_list_arg.first();
                        }
                    }
                }
                catch (Throwable catch_var) {
                    Errors.handleThrowable(catch_var, (SubLObject)removal_modules_subsets_and_sublists.NIL);
                }
            }
            finally {
                Errors.$error_handler$.rebind(_prev_bind_0, thread);
            }
        }
        catch (Throwable ccatch_env_var) {
            error_message = Errors.handleThrowable(ccatch_env_var, subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
        }
        finally {
            thread.throwStack.pop();
        }
        if (removal_modules_subsets_and_sublists.NIL == failureP && removal_modules_subsets_and_sublists.NIL == error_message) {
            result_asent = el_utilities.make_quaternary_formula(pred, new_lists_arg, old_lists_arg, old_formula_arg, result_formula);
            if (removal_modules_subsets_and_sublists.NIL != result_asent) {
                final SubLObject v_bindings = unification_utilities.term_unify(asent, result_asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
                if (removal_modules_subsets_and_sublists.NIL != v_bindings) {
                    backward.removal_add_node(arguments.make_hl_support((SubLObject)removal_modules_subsets_and_sublists.$kw13$OPAQUE, bindings.apply_bindings(v_bindings, asent), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED), v_bindings, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
                }
            }
        }
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 19528L)
    public static SubLObject test_removal_resultofsubstitutinglistoftermslistforlistoftermslistinformula_expand(final SubLObject sentence, SubLObject mt, SubLObject query_properties) {
        if (mt == removal_modules_subsets_and_sublists.UNPROVIDED) {
            mt = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        if (query_properties == removal_modules_subsets_and_sublists.UNPROVIDED) {
            query_properties = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        return inference_kernel.new_cyc_query(sentence, mt, query_properties);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 26718L)
    public static SubLObject extract_lists_from_el_set_of_sets(final SubLObject el_set) {
        final SubLObject el_sets = el_utilities.el_set_items(el_set);
        return Mapping.mapcar(Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.$sym33$EL_SET_ITEMS), el_sets);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 26864L)
    public static SubLObject extract_lists_from_el_set_of_lists(final SubLObject el_set) {
        final SubLObject el_lists = el_utilities.el_set_items(el_set);
        return Mapping.mapcar(Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.$sym34$EL_LIST_ITEMS), el_lists);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 27014L)
    public static SubLObject removal_maximal_compatible_lists_from_list_pos_check(final SubLObject input_el_list, final SubLObject incompatible_el_pairs, final SubLObject maximal_el_list) {
        final SubLObject input_list = el_utilities.el_list_items(input_el_list);
        final SubLObject incompatible_pairs = extract_lists_from_el_set_of_sets(incompatible_el_pairs);
        final SubLObject maximal_list = el_utilities.el_list_items(maximal_el_list);
        return Sequences.find(maximal_list, list_utilities.compute_all_compatible_sublists(input_list, incompatible_pairs, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED), Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.$sym35$SETS_EQUAL_), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 29040L)
    public static SubLObject removal_maximal_compatible_lists_from_list_unify_pos_expand(final SubLObject asent, final SubLObject sense) {
        final SubLObject arg1 = cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject arg2 = cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject arg3 = cycl_utilities.atomic_sentence_arg3(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject input_list = el_utilities.el_list_items(arg1);
        final SubLObject incompatible_pairs = extract_lists_from_el_set_of_sets(arg2);
        SubLObject cdolist_list_var;
        final SubLObject all_maximal_lists = cdolist_list_var = list_utilities.compute_all_compatible_sublists(input_list, incompatible_pairs, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        SubLObject maximal_list = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        maximal_list = cdolist_list_var.first();
        while (removal_modules_subsets_and_sublists.NIL != cdolist_list_var) {
            final SubLObject v_bindings = unification_utilities.term_unify(arg3, el_utilities.make_el_list(maximal_list, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            if (removal_modules_subsets_and_sublists.NIL != v_bindings) {
                final SubLObject unify_arg3 = el_utilities.make_el_list(bindings.subst_bindings(v_bindings, arg3), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
                final SubLObject formula = (SubLObject)ConsesLow.list(removal_modules_subsets_and_sublists.$const32$maximalCompatibleListsFromList, arg1, arg2, unify_arg3);
                backward.removal_add_node(arguments.make_hl_support((SubLObject)removal_modules_subsets_and_sublists.$kw38$CODE, formula, removal_modules_subsets_and_sublists.$const39$UniversalVocabularyMt, (SubLObject)removal_modules_subsets_and_sublists.$kw40$TRUE_MON), v_bindings, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            }
            cdolist_list_var = cdolist_list_var.rest();
            maximal_list = cdolist_list_var.first();
        }
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 31659L)
    public static SubLObject removal_nthinlist_unify_pos_cost(final SubLObject asent) {
        if (removal_modules_subsets_and_sublists.NIL != variables.not_fully_bound_p(cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED)) && removal_modules_subsets_and_sublists.NIL != variables.not_fully_bound_p(cycl_utilities.atomic_sentence_arg3(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED))) {
            return el_utilities.el_list_length(cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED));
        }
        return control_vars.$cheap_hl_module_check_cost$.getGlobalValue();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 31938L)
    public static SubLObject removal_nthinlist_unify_pos_expand(final SubLObject asent, final SubLObject sense) {
        final SubLObject arg1 = cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject input_list = el_utilities.el_list_items(arg1);
        SubLObject list_var = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        SubLObject elem = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        SubLObject num = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        list_var = input_list;
        elem = list_var.first();
        for (num = (SubLObject)removal_modules_subsets_and_sublists.ZERO_INTEGER; removal_modules_subsets_and_sublists.NIL != list_var; list_var = list_var.rest(), elem = list_var.first(), num = Numbers.add((SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, num)) {
            final SubLObject fully_bound_asent = el_utilities.make_ternary_formula(removal_modules_subsets_and_sublists.$const43$nthInList, arg1, Numbers.add(num, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER), elem);
            final SubLObject v_bindings = unification_utilities.term_unify(asent, fully_bound_asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            if (removal_modules_subsets_and_sublists.NIL != v_bindings) {
                backward.removal_add_node(arguments.make_hl_support((SubLObject)removal_modules_subsets_and_sublists.$kw13$OPAQUE, fully_bound_asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED), v_bindings, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            }
        }
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 33535L)
    public static SubLObject removal_numberofoccurencesofiteminlist_unify_pos_cost(final SubLObject asent) {
        if (removal_modules_subsets_and_sublists.NIL != variables.not_fully_bound_p(cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED)) && removal_modules_subsets_and_sublists.NIL != variables.not_fully_bound_p(cycl_utilities.atomic_sentence_arg3(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED))) {
            return Sequences.length(Sequences.remove_duplicates(el_utilities.el_list_items(cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED)), Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.EQUAL), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED));
        }
        return control_vars.$cheap_hl_module_check_cost$.getGlobalValue();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 33871L)
    public static SubLObject removal_numberofoccurencesofiteminlist_unify_pos_expand(final SubLObject asent, final SubLObject sense) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject arg1 = cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject arg2 = cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        final SubLObject input_list = el_utilities.el_list_items(arg1);
        final SubLObject count_dictionary = dictionary.new_dictionary(Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.EQUAL), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
        if (removal_modules_subsets_and_sublists.NIL != variables.fully_bound_p(arg2)) {
            final SubLObject count = Sequences.count(arg2, input_list, Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.EQUAL), (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            dictionary.dictionary_enter(count_dictionary, arg2, count);
        }
        else {
            SubLObject cdolist_list_var = input_list;
            SubLObject elem = (SubLObject)removal_modules_subsets_and_sublists.NIL;
            elem = cdolist_list_var.first();
            while (removal_modules_subsets_and_sublists.NIL != cdolist_list_var) {
                dictionary_utilities.dictionary_increment(count_dictionary, elem, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
                cdolist_list_var = cdolist_list_var.rest();
                elem = cdolist_list_var.first();
            }
        }
        SubLObject iteration_state;
        for (iteration_state = dictionary_contents.do_dictionary_contents_state(dictionary.dictionary_contents(count_dictionary)); removal_modules_subsets_and_sublists.NIL == dictionary_contents.do_dictionary_contents_doneP(iteration_state); iteration_state = dictionary_contents.do_dictionary_contents_next(iteration_state)) {
            thread.resetMultipleValues();
            final SubLObject elem = dictionary_contents.do_dictionary_contents_key_value(iteration_state);
            final SubLObject count2 = thread.secondMultipleValue();
            thread.resetMultipleValues();
            final SubLObject fully_bound_asent = el_utilities.make_ternary_formula(removal_modules_subsets_and_sublists.$const46$numberOfOccurencesOfItemInList, arg1, elem, count2);
            final SubLObject v_bindings = unification_utilities.term_unify(asent, fully_bound_asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            if (removal_modules_subsets_and_sublists.NIL != v_bindings) {
                backward.removal_add_node(arguments.make_hl_support((SubLObject)removal_modules_subsets_and_sublists.$kw13$OPAQUE, fully_bound_asent, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED), v_bindings, (SubLObject)removal_modules_subsets_and_sublists.UNPROVIDED);
            }
        }
        dictionary_contents.do_dictionary_contents_finalize(iteration_state);
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-subsets-and-sublists.lisp", position = 34713L)
    public static SubLObject test_removal_numberofoccurencesofiteminlist_expand(final SubLObject sentence, SubLObject mt, SubLObject query_properties) {
        if (mt == removal_modules_subsets_and_sublists.UNPROVIDED) {
            mt = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        if (query_properties == removal_modules_subsets_and_sublists.UNPROVIDED) {
            query_properties = (SubLObject)removal_modules_subsets_and_sublists.NIL;
        }
        final SubLObject v_answer = inference_kernel.new_cyc_query(sentence, mt, query_properties);
        if (removal_modules_subsets_and_sublists.NIL != cyc_kernel.closed_query_success_token_p(v_answer)) {
            return (SubLObject)removal_modules_subsets_and_sublists.T;
        }
        if (removal_modules_subsets_and_sublists.NIL != bindings.bindings_p(v_answer)) {
            return bindings.bindings_values(v_answer.first()).first();
        }
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    public static SubLObject declare_removal_modules_subsets_and_sublists_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_list_has_max_sublist_meeting_condition_expand", "REMOVAL-LIST-HAS-MAX-SUBLIST-MEETING-CONDITION-EXPAND", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "el_list_for_query_var_satisfies_queryP", "EL-LIST-FOR-QUERY-VAR-SATISFIES-QUERY?", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_resultofsubstitutingtermslistfortermslistinformula_expand", "REMOVAL-RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA-EXPAND", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "test_removal_resultofsubstitutingtermslistfortermslistinformula_expand", "TEST-REMOVAL-RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA-EXPAND", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_resultofsubstitutinglistoftermslistforlistoftermslistinformula_expand", "REMOVAL-RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFORMULA-EXPAND", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "test_removal_resultofsubstitutinglistoftermslistforlistoftermslistinformula_expand", "TEST-REMOVAL-RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFORMULA-EXPAND", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "extract_lists_from_el_set_of_sets", "EXTRACT-LISTS-FROM-EL-SET-OF-SETS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "extract_lists_from_el_set_of_lists", "EXTRACT-LISTS-FROM-EL-SET-OF-LISTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_maximal_compatible_lists_from_list_pos_check", "REMOVAL-MAXIMAL-COMPATIBLE-LISTS-FROM-LIST-POS-CHECK", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_maximal_compatible_lists_from_list_unify_pos_expand", "REMOVAL-MAXIMAL-COMPATIBLE-LISTS-FROM-LIST-UNIFY-POS-EXPAND", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_nthinlist_unify_pos_cost", "REMOVAL-NTHINLIST-UNIFY-POS-COST", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_nthinlist_unify_pos_expand", "REMOVAL-NTHINLIST-UNIFY-POS-EXPAND", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_numberofoccurencesofiteminlist_unify_pos_cost", "REMOVAL-NUMBEROFOCCURENCESOFITEMINLIST-UNIFY-POS-COST", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "removal_numberofoccurencesofiteminlist_unify_pos_expand", "REMOVAL-NUMBEROFOCCURENCESOFITEMINLIST-UNIFY-POS-EXPAND", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_subsets_and_sublists", "test_removal_numberofoccurencesofiteminlist_expand", "TEST-REMOVAL-NUMBEROFOCCURENCESOFITEMINLIST-EXPAND", 1, 2, false);
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    public static SubLObject init_removal_modules_subsets_and_sublists_file() {
        removal_modules_subsets_and_sublists.$default_list_has_max_sublist_meeting_condition_cost$ = SubLFiles.defparameter("*DEFAULT-LIST-HAS-MAX-SUBLIST-MEETING-CONDITION-COST*", Numbers.multiply((SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, control_vars.$expensive_hl_module_check_cost$.getGlobalValue()));
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    public static SubLObject setup_removal_modules_subsets_and_sublists_file() {
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_subsets_and_sublists.$const0$listHasMaxSublistMeetingCondition);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const0$listHasMaxSublistMeetingCondition, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const0$listHasMaxSublistMeetingCondition, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const0$listHasMaxSublistMeetingCondition, (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const0$listHasMaxSublistMeetingCondition, (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER);
        inference_modules.inference_removal_module((SubLObject)removal_modules_subsets_and_sublists.$kw2$REMOVAL_LIST_HAS_MAX_SUBLIST_MEETING_CONDITION, (SubLObject)removal_modules_subsets_and_sublists.$list3);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const14$resultOfSubstitutingTermsListForT, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const14$resultOfSubstitutingTermsListForT, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const14$resultOfSubstitutingTermsListForT, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER);
        inference_modules.inference_removal_module((SubLObject)removal_modules_subsets_and_sublists.$kw15$REMOVAL_RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA, (SubLObject)removal_modules_subsets_and_sublists.$list16);
        generic_testing.define_test_case_table_int((SubLObject)removal_modules_subsets_and_sublists.$sym18$TEST_REMOVAL_RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA_E, (SubLObject)ConsesLow.list(new SubLObject[] { removal_modules_subsets_and_sublists.$kw19$TEST, Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.EQUAL), removal_modules_subsets_and_sublists.$kw20$OWNER, removal_modules_subsets_and_sublists.NIL, removal_modules_subsets_and_sublists.$kw21$CLASSES, removal_modules_subsets_and_sublists.NIL, removal_modules_subsets_and_sublists.$kw22$KB, removal_modules_subsets_and_sublists.$kw23$FULL, removal_modules_subsets_and_sublists.$kw24$WORKING_, removal_modules_subsets_and_sublists.T }), removal_modules_subsets_and_sublists.$list25);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const26$resultOfSubstitutingListOfTermsLi, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const26$resultOfSubstitutingListOfTermsLi, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const26$resultOfSubstitutingListOfTermsLi, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER);
        inference_modules.inference_removal_module((SubLObject)removal_modules_subsets_and_sublists.$kw27$REMOVAL_RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFO, (SubLObject)removal_modules_subsets_and_sublists.$list28);
        generic_testing.define_test_case_table_int((SubLObject)removal_modules_subsets_and_sublists.$sym30$TEST_REMOVAL_RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLIS, (SubLObject)ConsesLow.list(new SubLObject[] { removal_modules_subsets_and_sublists.$kw19$TEST, Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.EQUAL), removal_modules_subsets_and_sublists.$kw20$OWNER, removal_modules_subsets_and_sublists.NIL, removal_modules_subsets_and_sublists.$kw21$CLASSES, removal_modules_subsets_and_sublists.NIL, removal_modules_subsets_and_sublists.$kw22$KB, removal_modules_subsets_and_sublists.$kw23$FULL, removal_modules_subsets_and_sublists.$kw24$WORKING_, removal_modules_subsets_and_sublists.T }), removal_modules_subsets_and_sublists.$list31);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_subsets_and_sublists.$const32$maximalCompatibleListsFromList);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const32$maximalCompatibleListsFromList, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const32$maximalCompatibleListsFromList, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER);
        inference_modules.inference_removal_module((SubLObject)removal_modules_subsets_and_sublists.$kw36$REMOVAL_MAXIMAL_COMPATIBLE_LISTS_FROM_LIST_CHECK_POS, (SubLObject)removal_modules_subsets_and_sublists.$list37);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_subsets_and_sublists.$const32$maximalCompatibleListsFromList);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const32$maximalCompatibleListsFromList, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const32$maximalCompatibleListsFromList, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER);
        inference_modules.inference_removal_module((SubLObject)removal_modules_subsets_and_sublists.$kw41$REMOVAL_MAXIMAL_COMPATIBLE_LISTS_FROM_LIST_UNIFY_POS, (SubLObject)removal_modules_subsets_and_sublists.$list42);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_subsets_and_sublists.$const43$nthInList);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const43$nthInList, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER);
        inference_modules.inference_removal_module((SubLObject)removal_modules_subsets_and_sublists.$kw44$REMOVAL_NTHINLIST_UNIFY_POS, (SubLObject)removal_modules_subsets_and_sublists.$list45);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_subsets_and_sublists.$const46$numberOfOccurencesOfItemInList);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_subsets_and_sublists.$kw1$POS, removal_modules_subsets_and_sublists.$const46$numberOfOccurencesOfItemInList, (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER);
        inference_modules.inference_removal_module((SubLObject)removal_modules_subsets_and_sublists.$kw47$REMOVAL_NUMBEROFOCCURENCESOFITEMINLIST_UNIFY_POS, (SubLObject)removal_modules_subsets_and_sublists.$list48);
        generic_testing.define_test_case_table_int((SubLObject)removal_modules_subsets_and_sublists.$sym49$TEST_REMOVAL_NUMBEROFOCCURENCESOFITEMINLIST_EXPAND, (SubLObject)ConsesLow.list(new SubLObject[] { removal_modules_subsets_and_sublists.$kw19$TEST, Symbols.symbol_function((SubLObject)removal_modules_subsets_and_sublists.EQUAL), removal_modules_subsets_and_sublists.$kw20$OWNER, removal_modules_subsets_and_sublists.NIL, removal_modules_subsets_and_sublists.$kw21$CLASSES, removal_modules_subsets_and_sublists.NIL, removal_modules_subsets_and_sublists.$kw22$KB, removal_modules_subsets_and_sublists.$kw23$FULL, removal_modules_subsets_and_sublists.$kw24$WORKING_, removal_modules_subsets_and_sublists.T }), (SubLObject)removal_modules_subsets_and_sublists.$list50);
        return (SubLObject)removal_modules_subsets_and_sublists.NIL;
    }
    
    private static SubLObject _constant_25_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheEmptyList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("b"), (SubLObject)SubLObjectFactory.makeString("c")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("b"), (SubLObject)SubLObjectFactory.makeString("c"), (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("b"), (SubLObject)SubLObjectFactory.makeString("c")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)removal_modules_subsets_and_sublists.NIL), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FOURTEEN_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FOURTEEN_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x")))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x")))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)removal_modules_subsets_and_sublists.ZERO_INTEGER))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220)))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x")))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)removal_modules_subsets_and_sublists.ZERO_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheEmptyList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Volt")), (SubLObject)SubLObjectFactory.makeInteger(220))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x")))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)SubLObjectFactory.makeInteger(102), (SubLObject)removal_modules_subsets_and_sublists.SEVENTEEN_INTEGER))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)SubLObjectFactory.makeInteger(102), (SubLObject)removal_modules_subsets_and_sublists.SEVENTEEN_INTEGER)))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER)))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)SubLObjectFactory.makeInteger(102), (SubLObject)removal_modules_subsets_and_sublists.SEVENTEEN_INTEGER))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)SubLObjectFactory.makeInteger(102), (SubLObject)removal_modules_subsets_and_sublists.SEVENTEEN_INTEGER))))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER))))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER))))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER))))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixMinusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER)))))))) });
    }
    
    private static SubLObject _constant_31_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("SOME")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("COOL"), (SubLObject)SubLObjectFactory.makeString("BEANS"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("SOME"), (SubLObject)SubLObjectFactory.makeString("COOL"), (SubLObject)SubLObjectFactory.makeString("BEANS"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("D"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeString("C"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeString("C")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)removal_modules_subsets_and_sublists.NIL), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.EIGHT_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheEmptyList"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("b"), (SubLObject)SubLObjectFactory.makeString("c"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("b"), (SubLObject)SubLObjectFactory.makeString("c"), (SubLObject)SubLObjectFactory.makeString("D"))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("b"), (SubLObject)SubLObjectFactory.makeString("c"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)SubLObjectFactory.makeString("D")), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)removal_modules_subsets_and_sublists.NIL), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FOURTEEN_INTEGER))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FOURTEEN_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x")))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MixedFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MixedFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MixedFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MixedFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER)) })))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x")))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))), (SubLObject)SubLObjectFactory.makeSymbol("?WHAT"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?WHAT"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FIVE_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TEN_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("x"))))))), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheEmptyList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("y")))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("y"))))), (SubLObject)SubLObjectFactory.makeSymbol("?X"))), (SubLObject)removal_modules_subsets_and_sublists.NIL), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)SubLObjectFactory.makeInteger(35))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)SubLObjectFactory.makeInteger(310))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)SubLObjectFactory.makeInteger(510)))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("a")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("b"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("a")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("c"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("b")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("c")))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(new SubLObject[] { constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("a")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("b")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("b")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("c")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("a")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplicitTimesFn")), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathVarFn")), (SubLObject)SubLObjectFactory.makeString("c")) }))), (SubLObject)SubLObjectFactory.makeSymbol("?NEW-EXP"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("?NEW-EXP"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixTimesFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParenthesizedMathFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathExpressionFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)SubLObjectFactory.makeInteger(35)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)SubLObjectFactory.makeInteger(510)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InfixPlusFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MathQuantFn")), (SubLObject)SubLObjectFactory.makeInteger(310)))))))) });
    }
    
    public void declareFunctions() {
        declare_removal_modules_subsets_and_sublists_file();
    }
    
    public void initializeVariables() {
        init_removal_modules_subsets_and_sublists_file();
    }
    
    public void runTopLevelForms() {
        setup_removal_modules_subsets_and_sublists_file();
    }
    
    static {
        me = (SubLFile)new removal_modules_subsets_and_sublists();
        removal_modules_subsets_and_sublists.$default_list_has_max_sublist_meeting_condition_cost$ = null;
        $const0$listHasMaxSublistMeetingCondition = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("listHasMaxSublistMeetingCondition"));
        $kw1$POS = SubLObjectFactory.makeKeyword("POS");
        $kw2$REMOVAL_LIST_HAS_MAX_SUBLIST_MEETING_CONDITION = SubLObjectFactory.makeKeyword("REMOVAL-LIST-HAS-MAX-SUBLIST-MEETING-CONDITION");
        $list3 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("listHasMaxSublistMeetingCondition")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("listHasMaxSublistMeetingCondition")), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-LIST-HAS-MAX-SUBLIST-MEETING-CONDITION-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXPAND"), SubLObjectFactory.makeSymbol("REMOVAL-LIST-HAS-MAX-SUBLIST-MEETING-CONDITION-EXPAND"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$listHasMaxSublistMeetingCondition MAX-SUB-LIST LIST MIN MAX QUERY) means that MAX-SUB-LIST is the maximum-length sublist of LIST that meets the following conditons:\n\n(1) LIST is at least MIN elements long and no more than MAX elements long, \n\n(2) QUERY is a quoted sentence with exactly one open variable, and if MAX-SUB-LIST is substituted for that open variable and QUERY is asked, QUERY returns true."), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(listHasMaxSublistMeetingCondition\n ?MAX-SUBLIST\n 3\n 20\n (TheList\n  (TheList\n   (SchemaObjectFn CycRxClaimMapping 210136175693834520)\n   (DayFn 24\n\t  (MonthFn March\n\t\t   (YearFn 2012))) 90)\n  (TheList\n   (SchemaObjectFn CycRxClaimMapping 618868380208131720)\n   (DayFn 2\n\t  (MonthFn May\n\t\t   (YearFn 2010))) 180)\n  (TheList\n   (SchemaObjectFn CycRxClaimMapping 645495858520049520)\n   (DayFn 22\n\t  (MonthFn February\n\t\t   (YearFn 2010))) 180)\n  (TheList\n   (SchemaObjectFn CycRxClaimMapping 388339025870429520)\n   (DayFn 21\n\t  (MonthFn February\n\t\t   (YearFn 2010))) 180)\n  (TheList\n   (SchemaObjectFn CycRxClaimMapping 210136175693834520)\n   (DayFn 24\n\t  (MonthFn January\n\t\t   (YearFn 2010))) 180)\n  (TheList\n   (SchemaObjectFn CycRxClaimMapping 210136175693834520)\n   (DayFn 24\n\t  (MonthFn January\n\t\t   (YearFn 2009))) 90))\n\n (thereExists ?SUPPLY-SUM\n  (thereExists ?SUPPLY-LIST\n   (thereExists ?DATE-LIST\n    (thereExists ?EARLIEST-DATE\n     (thereExists ?LATEST-DATE\n      (thereExists ?LATEST-SUPPLY\n       (thereExists ?END-OF-SUPPLY-DATE\n        (thereExists ?ELAPSED-TIME\n\t (and\n\t  (greaterThanOrEqualTo ?SUPPLY-SUM 181) \n\t  (evaluate ?SUPPLY-LIST (MapFunctionOverList ThirdInListFn  ?LIST))\n\t  (evaluate ?SUPPLY-SUM (ApplyFunctionRecursivelyFn\n\t\t\t\t (RestOfListFn ?SUPPLY-LIST)\n\t\t\t\t (NthInListFn ?SUPPLY-LIST 1) PlusFn))\n\t  (evaluate ?DATE-LIST (MapFunctionOverList SecondInListFn ?LIST))\n\t  (evaluate ?EARLIEST-DATE (LastInListFn ?DATE-LIST))\n\t  (evaluate ?LATEST-DATE   (FirstInListFn ?DATE-LIST))\n\t  (evaluate ?LATEST-SUPPLY (FirstInListFn ?SUPPLY-LIST))\n\t  (evaluate ?END-OF-SUPPLY-DATE (DateAfterFn ?LATEST-DATE (DaysDuration ?LATEST-SUPPLY)))\n\t  (evaluate ?ELAPSED-TIME (TimeElapsedFn ?EARLIEST-DATE ?END-OF-SUPPLY-DATE))\n\t  (greaterThanOrEqualTo ?ELAPSED-TIME (DaysDuration 181))\n\t  (greaterThanOrEqualTo (DaysDuration ?SUPPLY-SUM) ?ELAPSED-TIME)))))))))))") });
        $kw4$EL_LIST_ARG_IS_NOT_AN_EL_LIST = SubLObjectFactory.makeKeyword("EL-LIST-ARG-IS-NOT-AN-EL-LIST");
        $kw5$MIN_ARG_IS_NOT_A_POSITIVE_INTEGER = SubLObjectFactory.makeKeyword("MIN-ARG-IS-NOT-A-POSITIVE-INTEGER");
        $kw6$MAX_ARG_IS_NOT_A_POSITIVE_INTEGER = SubLObjectFactory.makeKeyword("MAX-ARG-IS-NOT-A-POSITIVE-INTEGER");
        $kw7$MAX_ARG_IS_NOT_GREATER_THAN_OR_EQUAL_TO_MIN_ARG = SubLObjectFactory.makeKeyword("MAX-ARG-IS-NOT-GREATER-THAN-OR-EQUAL-TO-MIN-ARG");
        $const8$Quote = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote"));
        $kw9$QUOTED_QUERY_ARG_IS_NOT_QUOTED = SubLObjectFactory.makeKeyword("QUOTED-QUERY-ARG-IS-NOT-QUOTED");
        $kw10$QUERY_ARG_IS_NOT_AN_EL_FORMULA = SubLObjectFactory.makeKeyword("QUERY-ARG-IS-NOT-AN-EL-FORMULA");
        $kw11$NO_OPEN_QUERY_VAR = SubLObjectFactory.makeKeyword("NO-OPEN-QUERY-VAR");
        $kw12$TOO_MANY_OPEN_QUERY_VARS = SubLObjectFactory.makeKeyword("TOO-MANY-OPEN-QUERY-VARS");
        $kw13$OPAQUE = SubLObjectFactory.makeKeyword("OPAQUE");
        $const14$resultOfSubstitutingTermsListForT = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula"));
        $kw15$REMOVAL_RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA = SubLObjectFactory.makeKeyword("REMOVAL-RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA");
        $list16 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("OR"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingTermsListForTermsListInFormula")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"))), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-MATH-MODULE-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("INCOMPLETE"), SubLObjectFactory.makeKeyword("EXPAND"), SubLObjectFactory.makeSymbol("REMOVAL-RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA-EXPAND"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$resultOfSubstitutingTermsListForTermsListInFormula <anything> <fully-bound-p> <fully-bound-p> <fully-bound-p>)\n(#$resultOfSubstitutingTermsListForTermsListInFormula <fully-bound-p> <anything> <fully-bound-p> <fully-bound-p>)\n(#$resultOfSubstitutingTermsListForTermsListInFormula <fully-bound-p> <fully-bound-p> <anything> <fully-bound-p>)\n(#$resultOfSubstitutingTermsListForTermsListInFormula <fully-bound-p> <fully-bound-p> <fully-bound-p> <anything>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$resultOfSubstitutingTermsListForTermsListInFormula\n       (#$TheList 1 2 3)\n       (#$TheList \"A\" \"B\" \"C\")\n       (#$TheList \"A\" \"B\" \"C\" \"D\")\n       ?WHAT)") });
        $sym17$EQUALS_EL_ = SubLObjectFactory.makeSymbol("EQUALS-EL?");
        $sym18$TEST_REMOVAL_RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA_E = SubLObjectFactory.makeSymbol("TEST-REMOVAL-RESULTOFSUBSTITUTINGTERMSLISTFORTERMSLISTINFORMULA-EXPAND");
        $kw19$TEST = SubLObjectFactory.makeKeyword("TEST");
        $kw20$OWNER = SubLObjectFactory.makeKeyword("OWNER");
        $kw21$CLASSES = SubLObjectFactory.makeKeyword("CLASSES");
        $kw22$KB = SubLObjectFactory.makeKeyword("KB");
        $kw23$FULL = SubLObjectFactory.makeKeyword("FULL");
        $kw24$WORKING_ = SubLObjectFactory.makeKeyword("WORKING?");
        $list25 = _constant_25_initializer();
        $const26$resultOfSubstitutingListOfTermsLi = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula"));
        $kw27$REMOVAL_RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFO = SubLObjectFactory.makeKeyword("REMOVAL-RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFORMULA");
        $list28 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("OR"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("resultOfSubstitutingListOfTermsListForListOfTermsListInFormula")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"))), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-MATH-MODULE-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("INCOMPLETE"), SubLObjectFactory.makeKeyword("EXPAND"), SubLObjectFactory.makeSymbol("REMOVAL-RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFORMULA-EXPAND"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$resultOfSubstitutingListOfTermsListForListOfTermsListInFormula <anything> <fully-bound-p> <fully-bound-p> <fully-bound-p>)\n(#$resultOfSubstitutingListOfTermsListForListOfTermsListInFormula <fully-bound-p> <anything> <fully-bound-p> <fully-bound-p>)\n(#$resultOfSubstitutingListOfTermsListForListOfTermsListInFormula <fully-bound-p> <fully-bound-p> <anything> <fully-bound-p>)\n(#$resultOfSubstitutingListOfTermsListForListOfTermsListInFormula <fully-bound-p> <fully-bound-p> <fully-bound-p> <anything>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$resultOfSubstitutingListOfTermsListForListOfTermsListInFormula\n       (#$TheList (#$TheList 1 2 3))\n       (#$TheList (#$TheList \"A\" \"B\" \"C\"))\n       (#$TheList \"A\" \"B\" \"C\" \"D\") ?WHAT)\n       ?WHAT)") });
        $sym29$CATCH_ERROR_MESSAGE_HANDLER = SubLObjectFactory.makeSymbol("CATCH-ERROR-MESSAGE-HANDLER");
        $sym30$TEST_REMOVAL_RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLIS = SubLObjectFactory.makeSymbol("TEST-REMOVAL-RESULTOFSUBSTITUTINGLISTOFTERMSLISTFORLISTOFTERMSLISTINFORMULA-EXPAND");
        $list31 = _constant_31_initializer();
        $const32$maximalCompatibleListsFromList = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("maximalCompatibleListsFromList"));
        $sym33$EL_SET_ITEMS = SubLObjectFactory.makeSymbol("EL-SET-ITEMS");
        $sym34$EL_LIST_ITEMS = SubLObjectFactory.makeSymbol("EL-LIST-ITEMS");
        $sym35$SETS_EQUAL_ = SubLObjectFactory.makeSymbol("SETS-EQUAL?");
        $kw36$REMOVAL_MAXIMAL_COMPATIBLE_LISTS_FROM_LIST_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-MAXIMAL-COMPATIBLE-LISTS-FROM-LIST-CHECK-POS");
        $list37 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("maximalCompatibleListsFromList")), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_subsets_and_sublists.T, SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("maximalCompatibleListsFromList")), (SubLObject)ConsesLow.cons(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)ConsesLow.cons(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheSet")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)ConsesLow.cons(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"))), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("maximalCompatibleListsFromList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("INPUT-LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("INCOMPATIBLE-PAIRS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("MAXIMAL-LIST"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("INPUT-LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("INCOMPATIBLE-PAIRS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("MAXIMAL-LIST")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-MAXIMAL-COMPATIBLE-LISTS-FROM-LIST-POS-CHECK"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("INPUT-LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("INCOMPATIBLE-PAIRS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("MAXIMAL-LIST"))), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$maximalCompatibleListsFromList <fully-bound> <fully-bound> <fully-bound>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$maximalCompatibleListsFromList\n  (#$TheList 0 1 2 3)\n  (#$TheSet\n    (#$TheSet 0 1)(#$TheSet 1 2)(#$TheSet 2 0)\n    (#$TheSet 0 3)(#$TheSet 1 3)(#$TheSet 2 3))\n  (#$TheList 2))") });
        $kw38$CODE = SubLObjectFactory.makeKeyword("CODE");
        $const39$UniversalVocabularyMt = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("UniversalVocabularyMt"));
        $kw40$TRUE_MON = SubLObjectFactory.makeKeyword("TRUE-MON");
        $kw41$REMOVAL_MAXIMAL_COMPATIBLE_LISTS_FROM_LIST_UNIFY_POS = SubLObjectFactory.makeKeyword("REMOVAL-MAXIMAL-COMPATIBLE-LISTS-FROM-LIST-UNIFY-POS");
        $list42 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("maximalCompatibleListsFromList")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("maximalCompatibleListsFromList")), (SubLObject)ConsesLow.cons(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)ConsesLow.cons(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheSet")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXPAND"), SubLObjectFactory.makeSymbol("REMOVAL-MAXIMAL-COMPATIBLE-LISTS-FROM-LIST-UNIFY-POS-EXPAND"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$maximalCompatibleListsFromList <fully-bound> <fully-bound> <not-fully-bound>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$maximalCompatibleListsFromList\n      (#$TheList 1 2 \"II\" 3 \"three\" 4)\n      (#$TheSet (#$TheSet 2 \"II\") (#$TheSet 3 \"III\") (#$TheSet \"three\" \"III\"))\n      ?MAXIMAL-COMBINATIONS)\n    will bind ?MAXIMAL-COMBINATIONS to\n    (#$TheSet\n      (#$TheList 1 2 3 \"three\" 4)\n      (#$TheList 1 2 \"III\" 4)\n      (#$TheList 1 \"II\" 3 \"three\" 4)\n      (#$TheList 1 \"II\" \"III\" 4))") });
        $const43$nthInList = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("nthInList"));
        $kw44$REMOVAL_NTHINLIST_UNIFY_POS = SubLObjectFactory.makeKeyword("REMOVAL-NTHINLIST-UNIFY-POS");
        $list45 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("nthInList")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("nthInList")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.listS(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("nthInList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("EL-LIST-P")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"))), SubLObjectFactory.makeKeyword("COST"), SubLObjectFactory.makeSymbol("REMOVAL-NTHINLIST-UNIFY-POS-COST"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXPAND"), SubLObjectFactory.makeSymbol("REMOVAL-NTHINLIST-UNIFY-POS-EXPAND"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$nthInList <fully-bound> <anything> <anything>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$nthInList (#$TheList 5 4 3 2 1) ?N ?ITEM)") });
        $const46$numberOfOccurencesOfItemInList = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList"));
        $kw47$REMOVAL_NUMBEROFOCCURENCESOFITEMINLIST_UNIFY_POS = SubLObjectFactory.makeKeyword("REMOVAL-NUMBEROFOCCURENCESOFITEMINLIST-UNIFY-POS");
        $list48 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.listS(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("EL-LIST-P")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"))), SubLObjectFactory.makeKeyword("COST"), SubLObjectFactory.makeSymbol("REMOVAL-NUMBEROFOCCURENCESOFITEMINLIST-UNIFY-POS-COST"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXPAND"), SubLObjectFactory.makeSymbol("REMOVAL-NUMBEROFOCCURENCESOFITEMINLIST-UNIFY-POS-EXPAND"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$numberOfOccurencesOfItemInList <fully-bound> <anything> <anything>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$numberOfOccurencesOfItemInList (#$TheList 5 4 3 2 1) ?ITEM ?N)") });
        $sym49$TEST_REMOVAL_NUMBEROFOCCURENCESOFITEMINLIST_EXPAND = SubLObjectFactory.makeSymbol("TEST-REMOVAL-NUMBEROFOCCURENCESOFITEMINLIST-EXPAND");
        $list50 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)ConsesLow.list(new SubLObject[] { constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.FOUR_INTEGER, removal_modules_subsets_and_sublists.FIVE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.SIX_INTEGER, removal_modules_subsets_and_sublists.SEVEN_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER }), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("?N"))), (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)ConsesLow.list(new SubLObject[] { constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.FOUR_INTEGER, removal_modules_subsets_and_sublists.FIVE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.SIX_INTEGER, removal_modules_subsets_and_sublists.SEVEN_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER }), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("?N"))), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)ConsesLow.list(new SubLObject[] { constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.FOUR_INTEGER, removal_modules_subsets_and_sublists.FIVE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.SIX_INTEGER, removal_modules_subsets_and_sublists.SEVEN_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER }), (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("?N"))), (SubLObject)removal_modules_subsets_and_sublists.ZERO_INTEGER), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)ConsesLow.list(new SubLObject[] { constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.FOUR_INTEGER, removal_modules_subsets_and_sublists.FIVE_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER, removal_modules_subsets_and_sublists.SIX_INTEGER, removal_modules_subsets_and_sublists.SEVEN_INTEGER, removal_modules_subsets_and_sublists.THREE_INTEGER, removal_modules_subsets_and_sublists.TWO_INTEGER, removal_modules_subsets_and_sublists.ONE_INTEGER }), (SubLObject)removal_modules_subsets_and_sublists.SIX_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("?N"))), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Dog")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Cat")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("List")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("JuvenileFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Dog")))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Dog")), (SubLObject)SubLObjectFactory.makeSymbol("?N"))), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfOccurencesOfItemInList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.NINE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MixedFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.THREE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.FOUR_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.SEVEN_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SimpleFractionFn")), (SubLObject)removal_modules_subsets_and_sublists.ONE_INTEGER, (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER), (SubLObject)SubLObjectFactory.makeSymbol("?N"))), (SubLObject)removal_modules_subsets_and_sublists.TWO_INTEGER));
    }
}

/*

	Total time: 412 ms
	
*/