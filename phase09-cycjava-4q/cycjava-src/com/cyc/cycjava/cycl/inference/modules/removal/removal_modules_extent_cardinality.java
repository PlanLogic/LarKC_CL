package com.cyc.cycjava.cycl.inference.modules.removal;

import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.cycjava.cycl.constant_handles;
import com.cyc.cycjava.cycl.mt_vars;
import com.cyc.cycjava.cycl.subl_macro_promotions;
import com.cyc.cycjava.cycl.inference.modules.preference_modules;
import com.cyc.cycjava.cycl.inference.harness.inference_modules;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.cycjava.cycl.control_vars;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Types;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers;
import com.cyc.cycjava.cycl.subl_promotions;
import com.cyc.cycjava.cycl.fort_types_interface;
import com.cyc.cycjava.cycl.forts;
import com.cyc.cycjava.cycl.isa;
import com.cyc.cycjava.cycl.inference.ask_utilities;
import com.cyc.cycjava.cycl.cycl_utilities;
import com.cyc.cycjava.cycl.el_utilities;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.cycjava.cycl.quantities;
import com.cyc.cycjava.cycl.mt_relevance_macros;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class removal_modules_extent_cardinality extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality";
    public static final String myFingerPrint = "32c5bc8bac82b488fb9c91d7ce418c392195ed24ef56c3e082388ebd7f69e93a";
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 1314L)
    private static SubLSymbol $default_removal_extent_cardinality_cost$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 9887L)
    public static SubLSymbol $length_of_list_defining_mt$;
    private static final SubLObject $const0$extentCardinality;
    private static final SubLSymbol $kw1$POS;
    private static final SubLSymbol $kw2$NEG;
    private static final SubLSymbol $kw3$HL;
    private static final SubLObject $const4$TheCollectionOf;
    private static final SubLObject $const5$TheEmptySet;
    private static final SubLSymbol $kw6$REMOVAL_EXTENT_CARDINALITY_FORT_GENERATE;
    private static final SubLList $list7;
    private static final SubLSymbol $kw8$UNEVALUATABLE;
    private static final SubLSymbol $kw9$REMOVAL_EXTENT_CARDINALITY_FORT_CHECK_POS;
    private static final SubLList $list10;
    private static final SubLSymbol $kw11$REMOVAL_EXTENT_CARDINALITY_FORT_CHECK_NEG;
    private static final SubLList $list12;
    private static final SubLSymbol $kw13$REMOVAL_EXTENT_CARDINALITY_THESET;
    private static final SubLList $list14;
    private static final SubLSymbol $kw15$REMOVAL_EXTENT_CARDINALITY_THESETOF;
    private static final SubLList $list16;
    private static final SubLSymbol $kw17$REMOVAL_EXTENT_CARDINALITY_THECOLLECTIONOF;
    private static final SubLList $list18;
    private static final SubLSymbol $kw19$REMOVAL_EXTENT_CARDINALITY_CYCLASSERTION;
    private static final SubLList $list20;
    private static final SubLSymbol $kw21$REMOVAL_EXTENT_CARDINALITY_CYCLREIFIEDDENOTATIONALTERM;
    private static final SubLList $list22;
    private static final SubLSymbol $sym23$_LENGTH_OF_LIST_DEFINING_MT_;
    private static final SubLObject $const24$BaseKB;
    private static final SubLObject $const25$lengthOfList;
    private static final SubLSymbol $sym26$INTEGERP;
    private static final SubLSymbol $kw27$REMOVAL_LENGTH_OF_THELIST_CHECK_POS;
    private static final SubLList $list28;
    private static final SubLSymbol $kw29$REMOVAL_LENGTH_OF_THELIST_CHECK_NEG;
    private static final SubLList $list30;
    private static final SubLSymbol $kw31$REMOVAL_LENGTH_OF_THELIST_GENERATE;
    private static final SubLList $list32;
    private static final SubLSymbol $kw33$REMOVAL_LENGTH_OF_THELIST_PRUNE;
    private static final SubLList $list34;
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 954L)
    public static SubLObject removal_extent_cardinality_set(final SubLObject v_set) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject extent = quantities.set_extent(v_set, mt_relevance_macros.$mt$.getDynamicValue(thread), (SubLObject)removal_modules_extent_cardinality.$kw3$HL);
        return Sequences.length(extent);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 1081L)
    public static SubLObject removal_extent_cardinality_collection(final SubLObject col) {
        if (removal_modules_extent_cardinality.NIL != el_utilities.possibly_nat_p(col) && removal_modules_extent_cardinality.$const4$TheCollectionOf.eql(cycl_utilities.nat_functor(col))) {
            return Sequences.length(ask_utilities.the_set_of_elements(col, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED));
        }
        return isa.count_all_instances(col, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 1411L)
    public static SubLObject removal_fort_extent_cardinality(final SubLObject v_set) {
        if (removal_modules_extent_cardinality.NIL != forts.fort_p(v_set)) {
            if (removal_modules_extent_cardinality.$const5$TheEmptySet.eql(v_set)) {
                return removal_extent_cardinality_set(v_set);
            }
            if (removal_modules_extent_cardinality.NIL != fort_types_interface.collectionP(v_set)) {
                return removal_extent_cardinality_collection(v_set);
            }
        }
        return (SubLObject)removal_modules_extent_cardinality.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 2536L)
    public static SubLObject fort_has_extent_cardinalityP(final SubLObject v_set, final SubLObject cardinality) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject result = (SubLObject)removal_modules_extent_cardinality.NIL;
        SubLObject catch_this = (SubLObject)removal_modules_extent_cardinality.NIL;
        try {
            thread.throwStack.push(removal_modules_extent_cardinality.$kw8$UNEVALUATABLE);
            if (removal_modules_extent_cardinality.NIL != forts.fort_p(v_set)) {
                final SubLObject number = quantities.cycl_real_number_to_number(cardinality);
                if (removal_modules_extent_cardinality.NIL != subl_promotions.non_negative_integer_p(number)) {
                    if (removal_modules_extent_cardinality.$const5$TheEmptySet.eql(v_set)) {
                        result = Numbers.zerop(number);
                    }
                    else if (removal_modules_extent_cardinality.NIL != fort_types_interface.collectionP(v_set)) {
                        result = isa.count_all_instances_E(v_set, number, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED);
                    }
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_this = Errors.handleThrowable(ccatch_env_var, (SubLObject)removal_modules_extent_cardinality.$kw8$UNEVALUATABLE);
        }
        finally {
            thread.throwStack.pop();
        }
        return result;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 10178L)
    public static SubLObject el_list_lengthE(final SubLObject el_list, final SubLObject integer) {
        assert removal_modules_extent_cardinality.NIL != Types.integerp(integer) : integer;
        return Numbers.numE(el_utilities.el_list_length(el_list), integer);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 10502L)
    public static SubLObject removal_el_list_lengthE(final SubLObject el_list, final SubLObject integer) {
        return (SubLObject)SubLObjectFactory.makeBoolean(removal_modules_extent_cardinality.NIL != el_utilities.el_list_p(el_list) && removal_modules_extent_cardinality.NIL != subl_promotions.non_negative_integer_p(integer) && removal_modules_extent_cardinality.NIL != el_list_lengthE(el_list, integer));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-extent-cardinality.lisp", position = 14027L)
    public static SubLObject removal_length_of_the_list_prune(final SubLObject asent, SubLObject sense) {
        if (sense == removal_modules_extent_cardinality.UNPROVIDED) {
            sense = (SubLObject)removal_modules_extent_cardinality.NIL;
        }
        final SubLObject el_list = cycl_utilities.atomic_sentence_arg1(asent, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED);
        final SubLObject length = cycl_utilities.atomic_sentence_arg2(asent, (SubLObject)removal_modules_extent_cardinality.UNPROVIDED);
        return (SubLObject)SubLObjectFactory.makeBoolean(removal_modules_extent_cardinality.NIL == removal_el_list_lengthE(el_list, length));
    }
    
    public static SubLObject declare_removal_modules_extent_cardinality_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality", "removal_extent_cardinality_set", "REMOVAL-EXTENT-CARDINALITY-SET", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality", "removal_extent_cardinality_collection", "REMOVAL-EXTENT-CARDINALITY-COLLECTION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality", "removal_fort_extent_cardinality", "REMOVAL-FORT-EXTENT-CARDINALITY", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality", "fort_has_extent_cardinalityP", "FORT-HAS-EXTENT-CARDINALITY?", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality", "el_list_lengthE", "EL-LIST-LENGTH=", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality", "removal_el_list_lengthE", "REMOVAL-EL-LIST-LENGTH=", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_extent_cardinality", "removal_length_of_the_list_prune", "REMOVAL-LENGTH-OF-THE-LIST-PRUNE", 1, 1, false);
        return (SubLObject)removal_modules_extent_cardinality.NIL;
    }
    
    public static SubLObject init_removal_modules_extent_cardinality_file() {
        removal_modules_extent_cardinality.$default_removal_extent_cardinality_cost$ = SubLFiles.deflexical("*DEFAULT-REMOVAL-EXTENT-CARDINALITY-COST*", control_vars.$expensive_hl_module_check_cost$.getGlobalValue());
        removal_modules_extent_cardinality.$length_of_list_defining_mt$ = SubLFiles.deflexical("*LENGTH-OF-LIST-DEFINING-MT*", (removal_modules_extent_cardinality.NIL != Symbols.boundp((SubLObject)removal_modules_extent_cardinality.$sym23$_LENGTH_OF_LIST_DEFINING_MT_)) ? removal_modules_extent_cardinality.$length_of_list_defining_mt$.getGlobalValue() : removal_modules_extent_cardinality.$const24$BaseKB);
        return (SubLObject)removal_modules_extent_cardinality.NIL;
    }
    
    public static SubLObject setup_removal_modules_extent_cardinality_file() {
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_extent_cardinality.$const0$extentCardinality);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_extent_cardinality.$kw1$POS, removal_modules_extent_cardinality.$const0$extentCardinality, (SubLObject)removal_modules_extent_cardinality.ONE_INTEGER);
        preference_modules.doomed_unless_all_args_bindable((SubLObject)removal_modules_extent_cardinality.$kw2$NEG, removal_modules_extent_cardinality.$const0$extentCardinality);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw6$REMOVAL_EXTENT_CARDINALITY_FORT_GENERATE, (SubLObject)removal_modules_extent_cardinality.$list7);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw9$REMOVAL_EXTENT_CARDINALITY_FORT_CHECK_POS, (SubLObject)removal_modules_extent_cardinality.$list10);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw11$REMOVAL_EXTENT_CARDINALITY_FORT_CHECK_NEG, (SubLObject)removal_modules_extent_cardinality.$list12);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw13$REMOVAL_EXTENT_CARDINALITY_THESET, (SubLObject)removal_modules_extent_cardinality.$list14);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw15$REMOVAL_EXTENT_CARDINALITY_THESETOF, (SubLObject)removal_modules_extent_cardinality.$list16);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw17$REMOVAL_EXTENT_CARDINALITY_THECOLLECTIONOF, (SubLObject)removal_modules_extent_cardinality.$list18);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw19$REMOVAL_EXTENT_CARDINALITY_CYCLASSERTION, (SubLObject)removal_modules_extent_cardinality.$list20);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw21$REMOVAL_EXTENT_CARDINALITY_CYCLREIFIEDDENOTATIONALTERM, (SubLObject)removal_modules_extent_cardinality.$list22);
        subl_macro_promotions.declare_defglobal((SubLObject)removal_modules_extent_cardinality.$sym23$_LENGTH_OF_LIST_DEFINING_MT_);
        mt_vars.note_mt_var((SubLObject)removal_modules_extent_cardinality.$sym23$_LENGTH_OF_LIST_DEFINING_MT_, removal_modules_extent_cardinality.$const25$lengthOfList);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw27$REMOVAL_LENGTH_OF_THELIST_CHECK_POS, (SubLObject)removal_modules_extent_cardinality.$list28);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw29$REMOVAL_LENGTH_OF_THELIST_CHECK_NEG, (SubLObject)removal_modules_extent_cardinality.$list30);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw31$REMOVAL_LENGTH_OF_THELIST_GENERATE, (SubLObject)removal_modules_extent_cardinality.$list32);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_extent_cardinality.$kw1$POS, removal_modules_extent_cardinality.$const25$lengthOfList, (SubLObject)removal_modules_extent_cardinality.ONE_INTEGER);
        preference_modules.doomed_unless_all_args_bindable((SubLObject)removal_modules_extent_cardinality.$kw2$NEG, removal_modules_extent_cardinality.$const25$lengthOfList);
        inference_modules.inference_removal_module((SubLObject)removal_modules_extent_cardinality.$kw33$REMOVAL_LENGTH_OF_THELIST_PRUNE, (SubLObject)removal_modules_extent_cardinality.$list34);
        return (SubLObject)removal_modules_extent_cardinality.NIL;
    }
    
    public void declareFunctions() {
        declare_removal_modules_extent_cardinality_file();
    }
    
    public void initializeVariables() {
        init_removal_modules_extent_cardinality_file();
    }
    
    public void runTopLevelForms() {
        setup_removal_modules_extent_cardinality_file();
    }
    
    static {
        me = (SubLFile)new removal_modules_extent_cardinality();
        removal_modules_extent_cardinality.$default_removal_extent_cardinality_cost$ = null;
        removal_modules_extent_cardinality.$length_of_list_defining_mt$ = null;
        $const0$extentCardinality = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality"));
        $kw1$POS = SubLObjectFactory.makeKeyword("POS");
        $kw2$NEG = SubLObjectFactory.makeKeyword("NEG");
        $kw3$HL = SubLObjectFactory.makeKeyword("HL");
        $const4$TheCollectionOf = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheCollectionOf"));
        $const5$TheEmptySet = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheEmptySet"));
        $kw6$REMOVAL_EXTENT_CARDINALITY_FORT_GENERATE = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-GENERATE");
        $list7 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)SubLObjectFactory.makeKeyword("FORT"), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-REMOVAL-EXTENT-CARDINALITY-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-FORT-EXTENT-CARDINALITY"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$extentCardinality <fort> <not-fully-bound>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$extentCardinality #$MonthOfYearType ?COUNT)") });
        $kw8$UNEVALUATABLE = SubLObjectFactory.makeKeyword("UNEVALUATABLE");
        $kw9$REMOVAL_EXTENT_CARDINALITY_FORT_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-CHECK-POS");
        $list10 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)SubLObjectFactory.makeKeyword("FORT"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-REMOVAL-EXTENT-CARDINALITY-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORT-HAS-EXTENT-CARDINALITY?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY")))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$extentCardinality <fort> <fully-bound>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$extentCardinality #$MonthOfYearType 12)") });
        $kw11$REMOVAL_EXTENT_CARDINALITY_FORT_CHECK_NEG = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-CHECK-NEG");
        $list12 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("NEG"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)SubLObjectFactory.makeKeyword("FORT"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-REMOVAL-EXTENT-CARDINALITY-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("INVERT-BOOLEAN-ANSWER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORT-HAS-EXTENT-CARDINALITY?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINALITY"))))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$not (#$extentCardinality <fort> <fully-bound>))"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$not (#$extentCardinality #$MonthOfYearType 14))") });
        $kw13$REMOVAL_EXTENT_CARDINALITY_THESET = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-THESET");
        $list14 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.cons(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheSet")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-EXTENT-CARDINALITY-SET"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$extentCardinality (#$TheSet . <fully-bound>) <whatever>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$extentCardinality (#$TheSet #$Andorra #$France #$Portugal) ?COUNT)") });
        $kw15$REMOVAL_EXTENT_CARDINALITY_THESETOF = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-THESETOF");
        $list16 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheSetOf")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*EXPENSIVE-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-EXTENT-CARDINALITY-SET"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$extentCardinality (#$TheSetOf <variable> <closed except for variable>) <whatever>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$extentCardinality \n      (#$TheSetOf ?COUNTRY\n        (#$and\n          (#$isa ?COUNTRY #$Country)\n          (#$politiesBorderEachOther #$Spain ?COUNTRY)))\n      ?COUNT)") });
        $kw17$REMOVAL_EXTENT_CARDINALITY_THECOLLECTIONOF = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-THECOLLECTIONOF");
        $list18 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NAT"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheCollectionOf")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"))), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), SubLObjectFactory.makeKeyword("EXCLUSIVE"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeKeyword("SUPPLANTS"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-GENERATE"), (SubLObject)SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-CHECK-POS")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*EXPENSIVE-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("COLLECTION")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("COLLECTION"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-EXTENT-CARDINALITY-COLLECTION"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("COLLECTION")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$extentCardinality (#$TheCollectionOf <variable> <closed except for variable>) <whatever>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$extentCardinality \n      (#$TheCollectionOf ?COUNTRY\n        (#$and\n          (#$isa ?COUNTRY #$Country)\n          (#$politiesBorderEachOther #$Spain ?COUNTRY)))\n      ?COUNT)") });
        $kw19$REMOVAL_EXTENT_CARDINALITY_CYCLASSERTION = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-CYCLASSERTION");
        $list20 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CycLAssertion")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXCLUSIVE"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeKeyword("SUPPLANTS"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-GENERATE"), (SubLObject)SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-CHECK-POS")), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("ASSERTION-COUNT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CycLAssertion")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$extentCardinality #$CycLAssertion <whatever>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$extentCardinality #$CycLAssertion ?COUNT)") });
        $kw21$REMOVAL_EXTENT_CARDINALITY_CYCLREIFIEDDENOTATIONALTERM = SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-CYCLREIFIEDDENOTATIONALTERM");
        $list22 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CycLReifiedDenotationalTerm")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXCLUSIVE"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeKeyword("SUPPLANTS"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-GENERATE"), (SubLObject)SubLObjectFactory.makeKeyword("REMOVAL-EXTENT-CARDINALITY-FORT-CHECK-POS")), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORT-COUNT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("extentCardinality")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CycLReifiedDenotationalTerm")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*MT*"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$extentCardinality #$CycLReifiedDenotationalTerm <whatever>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$extentCardinality #$CycLReifiedDenotationalTerm ?COUNT)") });
        $sym23$_LENGTH_OF_LIST_DEFINING_MT_ = SubLObjectFactory.makeSymbol("*LENGTH-OF-LIST-DEFINING-MT*");
        $const24$BaseKB = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BaseKB"));
        $const25$lengthOfList = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList"));
        $sym26$INTEGERP = SubLObjectFactory.makeSymbol("INTEGERP");
        $kw27$REMOVAL_LENGTH_OF_THELIST_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-LENGTH-OF-THELIST-CHECK-POS");
        $list28 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("EL-LIST-P"))), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXCLUSIVE"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_extent_cardinality.T, SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-EL-LIST-LENGTH="), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH")))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*LENGTH-OF-LIST-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$lengthOfList (#$TheList . <fully-bound>) <fully-bound>) or\n    (#$lengthOfList #$TheEmptyList <fully-bound>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$lengthOfList (#$TheList #$Andorra #$France #$Portugal) 3)\n    (#$lengthOfList (#$TheList) 0)\n    (#$lengthOfList #$TheEmptyList 0)") });
        $kw29$REMOVAL_LENGTH_OF_THELIST_CHECK_NEG = SubLObjectFactory.makeKeyword("REMOVAL-LENGTH-OF-THELIST-CHECK-NEG");
        $list30 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("NEG"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("EL-LIST-P"))), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*CHEAP-HL-MODULE-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXCLUSIVE"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_extent_cardinality.T, SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("INVERT-BOOLEAN-ANSWER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-EL-LIST-LENGTH="), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH"))))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*LENGTH-OF-LIST-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$not (#$lengthOfList (#$TheList . <fully-bound>) <fully-bound>)) or\n    (#$not (#$lengthOfList #$TheEmptyList <fully-bound>))"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$not (#$lengthOfList (#$TheList #$Andorra #$France #$Portugal) 1))\n    (#$not (#$lengthOfList (#$TheList) 1))\n    (#$not (#$lengthOfList #$TheEmptyList 1))") });
        $kw31$REMOVAL_LENGTH_OF_THELIST_GENERATE = SubLObjectFactory.makeKeyword("REMOVAL-LENGTH-OF-THELIST-GENERATE");
        $list32 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("EL-LIST-P"))), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_extent_cardinality.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXCLUSIVE"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LIST"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("EL-LIST-LENGTH"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("LIST")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*LENGTH-OF-LIST-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$lengthOfList (#$TheList . <fully-bound>) <not-fully-bound>) or\n    (#$lengthOfList #$TheEmptyList <not-fully-bound>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$lengthOfList (#$TheList #$Andorra #$France #$Portugal) ?COUNT)\n    (#$lengthOfList (#$TheList) ?COUNT)\n    (#$lengthOfList #$TheEmptyList ?COUNT)") });
        $kw33$REMOVAL_LENGTH_OF_THELIST_PRUNE = SubLObjectFactory.makeKeyword("REMOVAL-LENGTH-OF-THELIST-PRUNE");
        $list34 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("lengthOfList")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.cons(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("PROPER-LIST-P"))), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("EXCLUSIVE"), SubLObjectFactory.makeSymbol("TRUE"), SubLObjectFactory.makeKeyword("REQUIRED"), SubLObjectFactory.makeSymbol("REMOVAL-LENGTH-OF-THE-LIST-PRUNE"), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_extent_cardinality.ZERO_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("pruning module that handles\n    (#$lengthOfList (#$TheList . <not fully-bound>) <fully-bound>) \n    where the length in ARG2 does not match the list in ARG1"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$lengthOfList (#$TheList #$isa ?X) 1)") });
    }
}

/*

	Total time: 174 ms
	
*/