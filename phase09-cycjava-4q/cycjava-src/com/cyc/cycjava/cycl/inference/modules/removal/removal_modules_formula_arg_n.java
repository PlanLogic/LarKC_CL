package com.cyc.cycjava.cycl.inference.modules.removal;

import com.cyc.cycjava.cycl.constant_handles;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.cycjava.cycl.mt_vars;
import com.cyc.cycjava.cycl.subl_macro_promotions;
import com.cyc.cycjava.cycl.inference.modules.preference_modules;
import com.cyc.cycjava.cycl.inference.harness.inference_modules;
import com.cyc.cycjava.cycl.control_vars;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.cycjava.cycl.number_utilities;
import com.cyc.cycjava.cycl.backward;
import com.cyc.cycjava.cycl.unification_utilities;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.cycjava.cycl.el_utilities;
import com.cyc.cycjava.cycl.czer_utilities;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Equality;
import com.cyc.cycjava.cycl.cycl_utilities;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.cycjava.cycl.arguments;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class removal_modules_formula_arg_n extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n";
    public static final String myFingerPrint = "e699eb68995320d05ab0f3473de211d038418ab07763e56b925c395629d73950";
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 928L)
    public static SubLSymbol $operator_formulas_defining_mt$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 1276L)
    private static SubLSymbol $operator_formulas_code_rule$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 1602L)
    private static SubLSymbol $default_operator_formulas_check_cost$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 4979L)
    public static SubLSymbol $argn_defining_mt$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 5401L)
    private static SubLSymbol $default_arg_n_check_cost$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 11438L)
    public static SubLSymbol $formula_arity_defining_mt$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 11510L)
    private static SubLSymbol $default_formula_arity_check_cost$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 18257L)
    public static SubLSymbol $cycl_for_subl_defining_mt$;
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 18713L)
    private static SubLSymbol $default_cycl_for_subl_check_cost$;
    private static final SubLObject $const0$operatorFormulas;
    private static final SubLSymbol $kw1$POS;
    private static final SubLSymbol $kw2$NEG;
    private static final SubLSymbol $sym3$_OPERATOR_FORMULAS_DEFINING_MT_;
    private static final SubLObject $const4$BaseKB;
    private static final SubLSymbol $kw5$OPAQUE;
    private static final SubLSymbol $kw6$TRUE_MON;
    private static final SubLList $list7;
    private static final SubLSymbol $kw8$CODE;
    private static final SubLSymbol $kw9$REMOVAL_OPERATOR_FORMULAS_CHECK_POS;
    private static final SubLList $list10;
    private static final SubLSymbol $kw11$REMOVAL_OPERATOR_FORMULAS_CHECK_NEG;
    private static final SubLList $list12;
    private static final SubLSymbol $kw13$REMOVAL_OPERATOR_FORMULAS_UNIFY;
    private static final SubLList $list14;
    private static final SubLObject $const15$argN;
    private static final SubLSymbol $sym16$_ARGN_DEFINING_MT_;
    private static final SubLList $list17;
    private static final SubLSymbol $kw18$REMOVAL_ARG_N_CHECK_POS;
    private static final SubLList $list19;
    private static final SubLSymbol $kw20$REMOVAL_ARG_N_CHECK_NEG;
    private static final SubLList $list21;
    private static final SubLSymbol $kw22$REMOVAL_ARG_N_UNIFY_ARG1;
    private static final SubLList $list23;
    private static final SubLSymbol $kw24$REMOVAL_ARG_N_UNIFY_ARG2;
    private static final SubLList $list25;
    private static final SubLSymbol $kw26$REMOVAL_ARG_N_ITERATE;
    private static final SubLList $list27;
    private static final SubLSymbol $kw28$IGNORE;
    private static final SubLObject $const29$formulaArity;
    private static final SubLSymbol $sym30$_FORMULA_ARITY_DEFINING_MT_;
    private static final SubLSymbol $kw31$REMOVAL_FORMULA_ARITY_CHECK_POS;
    private static final SubLList $list32;
    private static final SubLSymbol $kw33$REMOVAL_FORMULA_ARITY_CHECK_NEG;
    private static final SubLList $list34;
    private static final SubLSymbol $kw35$REMOVAL_FORMULA_ARITY_UNIFY;
    private static final SubLList $list36;
    private static final SubLObject $const37$quotedFormulaArity;
    private static final SubLSymbol $kw38$REMOVAL_QUOTED_FORMULA_ARITY_CHECK_POS;
    private static final SubLList $list39;
    private static final SubLSymbol $kw40$REMOVAL_QUOTED_FORMULA_ARITY_CHECK_NEG;
    private static final SubLList $list41;
    private static final SubLSymbol $kw42$REMOVAL_QUOTED_FORMULA_ARITY_UNIFY;
    private static final SubLList $list43;
    private static final SubLObject $const44$cycLForSubL;
    private static final SubLSymbol $sym45$_CYCL_FOR_SUBL_DEFINING_MT_;
    private static final SubLList $list46;
    private static final SubLSymbol $kw47$REMOVAL_CYCL_FOR_SUBL_CHECK_POS;
    private static final SubLList $list48;
    private static final SubLSymbol $kw49$REMOVAL_CYCL_FOR_SUBL_CHECK_NEG;
    private static final SubLList $list50;
    private static final SubLSymbol $kw51$REMOVAL_CYCL_FOR_SUBL_UNIFY_ARG1;
    private static final SubLList $list52;
    private static final SubLSymbol $kw53$REMOVAL_CYCL_FOR_SUBL_UNIFY_ARG2;
    private static final SubLList $list54;
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 1008L)
    public static SubLObject make_operator_formulas_supports(final SubLObject support_formula, final SubLObject support_mt) {
        final SubLObject support = arguments.make_hl_support((SubLObject)removal_modules_formula_arg_n.$kw5$OPAQUE, support_formula, support_mt, (SubLObject)removal_modules_formula_arg_n.$kw6$TRUE_MON);
        final SubLObject more_supports = (SubLObject)ConsesLow.list(operator_formulas_rule_support());
        return Values.values(support, more_supports);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 1442L)
    public static SubLObject operator_formulas_rule_support() {
        return arguments.make_hl_support((SubLObject)removal_modules_formula_arg_n.$kw8$CODE, removal_modules_formula_arg_n.$operator_formulas_code_rule$.getGlobalValue(), removal_modules_formula_arg_n.$operator_formulas_defining_mt$.getGlobalValue(), (SubLObject)removal_modules_formula_arg_n.$kw6$TRUE_MON);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 1855L)
    public static SubLObject formula_has_operatorP(final SubLObject formula, final SubLObject operator) {
        return Equality.equal(operator, cycl_utilities.formula_operator(formula));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 5034L)
    public static SubLObject make_arg_n_supports(final SubLObject support_formula, final SubLObject support_mt) {
        final SubLObject support = arguments.make_hl_support((SubLObject)removal_modules_formula_arg_n.$kw5$OPAQUE, support_formula, support_mt, (SubLObject)removal_modules_formula_arg_n.$kw6$TRUE_MON);
        final SubLObject more_supports = (SubLObject)ConsesLow.list(arg_n_rule_support());
        return Values.values(support, more_supports);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 5278L)
    public static SubLObject arg_n_rule_support() {
        return arguments.make_hl_support((SubLObject)removal_modules_formula_arg_n.$kw8$CODE, (SubLObject)removal_modules_formula_arg_n.$list17, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 5596L)
    public static SubLObject removal_arg_n_check(final SubLObject v_term, final SubLObject argnum, final SubLObject formula) {
        return czer_utilities.terms_equal_at_elP(v_term, cycl_utilities.formula_arg(formula, argnum, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED), (SubLObject)removal_modules_formula_arg_n.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 10362L)
    public static SubLObject removal_arg_n_iterate_cost(final SubLObject asent, SubLObject sense) {
        if (sense == removal_modules_formula_arg_n.UNPROVIDED) {
            sense = (SubLObject)removal_modules_formula_arg_n.NIL;
        }
        return el_utilities.formula_arity(asent, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 10478L)
    public static SubLObject removal_arg_n_iterate_expand(final SubLObject asent, SubLObject sense) {
        if (sense == removal_modules_formula_arg_n.UNPROVIDED) {
            sense = (SubLObject)removal_modules_formula_arg_n.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject formula = cycl_utilities.atomic_sentence_arg3(asent, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED);
        final SubLObject terms = cycl_utilities.formula_terms(formula, (SubLObject)removal_modules_formula_arg_n.$kw28$IGNORE);
        SubLObject list_var = (SubLObject)removal_modules_formula_arg_n.NIL;
        SubLObject arg = (SubLObject)removal_modules_formula_arg_n.NIL;
        SubLObject argnum = (SubLObject)removal_modules_formula_arg_n.NIL;
        list_var = terms;
        arg = list_var.first();
        for (argnum = (SubLObject)removal_modules_formula_arg_n.ZERO_INTEGER; removal_modules_formula_arg_n.NIL != list_var; list_var = list_var.rest(), arg = list_var.first(), argnum = number_utilities.f_1X(argnum)) {
            final SubLObject bound_asent = el_utilities.make_ternary_formula(removal_modules_formula_arg_n.$const15$argN, arg, argnum, formula);
            thread.resetMultipleValues();
            final SubLObject v_bindings = unification_utilities.term_unify(bound_asent, asent, (SubLObject)removal_modules_formula_arg_n.T, (SubLObject)removal_modules_formula_arg_n.T);
            final SubLObject unify_justification = thread.secondMultipleValue();
            thread.resetMultipleValues();
            if (removal_modules_formula_arg_n.NIL != v_bindings) {
                backward.removal_add_node(arguments.make_hl_support((SubLObject)removal_modules_formula_arg_n.$kw5$OPAQUE, bound_asent, removal_modules_formula_arg_n.$argn_defining_mt$.getGlobalValue(), (SubLObject)removal_modules_formula_arg_n.$kw6$TRUE_MON), v_bindings, (SubLObject)ConsesLow.cons(arg_n_rule_support(), unify_justification));
            }
        }
        return (SubLObject)removal_modules_formula_arg_n.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 11743L)
    public static SubLObject formula_has_arityP(final SubLObject formula, final SubLObject v_arity) {
        return el_utilities.formula_arityE(formula, v_arity, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 18328L)
    public static SubLObject make_cycl_for_subl_supports(final SubLObject support_formula, final SubLObject support_mt) {
        final SubLObject support = arguments.make_hl_support((SubLObject)removal_modules_formula_arg_n.$kw5$OPAQUE, support_formula, support_mt, (SubLObject)removal_modules_formula_arg_n.$kw6$TRUE_MON);
        final SubLObject more_supports = (SubLObject)ConsesLow.list(cycl_for_subl_rule_support());
        return Values.values(support, more_supports);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 18588L)
    public static SubLObject cycl_for_subl_rule_support() {
        return arguments.make_hl_support((SubLObject)removal_modules_formula_arg_n.$kw8$CODE, (SubLObject)removal_modules_formula_arg_n.$list46, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/inference/modules/removal/removal-modules-formula-arg-n.lisp", position = 18801L)
    public static SubLObject removal_cycl_for_subl_check(final SubLObject subl_quote_fn_formula, final SubLObject subl) {
        return Equality.equal(subl, cycl_utilities.formula_arg(subl_quote_fn_formula, (SubLObject)removal_modules_formula_arg_n.ONE_INTEGER, (SubLObject)removal_modules_formula_arg_n.UNPROVIDED));
    }
    
    public static SubLObject declare_removal_modules_formula_arg_n_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "make_operator_formulas_supports", "MAKE-OPERATOR-FORMULAS-SUPPORTS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "operator_formulas_rule_support", "OPERATOR-FORMULAS-RULE-SUPPORT", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "formula_has_operatorP", "FORMULA-HAS-OPERATOR?", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "make_arg_n_supports", "MAKE-ARG-N-SUPPORTS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "arg_n_rule_support", "ARG-N-RULE-SUPPORT", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "removal_arg_n_check", "REMOVAL-ARG-N-CHECK", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "removal_arg_n_iterate_cost", "REMOVAL-ARG-N-ITERATE-COST", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "removal_arg_n_iterate_expand", "REMOVAL-ARG-N-ITERATE-EXPAND", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "formula_has_arityP", "FORMULA-HAS-ARITY?", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "make_cycl_for_subl_supports", "MAKE-CYCL-FOR-SUBL-SUPPORTS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "cycl_for_subl_rule_support", "CYCL-FOR-SUBL-RULE-SUPPORT", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.inference.modules.removal.removal_modules_formula_arg_n", "removal_cycl_for_subl_check", "REMOVAL-CYCL-FOR-SUBL-CHECK", 2, 0, false);
        return (SubLObject)removal_modules_formula_arg_n.NIL;
    }
    
    public static SubLObject init_removal_modules_formula_arg_n_file() {
        removal_modules_formula_arg_n.$operator_formulas_defining_mt$ = SubLFiles.deflexical("*OPERATOR-FORMULAS-DEFINING-MT*", (removal_modules_formula_arg_n.NIL != Symbols.boundp((SubLObject)removal_modules_formula_arg_n.$sym3$_OPERATOR_FORMULAS_DEFINING_MT_)) ? removal_modules_formula_arg_n.$operator_formulas_defining_mt$.getGlobalValue() : removal_modules_formula_arg_n.$const4$BaseKB);
        removal_modules_formula_arg_n.$operator_formulas_code_rule$ = SubLFiles.deflexical("*OPERATOR-FORMULAS-CODE-RULE*", (SubLObject)removal_modules_formula_arg_n.$list7);
        removal_modules_formula_arg_n.$default_operator_formulas_check_cost$ = SubLFiles.deflexical("*DEFAULT-OPERATOR-FORMULAS-CHECK-COST*", control_vars.$hl_module_check_cost$.getDynamicValue());
        removal_modules_formula_arg_n.$argn_defining_mt$ = SubLFiles.deflexical("*ARGN-DEFINING-MT*", (removal_modules_formula_arg_n.NIL != Symbols.boundp((SubLObject)removal_modules_formula_arg_n.$sym16$_ARGN_DEFINING_MT_)) ? removal_modules_formula_arg_n.$argn_defining_mt$.getGlobalValue() : removal_modules_formula_arg_n.$const4$BaseKB);
        removal_modules_formula_arg_n.$default_arg_n_check_cost$ = SubLFiles.deflexical("*DEFAULT-ARG-N-CHECK-COST*", control_vars.$hl_module_check_cost$.getDynamicValue());
        removal_modules_formula_arg_n.$formula_arity_defining_mt$ = SubLFiles.deflexical("*FORMULA-ARITY-DEFINING-MT*", (removal_modules_formula_arg_n.NIL != Symbols.boundp((SubLObject)removal_modules_formula_arg_n.$sym30$_FORMULA_ARITY_DEFINING_MT_)) ? removal_modules_formula_arg_n.$formula_arity_defining_mt$.getGlobalValue() : removal_modules_formula_arg_n.$const4$BaseKB);
        removal_modules_formula_arg_n.$default_formula_arity_check_cost$ = SubLFiles.deflexical("*DEFAULT-FORMULA-ARITY-CHECK-COST*", control_vars.$hl_module_check_cost$.getDynamicValue());
        removal_modules_formula_arg_n.$cycl_for_subl_defining_mt$ = SubLFiles.deflexical("*CYCL-FOR-SUBL-DEFINING-MT*", (removal_modules_formula_arg_n.NIL != Symbols.boundp((SubLObject)removal_modules_formula_arg_n.$sym45$_CYCL_FOR_SUBL_DEFINING_MT_)) ? removal_modules_formula_arg_n.$cycl_for_subl_defining_mt$.getGlobalValue() : removal_modules_formula_arg_n.$const4$BaseKB);
        removal_modules_formula_arg_n.$default_cycl_for_subl_check_cost$ = SubLFiles.deflexical("*DEFAULT-CYCL-FOR-SUBL-CHECK-COST*", control_vars.$hl_module_check_cost$.getDynamicValue());
        return (SubLObject)removal_modules_formula_arg_n.NIL;
    }
    
    public static SubLObject setup_removal_modules_formula_arg_n_file() {
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_formula_arg_n.$const0$operatorFormulas);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_formula_arg_n.$kw1$POS, removal_modules_formula_arg_n.$const0$operatorFormulas, (SubLObject)removal_modules_formula_arg_n.TWO_INTEGER);
        preference_modules.doomed_unless_all_args_bindable((SubLObject)removal_modules_formula_arg_n.$kw2$NEG, removal_modules_formula_arg_n.$const0$operatorFormulas);
        subl_macro_promotions.declare_defglobal((SubLObject)removal_modules_formula_arg_n.$sym3$_OPERATOR_FORMULAS_DEFINING_MT_);
        mt_vars.note_mt_var((SubLObject)removal_modules_formula_arg_n.$sym3$_OPERATOR_FORMULAS_DEFINING_MT_, removal_modules_formula_arg_n.$const0$operatorFormulas);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw9$REMOVAL_OPERATOR_FORMULAS_CHECK_POS, (SubLObject)removal_modules_formula_arg_n.$list10);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw11$REMOVAL_OPERATOR_FORMULAS_CHECK_NEG, (SubLObject)removal_modules_formula_arg_n.$list12);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw13$REMOVAL_OPERATOR_FORMULAS_UNIFY, (SubLObject)removal_modules_formula_arg_n.$list14);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_formula_arg_n.$const15$argN);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_formula_arg_n.$kw1$POS, removal_modules_formula_arg_n.$const15$argN, (SubLObject)removal_modules_formula_arg_n.THREE_INTEGER);
        subl_macro_promotions.declare_defglobal((SubLObject)removal_modules_formula_arg_n.$sym16$_ARGN_DEFINING_MT_);
        mt_vars.note_mt_var((SubLObject)removal_modules_formula_arg_n.$sym16$_ARGN_DEFINING_MT_, removal_modules_formula_arg_n.$const15$argN);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw18$REMOVAL_ARG_N_CHECK_POS, (SubLObject)removal_modules_formula_arg_n.$list19);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw20$REMOVAL_ARG_N_CHECK_NEG, (SubLObject)removal_modules_formula_arg_n.$list21);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw22$REMOVAL_ARG_N_UNIFY_ARG1, (SubLObject)removal_modules_formula_arg_n.$list23);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw24$REMOVAL_ARG_N_UNIFY_ARG2, (SubLObject)removal_modules_formula_arg_n.$list25);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw26$REMOVAL_ARG_N_ITERATE, (SubLObject)removal_modules_formula_arg_n.$list27);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_formula_arg_n.$const29$formulaArity);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_formula_arg_n.$kw1$POS, removal_modules_formula_arg_n.$const29$formulaArity, (SubLObject)removal_modules_formula_arg_n.ONE_INTEGER);
        preference_modules.doomed_unless_all_args_bindable((SubLObject)removal_modules_formula_arg_n.$kw2$NEG, removal_modules_formula_arg_n.$const29$formulaArity);
        subl_macro_promotions.declare_defglobal((SubLObject)removal_modules_formula_arg_n.$sym30$_FORMULA_ARITY_DEFINING_MT_);
        mt_vars.note_mt_var((SubLObject)removal_modules_formula_arg_n.$sym30$_FORMULA_ARITY_DEFINING_MT_, removal_modules_formula_arg_n.$const29$formulaArity);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw31$REMOVAL_FORMULA_ARITY_CHECK_POS, (SubLObject)removal_modules_formula_arg_n.$list32);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw33$REMOVAL_FORMULA_ARITY_CHECK_NEG, (SubLObject)removal_modules_formula_arg_n.$list34);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw35$REMOVAL_FORMULA_ARITY_UNIFY, (SubLObject)removal_modules_formula_arg_n.$list36);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_formula_arg_n.$const37$quotedFormulaArity);
        preference_modules.doomed_unless_arg_bindable((SubLObject)removal_modules_formula_arg_n.$kw1$POS, removal_modules_formula_arg_n.$const37$quotedFormulaArity, (SubLObject)removal_modules_formula_arg_n.ONE_INTEGER);
        preference_modules.doomed_unless_all_args_bindable((SubLObject)removal_modules_formula_arg_n.$kw2$NEG, removal_modules_formula_arg_n.$const37$quotedFormulaArity);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw38$REMOVAL_QUOTED_FORMULA_ARITY_CHECK_POS, (SubLObject)removal_modules_formula_arg_n.$list39);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw40$REMOVAL_QUOTED_FORMULA_ARITY_CHECK_NEG, (SubLObject)removal_modules_formula_arg_n.$list41);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw42$REMOVAL_QUOTED_FORMULA_ARITY_UNIFY, (SubLObject)removal_modules_formula_arg_n.$list43);
        inference_modules.register_solely_specific_removal_module_predicate(removal_modules_formula_arg_n.$const44$cycLForSubL);
        preference_modules.doomed_unless_either_arg_bindable((SubLObject)removal_modules_formula_arg_n.$kw1$POS, removal_modules_formula_arg_n.$const44$cycLForSubL);
        preference_modules.doomed_unless_all_args_bindable((SubLObject)removal_modules_formula_arg_n.$kw2$NEG, removal_modules_formula_arg_n.$const44$cycLForSubL);
        subl_macro_promotions.declare_defglobal((SubLObject)removal_modules_formula_arg_n.$sym45$_CYCL_FOR_SUBL_DEFINING_MT_);
        mt_vars.note_mt_var((SubLObject)removal_modules_formula_arg_n.$sym45$_CYCL_FOR_SUBL_DEFINING_MT_, removal_modules_formula_arg_n.$const44$cycLForSubL);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw47$REMOVAL_CYCL_FOR_SUBL_CHECK_POS, (SubLObject)removal_modules_formula_arg_n.$list48);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw49$REMOVAL_CYCL_FOR_SUBL_CHECK_NEG, (SubLObject)removal_modules_formula_arg_n.$list50);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw51$REMOVAL_CYCL_FOR_SUBL_UNIFY_ARG1, (SubLObject)removal_modules_formula_arg_n.$list52);
        inference_modules.inference_removal_module((SubLObject)removal_modules_formula_arg_n.$kw53$REMOVAL_CYCL_FOR_SUBL_UNIFY_ARG2, (SubLObject)removal_modules_formula_arg_n.$list54);
        return (SubLObject)removal_modules_formula_arg_n.NIL;
    }
    
    public void declareFunctions() {
        declare_removal_modules_formula_arg_n_file();
    }
    
    public void initializeVariables() {
        init_removal_modules_formula_arg_n_file();
    }
    
    public void runTopLevelForms() {
        setup_removal_modules_formula_arg_n_file();
    }
    
    static {
        me = (SubLFile)new removal_modules_formula_arg_n();
        removal_modules_formula_arg_n.$operator_formulas_defining_mt$ = null;
        removal_modules_formula_arg_n.$operator_formulas_code_rule$ = null;
        removal_modules_formula_arg_n.$default_operator_formulas_check_cost$ = null;
        removal_modules_formula_arg_n.$argn_defining_mt$ = null;
        removal_modules_formula_arg_n.$default_arg_n_check_cost$ = null;
        removal_modules_formula_arg_n.$formula_arity_defining_mt$ = null;
        removal_modules_formula_arg_n.$default_formula_arity_check_cost$ = null;
        removal_modules_formula_arg_n.$cycl_for_subl_defining_mt$ = null;
        removal_modules_formula_arg_n.$default_cycl_for_subl_check_cost$ = null;
        $const0$operatorFormulas = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas"));
        $kw1$POS = SubLObjectFactory.makeKeyword("POS");
        $kw2$NEG = SubLObjectFactory.makeKeyword("NEG");
        $sym3$_OPERATOR_FORMULAS_DEFINING_MT_ = SubLObjectFactory.makeSymbol("*OPERATOR-FORMULAS-DEFINING-MT*");
        $const4$BaseKB = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BaseKB"));
        $kw5$OPAQUE = SubLObjectFactory.makeKeyword("OPAQUE");
        $kw6$TRUE_MON = SubLObjectFactory.makeKeyword("TRUE-MON");
        $list7 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("implies")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("equals")), (SubLObject)SubLObjectFactory.makeSymbol("?FORMULA"), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("?RELATION"), (SubLObject)SubLObjectFactory.makeSymbol("??ARGS"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)SubLObjectFactory.makeSymbol("?RELATION"), (SubLObject)SubLObjectFactory.makeSymbol("?FORMULA")));
        $kw8$CODE = SubLObjectFactory.makeKeyword("CODE");
        $kw9$REMOVAL_OPERATOR_FORMULAS_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-OPERATOR-FORMULAS-CHECK-POS");
        $list10 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-OPERATOR-FORMULAS-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("RELATION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("RELATION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RELATION"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-HAS-OPERATOR?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("RELATION")))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*OPERATOR-FORMULAS-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-OPERATOR-FORMULAS-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$operatorFormulas <fully-bound> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$operatorFormulas #$JuvenileFn (#$JuvenileFn #$Dog))") });
        $kw11$REMOVAL_OPERATOR_FORMULAS_CHECK_NEG = SubLObjectFactory.makeKeyword("REMOVAL-OPERATOR-FORMULAS-CHECK-NEG");
        $list12 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("NEG"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INVERT-REMOVAL-CHECK-COST"), (SubLObject)SubLObjectFactory.makeSymbol("*DEFAULT-OPERATOR-FORMULAS-CHECK-COST*")), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("RELATION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("RELATION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RELATION"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("INVERT-BOOLEAN-ANSWER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-HAS-OPERATOR?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("RELATION"))))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*OPERATOR-FORMULAS-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-OPERATOR-FORMULAS-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$operatorFormulas <fully-bound> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$not (#$operatorFormulas #$isa (#$JuvenileFn #$Dog)))") });
        $kw13$REMOVAL_OPERATOR_FORMULAS_UNIFY = SubLObjectFactory.makeKeyword("REMOVAL-OPERATOR-FORMULAS-UNIFY");
        $list14 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_formula_arg_n.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("operatorFormulas")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-OPERATOR"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*OPERATOR-FORMULAS-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-OPERATOR-FORMULAS-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$operatorFormulas <not fully-bound> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$operatorFormulas ?WHAT (#$JuvenileFn #$Dog))") });
        $const15$argN = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN"));
        $sym16$_ARGN_DEFINING_MT_ = SubLObjectFactory.makeSymbol("*ARGN-DEFINING-MT*");
        $list17 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("FormulaArgFn")), (SubLObject)SubLObjectFactory.makeSymbol("?N"), (SubLObject)SubLObjectFactory.makeSymbol("?FORMULA")), (SubLObject)SubLObjectFactory.makeSymbol("?N"), (SubLObject)SubLObjectFactory.makeSymbol("?FORMULA"));
        $kw18$REMOVAL_ARG_N_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-ARG-N-CHECK-POS");
        $list19 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("INTEGER"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-ARG-N-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TERM"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-ARG-N-CHECK"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*ARGN-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-ARG-N-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$argN <fully-bound> <integer> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$argN #$Dog 1 (#$JuvenileFn #$Dog))") });
        $kw20$REMOVAL_ARG_N_CHECK_NEG = SubLObjectFactory.makeKeyword("REMOVAL-ARG-N-CHECK-NEG");
        $list21 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("NEG"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("INTEGER"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INVERT-REMOVAL-CHECK-COST"), (SubLObject)SubLObjectFactory.makeSymbol("*DEFAULT-ARG-N-CHECK-COST*")), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TERM"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("INVERT-BOOLEAN-ANSWER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-ARG-N-CHECK"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*ARGN-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-ARG-N-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$argN <fully-bound> <integer> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$not (#$argN #$Muffet 1 (#$JuvenileFn #$Dog)))") });
        $kw22$REMOVAL_ARG_N_UNIFY_ARG1 = SubLObjectFactory.makeKeyword("REMOVAL-ARG-N-UNIFY-ARG1");
        $list23 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("INTEGER"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_formula_arg_n.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ARGNUM"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM"))))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*ARGN-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-ARG-N-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$argN <not fully-bound> <integer> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$argN ?WHAT 1 (#$JuvenileFn #$Dog))") });
        $kw24$REMOVAL_ARG_N_UNIFY_ARG2 = SubLObjectFactory.makeKeyword("REMOVAL-ARG-N-UNIFY-ARG2");
        $list25 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_formula_arg_n.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ARGNUM"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG-POSITIONS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARGNUM")), (SubLObject)removal_modules_formula_arg_n.EQUAL)), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("TERM")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*ARGN-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-ARG-N-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$argN <fully-bound> <not-fully-bound> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$argN #$Dog ?WHAT (#$JuvenileFn #$Dog))") });
        $kw26$REMOVAL_ARG_N_ITERATE = SubLObjectFactory.makeKeyword("REMOVAL-ARG-N-ITERATE");
        $list27 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("argN")), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND"), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), SubLObjectFactory.makeKeyword("COST"), SubLObjectFactory.makeSymbol("REMOVAL-ARG-N-ITERATE-COST"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("EXPAND"), SubLObjectFactory.makeSymbol("REMOVAL-ARG-N-ITERATE-EXPAND"), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*ARGN-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$argN <not-fully-bound> <not-fully-bound> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$argN ?ARG ?NUM (#$JuvenileFn #$Dog))") });
        $kw28$IGNORE = SubLObjectFactory.makeKeyword("IGNORE");
        $const29$formulaArity = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity"));
        $sym30$_FORMULA_ARITY_DEFINING_MT_ = SubLObjectFactory.makeSymbol("*FORMULA-ARITY-DEFINING-MT*");
        $kw31$REMOVAL_FORMULA_ARITY_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-FORMULA-ARITY-CHECK-POS");
        $list32 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-FORMULA-ARITY-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-HAS-ARITY?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*FORMULA-ARITY-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("CODE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$formulaArity <CycL formula> <integer>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$formulaArity (#$JuvenileFn #$Dog) 1)") });
        $kw33$REMOVAL_FORMULA_ARITY_CHECK_NEG = SubLObjectFactory.makeKeyword("REMOVAL-FORMULA-ARITY-CHECK-NEG");
        $list34 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("NEG"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INVERT-REMOVAL-CHECK-COST"), (SubLObject)SubLObjectFactory.makeSymbol("*DEFAULT-FORMULA-ARITY-CHECK-COST*")), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("INVERT-BOOLEAN-ANSWER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-HAS-ARITY?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY"))))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*FORMULA-ARITY-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("CODE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$not (#$formulaArity <CycL formula> <integer>))"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$not (#$formulaArity (#$JuvenileFn #$Dog) 2))") });
        $kw35$REMOVAL_FORMULA_ARITY_UNIFY = SubLObjectFactory.makeKeyword("REMOVAL-FORMULA-ARITY-UNIFY");
        $list36 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P"))), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_formula_arg_n.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARITY"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("formulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*FORMULA-ARITY-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("CODE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$formulaArity <not fully-bound> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$formulaArity ?WHAT (#$JuvenileFn #$Dog))") });
        $const37$quotedFormulaArity = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity"));
        $kw38$REMOVAL_QUOTED_FORMULA_ARITY_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-QUOTED-FORMULA-ARITY-CHECK-POS");
        $list39 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P"))), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-FORMULA-ARITY-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-HAS-ARITY?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*FORMULA-ARITY-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("CODE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$quotedFormulaArity (#$Quote <CycL formula>) <integer>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$quotedFormulaArity (#$Quote (#$JuvenileFn #$Dog)) 1)") });
        $kw40$REMOVAL_QUOTED_FORMULA_ARITY_CHECK_NEG = SubLObjectFactory.makeKeyword("REMOVAL-QUOTED-FORMULA-ARITY-CHECK-NEG");
        $list41 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("NEG"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P"))), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INVERT-REMOVAL-CHECK-COST"), (SubLObject)SubLObjectFactory.makeSymbol("*DEFAULT-FORMULA-ARITY-CHECK-COST*")), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("INVERT-BOOLEAN-ANSWER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-HAS-ARITY?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("ARITY"))))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*FORMULA-ARITY-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("CODE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$not (#$quotedFormulaArity (#$Quote <CycL formula>) <integer>))"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$not (#$quotedFormulaArity (#$Quote (#$JuvenileFn #$Dog)) 2))") });
        $kw42$REMOVAL_QUOTED_FORMULA_ARITY_UNIFY = SubLObjectFactory.makeKeyword("REMOVAL-QUOTED-FORMULA-ARITY-UNIFY");
        $list43 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AND"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")))), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_formula_arg_n.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARITY"), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedFormulaArity")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Quote")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*FORMULA-ARITY-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("CODE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$quotedFormulaArity <not fully-bound> <CycL formula>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$quotedFormulaArity ?WHAT (#$JuvenileFn #$Dog))") });
        $const44$cycLForSubL = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL"));
        $sym45$_CYCL_FOR_SUBL_DEFINING_MT_ = SubLObjectFactory.makeSymbol("*CYCL-FOR-SUBL-DEFINING-MT*");
        $list46 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SubLQuoteFn")), (SubLObject)SubLObjectFactory.makeSymbol("?SUBL")), (SubLObject)SubLObjectFactory.makeSymbol("?SUBL"));
        $kw47$REMOVAL_CYCL_FOR_SUBL_CHECK_POS = SubLObjectFactory.makeKeyword("REMOVAL-CYCL-FOR-SUBL-CHECK-POS");
        $list48 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), SubLObjectFactory.makeSymbol("*DEFAULT-CYCL-FOR-SUBL-CHECK-COST*"), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TERM"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-CYCL-FOR-SUBL-CHECK"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*CYCL-FOR-SUBL-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-CYCL-FOR-SUBL-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$cycLForSubL (#$SubLQuoteFn <SubL expression>) <fully-bound>)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$cycLForSubL #$Dog (#$cycLForSubL #$Dog))") });
        $kw49$REMOVAL_CYCL_FOR_SUBL_CHECK_NEG = SubLObjectFactory.makeKeyword("REMOVAL-CYCL-FOR-SUBL-CHECK-NEG");
        $list50 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("NEG"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-CYCL-FORMULA-P")), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("CHECK"), removal_modules_formula_arg_n.T, SubLObjectFactory.makeKeyword("COST-EXPRESSION"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INVERT-REMOVAL-CHECK-COST"), (SubLObject)SubLObjectFactory.makeSymbol("*DEFAULT-CYCL-FOR-SUBL-CHECK-COST*")), SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-CHECK-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TERM"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("INVERT-BOOLEAN-ANSWER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("REMOVAL-CYCL-FOR-SUBL-CHECK"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA"))))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*CYCL-FOR-SUBL-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-CYCL-FOR-SUBL-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$not (#$cycLForSubL (#$SubLQuoteFn <SubL expression>) <fully-bound>))"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$not (#$cycLForSubL (#$SubLQuoteFn #$Dog) #$Cat))") });
        $kw51$REMOVAL_CYCL_FOR_SUBL_UNIFY_ARG1 = SubLObjectFactory.makeKeyword("REMOVAL-CYCL-FOR-SUBL-UNIFY-ARG1");
        $list52 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)SubLObjectFactory.makeKeyword("VARIABLE"), (SubLObject)SubLObjectFactory.makeKeyword("FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_formula_arg_n.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL")))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("MAKE-UNARY-FORMULA"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SubLQuoteFn")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL"))))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL"))), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*CYCL-FOR-SUBL-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-CYCL-FOR-SUBL-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$cycLForSubL ?CYCL <SubL Formula>"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$cycLForSubL ?CYCL :FOO)") });
        $kw53$REMOVAL_CYCL_FOR_SUBL_UNIFY_ARG2 = SubLObjectFactory.makeKeyword("REMOVAL-CYCL-FOR-SUBL-UNIFY-ARG2");
        $list54 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeKeyword("SENSE"), SubLObjectFactory.makeKeyword("POS"), SubLObjectFactory.makeKeyword("PREDICATE"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), SubLObjectFactory.makeKeyword("REQUIRED-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL-QUOTE-FN-SYNTAX-P")), (SubLObject)SubLObjectFactory.makeKeyword("NOT-FULLY-BOUND")), SubLObjectFactory.makeKeyword("COST-EXPRESSION"), removal_modules_formula_arg_n.ONE_INTEGER, SubLObjectFactory.makeKeyword("COMPLETENESS"), SubLObjectFactory.makeKeyword("COMPLETE"), SubLObjectFactory.makeKeyword("INPUT-EXTRACT-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEMPLATE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL-QUOTE-FN-FORMULA")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL-QUOTE-FN-FORMULA")))), SubLObjectFactory.makeKeyword("OUTPUT-GENERATE-PATTERN"), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TUPLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBL-QUOTE-FN-FORMULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NULL-ANSWER-TO-SINGLETON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CALL"), (SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL-QUOTE-FN-FORMULA")), (SubLObject)removal_modules_formula_arg_n.ONE_INTEGER))), SubLObjectFactory.makeKeyword("OUTPUT-CONSTRUCT-PATTERN"), ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("cycLForSubL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VALUE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBL-QUOTE-FN-FORMULA")), (SubLObject)SubLObjectFactory.makeKeyword("INPUT")), SubLObjectFactory.makeKeyword("SUPPORT-MT"), SubLObjectFactory.makeSymbol("*CYCL-FOR-SUBL-DEFINING-MT*"), SubLObjectFactory.makeKeyword("SUPPORT-MODULE"), SubLObjectFactory.makeKeyword("OPAQUE"), SubLObjectFactory.makeKeyword("SUPPORT-STRENGTH"), SubLObjectFactory.makeKeyword("MONOTONIC"), SubLObjectFactory.makeKeyword("SUPPORT"), SubLObjectFactory.makeSymbol("MAKE-CYCL-FOR-SUBL-SUPPORTS"), SubLObjectFactory.makeKeyword("DOCUMENTATION"), SubLObjectFactory.makeString("(#$cycLForSubL (#$SubLQuoteFn <SubL formula>) ?SUBL)"), SubLObjectFactory.makeKeyword("EXAMPLE"), SubLObjectFactory.makeString("(#$cycLForSubL (#$SubLQuoteFn :FOO) ?FOO)") });
    }
}

/*

	Total time: 278 ms
	
*/