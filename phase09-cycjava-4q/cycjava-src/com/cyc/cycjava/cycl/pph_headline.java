package com.cyc.cycjava.cycl;

import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.cycjava.cycl.cyc_testing.generic_testing;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Threads;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class pph_headline extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.pph_headline";
    public static final String myFingerPrint = "bc36e815edd9d5b9cc8af10c242728857b2a66051613ce36d194a2e38b0426d3";
    private static final SubLObject $const0$EnglishHeadlineParaphraseMt;
    private static final SubLSymbol $kw1$NONE;
    private static final SubLString $str2$Finished_generating__S;
    private static final SubLString $str3$Removed_extraneous_determiners___;
    private static final SubLString $str4$Removed_extraneous_copulas____S;
    private static final SubLString $str5$Tweaked_verb_tense____S;
    private static final SubLSymbol $sym6$_EXIT;
    private static final SubLString $str7$the_;
    private static final SubLString $str8$Updating_string_from__S___to__S;
    private static final SubLString $str9$Complement___S;
    private static final SubLObject $const10$passiveParticiple;
    private static final SubLString $str11$not;
    private static final SubLString $str12$not_;
    private static final SubLString $str13$Removing_copula_from__S;
    private static final SubLString $str14$Not_removing_copula_with_compleme;
    private static final SubLObject $const15$pastTense_Generic;
    private static final SubLList $list16;
    private static final SubLObject $const17$Verb;
    private static final SubLString $str18$Converting__S_to_present_tense;
    private static final SubLObject $const19$futureTense_Generic;
    private static final SubLList $list20;
    private static final SubLString $str21$to_;
    private static final SubLString $str22$Converting__S_to_infinitive;
    private static final SubLObject $const23$Indefinite_NLAttr;
    private static final SubLObject $const24$Definite_NLAttr;
    private static final SubLObject $const25$Some_NLAttr;
    private static final SubLObject $const26$Every_NLAttr;
    private static final SubLString $str27$_tmp_proof_conclusions_cfasl;
    private static final SubLSymbol $sym28$HYPOTHETICAL_TERM_P;
    private static final SubLSymbol $sym29$INVALID_FORT_;
    private static final SubLString $str30$_________________________________;
    private static final SubLInteger $int31$150;
    private static final SubLString $str32$_define_test_case_table_generate_;
    private static final SubLString $str33$_____S_____S___;
    private static final SubLString $str34$_;
    private static final SubLSymbol $sym35$GENERATE_ENGLISH_HEADLINE_STRING;
    private static final SubLSymbol $kw36$TEST;
    private static final SubLSymbol $kw37$OWNER;
    private static final SubLSymbol $kw38$CLASSES;
    private static final SubLList $list39;
    private static final SubLSymbol $kw40$KB;
    private static final SubLSymbol $kw41$FULL;
    private static final SubLSymbol $kw42$WORKING_;
    private static final SubLObject $list43;
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 757L)
    public static SubLObject generate_english_headline_string(final SubLObject sentence, SubLObject domain_mt, SubLObject language_mt) {
        if (domain_mt == pph_headline.UNPROVIDED) {
            domain_mt = pph_vars.$pph_domain_mt$.getDynamicValue();
        }
        if (language_mt == pph_headline.UNPROVIDED) {
            language_mt = pph_headline.$const0$EnglishHeadlineParaphraseMt;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$new_pph_phrases$.currentBinding(thread);
        final SubLObject _prev_bind_2 = pph_macros.$new_pph_phrase_count$.currentBinding(thread);
        final SubLObject _prev_bind_3 = pph_macros.$destroy_new_pph_phrasesP$.currentBinding(thread);
        try {
            pph_macros.$new_pph_phrases$.bind(stacks.create_stack(), thread);
            pph_macros.$new_pph_phrase_count$.bind(pph_macros.get_new_pph_phrase_count(), thread);
            pph_macros.$destroy_new_pph_phrasesP$.bind((SubLObject)pph_headline.T, thread);
            try {
                final SubLObject _prev_bind_0_$1 = pph_vars.$constant_link_function$.currentBinding(thread);
                final SubLObject _prev_bind_1_$2 = pph_vars.$html_generation_term_id_function$.currentBinding(thread);
                final SubLObject _prev_bind_2_$3 = pph_vars.$pph_use_bulleted_listsP$.currentBinding(thread);
                final SubLObject _prev_bind_4 = pph_vars.$pph_significant_digits_cutoff$.currentBinding(thread);
                try {
                    pph_vars.$constant_link_function$.bind((SubLObject)pph_headline.$kw1$NONE, thread);
                    pph_vars.$html_generation_term_id_function$.bind((SubLObject)pph_headline.NIL, thread);
                    pph_vars.$pph_use_bulleted_listsP$.bind((SubLObject)pph_headline.NIL, thread);
                    pph_vars.$pph_significant_digits_cutoff$.bind((SubLObject)pph_headline.THREE_INTEGER, thread);
                    final SubLObject v_pph_phrase = pph_phrase.new_pph_phrase_for_cycl(sentence, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                    SubLObject string = (SubLObject)pph_headline.NIL;
                    SubLObject result_agr_pred = (SubLObject)pph_headline.NIL;
                    SubLObject justification = (SubLObject)pph_headline.NIL;
                    SubLObject output_list = (SubLObject)pph_headline.NIL;
                    SubLObject demerits = (SubLObject)pph_headline.NIL;
                    final SubLObject _prev_bind_0_$2 = pph_vars.$generation_level$.currentBinding(thread);
                    try {
                        pph_vars.$generation_level$.bind(number_utilities.f_1X(pph_vars.$generation_level$.getDynamicValue(thread)), thread);
                        pph_main.pph_phrase_generate(v_pph_phrase, pph_vars.maybe_temporally_qualify_pph_language_mt(language_mt), domain_mt, (SubLObject)pph_headline.UNPROVIDED);
                    }
                    finally {
                        pph_vars.$generation_level$.rebind(_prev_bind_0_$2, thread);
                    }
                    if (pph_headline.NIL != pph_phrase.pph_phrase_doneP(v_pph_phrase)) {
                        if (pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                            format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str2$Finished_generating__S, v_pph_phrase, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                        }
                        if (pph_headline.NIL != pph_headline_remove_extraneous_determiners(v_pph_phrase) && pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                            format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str3$Removed_extraneous_determiners___, v_pph_phrase, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                        }
                        if (pph_headline.NIL != pph_headline_remove_extraneous_copulas(v_pph_phrase) && pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                            format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str4$Removed_extraneous_copulas____S, v_pph_phrase, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                        }
                        if (pph_headline.NIL != pph_headline_tweak_head_verb_tense(v_pph_phrase) && pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                            format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str5$Tweaked_verb_tense____S, v_pph_phrase, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                        }
                        string = apply_headline_capitalization(pph_string.pph_string_if_non_null_to_output_format(pph_phrase.pph_phrase_string(v_pph_phrase, (SubLObject)pph_headline.T), (SubLObject)pph_headline.UNPROVIDED));
                        result_agr_pred = pph_phrase.pph_phrase_agr_pred(v_pph_phrase);
                        justification = pph_phrase.pph_phrase_justification(v_pph_phrase);
                        output_list = pph_phrase.pph_phrase_output_list(v_pph_phrase);
                        demerits = pph_phrase.pph_phrase_demerits(v_pph_phrase);
                    }
                    return Values.values(string, result_agr_pred, justification, output_list, demerits);
                }
                finally {
                    pph_vars.$pph_significant_digits_cutoff$.rebind(_prev_bind_4, thread);
                    pph_vars.$pph_use_bulleted_listsP$.rebind(_prev_bind_2_$3, thread);
                    pph_vars.$html_generation_term_id_function$.rebind(_prev_bind_1_$2, thread);
                    pph_vars.$constant_link_function$.rebind(_prev_bind_0_$1, thread);
                }
            }
            finally {
                final SubLObject _prev_bind_0_$3 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)pph_headline.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    pph_macros.destroy_new_pph_phrases();
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$3, thread);
                }
            }
        }
        finally {
            pph_macros.$destroy_new_pph_phrasesP$.rebind(_prev_bind_3, thread);
            pph_macros.$new_pph_phrase_count$.rebind(_prev_bind_2, thread);
            pph_macros.$new_pph_phrases$.rebind(_prev_bind_0, thread);
        }
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 2348L)
    public static SubLObject pph_headline_remove_extraneous_determiners(final SubLObject v_pph_phrase) {
        SubLObject changedP = (SubLObject)pph_headline.NIL;
        if (pph_headline.NIL != pph_phrase.pph_phrase_npP(v_pph_phrase) && pph_headline.NIL == pph_phrase_resolution.pph_copular_complementP(v_pph_phrase) && pph_headline.TWO_INTEGER.eql(pph_phrase.pph_phrase_dtr_count(v_pph_phrase))) {
            final SubLObject detp = pph_phrase.pph_phrase_nth_dtr(v_pph_phrase, (SubLObject)pph_headline.ZERO_INTEGER);
            if (pph_headline.NIL != pph_phrase_resolution.pph_phrase_detpP(detp) && pph_headline.NIL != pph_detp_cycl_unnewsworthyP(pph_phrase.pph_phrase_cycl(detp, (SubLObject)pph_headline.UNPROVIDED))) {
                pph_phrase.pph_phrase_remove_dtr(v_pph_phrase, detp);
                changedP = (SubLObject)pph_headline.T;
            }
        }
        else if (pph_headline.NIL != pph_utilities.pph_name_string_predP(pph_phrase.pph_phrase_agr_pred(v_pph_phrase)) && pph_headline.NIL != string_utilities.starts_with_by_test(pph_phrase.pph_phrase_string(v_pph_phrase, (SubLObject)pph_headline.T), (SubLObject)pph_headline.$str7$the_, Symbols.symbol_function((SubLObject)pph_headline.EQUALP))) {
            pph_phrase.pph_phrase_set_string(v_pph_phrase, string_utilities.pre_remove(pph_phrase.pph_phrase_string(v_pph_phrase, (SubLObject)pph_headline.T), (SubLObject)pph_headline.$str7$the_, Symbols.symbol_function((SubLObject)pph_headline.EQUALP)));
            changedP = (SubLObject)pph_headline.T;
        }
        SubLObject dtr_num = (SubLObject)pph_headline.ZERO_INTEGER;
        if (document.sign_constituents(v_pph_phrase).isVector()) {
            final SubLObject vector_var = document.sign_constituents(v_pph_phrase);
            final SubLObject backwardP_var = (SubLObject)pph_headline.NIL;
            SubLObject length;
            SubLObject v_iteration;
            SubLObject element_num;
            SubLObject dtr;
            for (length = Sequences.length(vector_var), v_iteration = (SubLObject)pph_headline.NIL, v_iteration = (SubLObject)pph_headline.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)pph_headline.ONE_INTEGER)) {
                element_num = ((pph_headline.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)pph_headline.ONE_INTEGER) : v_iteration);
                dtr = Vectors.aref(vector_var, element_num);
                if (pph_headline.NIL != pph_headline_remove_extraneous_determiners(dtr)) {
                    changedP = (SubLObject)pph_headline.T;
                }
                dtr_num = Numbers.add(dtr_num, (SubLObject)pph_headline.ONE_INTEGER);
            }
        }
        if (pph_headline.NIL != changedP && pph_headline.NIL != pph_phrase.pph_phrase_has_dtrsP(v_pph_phrase)) {
            pph_finished_phrase_update_from_dtrs(v_pph_phrase);
        }
        return changedP;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 3471L)
    public static SubLObject pph_finished_phrase_update_from_dtrs(final SubLObject v_pph_phrase) {
        if (pph_headline.NIL == pph_phrase.pph_phrase_has_dtrsP(v_pph_phrase)) {
            return (SubLObject)pph_headline.NIL;
        }
        final SubLObject old_string = pph_phrase.pph_phrase_string(v_pph_phrase, (SubLObject)pph_headline.UNPROVIDED);
        pph_phrase_resolution.pph_phrase_set_output_list_from_finished_dtrs(v_pph_phrase);
        final SubLObject new_string = pph_phrase.pph_phrase_output_list_string(pph_phrase.pph_phrase_output_list(v_pph_phrase), (SubLObject)pph_headline.UNPROVIDED);
        if (!old_string.equal(new_string)) {
            if (pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str8$Updating_string_from__S___to__S, pph_string.pph_string_to_utf8(old_string), pph_string.pph_string_to_utf8(new_string), (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
            }
            return (SubLObject)pph_headline.T;
        }
        return (SubLObject)pph_headline.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 3994L)
    public static SubLObject pph_headline_remove_extraneous_copulas(final SubLObject v_pph_phrase) {
        if (pph_headline.NIL != pph_phrase.pph_copula_phraseP(pph_phrase.pph_phrase_head_dtr(v_pph_phrase))) {
            final SubLObject head_dtr_num = pph_phrase.pph_phrase_head_dtr_num(v_pph_phrase);
            final SubLObject comp_dtr_num = number_utilities.f_1X(head_dtr_num);
            final SubLObject complement = (SubLObject)(pph_phrase.pph_phrase_dtr_count(v_pph_phrase).numG(comp_dtr_num) ? pph_phrase.pph_phrase_nth_dtr(v_pph_phrase, comp_dtr_num) : pph_headline.NIL);
            if (pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str9$Complement___S, complement, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
            }
            if (pph_headline.NIL != pph_phrase.pph_det_nbarP(complement) || pph_headline.NIL != pph_utilities.pph_genl_pos_predP(pph_phrase.pph_phrase_agr_pred(complement), pph_headline.$const10$passiveParticiple, (SubLObject)pph_headline.UNPROVIDED) || pph_headline.NIL != pph_phrase.pph_phrase_ppP(complement) || pph_headline.NIL != pph_phrase.pph_phrase_adjpP(complement) || pph_headline.NIL != pph_phrase.pph_phrase_adjP(complement) || pph_phrase.pph_phrase_string(complement, (SubLObject)pph_headline.NIL).equal((SubLObject)pph_headline.$str11$not) || pph_headline.NIL != string_utilities.starts_with(pph_phrase.pph_phrase_string(complement, (SubLObject)pph_headline.NIL), (SubLObject)pph_headline.$str12$not_)) {
                if (pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                    format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str13$Removing_copula_from__S, v_pph_phrase, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                }
                pph_phrase.pph_phrase_remove_dtr(v_pph_phrase, pph_phrase.pph_phrase_head_dtr(v_pph_phrase));
                pph_phrase.pph_phrase_set_head_dtr_num(v_pph_phrase, (SubLObject)pph_headline.NIL);
                pph_finished_phrase_update_from_dtrs(v_pph_phrase);
                return (SubLObject)pph_headline.T;
            }
            if (pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str14$Not_removing_copula_with_compleme, complement, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
            }
        }
        if (pph_headline.NIL != pph_phrase.pph_phrase_has_dtrsP(v_pph_phrase) && pph_headline.NIL != pph_phrase.pph_phrase_head_dtr(v_pph_phrase) && pph_headline.NIL != pph_phrase.pph_phrase_sP(pph_phrase.pph_phrase_head_dtr(v_pph_phrase)) && pph_headline.NIL != pph_headline_remove_extraneous_copulas(pph_phrase.pph_phrase_head_dtr(v_pph_phrase))) {
            pph_finished_phrase_update_from_dtrs(v_pph_phrase);
            return (SubLObject)pph_headline.T;
        }
        return (SubLObject)pph_headline.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 5349L)
    public static SubLObject pph_headline_tweak_head_verb_tense(final SubLObject v_pph_phrase) {
        final SubLObject head_dtr = pph_phrase.pph_phrase_lexical_head_dtr(v_pph_phrase);
        final SubLObject head_wu = (SubLObject)((pph_headline.NIL != head_dtr) ? pph_phrase.pph_phrase_wu(head_dtr, (SubLObject)pph_headline.UNPROVIDED) : pph_headline.NIL);
        if (pph_headline.NIL != head_wu) {
            if (pph_headline.NIL != pph_utilities.pph_genl_pos_predP(pph_phrase.pph_phrase_agr_pred(head_dtr), pph_headline.$const15$pastTense_Generic, (SubLObject)pph_headline.UNPROVIDED)) {
                final SubLObject subj = pph_phrase_resolution.pph_phrase_agr_target_phrase(head_dtr, v_pph_phrase);
                final SubLObject new_pred = (SubLObject)((pph_headline.NIL != subj) ? pph_phrase_resolution.verb_pred_for_subject(subj, (SubLObject)pph_headline.$list16) : pph_headline.NIL);
                final SubLObject new_string = (SubLObject)((pph_headline.NIL != new_pred) ? pph_methods_lexicon.pph_first_string_of_wordXspeech_part(head_wu, pph_headline.$const17$Verb, (SubLObject)ConsesLow.list(new_pred), (SubLObject)pph_headline.UNPROVIDED) : pph_headline.NIL);
                if (pph_headline.NIL != new_string) {
                    if (pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                        format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str18$Converting__S_to_present_tense, head_dtr, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                    }
                    pph_phrase.pph_phrase_set_string(head_dtr, new_string);
                    pph_finished_phrase_update_from_dtrs(v_pph_phrase);
                    return (SubLObject)pph_headline.T;
                }
            }
            else if (pph_headline.NIL != pph_utilities.pph_genl_pos_predP(pph_phrase.pph_phrase_agr_pred(head_dtr), pph_headline.$const19$futureTense_Generic, (SubLObject)pph_headline.UNPROVIDED)) {
                final SubLObject subj = pph_phrase_resolution.pph_phrase_agr_target_phrase(head_dtr, (SubLObject)pph_headline.UNPROVIDED);
                final SubLObject new_pred = (SubLObject)((pph_headline.NIL != subj) ? pph_phrase_resolution.verb_pred_for_subject(subj, (SubLObject)pph_headline.$list20) : pph_headline.NIL);
                final SubLObject inf = pph_methods_lexicon.pph_first_string_of_wordXspeech_part(head_wu, pph_headline.$const17$Verb, (SubLObject)ConsesLow.list(new_pred), (SubLObject)pph_headline.UNPROVIDED);
                final SubLObject new_string2 = (SubLObject)((pph_headline.NIL != inf) ? Sequences.cconcatenate((SubLObject)pph_headline.$str21$to_, inf) : pph_headline.NIL);
                if (pph_headline.NIL != new_string2) {
                    if (pph_headline.NIL != pph_error.pph_trace_level_exceeds_minimumP((SubLObject)pph_headline.ONE_INTEGER)) {
                        format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str22$Converting__S_to_infinitive, head_dtr, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                    }
                    pph_phrase.pph_phrase_set_string(head_dtr, new_string2);
                    pph_finished_phrase_update_from_dtrs(v_pph_phrase);
                    return (SubLObject)pph_headline.T;
                }
            }
        }
        return (SubLObject)pph_headline.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 6676L)
    public static SubLObject pph_detp_cycl_unnewsworthyP(final SubLObject det_cycl) {
        if (det_cycl.eql(pph_headline.$const23$Indefinite_NLAttr) || det_cycl.eql(pph_headline.$const24$Definite_NLAttr) || det_cycl.eql(pph_headline.$const25$Some_NLAttr) || det_cycl.eql(pph_headline.$const26$Every_NLAttr)) {
            return (SubLObject)pph_headline.T;
        }
        return (SubLObject)pph_headline.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 6871L)
    public static SubLObject apply_headline_capitalization(final SubLObject string) {
        return string_utilities.char_subst((SubLObject)Characters.CHAR_quote, (SubLObject)Characters.CHAR_quotation, string_utilities.capitalize_smart(string));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 6983L)
    public static SubLObject print_headlines(SubLObject proof_conclusions) {
        if (proof_conclusions == pph_headline.UNPROVIDED) {
            proof_conclusions = cfasl_utilities.cfasl_load((SubLObject)pph_headline.$str27$_tmp_proof_conclusions_cfasl);
        }
        SubLObject cdolist_list_var = proof_conclusions;
        SubLObject proof_conclusion = (SubLObject)pph_headline.NIL;
        proof_conclusion = cdolist_list_var.first();
        while (pph_headline.NIL != cdolist_list_var) {
            if (pph_headline.NIL == cycl_utilities.expression_find_if((SubLObject)pph_headline.$sym28$HYPOTHETICAL_TERM_P, proof_conclusion, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED) && pph_headline.NIL == cycl_utilities.expression_find_if((SubLObject)pph_headline.$sym29$INVALID_FORT_, proof_conclusion, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED)) {
                final SubLObject content = proof_view_news.proof_view_headline_content(proof_conclusion, (SubLObject)pph_headline.UNPROVIDED);
                final SubLObject headline = (SubLObject)((pph_headline.NIL != content) ? unicode_strings.html_escaped_to_utf8_string(generate_english_headline_string(content, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED)) : pph_headline.NIL);
                if (pph_headline.NIL != headline) {
                    format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str30$_________________________________, proof_conclusion, headline, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                }
            }
            cdolist_list_var = cdolist_list_var.rest();
            proof_conclusion = cdolist_list_var.first();
        }
        return (SubLObject)pph_headline.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/pph-headline.lisp", position = 7686L)
    public static SubLObject print_headline_test_case_table(SubLObject proof_conclusions) {
        if (proof_conclusions == pph_headline.UNPROVIDED) {
            proof_conclusions = cfasl_utilities.cfasl_load((SubLObject)pph_headline.$str27$_tmp_proof_conclusions_cfasl);
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = Errors.$ignore_warnsP$.currentBinding(thread);
        try {
            Errors.$ignore_warnsP$.bind((SubLObject)pph_headline.T, thread);
            final SubLObject max_length = (SubLObject)pph_headline.$int31$150;
            format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str32$_define_test_case_table_generate_, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
            SubLObject cdolist_list_var = proof_conclusions;
            SubLObject proof_conclusion = (SubLObject)pph_headline.NIL;
            proof_conclusion = cdolist_list_var.first();
            while (pph_headline.NIL != cdolist_list_var) {
                if (pph_headline.NIL == assertions_high.invalid_assertionP(proof_conclusion, (SubLObject)pph_headline.UNPROVIDED) && pph_headline.NIL == cycl_utilities.expression_find_if((SubLObject)pph_headline.$sym28$HYPOTHETICAL_TERM_P, proof_conclusion, (SubLObject)pph_headline.T, (SubLObject)pph_headline.UNPROVIDED) && pph_headline.NIL == cycl_utilities.expression_find_if((SubLObject)pph_headline.$sym29$INVALID_FORT_, proof_conclusion, (SubLObject)pph_headline.T, (SubLObject)pph_headline.UNPROVIDED)) {
                    final SubLObject _prev_bind_0_$6 = pph_vars.$pph_demerit_cutoff$.currentBinding(thread);
                    try {
                        pph_vars.$pph_demerit_cutoff$.bind((SubLObject)pph_headline.TWO_INTEGER, thread);
                        final SubLObject content = proof_view_news.proof_view_headline_content(proof_conclusion, (SubLObject)pph_headline.UNPROVIDED);
                        final SubLObject headline = (SubLObject)((pph_headline.NIL != content) ? generate_english_headline_string(content, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED) : pph_headline.NIL);
                        if (pph_headline.NIL != headline && pph_headline.NIL != list_utilities.lengthLE(headline, max_length, (SubLObject)pph_headline.UNPROVIDED)) {
                            format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str33$_____S_____S___, cycl_utilities.hl_to_el(content), headline, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
                        }
                    }
                    finally {
                        pph_vars.$pph_demerit_cutoff$.rebind(_prev_bind_0_$6, thread);
                    }
                }
                cdolist_list_var = cdolist_list_var.rest();
                proof_conclusion = cdolist_list_var.first();
            }
            format_nil.force_format((SubLObject)pph_headline.T, (SubLObject)pph_headline.$str34$_, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED, (SubLObject)pph_headline.UNPROVIDED);
        }
        finally {
            Errors.$ignore_warnsP$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)pph_headline.NIL;
    }
    
    public static SubLObject declare_pph_headline_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "generate_english_headline_string", "GENERATE-ENGLISH-HEADLINE-STRING", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "pph_headline_remove_extraneous_determiners", "PPH-HEADLINE-REMOVE-EXTRANEOUS-DETERMINERS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "pph_finished_phrase_update_from_dtrs", "PPH-FINISHED-PHRASE-UPDATE-FROM-DTRS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "pph_headline_remove_extraneous_copulas", "PPH-HEADLINE-REMOVE-EXTRANEOUS-COPULAS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "pph_headline_tweak_head_verb_tense", "PPH-HEADLINE-TWEAK-HEAD-VERB-TENSE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "pph_detp_cycl_unnewsworthyP", "PPH-DETP-CYCL-UNNEWSWORTHY?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "apply_headline_capitalization", "APPLY-HEADLINE-CAPITALIZATION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "print_headlines", "PRINT-HEADLINES", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.pph_headline", "print_headline_test_case_table", "PRINT-HEADLINE-TEST-CASE-TABLE", 0, 1, false);
        return (SubLObject)pph_headline.NIL;
    }
    
    public static SubLObject init_pph_headline_file() {
        return (SubLObject)pph_headline.NIL;
    }
    
    public static SubLObject setup_pph_headline_file() {
        generic_testing.define_test_case_table_int((SubLObject)pph_headline.$sym35$GENERATE_ENGLISH_HEADLINE_STRING, (SubLObject)ConsesLow.list(new SubLObject[] { pph_headline.$kw36$TEST, Symbols.symbol_function((SubLObject)pph_headline.EQUAL), pph_headline.$kw37$OWNER, pph_headline.NIL, pph_headline.$kw38$CLASSES, pph_headline.$list39, pph_headline.$kw40$KB, pph_headline.$kw41$FULL, pph_headline.$kw42$WORKING_, pph_headline.T }), pph_headline.$list43);
        return (SubLObject)pph_headline.NIL;
    }
    
    private static SubLObject _constant_43_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TypeCapableFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("anatomicallyCapableOf"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SparklingEnopeSquid")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("WaveEmissionFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("VisibleLight"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("doneBy")))), (SubLObject)SubLObjectFactory.makeString("Firefly Squid Anatomically Capable of Glowing")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("causes-SubSitTypeSubSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SCerevisiaeMatingScript")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SecretionOfMatingFactorAlpha")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MovementOfATypeCellTowardAlphaTypeCell")))), (SubLObject)SubLObjectFactory.makeString("In Mating of S. Cerevisiae, Secretion of Mating Factor &#x3B1; Causes Moving toward an &#x3B1; Cell")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ThomasPynchon")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ArticulateOrEloquent")))), (SubLObject)SubLObjectFactory.makeString("Thomas Pynchon Fluent")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("knowsAbout")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("LudwigVanBeethoven")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfParisFrance"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("False")))), (SubLObject)SubLObjectFactory.makeString("Ludwig Van Beethoven Does Not Know Something about Paris, France")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("goals")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("RepublicanParty-US")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("governmentType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PalestinianWestBankAndGaza")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DemocraticGeopoliticalEntity"))))), (SubLObject)SubLObjectFactory.makeString("Republican Party Has the Goal That [West Bank and Gaza Is in Democracy]")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("eventOccursAt")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack-March-17-1992-Buenos-Aires")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfBuenosAiresArgentina")))), (SubLObject)SubLObjectFactory.makeString("March 17, 1992 Car Bombing of the Israeli Embassy in Buenos Aires, Argentina by the Lebanese Hizballah Happened in Buenos Aires, Argentina")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllExists")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("objectRemoved")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Circumcision")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AnimalBodyPart")))), (SubLObject)SubLObjectFactory.makeString("Body Parts Are Removed during Circumcisions")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("disjointWith")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("NoddingOff")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Nodding-Gesture")))), (SubLObject)SubLObjectFactory.makeString("No Noddings Noddings")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("typeBehaviorCapable-PerformedBy")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Comedian")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("JokeTelling")))), (SubLObject)SubLObjectFactory.makeString("Instances of Comedians Are Typically Capable of Performing Told Jokes")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("typeIngredientTypes")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Pizza")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TomatoBasedSauce")))), (SubLObject)SubLObjectFactory.makeString("Pizza Includes Tomato Sauce")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("birthDate")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("NatalieCurtis")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DayFn")), (SubLObject)pph_headline.EIGHT_INTEGER, (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MonthFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("December")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(2003)))))), (SubLObject)SubLObjectFactory.makeString("Natalie Curtis Born on December 8, 2003")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EscherichiaColi")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BiologicalAgentType")))), (SubLObject)SubLObjectFactory.makeString("E. Coli a Biological Agent")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("GlycogenBreakdown-CellularSignalingScript")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ActivationOfEnzymeTypeFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PhosphorylaseKinaseMolecule"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PhosphorylaseKinaseActivation-GlycogenBreakdownTransductionPathway")))), (SubLObject)SubLObjectFactory.makeString("Activation of Phosphorylase Kinase Required for Phosphorylase Kinase Activation to Take Place in Cellular Signaling That Results in Glycogen Breakdown")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("schooling")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("GeorgeWashington")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("WestPoint-EducationalOrganization")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Enrolled")))), (SubLObject)SubLObjectFactory.makeString("George Washington Is Enrolled at United States Military Academy")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("doesBusinessWith")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Iran")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TranspekIndustryLtd")))), (SubLObject)SubLObjectFactory.makeString("Iran Does Business With Transpek Industry Ltd.")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("not")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("genls")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TwoByFour")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Foldable"))))), (SubLObject)SubLObjectFactory.makeString("Two-by-four Not Type of Foldable Thing")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationExistsInstance")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("objectPaidFor")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Buying")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Love"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("False")))), (SubLObject)SubLObjectFactory.makeString("Love Not Paid for in Buyings")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("supplyThroughAmountDuring")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PlanetEarth")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PetroleumProduct")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("StraitOfHormuz")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(1995)), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MillionBarrelsPerDay")), (SubLObject)pph_headline.FOURTEEN_INTEGER))), (SubLObject)SubLObjectFactory.makeString("Earth Supply of Petroleum Product via the Strait of Hormuz during 1995 Is 14 Million Barrels per Day")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("symptomOfAilment")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PulmonaryEdema")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PoisoningViaSubstanceFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Phosgene"))))), (SubLObject)SubLObjectFactory.makeString("Pulmonary Edema a Symptom of Phosgene Poisoning")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasMembers")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("LebaneseHizballah")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Harb-3")))), (SubLObject)SubLObjectFactory.makeString("Lebanese Hezbollah Has Hajj Khalil Harb as Member")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("subOrganizations")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AlQaida")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("JihadGroup")))), (SubLObject)SubLObjectFactory.makeString("New Jihad a Suborganization of Al-Qaeda")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllInstance")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("flashPoint")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MustardGas")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DegreeCelsius")), (SubLObject)SubLObjectFactory.makeInteger(104)))), (SubLObject)SubLObjectFactory.makeString("Flash Point of Mustard Gas Is 104&#x2103;")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("not")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("admittedSentence")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("behaviorCapable")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Guyren")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BirthFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Guyren"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("birthParent")))))), (SubLObject)SubLObjectFactory.makeString("'Guyren Howe Is Capable of His Birth' Not a Well-formed Sentence")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sopEventPertainsToObjectOnDate")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("OrionAssetWellStartupCriteriaSpecification")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("WellProduction-Oil")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Well-105P4-Orion")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SecondFn")), (SubLObject)SubLObjectFactory.makeInteger(40), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MinuteFn")), (SubLObject)SubLObjectFactory.makeInteger(40), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HourFn")), (SubLObject)pph_headline.SEVENTEEN_INTEGER, (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DayFn")), (SubLObject)pph_headline.EIGHTEEN_INTEGER, (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MonthFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("April")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(2011))))))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SOPEventFn-NoDepth")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("OrionAssetWellStartupCriteriaSpecification")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("WellProduction-Oil")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Well-105P4-Orion")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SecondFn")), (SubLObject)SubLObjectFactory.makeInteger(40), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MinuteFn")), (SubLObject)SubLObjectFactory.makeInteger(40), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HourFn")), (SubLObject)pph_headline.SEVENTEEN_INTEGER, (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DayFn")), (SubLObject)pph_headline.EIGHTEEN_INTEGER, (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MonthFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("April")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(2011)))))))))), (SubLObject)SubLObjectFactory.makeString("Oil Production in Orion 105-P4")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("objectTypePlayingRoleInTypeHasPartTypeLackingInObjectTypePlayingRoleInEventType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("locusOfCellularProcess-Cell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MitoticSpindle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("locusOfCellularProcess-Cell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InterphaseOfEukaryoticCellCycle")))), (SubLObject)SubLObjectFactory.makeString("Eukaryotic Cells Have Mitotic Spindles during Anaphase but Not during Interphase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("nameString")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Cyc")), (SubLObject)SubLObjectFactory.makeString("Cyc"))), (SubLObject)SubLObjectFactory.makeString("Cyc Is Named 'Cyc'")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TypeCapableFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("behaviorCapable"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Bat-Mammal")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Flying-FlappingWings")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("doneBy")))), (SubLObject)SubLObjectFactory.makeString("Bats Are Capable of Flying by Flapping Wings")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("disjointWith")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Currency")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PlantPart")))), (SubLObject)SubLObjectFactory.makeString("No Currency a Plant Part")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("or")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("conceptuallyRelated")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Dog")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DogFood"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("conceptuallyRelated")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DogFood")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Dog"))))), (SubLObject)SubLObjectFactory.makeString("Either the Concept 'dog' Is Conceptually Related to the Concept 'dog Food' or the Concept 'dog Food' Is Conceptually Related to the Concept 'dog'")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("not")), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TypeCapableFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("behaviorCapable"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Automobile")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("GoingToSleep")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("bodilyDoer"))))), (SubLObject)SubLObjectFactory.makeString("Cars Not Capable of Going to Sleep")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("damages")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack-November-19-1995-Islamabad-Pakistan")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EmbassyBuildingFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Indonesia-TheNation")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfIslamabadPakistan"))))), (SubLObject)SubLObjectFactory.makeString("Islamabad, Pakistan Terrorist Attack on November 19, 1995 Damaged Indonesian Embassy in Islamabad, Pakistan")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("properSubEventTypes")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InterphaseOfEukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Replication-DNA")))), (SubLObject)SubLObjectFactory.makeString("Interphase Involves DNA Replication")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sizeParameterOfObject")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PlanetEarth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MetricTon")), (SubLObject)SubLObjectFactory.makeDouble(6.0E21)))), (SubLObject)SubLObjectFactory.makeString("Mass of Earth Is 6 &#xD7; 10<sup>21</sup> Metric Tons")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("partTypeCount")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EntityOfTypeBetweenStagesFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Mitosis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Prometaphase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Metaphase"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CellNucleus")), (SubLObject)pph_headline.ZERO_INTEGER)), (SubLObject)SubLObjectFactory.makeString("Eukaryotic Cells between the Prometaphase and Metaphase Stages of Mitosis Lack Cell Nuclei")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("positionOfPersonInOrganization")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MarthaStewart")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MarthaStewartLivingOmnimedia")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("OfficerInOrganization")))), (SubLObject)SubLObjectFactory.makeString("Martha Stewart Holds Position of Officer at Martha Stewart Living Omnimedia")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("spokesmanFor")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InstanceNamedFn-Ternary")), (SubLObject)SubLObjectFactory.makeString("Iranian Hezbollah"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Organization")), (SubLObject)SubLObjectFactory.makeString("1a571fca-17bc-41d9-861b-eeda621be215")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Mojtaba-Bigdeli")))), (SubLObject)SubLObjectFactory.makeString("Mojtaba Bigdeli a Spokesperson for Iranian Hezbollah")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("distanceBetween")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AxialNorthPoleOfEarth")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AxialSouthPoleOfEarth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Mile")), (SubLObject)SubLObjectFactory.makeDouble(12506.397610602144)))), (SubLObject)SubLObjectFactory.makeString("Shortest Distance between North Pole and South Pole Is 12,500 Miles")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("performedBy")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HezbollahRocketAttacksOnNorthernIsrael-July132006")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("LebaneseHizballah")))), (SubLObject)SubLObjectFactory.makeString("Lebanese Hezbollah Deliberately Performed the July 13th Rocket Attacks on Northern Israel")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ist")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MtSpace")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CurrentWorldDataCollectorMt-NonHomocentric")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MtTimeWithGranularityDimFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(2000)), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TimePoint")))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("numberOfInhabitants")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PlanetEarth")), (SubLObject)SubLObjectFactory.makeInteger("6233821945")))), (SubLObject)SubLObjectFactory.makeString("Current World Data Collector Knowledge (in 2000): the Population of Earth Is 6,230,000,000")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllExists")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("subSituations")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Event")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Event")))), (SubLObject)SubLObjectFactory.makeString("Events Are Part of Events")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("eventOccursAt")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("WTCTerroristAttackSept2001")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("NewYork-State")))), (SubLObject)SubLObjectFactory.makeString("September 11 Attack on the WTC Happened in New York State")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("equals")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MarkTwain")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SamuelClemens")))), (SubLObject)SubLObjectFactory.makeString("Mark Twain Identical to Samuel Clemens")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("citizens-Birth")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("IrishRepublic")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Ferris")))), (SubLObject)SubLObjectFactory.makeString("Martin Ferris a Citizen by Birth of Ireland")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("perpetrator")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack-January-1-1996-Colombia")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("RevolutionaryArmedForcesOfColombia")))), (SubLObject)SubLObjectFactory.makeString("Revolutionary Armed Forces of Colombia a Perpetrator in Terrorist Attack in Colombia on January 1, 1996")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasBeliefSystems")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("RedArmyFaction")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Communism")))), (SubLObject)SubLObjectFactory.makeString("Red Army Faction Believes in Communism")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("frequentlyInContactWith")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Fazul")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Mohamed-3")))), (SubLObject)SubLObjectFactory.makeString("Fazul Mohammed Is Frequently in Contact With Ali Mohamed")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("partTypeCount")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DuplicatedChromosome")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DNAMolecule")), (SubLObject)pph_headline.TWO_INTEGER)), (SubLObject)SubLObjectFactory.makeString("Duplicated Chromosomes Have 2 DNA Molecules as Parts")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("languageSpoken")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("JenniferSullivan")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EnglishLanguage")))), (SubLObject)SubLObjectFactory.makeString("Jennifer Sullivan Speaks English")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("genls")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Chicken-Meat")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Meat")))), (SubLObject)SubLObjectFactory.makeString("Chicken Meat a Type of Meat")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("primarySupervisor")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Brett")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ABelasco")))), (SubLObject)SubLObjectFactory.makeString("Brett Summers's Primary Supervisor Is Alan Belasco")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Mitosis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ChromosomeLinesUpAtMetaphasePlate")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")))), (SubLObject)SubLObjectFactory.makeString("Lining Up of Chromosome along the Metaphase Plate Required for Anaphase to Take Place in Mitosis")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack-March-31-2003-Bologna-Italy")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("UnsuccessfulAttemptToFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ProperSubcollectionNamedFn-Ternary")), (SubLObject)SubLObjectFactory.makeString("attack the headquarters of IBM in Bologna"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ActionOnObject")), (SubLObject)SubLObjectFactory.makeString("33f6a954-f4ed-11d9-9bea-0002b3a85b0b"))))), (SubLObject)SubLObjectFactory.makeString("Bologna, Italy Terrorist Attack on March 31, 2003 an Unsuccessful Attempt to Perform Attack the Headquarters of IBM in Bologna")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationExistsExists")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ailmentConditionAffects")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TesticularCancer")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AdultFemaleHuman"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("False")))), (SubLObject)SubLObjectFactory.makeString("No Testicular Cancer Afflicts Any Woman")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("preferredNameString")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Abayla")), (SubLObject)SubLObjectFactory.makeString("Hassan Abayla"))), (SubLObject)SubLObjectFactory.makeString("'Hassan Abayla' a Preferred Name for Hassan Abayla")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("laterThan")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Tomorrow-Indexical")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Today-Indexical")))), (SubLObject)SubLObjectFactory.makeString("Tomorrow Later than Today")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("evaluate")), (SubLObject)SubLObjectFactory.makeString("06-21-2004"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DateEncodeStringFn")), (SubLObject)SubLObjectFactory.makeString("MM-DD-YYYY"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DayFn")), (SubLObject)SubLObjectFactory.makeInteger(21), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MonthFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("June")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(2004))))))), (SubLObject)SubLObjectFactory.makeString("The String Encoding June 21, 2004 Using the Template MM-DD-YYYY Is 06-21-2004")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Mitosis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SisterChromatidsCutByEnzyme-Mitosis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Telophase")))), (SubLObject)SubLObjectFactory.makeString("Sister Chromatid Separation Required for Telophase to Take Place in Mitosis")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MCheckpoint")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")))), (SubLObject)SubLObjectFactory.makeString("M Checkpoint Required for Anaphase to Take Place in Eukaryotic Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("residenceOfOrganization")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HarakatUl-Mujahedin")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Pakistan")))), (SubLObject)SubLObjectFactory.makeString("Harakat Ul-Mujahedin's Headquarters in Pakistan")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-al-Zarqawi")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EthnicGroupOfArabs")))), (SubLObject)SubLObjectFactory.makeString("Abu Musab al-Zarqawi an Arab")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllInstance")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("awardSignifiesAchievementInSport")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HeismanAward")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Football-American")))), (SubLObject)SubLObjectFactory.makeString("Heisman Award Signifies Achievement in Football")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("evaluate")), (SubLObject)pph_headline.TWELVE_INTEGER, (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SquareRootFn")), (SubLObject)SubLObjectFactory.makeInteger(144)))), (SubLObject)SubLObjectFactory.makeString("Square Root of 144 = 12")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("equivalentRolePlayersOfType-SitTypeToSubSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InterphaseOfEukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("actors")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SPhase")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SubEventRoleFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("outputsCreated"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DuplicatedChromosome")))), (SubLObject)SubLObjectFactory.makeString("Duplicated Chromosome That Plays Output Created Role in S Phase during Interphase to Play Actor Role in That Interphase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("mostGeneralCoveringOfEventType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InterphaseOfEukaryoticCellCycle")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("G1Phase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SPhase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("G2Phase"))))), (SubLObject)SubLObjectFactory.makeString("The most General Way to Decompose Interphase Is as a Sequence of G&#x2081; Phase, S Phase, and G&#x2082; Phase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hates")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AbuZubaydah")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("GeorgeWBush")))), (SubLObject)SubLObjectFactory.makeString("Abu Zubaydah Hates George W. Bush")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sitTypeHasSubSitTypeUsingOutputFromSubSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InterphaseOfEukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DuplicatedChromosome")))), (SubLObject)SubLObjectFactory.makeString("In Eukaryotic Cell Cycles, Duplicated Chromosomes Created during Interphase Subsequently Used in Anaphase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllExists")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("physicalDecompositions")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticChromosome")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Chromatin")))), (SubLObject)SubLObjectFactory.makeString("Eukaryotic Chromosomes Contain Chromatin")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("disjointWith")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BlackColor")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Swan")))), (SubLObject)SubLObjectFactory.makeString("No Swan Black")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ist")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MtSpace")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CyclistsMt")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MtTimeDimFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Now")))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("not")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasBeliefSystems")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ChrisDeaton")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Christianity")))))), (SubLObject)SubLObjectFactory.makeString("Cyc's Knowledge about Cyclists (at Present): Chris Deaton Does Not Believe in Christianity")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("majorReligions")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("India")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Hinduism")))), (SubLObject)SubLObjectFactory.makeString("Hinduism a Major Religion in India")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("animalInjuredIn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HizballahUSEmbassyAttack-1984")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Person-91")))), (SubLObject)SubLObjectFactory.makeString("Reginald Bartholomew Injured during Beirut Terrorist Attack on September 20, 1984")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("evaluate")), (SubLObject)pph_headline.SEVEN_INTEGER, (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("QuotientFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DifferenceFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TimesFn")), (SubLObject)pph_headline.FIVE_INTEGER, (SubLObject)pph_headline.SIX_INTEGER), (SubLObject)pph_headline.NINE_INTEGER), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PlusFn")), (SubLObject)pph_headline.ONE_INTEGER, (SubLObject)pph_headline.TWO_INTEGER)))), (SubLObject)SubLObjectFactory.makeString("((5 &#xD7; 6) &#x2212; 9) &#xF7; (1 + 2) = 7")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllInstanceInstance-Conditional-CeterisParibus")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasPartTypes")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EarlyMitoticSpindle")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("QuantifiedVersionOfBinaryPredicateFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationInstanceExists")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InverseBinaryPredicateFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PresentTenseVersionFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("locusOfCellularProcess-Cell"))))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Prophase")))), (SubLObject)SubLObjectFactory.makeString("Eukaryotic Cell With Early Mitotic Spindle Undergoing Prophase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("objectTypePlayingRoleInTypeHasPartTypeLackingInObjectTypePlayingRoleInEventType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("locusOfCellularProcess-Cell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("G1Phase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CellNucleus")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("locusOfCellularProcess-Cell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")))), (SubLObject)SubLObjectFactory.makeString("Eukaryotic Cells Have Cell Nuclei during G&#x2081; Phase but Not during Anaphase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("organizationKeyMembers")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("LebaneseHizballah")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Mohtashemi")))), (SubLObject)SubLObjectFactory.makeString("Ali Mohtashemi-Pour a Key Member of Lebanese Hezbollah")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("brothers")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MarkTwain")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SamuelClemens"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("False")))), (SubLObject)SubLObjectFactory.makeString("Mark Twain's Brothers Do Not Include Samuel Clemens")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasLeadershipPosition")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Imhausen-ChemieAG")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("JurgenHippenstiel-Imhausen")))), (SubLObject)SubLObjectFactory.makeString("Jurgen Hippenstiel-Imhausen Has Leadership Responsibilities in Imhausen-Chemie")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("birthDate")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("OsamaBinLaden")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(1957)))), (SubLObject)SubLObjectFactory.makeString("Osama Bin Laden Born in 1957")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("residenceOfOrganization")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DeltaGScientific")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("RepublicOfSouthAfrica")))), (SubLObject)SubLObjectFactory.makeString("Delta G Scientific's Headquarters in South Africa")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("perpetrator")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack-November-8-2003-Riyadh-Saudi-Arabia")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AlQaida")))), (SubLObject)SubLObjectFactory.makeString("Al-Qaeda a Perpetrator in Riyadh, Saudi Arabia Terrorist Attack on November 8, 2003")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("distanceBetween")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerritoryFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfAustinTX"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerritoryFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfLosAngelesCA"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Mile")), (SubLObject)SubLObjectFactory.makeDouble(1241.7095986680342)))), (SubLObject)SubLObjectFactory.makeString("Shortest Distance between Austin and Los Angeles Is 1240 Miles")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MitoticPhaseOfCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SisterChromatidsCutByEnzyme-Mitosis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Telophase")))), (SubLObject)SubLObjectFactory.makeString("Sister Chromatid Separation Required for Telophase to Take Place in M Phase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MitoticPhaseOfCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ChromosomeLinesUpAtMetaphasePlate")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")))), (SubLObject)SubLObjectFactory.makeString("Lining Up of Chromosome along the Metaphase Plate Required for Anaphase to Take Place in M Phase")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("G2Checkpoint")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MitoticPhaseOfCellCycle")))), (SubLObject)SubLObjectFactory.makeString("G2 Checkpoint Required for M Phase to Take Place in Eukaryotic Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("coveringOfEventType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheList")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AnaphaseA")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AnaphaseB"))))), (SubLObject)SubLObjectFactory.makeString("Anaphase a Sequence of Anaphase A, Anaphase B")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("disjointWith")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Stinger")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Scorpion")))), (SubLObject)SubLObjectFactory.makeString("No Stinger a Scorpion")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ratioOfCollectionToDifferentiatedCollection")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Percent")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SubcollectionOfWithRelationToFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Bombing")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("eventOccursAt")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("NorthernIreland"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SubcollectionOfWithRelationToFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("perpetrator")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("IrishRepublicanArmy"))), (SubLObject)SubLObjectFactory.makeDouble(3.1))), (SubLObject)SubLObjectFactory.makeString("Percent of Instances of Northern Ireland Bomb Attacks That Are Also Terrorist Attacks Performed by Irish Republican Army Are 3.1")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("placeOfDeath")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-al-Banna")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfBaghdadIraq")))), (SubLObject)SubLObjectFactory.makeString("Abu Nidal Died in Baghdad, Iraq")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("not")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("admittedSentence")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("biologicalFather")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Cyc")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Lenat")))))), (SubLObject)SubLObjectFactory.makeString("'Doug Lenat Is the Biological Father of Cyc.' Not a Well-formed Sentence")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("symptomOfAilment")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("UpperRespiratoryInfection")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AnthraxInfection")))), (SubLObject)SubLObjectFactory.makeString("Upper Respiratory Infections a Symptom of Anthrax")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Mitosis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MCheckpoint")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Anaphase")))), (SubLObject)SubLObjectFactory.makeString("M Checkpoint Required for Anaphase to Take Place in Mitosis")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationMostExists")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("fanOf")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("UnitedStatesPerson")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Athlete")))), (SubLObject)SubLObjectFactory.makeString("Most Americans Fans of Athletes")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ChromosomalDuplication-Eukaryotic")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SPhase")))), (SubLObject)SubLObjectFactory.makeString("Chromosomal Duplication Required for S Phase to Take Place in Eukaryotic Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("precursors-Chemical")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("VX-NerveAgent")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Sulfur")))), (SubLObject)SubLObjectFactory.makeString("Sulfur Is Chemical Precursor for VX")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EarlyMitoticSpindleAssembly")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Prophase")))), (SubLObject)SubLObjectFactory.makeString("Early Mitotic Spindle Formation Required for Prophase to Take Place in Eukaryotic Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllInstanceInstance-Conditional-CeterisParibus")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCell")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasPartTypes")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MicrofilamentRing")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("QuantifiedVersionOfBinaryPredicateFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationInstanceExists")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InverseBinaryPredicateFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PresentTenseVersionFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("locusOfCellularProcess-Cell"))))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Cytokinesis")))), (SubLObject)SubLObjectFactory.makeString("Eukaryotic Cell With Microfilament Ring Undergoing Cytokinesis")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasBeliefSystems")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MuhammadTheProphet")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Islam")))), (SubLObject)SubLObjectFactory.makeString("Muhammad Believes in Islam")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("recommendedFoodOrDrinkAllowanceForBLO")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ReginaldQOinkers-ThePig")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("FoodOrDrinkForFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PotbelliedPig"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PerFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Cup-UnitOfVolume")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DaysDuration"))), (SubLObject)SubLObjectFactory.makeDouble(1.5), (SubLObject)pph_headline.TWO_INTEGER))), (SubLObject)SubLObjectFactory.makeString("It Is Recommended That Reginald Q. Oinkers Consume 1.5&#x2013;2 Cups per Day of Food or Drink for Potbellied Pigs")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BotanicalCellWallFormation")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("IncorporationOfVesicleMaterialsIntoCellPlate")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CellPlateFormation")))), (SubLObject)SubLObjectFactory.makeString("Incorporation of Materials from Vesicles into the Cell Plate Required for Cell Plate Formation to Take Place in Botanical Cell Wall Formation")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("probability")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("or")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Lenat")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("OntologicalEngineer"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Lenat")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ComputerProgrammer")))), (SubLObject)SubLObjectFactory.makeDouble(0.9999469432))), (SubLObject)SubLObjectFactory.makeString("Virtually Certain That Doug Lenat Is Ontological Engineer or Developer")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ChangeOnSlotFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("QuantitySlotForArg2Fn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DNAStuff")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("amountPresentAt")))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("G2Phase")))), (SubLObject)SubLObjectFactory.makeString("Change in Amount of DNA Present Required for G&#x2082; Phase to Take Place in Eukaryotic Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasBeliefSystems")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HillaryClinton")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ProLifeIdeology"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("False")))), (SubLObject)SubLObjectFactory.makeString("Hillary Clinton Does Not Believe in Pro-life Ideology")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Sarin")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("NerveAgentType")))), (SubLObject)SubLObjectFactory.makeString("Sarin a Nerve Agent")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("causes-SitTypeSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PhosphorylationCascade")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CellularLevelResponseToSignal-Amplified")))), (SubLObject)SubLObjectFactory.makeString("Phosphorylation Cascades Cause Amplified Cellular Response")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("biologicalFunction")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Ribosome")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CellularProteinSynthesis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("locusOfCellularProcess-CellPart")))), (SubLObject)SubLObjectFactory.makeString("Cellular Protein Synthesis Takes Place in Ribosomes")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("parts")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ContinentOfAustralia")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfCanberraAustralia")))), (SubLObject)SubLObjectFactory.makeString("Canberra, Australia Is Part of Australia")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("inheritRolePlayersOfType-SubSitTypeToSubSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BrushingOnesTeeth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("LookingForObjectOfTypeFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ToothpasteTube"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("performedBy")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TeethCleaning")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("performedBy")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Person")))), (SubLObject)SubLObjectFactory.makeString("In Brushing Teeth, Person That Looks for a Toothpaste Tube Also Cleans Teeth")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Trichloroethylene")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ChemicalAgentType")))), (SubLObject)SubLObjectFactory.makeString("Trichloroethylene a Chemical Warfare Agent")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationAllExistsCount")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("anatomicalParts")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Beetle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Leg")), (SubLObject)pph_headline.SIX_INTEGER)), (SubLObject)SubLObjectFactory.makeString("Beetle Has Six Legs")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("negativeVestedInterest")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("AlQaida")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Spain")))), (SubLObject)SubLObjectFactory.makeString("Al-Qaeda Opposes Spain")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasBeenIn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-al-Banna")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Libya")))), (SubLObject)SubLObjectFactory.makeString("Abu Nidal Has Been in Libya")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("genls")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Bacon")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Pork")))), (SubLObject)SubLObjectFactory.makeString("Bacon a Type of Pork")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("birthPlace")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("JamesCurtis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CityOfAustinTX")))), (SubLObject)SubLObjectFactory.makeString("James Curtis Born in Austin")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("G2Checkpoint")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Mitosis")))), (SubLObject)SubLObjectFactory.makeString("G2 Checkpoint Required for Mitosis to Take Place in Eukaryotic Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("symptomOfAilment")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("LevelOfSubstanceTypeInSysTypeFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Acetylcholinesterase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HomoSapiens")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("LowLevelOfStandardSubstanceInSystem"))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PoisoningViaSubstanceFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Sarin"))))), (SubLObject)SubLObjectFactory.makeString("Lower than Normal Cholinesterase Enzyme Level a Symptom of Sarin Poisoning")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("inhibitionOfSitTypeAffectsSlot")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MCheckpoint")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("RestrictionOnSlotFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("rateOfEvent")))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("True")))), (SubLObject)SubLObjectFactory.makeString("Interfering With M Checkpoint Would Affect Rate of the Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("genls")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HotSauce")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BlandTaste"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("False")))), (SubLObject)SubLObjectFactory.makeString("Hot Sauce Not Bland")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Texas-State")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("State-UnitedStates")))), (SubLObject)SubLObjectFactory.makeString("Texas a U.S. State")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Methyldichloroarsine")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BlisterAgentType")))), (SubLObject)SubLObjectFactory.makeString("Methyldichloroarsine a Blister Agent")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("bordersOn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Germany")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("France")))), (SubLObject)SubLObjectFactory.makeString("Germany Borders on France")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("hasDegreeInField")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Terrorist-Alamoudi")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MastersDegree")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BusinessAdministration")))), (SubLObject)SubLObjectFactory.makeString("Abdulrahman Alamoudi Has Masters Degree in Business Administration")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("relationExistsAll")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("nontangentialProperPartOfSpaceRegion")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HomogeneousExtendedSpaceRegion")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("HomogeneousExtendedSpaceRegion")))), (SubLObject)SubLObjectFactory.makeString("RCC Region Contains RCC Regions")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("movieReleaseYear")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ForYourEyesOnly-TheMovie")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(1981)))), (SubLObject)SubLObjectFactory.makeString("'For Your Eyes Only' Released in 1981")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("necessaryConditionFor-InSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EukaryoticCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ReplicatedChromosomeCondensation")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Prometaphase")))), (SubLObject)SubLObjectFactory.makeString("Replicated Chromosome Condensation Required for Prometaphase to Take Place in Eukaryotic Cell Cycle")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("eventOccursAt")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack-November-19-2001-Bilbao-Spain")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Spain")))), (SubLObject)SubLObjectFactory.makeString("Bilbao Bombing on November 19, 2001 Happened in Spain")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sentenceTruth")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("owns")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DonaldTrump")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PacificOcean"))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("False")))), (SubLObject)SubLObjectFactory.makeString("Donald Trump Does Not Own Pacific Ocean")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sitTypeHasSubSitTypeUsingOutputFromSubSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MitoticPhaseOfCellCycle")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Cytokinesis")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Telophase")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CellNucleus")))), (SubLObject)SubLObjectFactory.makeString("In M Phase, Cell Nuclei Created during Telophase Subsequently Used in Cytokinesis")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("eventOccursAt")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TerroristAttack-July-9-2002-Caldas-Colombia")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Colombia")))), (SubLObject)SubLObjectFactory.makeString("Caldas, Colombia Terrorist Attack on July 9, 2002 Happened in Colombia")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("properSubEventTypes")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MitoticPhaseOfCellCycle")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DecreaseOnSlotFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("QuantitySlotForArg2Fn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MPF")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("amountPresentAt")))))), (SubLObject)SubLObjectFactory.makeString("M Phase Involves Decrease in Quantity of MPF Present")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("causes-SubSitTypeSubSitType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ChemicalInteraction")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CatalystSeparationFromActivator")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EndingOfSitTypeFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CatalyticActivation"))))), (SubLObject)SubLObjectFactory.makeString("In Chemical Interactions, Separation of a Catalytic Molecule from Its Activator Causes Ending of Catalytic Activation")), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ist")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MtSpace")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CyclistsMt")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MtTimeWithGranularityDimFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TimeIntervalInclusiveFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MonthFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("September")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(1993))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("MonthFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("September")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("YearFn")), (SubLObject)SubLObjectFactory.makeInteger(1999)))), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Null-TimeParameter")))), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("isa")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("JonC")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("GraduateStudent"))))), (SubLObject)SubLObjectFactory.makeString("Cyc's Knowledge about Cyclists (time Period between September 1993 and September 1999): Jon Curtis a Graduate Student")) });
    }
    
    public void declareFunctions() {
        declare_pph_headline_file();
    }
    
    public void initializeVariables() {
        init_pph_headline_file();
    }
    
    public void runTopLevelForms() {
        setup_pph_headline_file();
    }
    
    static {
        me = (SubLFile)new pph_headline();
        $const0$EnglishHeadlineParaphraseMt = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EnglishHeadlineParaphraseMt"));
        $kw1$NONE = SubLObjectFactory.makeKeyword("NONE");
        $str2$Finished_generating__S = SubLObjectFactory.makeString("Finished generating ~S");
        $str3$Removed_extraneous_determiners___ = SubLObjectFactory.makeString("Removed extraneous determiners~% ~S");
        $str4$Removed_extraneous_copulas____S = SubLObjectFactory.makeString("Removed extraneous copulas~% ~S");
        $str5$Tweaked_verb_tense____S = SubLObjectFactory.makeString("Tweaked verb tense~% ~S");
        $sym6$_EXIT = SubLObjectFactory.makeSymbol("%EXIT");
        $str7$the_ = SubLObjectFactory.makeString("the ");
        $str8$Updating_string_from__S___to__S = SubLObjectFactory.makeString("Updating string from ~S~% to ~S");
        $str9$Complement___S = SubLObjectFactory.makeString("Complement: ~S");
        $const10$passiveParticiple = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("passiveParticiple"));
        $str11$not = SubLObjectFactory.makeString("not");
        $str12$not_ = SubLObjectFactory.makeString("not ");
        $str13$Removing_copula_from__S = SubLObjectFactory.makeString("Removing copula from ~S");
        $str14$Not_removing_copula_with_compleme = SubLObjectFactory.makeString("Not removing copula with complement ~S");
        $const15$pastTense_Generic = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("pastTense-Generic"));
        $list16 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("presentTense-Generic")));
        $const17$Verb = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Verb"));
        $str18$Converting__S_to_present_tense = SubLObjectFactory.makeString("Converting ~S to present tense");
        $const19$futureTense_Generic = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("futureTense-Generic"));
        $list20 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("infinitive")));
        $str21$to_ = SubLObjectFactory.makeString("to ");
        $str22$Converting__S_to_infinitive = SubLObjectFactory.makeString("Converting ~S to infinitive");
        $const23$Indefinite_NLAttr = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Indefinite-NLAttr"));
        $const24$Definite_NLAttr = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Definite-NLAttr"));
        $const25$Some_NLAttr = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Some-NLAttr"));
        $const26$Every_NLAttr = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Every-NLAttr"));
        $str27$_tmp_proof_conclusions_cfasl = SubLObjectFactory.makeString("/tmp/proof-conclusions.cfasl");
        $sym28$HYPOTHETICAL_TERM_P = SubLObjectFactory.makeSymbol("HYPOTHETICAL-TERM-P");
        $sym29$INVALID_FORT_ = SubLObjectFactory.makeSymbol("INVALID-FORT?");
        $str30$_________________________________ = SubLObjectFactory.makeString("~%~%================================================~%~S~%==============================================~%~A~%==========================================~%");
        $int31$150 = SubLObjectFactory.makeInteger(150);
        $str32$_define_test_case_table_generate_ = SubLObjectFactory.makeString("(define-test-case-table generate-english-headline-string\n    (:owner \"baxter\" :test #'equal :kb :full :classes '(pph-test-case-tables))");
        $str33$_____S_____S___ = SubLObjectFactory.makeString("~&((~S)~% ~S)~%");
        $str34$_ = SubLObjectFactory.makeString(")");
        $sym35$GENERATE_ENGLISH_HEADLINE_STRING = SubLObjectFactory.makeSymbol("GENERATE-ENGLISH-HEADLINE-STRING");
        $kw36$TEST = SubLObjectFactory.makeKeyword("TEST");
        $kw37$OWNER = SubLObjectFactory.makeKeyword("OWNER");
        $kw38$CLASSES = SubLObjectFactory.makeKeyword("CLASSES");
        $list39 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PPH-TEST-CASE-TABLES-NOT-WORKING"));
        $kw40$KB = SubLObjectFactory.makeKeyword("KB");
        $kw41$FULL = SubLObjectFactory.makeKeyword("FULL");
        $kw42$WORKING_ = SubLObjectFactory.makeKeyword("WORKING?");
        $list43 = _constant_43_initializer();
    }
}

/*

	Total time: 348 ms
	
*/