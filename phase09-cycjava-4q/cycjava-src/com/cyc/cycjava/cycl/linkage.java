package com.cyc.cycjava.cycl;

import com.cyc.tool.subl.jrtl.nativeCode.subLisp.UnaryFunction;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLStructDecl;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.CommonSymbols;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLStructDeclNative;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLStructNative;
import com.cyc.cycjava.cycl.cyc_testing.generic_testing;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.visitation;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLSpecialOperatorDeclarations;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Structures;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Equality;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Packages;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.compatibility;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.stream_macros;
import com.cyc.cycjava.cycl.sbhl.sbhl_marking_vars;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.PrintLow;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapping;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Functions;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Strings;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.print_high;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.cdestructuring_bind;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Dynamic;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Threads;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.streams_high;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Types;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLFloat;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class linkage extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.linkage";
    public static final String myFingerPrint = "7a5ecc69e0d5d4b08adde1d056ed0fddbaa364f397aa06d7dfcfaa0042204822";
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 1374L)
    public static SubLSymbol $link_parser$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 1570L)
    public static SubLSymbol $link_port$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 1703L)
    public static SubLSymbol $cyc_link_interface$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 1846L)
    public static SubLSymbol $link_parse_options$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 2021L)
    private static SubLSymbol $show_link_warnings$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 2083L)
    private static SubLSymbol $link_pattern_table$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 2132L)
    private static SubLSymbol $link_patterns$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 3500L)
    private static SubLSymbol $word_to_class$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 4004L)
    private static SubLSymbol $link_pos_to_class$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 4197L)
    private static SubLSymbol $link_poses$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 4409L)
    private static SubLSymbol $link_parser_unknown_string_suffix$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 4473L)
    private static SubLSymbol $link_parser_guessed_string_suffix$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 4677L)
    private static SubLSymbol $penn_pos_to_classes$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 6274L)
    private static SubLSymbol $llink_table$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 6344L)
    private static SubLSymbol $rlink_table$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 6383L)
    private static SubLSymbol $pos_class_table$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 6449L)
    private static SubLSymbol $class_pos_table$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 6519L)
    private static SubLSymbol $left_link_to_class$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 11554L)
    private static SubLSymbol $right_link_to_class$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 17148L)
    private static SubLSymbol $word_pos_probabilities$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 19240L)
    private static SubLSymbol $link_execute_int_caching_state$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 20817L)
    private static SubLSymbol $link_execute_cached_caching_state$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 33402L)
    public static SubLSymbol $category_pattern$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 33611L)
    public static SubLSymbol $word_pattern$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 33655L)
    public static SubLSymbol $paren_pattern$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLSymbol $dtp_link$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 64165L)
    private static SubLSymbol $category_to_link_tree_class$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 72997L)
    private static SubLSymbol $split_link_word_caching_state$;
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 136370L)
    private static SubLSymbol $pos_tags$;
    private static final SubLList $list0;
    private static final SubLSymbol $sym1$_LINK_PARSER_;
    private static final SubLString $str2$linkparser_cyc_com;
    private static final SubLSymbol $kw3$PARAMETER;
    private static final SubLList $list4;
    private static final SubLSymbol $sym5$_LINK_PORT_;
    private static final SubLInteger $int6$4567;
    private static final SubLList $list7;
    private static final SubLSymbol $sym8$_CYC_LINK_INTERFACE_;
    private static final SubLString $str9$1_2;
    private static final SubLSymbol $kw10$CYC_LINK_INTERFACE;
    private static final SubLSymbol $kw11$MAX_LINKAGE;
    private static final SubLSymbol $kw12$DICTIONARY_NICKNAME;
    private static final SubLString $str13$default;
    private static final SubLSymbol $kw14$MAX_PARSE_TIME;
    private static final SubLInteger $int15$30;
    private static final SubLList $list16;
    private static final SubLList $list17;
    private static final SubLList $list18;
    private static final SubLString $str19$nvaepstidygrcqmzx;
    private static final SubLString $str20$___;
    private static final SubLString $str21$___;
    private static final SubLList $list22;
    private static final SubLObject $list23;
    private static final SubLObject $list24;
    private static final SubLSymbol $sym25$CATCH_ERROR_MESSAGE_HANDLER;
    private static final SubLList $list26;
    private static final SubLString $str27$parseSentence_c;
    private static final SubLSymbol $sym28$LINK_PARSE;
    private static final SubLSymbol $kw29$COMMAND;
    private static final SubLString $str30$parse;
    private static final SubLSymbol $kw31$SENTENCE;
    private static final SubLSymbol $sym32$STRINGP;
    private static final SubLString $str33$lex;
    private static final SubLSymbol $kw34$LEX;
    private static final SubLSymbol $sym35$LINK_EXECUTE_INT;
    private static final SubLSymbol $kw36$PUBLIC;
    private static final SubLList $list37;
    private static final SubLSymbol $sym38$_LINK_EXECUTE_INT_CACHING_STATE_;
    private static final SubLInteger $int39$10000;
    private static final SubLList $list40;
    private static final SubLSymbol $sym41$LINK_STRUCTURE_SPEC_P;
    private static final SubLSymbol $kw42$LINKAGE;
    private static final SubLList $list43;
    private static final SubLSymbol $sym44$LINK_EXECUTE_CACHED;
    private static final SubLSymbol $sym45$_LINK_EXECUTE_CACHED_CACHING_STATE_;
    private static final SubLInteger $int46$500;
    private static final SubLString $str47$_;
    private static final SubLString $str48$_;
    private static final SubLSymbol $kw49$ERROR;
    private static final SubLSymbol $kw50$STATUS;
    private static final SubLSymbol $kw51$EOF;
    private static final SubLString $str52$Unknown_link_response__a;
    private static final SubLString $str53$_;
    private static final SubLSymbol $sym54$WALL_LINK_WORD;
    private static final SubLString $str55$Couldn_t_find__S_in__S;
    private static final SubLList $list56;
    private static final SubLSymbol $sym57$VECTOR;
    private static final SubLSymbol $sym58$PREFIX_KEYS_FROM_STRING;
    private static final SubLList $list59;
    private static final SubLString $str60$Failed_to_bunge_according_to_stri;
    private static final SubLList $list61;
    private static final SubLString $str62$_____;
    private static final SubLSymbol $sym63$SPLIT_LINK_WORD;
    private static final SubLString $str64$_;
    private static final SubLString $str65$IDXX;
    private static final SubLString $str66$data_pos_tagging_states_fht;
    private static final SubLSymbol $kw67$IMAGE_INDEPENDENT_CFASL;
    private static final SubLSymbol $sym68$LISTP;
    private static final SubLSymbol $sym69$LINK;
    private static final SubLSymbol $sym70$LINK_P;
    private static final SubLList $list71;
    private static final SubLList $list72;
    private static final SubLList $list73;
    private static final SubLList $list74;
    private static final SubLSymbol $sym75$PRINT_LINKAGE_LINK;
    private static final SubLSymbol $sym76$LINK_PRINT_FUNCTION_TRAMPOLINE;
    private static final SubLList $list77;
    private static final SubLSymbol $sym78$LINK_NAME;
    private static final SubLSymbol $sym79$_CSETF_LINK_NAME;
    private static final SubLSymbol $sym80$LINK_LEFT_WORD;
    private static final SubLSymbol $sym81$_CSETF_LINK_LEFT_WORD;
    private static final SubLSymbol $sym82$LINK_RIGHT_WORD;
    private static final SubLSymbol $sym83$_CSETF_LINK_RIGHT_WORD;
    private static final SubLSymbol $kw84$NAME;
    private static final SubLSymbol $kw85$LEFT_WORD;
    private static final SubLSymbol $kw86$RIGHT_WORD;
    private static final SubLString $str87$Invalid_slot__S_for_construction_;
    private static final SubLSymbol $kw88$BEGIN;
    private static final SubLSymbol $sym89$MAKE_LINK;
    private static final SubLSymbol $kw90$SLOT;
    private static final SubLSymbol $kw91$END;
    private static final SubLSymbol $sym92$VISIT_DEFSTRUCT_OBJECT_LINK_METHOD;
    private static final SubLString $str93$__LINK_;
    private static final SubLString $str94$__;
    private static final SubLSymbol $sym95$GET_STRING;
    private static final SubLString $str96$__;
    private static final SubLString $str97$_;
    private static final SubLSymbol $sym98$LINK_TREE;
    private static final SubLSymbol $sym99$OBJECT;
    private static final SubLList $list100;
    private static final SubLList $list101;
    private static final SubLSymbol $sym102$MODIFIERS;
    private static final SubLSymbol $sym103$INDEX;
    private static final SubLSymbol $sym104$MOTHER;
    private static final SubLSymbol $sym105$HEADS;
    private static final SubLSymbol $sym106$POS;
    private static final SubLSymbol $sym107$INSTANCE_COUNT;
    private static final SubLSymbol $sym108$SUBLOOP_RESERVED_INITIALIZE_LINK_TREE_CLASS;
    private static final SubLSymbol $sym109$ISOLATED_P;
    private static final SubLSymbol $sym110$INSTANCE_NUMBER;
    private static final SubLSymbol $sym111$SUBLOOP_RESERVED_INITIALIZE_LINK_TREE_INSTANCE;
    private static final SubLSymbol $sym112$GET_MODIFIERS;
    private static final SubLList $list113;
    private static final SubLList $list114;
    private static final SubLSymbol $sym115$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym116$LINK_TREE_GET_MODIFIERS_METHOD;
    private static final SubLSymbol $sym117$GET_MODIFIEDS;
    private static final SubLList $list118;
    private static final SubLSymbol $sym119$LINK_TREE_GET_MODIFIEDS_METHOD;
    private static final SubLSymbol $sym120$PRINT;
    private static final SubLList $list121;
    private static final SubLList $list122;
    private static final SubLList $list123;
    private static final SubLSymbol $sym124$LINK_TREE_PRINT_METHOD;
    private static final SubLSymbol $sym125$XML;
    private static final SubLList $list126;
    private static final SubLList $list127;
    private static final SubLSymbol $sym128$LINK_TREE_XML_METHOD;
    private static final SubLSymbol $sym129$GET_CATEGORY;
    private static final SubLList $list130;
    private static final SubLSymbol $sym131$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym132$LINK_TREE_GET_CATEGORY_METHOD;
    private static final SubLSymbol $sym133$GET_ROOT;
    private static final SubLList $list134;
    private static final SubLSymbol $sym135$GET_LINKAGE;
    private static final SubLSymbol $sym136$LINK_TREE_GET_ROOT_METHOD;
    private static final SubLSymbol $sym137$ROOT_P;
    private static final SubLList $list138;
    private static final SubLSymbol $sym139$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym140$LINK_TREE_ROOT_P_METHOD;
    private static final SubLSymbol $sym141$GET_MOTHER;
    private static final SubLList $list142;
    private static final SubLSymbol $sym143$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym144$LINK_TREE_GET_MOTHER_METHOD;
    private static final SubLSymbol $sym145$GET_REFS;
    private static final SubLList $list146;
    private static final SubLSymbol $sym147$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym148$LINK_TREE_GET_REFS_METHOD;
    private static final SubLSymbol $sym149$GET_INDEX;
    private static final SubLList $list150;
    private static final SubLSymbol $sym151$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym152$LINK_TREE_GET_INDEX_METHOD;
    private static final SubLSymbol $sym153$GET_SISTER;
    private static final SubLList $list154;
    private static final SubLList $list155;
    private static final SubLSymbol $sym156$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym157$INTEGERP;
    private static final SubLSymbol $sym158$GET_DAUGHTER;
    private static final SubLSymbol $sym159$LINK_TREE_GET_SISTER_METHOD;
    private static final SubLSymbol $sym160$YIELD;
    private static final SubLList $list161;
    private static final SubLSymbol $sym162$LINK_TREE_YIELD_METHOD;
    private static final SubLSymbol $sym163$GET_ANCESTORS;
    private static final SubLList $list164;
    private static final SubLSymbol $sym165$OUTER_CATCH_FOR_LINK_TREE_METHOD;
    private static final SubLSymbol $sym166$LINK_TREE_GET_ANCESTORS_METHOD;
    private static final SubLSymbol $sym167$DEPTH;
    private static final SubLList $list168;
    private static final SubLSymbol $sym169$LINK_TREE_DEPTH_METHOD;
    private static final SubLSymbol $sym170$LINK_PHRASE;
    private static final SubLList $list171;
    private static final SubLSymbol $sym172$DAUGHTERS;
    private static final SubLSymbol $sym173$SUBLOOP_RESERVED_INITIALIZE_LINK_PHRASE_CLASS;
    private static final SubLSymbol $sym174$SUBLOOP_RESERVED_INITIALIZE_LINK_PHRASE_INSTANCE;
    private static final SubLList $list175;
    private static final SubLSymbol $sym176$STACK;
    private static final SubLSymbol $sym177$CLET;
    private static final SubLList $list178;
    private static final SubLSymbol $sym179$STACK_PUSH;
    private static final SubLSymbol $sym180$UNTIL;
    private static final SubLSymbol $sym181$STACK_EMPTY_P;
    private static final SubLSymbol $sym182$CSETQ;
    private static final SubLSymbol $sym183$STACK_POP;
    private static final SubLSymbol $sym184$PWHEN;
    private static final SubLSymbol $sym185$LINK_PHRASE_P;
    private static final SubLSymbol $sym186$DO_VECTOR;
    private static final SubLSymbol $sym187$DAUGHTER;
    private static final SubLSymbol $sym188$GET_SLOT;
    private static final SubLList $list189;
    private static final SubLSymbol $sym190$GET_CONJUNCTION;
    private static final SubLList $list191;
    private static final SubLSymbol $sym192$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym193$LINK_PHRASE_GET_CONJUNCTION_METHOD;
    private static final SubLList $list194;
    private static final SubLSymbol $sym195$LINK_PHRASE_GET_STRING_METHOD;
    private static final SubLSymbol $sym196$DAUGHTER_COUNT;
    private static final SubLList $list197;
    private static final SubLSymbol $sym198$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym199$LINK_PHRASE_DAUGHTER_COUNT_METHOD;
    private static final SubLList $list200;
    private static final SubLSymbol $sym201$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym202$NON_NEGATIVE_INTEGER_P;
    private static final SubLSymbol $sym203$LINK_PHRASE_GET_DAUGHTER_METHOD;
    private static final SubLSymbol $sym204$GET_HEAD_DAUGHTERS;
    private static final SubLList $list205;
    private static final SubLString $str206$Default_method_call__a_on_class__;
    private static final SubLSymbol $sym207$LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD;
    private static final SubLSymbol $sym208$GET_HEAD_DAUGHTER;
    private static final SubLList $list209;
    private static final SubLSymbol $sym210$LINK_PHRASE_GET_HEAD_DAUGHTER_METHOD;
    private static final SubLSymbol $sym211$GET_SEMANTIC_HEAD_DAUGHTERS;
    private static final SubLList $list212;
    private static final SubLSymbol $sym213$LINK_PHRASE_GET_SEMANTIC_HEAD_DAUGHTERS_METHOD;
    private static final SubLSymbol $sym214$CYCLIFY_INT;
    private static final SubLList $list215;
    private static final SubLSymbol $sym216$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym217$GET_HEADS;
    private static final SubLSymbol $sym218$INSTANTIATE_SCOPE;
    private static final SubLSymbol $sym219$LINK_PHRASE_CYCLIFY_INT_METHOD;
    private static final SubLList $list220;
    private static final SubLSymbol $sym221$LINK_PHRASE_YIELD_METHOD;
    private static final SubLList $list222;
    private static final SubLSymbol $sym223$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym224$LINK_PHRASE_GET_HEADS_METHOD;
    private static final SubLSymbol $sym225$GET_HEAD;
    private static final SubLList $list226;
    private static final SubLSymbol $sym227$LINK_PHRASE_GET_HEAD_METHOD;
    private static final SubLSymbol $sym228$GET_SEMANTIC_HEADS;
    private static final SubLList $list229;
    private static final SubLSymbol $sym230$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym231$LINK_PHRASE_GET_SEMANTIC_HEADS_METHOD;
    private static final SubLSymbol $sym232$PRETERMINAL_P;
    private static final SubLList $list233;
    private static final SubLSymbol $sym234$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym235$LINK_WORD_P;
    private static final SubLSymbol $sym236$LINK_PHRASE_PRETERMINAL_P_METHOD;
    private static final SubLSymbol $sym237$IDIOM_P;
    private static final SubLList $list238;
    private static final SubLSymbol $sym239$GET_DIRECTLY_RELATED;
    private static final SubLSymbol $kw240$ID_PATTERN;
    private static final SubLSymbol $kw241$LEFT;
    private static final SubLSymbol $kw242$RIGHT;
    private static final SubLSymbol $sym243$LINK_PHRASE_IDIOM_P_METHOD;
    private static final SubLSymbol $sym244$COORDINATE_PHRASE_P;
    private static final SubLList $list245;
    private static final SubLSymbol $sym246$LINK_PHRASE_COORDINATE_PHRASE_P_METHOD;
    private static final SubLList $list247;
    private static final SubLSymbol $sym248$LINK_PHRASE_GET_LINKAGE_METHOD;
    private static final SubLSymbol $sym249$FIND;
    private static final SubLList $list250;
    private static final SubLList $list251;
    private static final SubLSymbol $sym252$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLString $str253$start__A__after_stop__A__when_fin;
    private static final SubLSymbol $sym254$LINK_PHRASE_FIND_METHOD;
    private static final SubLSymbol $sym255$FIND_FIRST;
    private static final SubLList $list256;
    private static final SubLList $list257;
    private static final SubLSymbol $sym258$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym259$LINK_PHRASE_FIND_FIRST_METHOD;
    private static final SubLSymbol $sym260$FIND_LAST;
    private static final SubLList $list261;
    private static final SubLList $list262;
    private static final SubLSymbol $sym263$OUTER_CATCH_FOR_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym264$LINK_PHRASE_FIND_LAST_METHOD;
    private static final SubLString $str265$__LP_;
    private static final SubLString $str266$__;
    private static final SubLString $str267$__LW_;
    private static final SubLString $str268$_;
    private static final SubLSymbol $sym269$GET_RANKED_LEXES;
    private static final SubLString $str270$_;
    private static final SubLString $str271$_word_cat___a__class___a___a__wor;
    private static final SubLSymbol $sym272$CLASS_OF;
    private static final SubLString $str273$_link_name___a__left___a__right__;
    private static final SubLSymbol $sym274$GET_ABS_INDEX;
    private static final SubLString $str275$_phrase_cat___a____;
    private static final SubLString $str276$__phrase___;
    private static final SubLSymbol $sym277$ABS_INDEX;
    private static final SubLSymbol $sym278$GET_CONTEXT;
    private static final SubLString $str279$_;
    private static final SubLString $str280$__;
    private static final SubLString $str281$_;
    private static final SubLString $str282$__;
    private static final SubLString $str283$__;
    private static final SubLString $str284$_;
    private static final SubLSymbol $sym285$CYCLIFIER_LEXICON;
    private static final SubLSymbol $sym286$SET_CASE_SENSITIVITY;
    private static final SubLSymbol $kw287$OFF;
    private static final SubLSymbol $sym288$GET;
    private static final SubLSymbol $kw289$PENN_TAGS;
    private static final SubLSymbol $sym290$LINK_LEFT_WORD_EQUAL;
    private static final SubLSymbol $sym291$LINK_RIGHT_WORD_EQUAL;
    private static final SubLSymbol $sym292$GET_RIGHT_LINKS;
    private static final SubLSymbol $sym293$GET_LEFT_LINKS;
    private static final SubLList $list294;
    private static final SubLSymbol $sym295$GET_RELATED;
    private static final SubLList $list296;
    private static final SubLSymbol $sym297$VERBAL_LINK_TREE;
    private static final SubLSymbol $sym298$VERBAL_LINK_PHRASE;
    private static final SubLList $list299;
    private static final SubLList $list300;
    private static final SubLSymbol $sym301$CYCLIFY_INT_VP_COORDINATION;
    private static final SubLList $list302;
    private static final SubLSymbol $sym303$GET_SUBJECT;
    private static final SubLSymbol $sym304$GET_COMPLEMENTS;
    private static final SubLSymbol $sym305$CYCLIFY_INT_VP;
    private static final SubLSymbol $sym306$VERBAL_LINK_PHRASE_CYCLIFY_INT_VP_COORDINATION_METHOD;
    private static final SubLList $list307;
    private static final SubLSymbol $sym308$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym309$GET_SEMANTIC_COMPLEMENTS;
    private static final SubLSymbol $sym310$GET_KEYWORD_RENAMINGS;
    private static final SubLSymbol $sym311$VERBAL_LINK_PHRASE_CYCLIFY_INT_VP_METHOD;
    private static final SubLList $list312;
    private static final SubLSymbol $sym313$VP_COORDINATE_PHRASE_P;
    private static final SubLSymbol $sym314$VERBAL_LINK_PHRASE_CYCLIFY_INT_METHOD;
    private static final SubLList $list315;
    private static final SubLSymbol $sym316$CYCLIFIABLE_VERB_PHRASE_P;
    private static final SubLSymbol $sym317$VERBAL_LINK_PHRASE_VP_COORDINATE_PHRASE_P_METHOD;
    private static final SubLSymbol $sym318$SUBLOOP_RESERVED_INITIALIZE_VERBAL_LINK_PHRASE_CLASS;
    private static final SubLSymbol $sym319$SUBLOOP_RESERVED_INITIALIZE_VERBAL_LINK_PHRASE_INSTANCE;
    private static final SubLList $list320;
    private static final SubLSymbol $sym321$VERBAL_LINK_PHRASE_GET_SUBJECT_METHOD;
    private static final SubLSymbol $sym322$GET_SEMANTIC_SUBJECT;
    private static final SubLList $list323;
    private static final SubLSymbol $sym324$VERBAL_LINK_PHRASE_GET_SEMANTIC_SUBJECT_METHOD;
    private static final SubLSymbol $sym325$GET_VERBAL_COMPLEMENT;
    private static final SubLList $list326;
    private static final SubLSymbol $sym327$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym328$VERBAL_LINK_PHRASE_GET_VERBAL_COMPLEMENT_METHOD;
    private static final SubLList $list329;
    private static final SubLSymbol $sym330$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym331$VERBAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD;
    private static final SubLSymbol $sym332$SENTENTIAL_LINK_PHRASE;
    private static final SubLList $list333;
    private static final SubLSymbol $sym334$SUBLOOP_RESERVED_INITIALIZE_SENTENTIAL_LINK_PHRASE_CLASS;
    private static final SubLSymbol $sym335$SUBLOOP_RESERVED_INITIALIZE_SENTENTIAL_LINK_PHRASE_INSTANCE;
    private static final SubLSymbol $sym336$PREPOSITIONAL_LINK_TREE;
    private static final SubLSymbol $sym337$PREPOSITIONAL_LINK_PHRASE;
    private static final SubLList $list338;
    private static final SubLList $list339;
    private static final SubLSymbol $sym340$SUBLOOP_RESERVED_INITIALIZE_PREPOSITIONAL_LINK_PHRASE_CLASS;
    private static final SubLSymbol $sym341$SUBLOOP_RESERVED_INITIALIZE_PREPOSITIONAL_LINK_PHRASE_INSTANCE;
    private static final SubLList $list342;
    private static final SubLSymbol $sym343$OUTER_CATCH_FOR_PREPOSITIONAL_LINK_PHRASE_METHOD;
    private static final SubLSymbol $sym344$PREPOSITIONAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD;
    private static final SubLSymbol $sym345$GET_OBLIQUE_OBJECT;
    private static final SubLList $list346;
    private static final SubLSymbol $sym347$PREPOSITIONAL_LINK_PHRASE_GET_OBLIQUE_OBJECT_METHOD;
    private static final SubLSymbol $sym348$NOMINAL_LINK_TREE;
    private static final SubLSymbol $sym349$NOMINAL_LINK_PHRASE;
    private static final SubLList $list350;
    private static final SubLList $list351;
    private static final SubLSymbol $sym352$SUBLOOP_RESERVED_INITIALIZE_NOMINAL_LINK_PHRASE_CLASS;
    private static final SubLSymbol $sym353$SUBLOOP_RESERVED_INITIALIZE_NOMINAL_LINK_PHRASE_INSTANCE;
    private static final SubLList $list354;
    private static final SubLSymbol $sym355$NOMINAL_LINK_TREE_P;
    private static final SubLSymbol $sym356$NOUN_LINK_WORD_P;
    private static final SubLSymbol $sym357$NOMINAL_LINK_PHRASE_P;
    private static final SubLSymbol $sym358$NOMINAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD;
    private static final SubLSymbol $sym359$LINK_WORD;
    private static final SubLList $list360;
    private static final SubLList $list361;
    private static final SubLSymbol $sym362$CONTEXT;
    private static final SubLSymbol $sym363$LEXES;
    private static final SubLSymbol $sym364$RIGHT_LINKS;
    private static final SubLSymbol $sym365$LEFT_LINKS;
    private static final SubLSymbol $sym366$REF;
    private static final SubLSymbol $sym367$STRING;
    private static final SubLSymbol $sym368$LINKAGE;
    private static final SubLList $list369;
    private static final SubLList $list370;
    private static final SubLSymbol $sym371$LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLSymbol $sym372$MODIFIED_DEPENDENT_MEANING_P;
    private static final SubLList $list373;
    private static final SubLSymbol $kw374$SEMTRANS;
    private static final SubLSymbol $kw375$REPLACE;
    private static final SubLSymbol $sym376$LINK_WORD_MODIFIED_DEPENDENT_MEANING_P_METHOD;
    private static final SubLSymbol $sym377$TREE_KEYWORD_EQ_CLASSES;
    private static final SubLList $list378;
    private static final SubLSymbol $sym379$CAR;
    private static final SubLSymbol $sym380$LINK_WORD_TREE_KEYWORD_EQ_CLASSES_METHOD;
    private static final SubLSymbol $sym381$FRAME_FILTER_LEXES;
    private static final SubLList $list382;
    private static final SubLSymbol $sym383$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLInteger $int384$_5;
    private static final SubLSymbol $sym385$LINK_WORD_FRAME_FILTER_LEXES_METHOD;
    private static final SubLSymbol $sym386$PP_COMP_FILTER_LEXES;
    private static final SubLList $list387;
    private static final SubLSymbol $sym388$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym389$GET_PP_COMPLEMENT;
    private static final SubLSymbol $kw390$FRAME;
    private static final SubLObject $const391$PPCompFrame;
    private static final SubLObject $const392$EverythingPSC;
    private static final SubLObject $const393$Preposition;
    private static final SubLSymbol $sym394$LINK_WORD_PP_COMP_FILTER_LEXES_METHOD;
    private static final SubLSymbol $sym395$POS_FILTER_LEXES;
    private static final SubLList $list396;
    private static final SubLSymbol $sym397$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $kw398$BACKOFF_PENN_TAGS;
    private static final SubLFloat $float399$0_75;
    private static final SubLSymbol $sym400$LINK_WORD_POS_FILTER_LEXES_METHOD;
    private static final SubLSymbol $sym401$CYCLIFY_NUCLEUS;
    private static final SubLList $list402;
    private static final SubLList $list403;
    private static final SubLSymbol $sym404$PARTITION_SEMANTIC_COMPLEMENTS;
    private static final SubLSymbol $sym405$LINK_WORD_CYCLIFY_NUCLEUS_METHOD;
    private static final SubLList $list406;
    private static final SubLSymbol $sym407$LINK_WORD_CYCLIFY_INT_METHOD;
    private static final SubLList $list408;
    private static final SubLSymbol $sym409$LINK_WORD_GET_OBLIQUE_OBJECT_METHOD;
    private static final SubLList $list410;
    private static final SubLSymbol $kw411$OBLIQUE_OBJECT;
    private static final SubLList $list412;
    private static final SubLString $str413$of;
    private static final SubLSymbol $sym414$GET_PPS;
    private static final SubLSymbol $sym415$LINK_WORD_GET_PP_COMPLEMENT_METHOD;
    private static final SubLList $list416;
    private static final SubLSymbol $sym417$LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD;
    private static final SubLList $list418;
    private static final SubLSymbol $sym419$LINK_WORD_GET_SEMANTIC_COMPLEMENTS_METHOD;
    private static final SubLSymbol $sym420$SUBLOOP_RESERVED_INITIALIZE_LINK_WORD_CLASS;
    private static final SubLSymbol $sym421$SUBLOOP_RESERVED_INITIALIZE_LINK_WORD_INSTANCE;
    private static final SubLList $list422;
    private static final SubLSymbol $sym423$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLString $str424$__LW;
    private static final SubLString $str425$_;
    private static final SubLString $str426$___;
    private static final SubLSymbol $sym427$LINK_WORD_PRINT_METHOD;
    private static final SubLSymbol $sym428$_SPLIT_LINK_WORD_CACHING_STATE_;
    private static final SubLInteger $int429$256;
    private static final SubLSymbol $sym430$NEW_VARIABLE;
    private static final SubLList $list431;
    private static final SubLSymbol $sym432$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym433$LINK_WORD_GET_STRING_METHOD;
    private static final SubLSymbol $sym434$GET_POS;
    private static final SubLList $list435;
    private static final SubLSymbol $sym436$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym437$LINK_WORD_GET_POS_METHOD;
    private static final SubLList $list438;
    private static final SubLSymbol $sym439$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym440$LINK_WORD_GET_ABS_INDEX_METHOD;
    private static final SubLList $list441;
    private static final SubLSymbol $sym442$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym443$LINK_WORD_GET_REFS_METHOD;
    private static final SubLList $list444;
    private static final SubLSymbol $sym445$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym446$LINK_WORD_GET_LINKAGE_METHOD;
    private static final SubLList $list447;
    private static final SubLSymbol $sym448$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym449$LINK_WORD_GET_CONTEXT_METHOD;
    private static final SubLList $list450;
    private static final SubLSymbol $sym451$LINK_WORD_GET_HEAD_METHOD;
    private static final SubLList $list452;
    private static final SubLSymbol $sym453$LINK_WORD_GET_HEADS_METHOD;
    private static final SubLList $list454;
    private static final SubLSymbol $sym455$LINK_WORD_GET_SEMANTIC_HEADS_METHOD;
    private static final SubLList $list456;
    private static final SubLSymbol $sym457$LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLList $list458;
    private static final SubLSymbol $sym459$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym460$LINK_WORD_GET_RANKED_LEXES_METHOD;
    private static final SubLSymbol $sym461$GET_LEXES;
    private static final SubLList $list462;
    private static final SubLSymbol $sym463$LINK_WORD_GET_LEXES_METHOD;
    private static final SubLList $list464;
    private static final SubLSymbol $sym465$LINK_WORD_GET_PPS_METHOD;
    private static final SubLSymbol $sym466$LEXIFY;
    private static final SubLList $list467;
    private static final SubLList $list468;
    private static final SubLList $list469;
    private static final SubLSymbol $sym470$PARTICLE_FILTER_LEXES;
    private static final SubLSymbol $sym471$FABRICATE;
    private static final SubLSymbol $sym472$NEW_RANKED_LEX_ENTRY;
    private static final SubLSymbol $sym473$DEFINITE_DESCRIPTION_P;
    private static final SubLSymbol $sym474$GET_INSTANCE;
    private static final SubLSymbol $sym475$SET;
    private static final SubLObject $const476$equals;
    private static final SubLSymbol $kw477$NOUN;
    private static final SubLSymbol $sym478$APPOSITIVE_P;
    private static final SubLList $list479;
    private static final SubLSymbol $sym480$LINK_WORD_LEXIFY_METHOD;
    private static final SubLList $list481;
    private static final SubLList $list482;
    private static final SubLSymbol $sym483$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym484$REGEX_PATTERN_P;
    private static final SubLSymbol $sym485$LINK_WORD_GET_LEFT_LINKS_METHOD;
    private static final SubLList $list486;
    private static final SubLSymbol $sym487$OUTER_CATCH_FOR_LINK_WORD_METHOD;
    private static final SubLSymbol $sym488$LINK_WORD_GET_RIGHT_LINKS_METHOD;
    private static final SubLSymbol $sym489$GET_LINKS;
    private static final SubLList $list490;
    private static final SubLSymbol $sym491$LINK_WORD_GET_LINKS_METHOD;
    private static final SubLList $list492;
    private static final SubLList $list493;
    private static final SubLString $str494$Invalid_link_direction__a;
    private static final SubLSymbol $sym495$LINK_WORD_GET_DIRECTLY_RELATED_METHOD;
    private static final SubLList $list496;
    private static final SubLList $list497;
    private static final SubLSymbol $sym498$LINK_WORD_GET_RELATED_METHOD;
    private static final SubLSymbol $sym499$VERB_LINK_WORD;
    private static final SubLList $list500;
    private static final SubLList $list501;
    private static final SubLList $list502;
    private static final SubLList $list503;
    private static final SubLList $list504;
    private static final SubLSymbol $sym505$GET_SEMANTIC_DIRECT_OBJECT;
    private static final SubLSymbol $sym506$GET_SEMANTIC_INDIRECT_OBJECT;
    private static final SubLList $list507;
    private static final SubLSymbol $kw508$ACTION;
    private static final SubLSymbol $kw509$SUBJECT;
    private static final SubLSymbol $kw510$OBJECT;
    private static final SubLSymbol $kw511$PREP_OBJECT;
    private static final SubLSymbol $kw512$CLAUSE;
    private static final SubLSymbol $kw513$INF_COMP;
    private static final SubLSymbol $sym514$VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLList $list515;
    private static final SubLSymbol $sym516$VERB_LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD;
    private static final SubLSymbol $sym517$SUBLOOP_RESERVED_INITIALIZE_VERB_LINK_WORD_CLASS;
    private static final SubLSymbol $sym518$SUBLOOP_RESERVED_INITIALIZE_VERB_LINK_WORD_INSTANCE;
    private static final SubLList $list519;
    private static final SubLSymbol $sym520$VERB_LINK_WORD_GET_SUBJECT_METHOD;
    private static final SubLList $list521;
    private static final SubLSymbol $sym522$VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD;
    private static final SubLSymbol $sym523$GET_OBJECTS;
    private static final SubLList $list524;
    private static final SubLSymbol $sym525$GET_INDIRECT_OBJECT;
    private static final SubLSymbol $sym526$GET_DIRECT_OBJECT;
    private static final SubLSymbol $sym527$VERB_LINK_WORD_GET_OBJECTS_METHOD;
    private static final SubLList $list528;
    private static final SubLSymbol $sym529$VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD;
    private static final SubLList $list530;
    private static final SubLSymbol $sym531$VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD;
    private static final SubLSymbol $sym532$GET_SEMANTIC_OBJECTS;
    private static final SubLList $list533;
    private static final SubLSymbol $sym534$VERB_LINK_WORD_GET_SEMANTIC_OBJECTS_METHOD;
    private static final SubLList $list535;
    private static final SubLSymbol $sym536$VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD;
    private static final SubLSymbol $sym537$GET_ADJECTIVAL_COMPLEMENT;
    private static final SubLList $list538;
    private static final SubLSymbol $kw539$P_A_PATTERN;
    private static final SubLSymbol $sym540$VERB_LINK_WORD_GET_ADJECTIVAL_COMPLEMENT_METHOD;
    private static final SubLList $list541;
    private static final SubLSymbol $kw542$MV_P_PATTERN;
    private static final SubLSymbol $sym543$VERB_LINK_WORD_GET_PPS_METHOD;
    private static final SubLSymbol $sym544$GET_INFINITIVE_MARKER;
    private static final SubLList $list545;
    private static final SubLSymbol $kw546$I_PATTERN;
    private static final SubLSymbol $sym547$VERB_LINK_WORD_GET_INFINITIVE_MARKER_METHOD;
    private static final SubLSymbol $sym548$INFINITIVE_P;
    private static final SubLList $list549;
    private static final SubLSymbol $sym550$VERB_LINK_WORD_INFINITIVE_P_METHOD;
    private static final SubLSymbol $sym551$BASE_P;
    private static final SubLList $list552;
    private static final SubLSymbol $sym553$VERB_LINK_WORD_BASE_P_METHOD;
    private static final SubLSymbol $sym554$MAIN_VERB_LINK_WORD;
    private static final SubLList $list555;
    private static final SubLList $list556;
    private static final SubLSymbol $sym557$GET_CONTROLLER;
    private static final SubLList $list558;
    private static final SubLSymbol $sym559$GET_CONTROL_VERB;
    private static final SubLSymbol $sym560$SUBJECT_CONTROLLER_P;
    private static final SubLSymbol $sym561$OBJECT_CONTROLLER_P;
    private static final SubLSymbol $sym562$MAIN_VERB_LINK_WORD_GET_CONTROLLER_METHOD;
    private static final SubLList $list563;
    private static final SubLSymbol $sym564$GET_MATRIX_CLAUSE;
    private static final SubLSymbol $sym565$CONTROL_VERB_P;
    private static final SubLSymbol $sym566$MAIN_VERB_LINK_WORD_GET_CONTROL_VERB_METHOD;
    private static final SubLList $list567;
    private static final SubLSymbol $sym568$MAIN_VERB_LINK_WORD_CONTROL_VERB_P_METHOD;
    private static final SubLList $list569;
    private static final SubLList $list570;
    private static final SubLSymbol $sym571$MAIN_VERB_LINK_WORD_OBJECT_CONTROLLER_P_METHOD;
    private static final SubLList $list572;
    private static final SubLList $list573;
    private static final SubLSymbol $sym574$MAIN_VERB_LINK_WORD_SUBJECT_CONTROLLER_P_METHOD;
    private static final SubLList $list575;
    private static final SubLSymbol $sym576$MAIN_VERB_LINK_WORD_GET_MATRIX_CLAUSE_METHOD;
    private static final SubLSymbol $sym577$MAIN_VERB_LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD;
    private static final SubLList $list578;
    private static final SubLSymbol $sym579$OUTER_CATCH_FOR_MAIN_VERB_LINK_WORD_METHOD;
    private static final SubLSymbol $sym580$GET_PARTICLE;
    private static final SubLObject $const581$ParticleFrameType;
    private static final SubLObject $const582$VerbParticle;
    private static final SubLSymbol $sym583$MAIN_VERB_LINK_WORD_PARTICLE_FILTER_LEXES_METHOD;
    private static final SubLSymbol $sym584$MAIN_VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLSymbol $sym585$MAIN_VERB_LINK_WORD_CYCLIFY_INT_METHOD;
    private static final SubLSymbol $sym586$SUBLOOP_RESERVED_INITIALIZE_MAIN_VERB_LINK_WORD_CLASS;
    private static final SubLSymbol $sym587$SUBLOOP_RESERVED_INITIALIZE_MAIN_VERB_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym588$PASSIVE_P;
    private static final SubLList $list589;
    private static final SubLSymbol $kw590$P_V_PATTERN;
    private static final SubLSymbol $sym591$MAIN_VERB_LINK_WORD_PASSIVE_P_METHOD;
    private static final SubLList $list592;
    private static final SubLSymbol $kw593$S_PATTERN;
    private static final SubLSymbol $sym594$GET_AUX_VERB;
    private static final SubLSymbol $sym595$MAIN_VERB_LINK_WORD_GET_SUBJECT_METHOD;
    private static final SubLList $list596;
    private static final SubLString $str597$by;
    private static final SubLSymbol $sym598$MAIN_VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD;
    private static final SubLList $list599;
    private static final SubLSymbol $kw600$O___N_PATTERN;
    private static final SubLSymbol $kw601$O_PATTERN;
    private static final SubLSymbol $kw602$B_PATTERN;
    private static final SubLSymbol $sym603$MAIN_VERB_LINK_WORD_GET_DIRECT_OBJECT_METHOD;
    private static final SubLList $list604;
    private static final SubLList $list605;
    private static final SubLSymbol $sym606$MAIN_VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD;
    private static final SubLList $list607;
    private static final SubLSymbol $sym608$MAIN_VERB_LINK_WORD_GET_INDIRECT_OBJECT_METHOD;
    private static final SubLList $list609;
    private static final SubLString $str610$to;
    private static final SubLSymbol $sym611$MAIN_VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD;
    private static final SubLList $list612;
    private static final SubLList $list613;
    private static final SubLList $list614;
    private static final SubLList $list615;
    private static final SubLSymbol $sym616$MAIN_VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD;
    private static final SubLList $list617;
    private static final SubLSymbol $sym618$MAIN_VERB_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLList $list619;
    private static final SubLList $list620;
    private static final SubLSymbol $sym621$MAIN_VERB_LINK_WORD_GET_AUX_VERB_METHOD;
    private static final SubLList $list622;
    private static final SubLSymbol $kw623$K_PATTERN;
    private static final SubLSymbol $sym624$MAIN_VERB_LINK_WORD_GET_PARTICLE_METHOD;
    private static final SubLList $list625;
    private static final SubLSymbol $kw626$M_PATTERN;
    private static final SubLSymbol $kw627$A_PATTERN;
    private static final SubLSymbol $sym628$MAIN_VERB_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLSymbol $sym629$AUX_VERB_LINK_WORD;
    private static final SubLList $list630;
    private static final SubLList $list631;
    private static final SubLSymbol $sym632$COPULA_P;
    private static final SubLList $list633;
    private static final SubLSymbol $sym634$AUX_VERB_LINK_WORD_COPULA_P_METHOD;
    private static final SubLList $list635;
    private static final SubLList $list636;
    private static final SubLList $list637;
    private static final SubLSymbol $kw638$COMPLEMENT;
    private static final SubLSymbol $sym639$AUX_VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLList $list640;
    private static final SubLSymbol $sym641$AUX_VERB_LINK_WORD_GET_SEMANTIC_HEADS_METHOD;
    private static final SubLSymbol $sym642$GET_TENSE;
    private static final SubLList $list643;
    private static final SubLList $list644;
    private static final SubLSymbol $kw645$PRESENT;
    private static final SubLList $list646;
    private static final SubLSymbol $kw647$PAST;
    private static final SubLList $list648;
    private static final SubLSymbol $kw649$INFINITIVE;
    private static final SubLSymbol $sym650$AUX_VERB_LINK_WORD_GET_TENSE_METHOD;
    private static final SubLList $list651;
    private static final SubLSymbol $sym652$AUX_VERB_LINK_WORD_GET_SEMANTIC_COMPLEMENTS_METHOD;
    private static final SubLList $list653;
    private static final SubLSymbol $sym654$GET_PREPOSITIONAL_COMPLEMENT;
    private static final SubLSymbol $sym655$GET_ADVERBIAL_COMPLEMENT;
    private static final SubLSymbol $sym656$AUX_VERB_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLSymbol $sym657$SUBLOOP_RESERVED_INITIALIZE_AUX_VERB_LINK_WORD_CLASS;
    private static final SubLSymbol $sym658$SUBLOOP_RESERVED_INITIALIZE_AUX_VERB_LINK_WORD_INSTANCE;
    private static final SubLList $list659;
    private static final SubLSymbol $sym660$AUX_VERB_LINK_WORD_GET_SUBJECT_METHOD;
    private static final SubLList $list661;
    private static final SubLList $list662;
    private static final SubLSymbol $sym663$AUX_VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD;
    private static final SubLList $list664;
    private static final SubLSymbol $sym665$AUX_VERB_LINK_WORD_GET_ADJECTIVAL_COMPLEMENT_METHOD;
    private static final SubLList $list666;
    private static final SubLSymbol $kw667$PF_PATTERN;
    private static final SubLSymbol $sym668$AUX_VERB_LINK_WORD_GET_ADVERBIAL_COMPLEMENT_METHOD;
    private static final SubLList $list669;
    private static final SubLSymbol $kw670$P_P_PATTERN;
    private static final SubLSymbol $sym671$AUX_VERB_LINK_WORD_GET_PREPOSITIONAL_COMPLEMENT_METHOD;
    private static final SubLSymbol $sym672$EQUALITY_P;
    private static final SubLList $list673;
    private static final SubLSymbol $sym674$AUX_VERB_LINK_WORD_EQUALITY_P_METHOD;
    private static final SubLList $list675;
    private static final SubLSymbol $sym676$AUX_VERB_LINK_WORD_PASSIVE_P_METHOD;
    private static final SubLList $list677;
    private static final SubLSymbol $sym678$AUX_VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD;
    private static final SubLList $list679;
    private static final SubLSymbol $sym680$AUX_VERB_LINK_WORD_GET_DIRECT_OBJECT_METHOD;
    private static final SubLList $list681;
    private static final SubLSymbol $sym682$AUX_VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD;
    private static final SubLList $list683;
    private static final SubLSymbol $sym684$AUX_VERB_LINK_WORD_GET_INDIRECT_OBJECT_METHOD;
    private static final SubLList $list685;
    private static final SubLSymbol $sym686$AUX_VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD;
    private static final SubLList $list687;
    private static final SubLSymbol $sym688$AUX_VERB_LINK_WORD_GET_OBLIQUE_OBJECT_METHOD;
    private static final SubLSymbol $sym689$MODAL_LINK_WORD;
    private static final SubLSymbol $sym690$SUBLOOP_RESERVED_INITIALIZE_MODAL_LINK_WORD_CLASS;
    private static final SubLSymbol $sym691$SUBLOOP_RESERVED_INITIALIZE_MODAL_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym692$PARTICIPLE_LINK_WORD;
    private static final SubLSymbol $sym693$SUBLOOP_RESERVED_INITIALIZE_PARTICIPLE_LINK_WORD_CLASS;
    private static final SubLSymbol $sym694$SUBLOOP_RESERVED_INITIALIZE_PARTICIPLE_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym695$NOUN_LINK_WORD;
    private static final SubLList $list696;
    private static final SubLList $list697;
    private static final SubLList $list698;
    private static final SubLSymbol $sym699$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD;
    private static final SubLSymbol $sym700$GET_DETERMINER;
    private static final SubLString $str701$the;
    private static final SubLSymbol $sym702$SINGULAR_P;
    private static final SubLSymbol $sym703$GET_POSSESSOR;
    private static final SubLSymbol $sym704$NOUN_LINK_WORD_DEFINITE_DESCRIPTION_P_METHOD;
    private static final SubLList $list705;
    private static final SubLList $list706;
    private static final SubLSymbol $kw707$TERM;
    private static final SubLSymbol $sym708$NOUN_LINK_WORD_CYCLIFY_NUCLEUS_METHOD;
    private static final SubLList $list709;
    private static final SubLSymbol $sym710$GET_QUANTIFIER;
    private static final SubLSymbol $sym711$NOUN_LINK_WORD_CYCLIFY_INT_METHOD;
    private static final SubLList $list712;
    private static final SubLList $list713;
    private static final SubLList $list714;
    private static final SubLSymbol $sym715$GET_OVERT_QUANTIFIER;
    private static final SubLSymbol $kw716$POSSESSOR;
    private static final SubLSymbol $kw717$MODIFIED;
    private static final SubLSymbol $kw718$CD;
    private static final SubLSymbol $kw719$NUMBER;
    private static final SubLSymbol $kw720$POSS_COL;
    private static final SubLObject $const721$Thing;
    private static final SubLSymbol $sym722$NOUN_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLSymbol $sym723$RELATIONAL_NOUN_P;
    private static final SubLList $list724;
    private static final SubLSymbol $sym725$NOUN_LINK_WORD_RELATIONAL_NOUN_P_METHOD;
    private static final SubLList $list726;
    private static final SubLSymbol $sym727$GET_EXISTENTIAL_NULL_DETERMINER;
    private static final SubLSymbol $sym728$PLURAL_P;
    private static final SubLSymbol $sym729$NOUN_LINK_WORD_GET_QUANTIFIER_METHOD;
    private static final SubLSymbol $sym730$SUBLOOP_RESERVED_INITIALIZE_NOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym731$SUBLOOP_RESERVED_INITIALIZE_NOUN_LINK_WORD_INSTANCE;
    private static final SubLList $list732;
    private static final SubLSymbol $sym733$NOUN_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLList $list734;
    private static final SubLSymbol $kw735$MX_PATTERN;
    private static final SubLSymbol $kw736$GN_PATTERN;
    private static final SubLSymbol $kw737$AN_PATTERN;
    private static final SubLSymbol $sym738$NOUN_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLList $list739;
    private static final SubLSymbol $kw740$D_S_PATTERN;
    private static final SubLList $list741;
    private static final SubLSymbol $sym742$NOUN_LINK_WORD_GET_DETERMINER_METHOD;
    private static final SubLSymbol $sym743$GET_CARDINAL;
    private static final SubLList $list744;
    private static final SubLSymbol $kw745$D_MC_PATTERN;
    private static final SubLSymbol $sym746$NOUN_LINK_WORD_GET_CARDINAL_METHOD;
    private static final SubLList $list747;
    private static final SubLSymbol $sym748$NOUN_LINK_WORD_GET_OVERT_QUANTIFIER_METHOD;
    private static final SubLList $list749;
    private static final SubLSymbol $kw750$D_PATTERN;
    private static final SubLSymbol $sym751$NOUN_LINK_WORD_GET_POSSESSOR_METHOD;
    private static final SubLSymbol $sym752$GET_SPECIFIER;
    private static final SubLList $list753;
    private static final SubLSymbol $sym754$NOUN_LINK_WORD_GET_SPECIFIER_METHOD;
    private static final SubLList $list755;
    private static final SubLSymbol $kw756$M_P_PATTERN;
    private static final SubLSymbol $sym757$NOUN_LINK_WORD_GET_PPS_METHOD;
    private static final SubLList $list758;
    private static final SubLSymbol $sym759$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD;
    private static final SubLSymbol $sym760$LEX_ENTRY;
    private static final SubLString $str761$D;
    private static final SubLSymbol $kw762$STRING;
    private static final SubLString $str763$;
    private static final SubLSymbol $kw764$CYC_POS;
    private static final SubLObject $const765$Determiner;
    private static final SubLList $list766;
    private static final SubLObject $const767$DeterminerFrame;
    private static final SubLSymbol $kw768$DT;
    private static final SubLSymbol $sym769$NOUN_LINK_WORD_GET_EXISTENTIAL_NULL_DETERMINER_METHOD;
    private static final SubLList $list770;
    private static final SubLList $list771;
    private static final SubLSymbol $sym772$NOUN_LINK_WORD_SINGULAR_P_METHOD;
    private static final SubLList $list773;
    private static final SubLList $list774;
    private static final SubLSymbol $sym775$NOUN_LINK_WORD_PLURAL_P_METHOD;
    private static final SubLList $list776;
    private static final SubLSymbol $sym777$NOUN_LINK_WORD_APPOSITIVE_P_METHOD;
    private static final SubLSymbol $sym778$COMMON_NOUN_LINK_WORD;
    private static final SubLSymbol $sym779$SUBLOOP_RESERVED_INITIALIZE_COMMON_NOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym780$SUBLOOP_RESERVED_INITIALIZE_COMMON_NOUN_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym781$PROPER_NOUN_LINK_WORD;
    private static final SubLList $list782;
    private static final SubLList $list783;
    private static final SubLList $list784;
    private static final SubLSymbol $sym785$PROPER_NOUN_LINK_WORD_GET_QUANTIFIER_METHOD;
    private static final SubLSymbol $sym786$SUBLOOP_RESERVED_INITIALIZE_PROPER_NOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym787$SUBLOOP_RESERVED_INITIALIZE_PROPER_NOUN_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym788$GERUND_LINK_WORD;
    private static final SubLSymbol $sym789$SUBLOOP_RESERVED_INITIALIZE_GERUND_LINK_WORD_CLASS;
    private static final SubLSymbol $sym790$SUBLOOP_RESERVED_INITIALIZE_GERUND_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym791$PRONOUN_LINK_WORD;
    private static final SubLSymbol $sym792$SUBLOOP_RESERVED_INITIALIZE_PRONOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym793$SUBLOOP_RESERVED_INITIALIZE_PRONOUN_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym794$W_PRONOUN_LINK_WORD;
    private static final SubLList $list795;
    private static final SubLSymbol $sym796$SUBLOOP_RESERVED_INITIALIZE_W_PRONOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym797$SUBLOOP_RESERVED_INITIALIZE_W_PRONOUN_LINK_WORD_INSTANCE;
    private static final SubLList $list798;
    private static final SubLSymbol $sym799$OUTER_CATCH_FOR_W_PRONOUN_LINK_WORD_METHOD;
    private static final SubLSymbol $sym800$GET_ANTECEDENT;
    private static final SubLSymbol $sym801$W_PRONOUN_LINK_WORD_GET_REFS_METHOD;
    private static final SubLList $list802;
    private static final SubLSymbol $sym803$W_PRONOUN_LINK_WORD_GET_ANTECEDENT_METHOD;
    private static final SubLList $list804;
    private static final SubLSymbol $sym805$W_PRONOUN_LINK_WORD_APPOSITIVE_P_METHOD;
    private static final SubLList $list806;
    private static final SubLSymbol $sym807$W_PRONOUN_LINK_WORD_GET_QUANTIFIER_METHOD;
    private static final SubLList $list808;
    private static final SubLSymbol $kw809$R_PATTERN;
    private static final SubLSymbol $sym810$W_PRONOUN_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLSymbol $sym811$REL_PRONOUN_LINK_WORD;
    private static final SubLSymbol $sym812$SUBLOOP_RESERVED_INITIALIZE_REL_PRONOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym813$SUBLOOP_RESERVED_INITIALIZE_REL_PRONOUN_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym814$PERSONAL_PRONOUN_LINK_WORD;
    private static final SubLSymbol $sym815$SUBLOOP_RESERVED_INITIALIZE_PERSONAL_PRONOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym816$SUBLOOP_RESERVED_INITIALIZE_PERSONAL_PRONOUN_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym817$ADJECTIVE_LINK_WORD;
    private static final SubLList $list818;
    private static final SubLList $list819;
    private static final SubLList $list820;
    private static final SubLList $list821;
    private static final SubLList $list822;
    private static final SubLSymbol $sym823$ADJECTIVE_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLList $list824;
    private static final SubLSymbol $sym825$ADJECTIVE_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLSymbol $sym826$SUBLOOP_RESERVED_INITIALIZE_ADJECTIVE_LINK_WORD_CLASS;
    private static final SubLSymbol $sym827$SUBLOOP_RESERVED_INITIALIZE_ADJECTIVE_LINK_WORD_INSTANCE;
    private static final SubLList $list828;
    private static final SubLList $list829;
    private static final SubLSymbol $sym830$ADJECTIVE_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLList $list831;
    private static final SubLSymbol $sym832$ADJECTIVE_LINK_WORD_GET_PPS_METHOD;
    private static final SubLSymbol $sym833$ADVERB_LINK_WORD;
    private static final SubLList $list834;
    private static final SubLList $list835;
    private static final SubLList $list836;
    private static final SubLList $list837;
    private static final SubLList $list838;
    private static final SubLSymbol $sym839$ADVERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLSymbol $sym840$SUBLOOP_RESERVED_INITIALIZE_ADVERB_LINK_WORD_CLASS;
    private static final SubLSymbol $sym841$SUBLOOP_RESERVED_INITIALIZE_ADVERB_LINK_WORD_INSTANCE;
    private static final SubLList $list842;
    private static final SubLList $list843;
    private static final SubLSymbol $kw844$N_PATTERN;
    private static final SubLSymbol $sym845$ADVERB_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLList $list846;
    private static final SubLSymbol $sym847$ADVERB_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLSymbol $sym848$W_ADVERB_LINK_WORD;
    private static final SubLList $list849;
    private static final SubLSymbol $sym850$SUBLOOP_RESERVED_INITIALIZE_W_ADVERB_LINK_WORD_CLASS;
    private static final SubLSymbol $sym851$SUBLOOP_RESERVED_INITIALIZE_W_ADVERB_LINK_WORD_INSTANCE;
    private static final SubLList $list852;
    private static final SubLSymbol $kw853$Q_PATTERN;
    private static final SubLSymbol $sym854$W_ADVERB_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLSymbol $sym855$PREPOSITION_LINK_WORD;
    private static final SubLList $list856;
    private static final SubLList $list857;
    private static final SubLList $list858;
    private static final SubLList $list859;
    private static final SubLList $list860;
    private static final SubLString $str861$that;
    private static final SubLSymbol $sym862$PREPOSITION_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLSymbol $sym863$SUBLOOP_RESERVED_INITIALIZE_PREPOSITION_LINK_WORD_CLASS;
    private static final SubLSymbol $sym864$SUBLOOP_RESERVED_INITIALIZE_PREPOSITION_LINK_WORD_INSTANCE;
    private static final SubLList $list865;
    private static final SubLSymbol $kw866$J_PATTERN;
    private static final SubLSymbol $kw867$ON_PATTERN;
    private static final SubLSymbol $sym868$PREPOSITION_LINK_WORD_GET_OBLIQUE_OBJECT_METHOD;
    private static final SubLList $list869;
    private static final SubLSymbol $kw870$C_PATTERN;
    private static final SubLSymbol $sym871$PREPOSITION_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD;
    private static final SubLList $list872;
    private static final SubLSymbol $sym873$OUTER_CATCH_FOR_PREPOSITION_LINK_WORD_METHOD;
    private static final SubLSymbol $kw874$P_PATTERN;
    private static final SubLSymbol $kw875$MV_PATTERN;
    private static final SubLList $list876;
    private static final SubLSymbol $sym877$PREPOSITION_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLList $list878;
    private static final SubLSymbol $sym879$PREPOSITION_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLSymbol $sym880$QUANTIFIER_LINK_WORD;
    private static final SubLList $list881;
    private static final SubLList $list882;
    private static final SubLList $list883;
    private static final SubLList $list884;
    private static final SubLList $list885;
    private static final SubLSymbol $sym886$QUANTIFIER_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLSymbol $sym887$SUBLOOP_RESERVED_INITIALIZE_QUANTIFIER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym888$SUBLOOP_RESERVED_INITIALIZE_QUANTIFIER_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym889$GET_QUANTIFIED;
    private static final SubLList $list890;
    private static final SubLSymbol $sym891$QUANTIFIER_LINK_WORD_GET_QUANTIFIED_METHOD;
    private static final SubLSymbol $sym892$DETERMINER_LINK_WORD;
    private static final SubLSymbol $sym893$SUBLOOP_RESERVED_INITIALIZE_DETERMINER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym894$SUBLOOP_RESERVED_INITIALIZE_DETERMINER_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym895$DEFINITE_DETERMINER_LINK_WORD;
    private static final SubLSymbol $sym896$SUBLOOP_RESERVED_INITIALIZE_DEFINITE_DETERMINER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym897$SUBLOOP_RESERVED_INITIALIZE_DEFINITE_DETERMINER_LINK_WORD_INSTANC;
    private static final SubLSymbol $sym898$W_DETERMINER_LINK_WORD;
    private static final SubLSymbol $sym899$SUBLOOP_RESERVED_INITIALIZE_W_DETERMINER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym900$SUBLOOP_RESERVED_INITIALIZE_W_DETERMINER_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym901$PREDETERMINER_LINK_WORD;
    private static final SubLSymbol $sym902$SUBLOOP_RESERVED_INITIALIZE_PREDETERMINER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym903$SUBLOOP_RESERVED_INITIALIZE_PREDETERMINER_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym904$POSSESSIVE_PRONOUN_LINK_WORD;
    private static final SubLSymbol $sym905$SUBLOOP_RESERVED_INITIALIZE_POSSESSIVE_PRONOUN_LINK_WORD_CLASS;
    private static final SubLSymbol $sym906$SUBLOOP_RESERVED_INITIALIZE_POSSESSIVE_PRONOUN_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym907$CARDINAL_LINK_WORD;
    private static final SubLSymbol $sym908$SUBLOOP_RESERVED_INITIALIZE_CARDINAL_LINK_WORD_CLASS;
    private static final SubLSymbol $sym909$SUBLOOP_RESERVED_INITIALIZE_CARDINAL_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym910$CONJUNCTION_LINK_WORD;
    private static final SubLList $list911;
    private static final SubLSymbol $sym912$SUBLOOP_RESERVED_INITIALIZE_CONJUNCTION_LINK_WORD_CLASS;
    private static final SubLSymbol $sym913$SUBLOOP_RESERVED_INITIALIZE_CONJUNCTION_LINK_WORD_INSTANCE;
    private static final SubLList $list914;
    private static final SubLSymbol $sym915$CONJUNCTION_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLSymbol $sym916$EXISTENTIAL_LINK_WORD;
    private static final SubLSymbol $sym917$SUBLOOP_RESERVED_INITIALIZE_EXISTENTIAL_LINK_WORD_CLASS;
    private static final SubLSymbol $sym918$SUBLOOP_RESERVED_INITIALIZE_EXISTENTIAL_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym919$COMPARATOR_LINK_WORD;
    private static final SubLSymbol $sym920$SUBLOOP_RESERVED_INITIALIZE_COMPARATOR_LINK_WORD_CLASS;
    private static final SubLSymbol $sym921$SUBLOOP_RESERVED_INITIALIZE_COMPARATOR_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym922$INF_MARKER_LINK_WORD;
    private static final SubLSymbol $sym923$SUBLOOP_RESERVED_INITIALIZE_INF_MARKER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym924$SUBLOOP_RESERVED_INITIALIZE_INF_MARKER_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym925$PARTICLE_LINK_WORD;
    private static final SubLSymbol $sym926$SUBLOOP_RESERVED_INITIALIZE_PARTICLE_LINK_WORD_CLASS;
    private static final SubLSymbol $sym927$SUBLOOP_RESERVED_INITIALIZE_PARTICLE_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym928$PUNCTUATION_LINK_WORD;
    private static final SubLList $list929;
    private static final SubLSymbol $sym930$SUBLOOP_RESERVED_INITIALIZE_PUNCTUATION_LINK_WORD_CLASS;
    private static final SubLSymbol $sym931$SUBLOOP_RESERVED_INITIALIZE_PUNCTUATION_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym932$POSS_MARKER_LINK_WORD;
    private static final SubLList $list933;
    private static final SubLList $list934;
    private static final SubLList $list935;
    private static final SubLList $list936;
    private static final SubLList $list937;
    private static final SubLSymbol $sym938$GET_POSSESSED;
    private static final SubLSymbol $kw939$POSSESSED;
    private static final SubLSymbol $sym940$POSS_MARKER_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD;
    private static final SubLSymbol $sym941$SUBLOOP_RESERVED_INITIALIZE_POSS_MARKER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym942$SUBLOOP_RESERVED_INITIALIZE_POSS_MARKER_LINK_WORD_INSTANCE;
    private static final SubLList $list943;
    private static final SubLSymbol $kw944$YS_PATTERN;
    private static final SubLSymbol $sym945$POSS_MARKER_LINK_WORD_GET_POSSESSOR_METHOD;
    private static final SubLList $list946;
    private static final SubLSymbol $sym947$POSS_MARKER_LINK_WORD_GET_POSSESSED_METHOD;
    private static final SubLList $list948;
    private static final SubLSymbol $sym949$POSS_MARKER_LINK_WORD_GET_COMPLEMENTS_METHOD;
    private static final SubLList $list950;
    private static final SubLSymbol $sym951$POSS_MARKER_LINK_WORD_GET_MODIFIEDS_METHOD;
    private static final SubLSymbol $sym952$COMPLEMENTIZER_LINK_WORD;
    private static final SubLSymbol $sym953$SUBLOOP_RESERVED_INITIALIZE_COMPLEMENTIZER_LINK_WORD_CLASS;
    private static final SubLSymbol $sym954$SUBLOOP_RESERVED_INITIALIZE_COMPLEMENTIZER_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym955$SUBLOOP_RESERVED_INITIALIZE_WALL_LINK_WORD_CLASS;
    private static final SubLSymbol $sym956$SUBLOOP_RESERVED_INITIALIZE_WALL_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym957$LEFT_WALL_LINK_WORD;
    private static final SubLSymbol $sym958$SUBLOOP_RESERVED_INITIALIZE_LEFT_WALL_LINK_WORD_CLASS;
    private static final SubLSymbol $sym959$SUBLOOP_RESERVED_INITIALIZE_LEFT_WALL_LINK_WORD_INSTANCE;
    private static final SubLSymbol $sym960$RIGHT_WALL_LINK_WORD;
    private static final SubLSymbol $sym961$SUBLOOP_RESERVED_INITIALIZE_RIGHT_WALL_LINK_WORD_CLASS;
    private static final SubLSymbol $sym962$SUBLOOP_RESERVED_INITIALIZE_RIGHT_WALL_LINK_WORD_INSTANCE;
    private static final SubLList $list963;
    private static final SubLList $list964;
    private static final SubLSymbol $sym965$TREE_STRING;
    private static final SubLSymbol $sym966$TREE;
    private static final SubLSymbol $sym967$DIAGRAM;
    private static final SubLSymbol $sym968$WORDS;
    private static final SubLSymbol $sym969$LINKS;
    private static final SubLSymbol $sym970$CYCLIFY;
    private static final SubLList $list971;
    private static final SubLList $list972;
    private static final SubLSymbol $sym973$GET_CYCLIFIER;
    private static final SubLSymbol $sym974$HAS_NEXT_;
    private static final SubLSymbol $sym975$NEXT;
    private static final SubLSymbol $sym976$LINKAGE_CYCLIFY_METHOD;
    private static final SubLList $list977;
    private static final SubLSymbol $kw978$LEXICON;
    private static final SubLSymbol $kw979$SCORE_FUNCTION;
    private static final SubLSymbol $sym980$CYCLIFICATION_SCORE;
    private static final SubLSymbol $kw981$OUTPUT;
    private static final SubLSymbol $kw982$BRIEF;
    private static final SubLSymbol $kw983$WFF_CHECK_;
    private static final SubLSymbol $kw984$CONTEXT;
    private static final SubLSymbol $kw985$DISAMBIGUATOR;
    private static final SubLSymbol $kw986$COREFERENCE_RESOLVER;
    private static final SubLSymbol $kw987$ERROR_HANDLING;
    private static final SubLSymbol $kw988$THROW;
    private static final SubLSymbol $kw989$SUBCYCLIFIER_POOL;
    private static final SubLSymbol $sym990$DATE_CYCLIFIER;
    private static final SubLSymbol $sym991$CYCLIFIER_LEXICON_P;
    private static final SubLSymbol $sym992$FUNCTION_SPEC_P;
    private static final SubLSymbol $sym993$KEYWORDP;
    private static final SubLSymbol $sym994$PARSE_TREE_CONTEXT_P;
    private static final SubLSymbol $sym995$BOOLEANP;
    private static final SubLList $list996;
    private static final SubLString $str997$Invalid_error_handling_tag__a;
    private static final SubLSymbol $sym998$CYCLIFIER_POOL_P;
    private static final SubLSymbol $sym999$CYCLIFIER;
    private static final SubLSymbol $sym1000$PARSE_TREE_CONTEXT;
    private static final SubLSymbol $sym1001$DISAMBIGUATE;
    private static final SubLSymbol $sym1002$LINKAGE_GET_CYCLIFIER_METHOD;
    private static final SubLSymbol $sym1003$SUBLOOP_RESERVED_INITIALIZE_LINKAGE_CLASS;
    private static final SubLSymbol $sym1004$SUBLOOP_RESERVED_INITIALIZE_LINKAGE_INSTANCE;
    private static final SubLList $list1005;
    private static final SubLList $list1006;
    private static final SubLSymbol $kw1007$ALLOW_OTHER_KEYS;
    private static final SubLSymbol $kw1008$DONE;
    private static final SubLSymbol $sym1009$L;
    private static final SubLList $list1010;
    private static final SubLList $list1011;
    private static final SubLList $list1012;
    private static final SubLSymbol $sym1013$W;
    private static final SubLList $list1014;
    private static final SubLList $list1015;
    private static final SubLList $list1016;
    private static final SubLSymbol $sym1017$ERROR;
    private static final SubLSymbol $sym1018$CATCH_ERROR_MESSAGE;
    private static final SubLSymbol $sym1019$NEW_LINKAGE;
    private static final SubLList $list1020;
    private static final SubLList $list1021;
    private static final SubLList $list1022;
    private static final SubLSymbol $kw1023$OPTIONS;
    private static final SubLSymbol $kw1024$USE_STANDARDIZED_WORD_STRINGS_;
    private static final SubLString $str1025$Couldn_t_build_tree_from__a;
    private static final SubLList $list1026;
    private static final SubLSymbol $sym1027$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1028$LINKAGE_YIELD_METHOD;
    private static final SubLList $list1029;
    private static final SubLSymbol $sym1030$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1031$LINKAGE_PRINT_METHOD;
    private static final SubLList $list1032;
    private static final SubLString $str1033$_linkage___;
    private static final SubLString $str1034$_tree___;
    private static final SubLSymbol $sym1035$GET_TREE;
    private static final SubLString $str1036$__tree___;
    private static final SubLString $str1037$__linkage___;
    private static final SubLSymbol $sym1038$LINKAGE_XML_METHOD;
    private static final SubLString $str1039$__a;
    private static final SubLString $str1040$_links___;
    private static final SubLString $str1041$__links___;
    private static final SubLString $str1042$_diagram___;
    private static final SubLString $str1043$__diagram___;
    private static final SubLString $str1044$_tree_string___;
    private static final SubLString $str1045$__tree_string___;
    private static final SubLSymbol $sym1046$PRINT_DIAGRAM;
    private static final SubLList $list1047;
    private static final SubLSymbol $sym1048$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1049$LINKAGE_PRINT_DIAGRAM_METHOD;
    private static final SubLSymbol $sym1050$LENGTH;
    private static final SubLList $list1051;
    private static final SubLSymbol $sym1052$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1053$LINKAGE_LENGTH_METHOD;
    private static final SubLList $list1054;
    private static final SubLSymbol $sym1055$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1056$LINKAGE_GET_TREE_METHOD;
    private static final SubLSymbol $sym1057$GET_TREE_STRING;
    private static final SubLList $list1058;
    private static final SubLSymbol $sym1059$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1060$LINKAGE_GET_TREE_STRING_METHOD;
    private static final SubLList $list1061;
    private static final SubLSymbol $sym1062$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1063$LINKAGE_GET_DAUGHTER_METHOD;
    private static final SubLSymbol $sym1064$GET_WORD;
    private static final SubLList $list1065;
    private static final SubLSymbol $sym1066$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1067$LINKAGE_GET_WORD_METHOD;
    private static final SubLList $list1068;
    private static final SubLSymbol $sym1069$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLList $list1070;
    private static final SubLSymbol $sym1071$LINKAGE_GET_HEADS_METHOD;
    private static final SubLList $list1072;
    private static final SubLSymbol $sym1073$LINKAGE_GET_HEAD_METHOD;
    private static final SubLList $list1074;
    private static final SubLSymbol $sym1075$LINKAGE_GET_SUBJECT_METHOD;
    private static final SubLList $list1076;
    private static final SubLSymbol $sym1077$LINKAGE_GET_DIRECT_OBJECT_METHOD;
    private static final SubLList $list1078;
    private static final SubLSymbol $sym1079$LINKAGE_GET_INDIRECT_OBJECT_METHOD;
    private static final SubLList $list1080;
    private static final SubLSymbol $sym1081$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1082$LINKAGE_CYCLIFY_INT_METHOD;
    private static final SubLList $list1083;
    private static final SubLSymbol $sym1084$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1085$SEMTRANS_LEXICON_P;
    private static final SubLSymbol $sym1086$LINKAGE_LEXIFY_METHOD;
    private static final SubLSymbol $sym1087$CYCLIFIABLE_QUESTION_P;
    private static final SubLList $list1088;
    private static final SubLSymbol $sym1089$SEARCH;
    private static final SubLString $str1090$_;
    private static final SubLSymbol $sym1091$LINKAGE_CYCLIFIABLE_QUESTION_P_METHOD;
    private static final SubLList $list1092;
    private static final SubLList $list1093;
    private static final SubLSymbol $sym1094$OUTER_CATCH_FOR_LINKAGE_METHOD;
    private static final SubLSymbol $sym1095$LINKAGE_SEARCH_METHOD;
    private static final SubLString $str1096$No_regex_pattern_for__a;
    private static final SubLSymbol $sym1097$UPPER_CASE_P;
    private static final SubLList $list1098;
    private static final SubLString $str1099$Inconsistent_class_evidence_from_;
    private static final SubLString $str1100$Couldn_t_strengthen_link_required;
    private static final SubLString $str1101$Disjunctive_class_evidence__a_for;
    private static final SubLInteger $int1102$45;
    private static final SubLString $str1103$data_pos_tagging_index_to_state_t;
    private static final SubLSymbol $kw1104$INPUT;
    private static final SubLString $str1105$Unable_to_open__S;
    private static final SubLList $list1106;
    private static final SubLSymbol $kw1107$UNINITIALIZED;
    private static final SubLSymbol $sym1108$SYMBOLP;
    private static final SubLSymbol $kw1109$AUX;
    private static final SubLSymbol $sym1110$_;
    private static final SubLList $list1111;
    private static final SubLString $str1112$linkage;
    private static final SubLString $str1113$_a_is_not_a_linkage_xml_string;
    private static final SubLString $str1114$links;
    private static final SubLString $str1115$tree;
    private static final SubLString $str1116$LEFT_WALL;
    private static final SubLString $str1117$RIGHT_WALL;
    private static final SubLString $str1118$name;
    private static final SubLString $str1119$left;
    private static final SubLString $str1120$right;
    private static final SubLString $str1121$phrase;
    private static final SubLString $str1122$_a_is_not_a_valid_xml_sexpr_tree_;
    private static final SubLString $str1123$cat;
    private static final SubLString $str1124$class;
    private static final SubLSymbol $kw1125$CYC;
    private static final SubLString $str1126$word;
    private static final SubLString $str1127$__;
    private static final SubLString $str1128$__W__;
    private static final SubLString $str1129$__;
    private static final SubLList $list1130;
    private static final SubLList $list1131;
    private static final SubLSymbol $sym1132$TEST_LINKAGE_WITH_RETOKENIZATION;
    private static final SubLSymbol $kw1133$TEST;
    private static final SubLSymbol $sym1134$SOME_LINKAGE_RESULTS;
    private static final SubLSymbol $kw1135$OWNER;
    private static final SubLSymbol $kw1136$CLASSES;
    private static final SubLSymbol $kw1137$KB;
    private static final SubLSymbol $kw1138$FULL;
    private static final SubLSymbol $kw1139$WORKING_;
    private static final SubLList $list1140;
    private static final SubLSymbol $sym1141$LINKS_HAVE_NAMES_;
    private static final SubLList $list1142;
    static  boolean assertionsDisabledSynth = true;
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 4301L)
    public static SubLObject link_pos_p(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(v_object.isChar() && linkage.NIL != Sequences.find(v_object, linkage.$link_poses$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 4536L)
    public static SubLObject link_parser_annotational_suffixes() {
        return (SubLObject)ConsesLow.list(linkage.$link_parser_unknown_string_suffix$.getGlobalValue(), linkage.$link_parser_guessed_string_suffix$.getGlobalValue());
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 17199L)
    public static SubLObject link_ping(SubLObject server, SubLObject port, SubLObject version) {
        if (server == linkage.UNPROVIDED) {
            server = linkage.$link_parser$.getDynamicValue();
        }
        if (port == linkage.UNPROVIDED) {
            port = linkage.$link_port$.getDynamicValue();
        }
        if (version == linkage.UNPROVIDED) {
            version = linkage.$cyc_link_interface$.getDynamicValue();
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject result = (SubLObject)linkage.NIL;
        SubLObject error = (SubLObject)linkage.NIL;
        try {
            thread.throwStack.push(subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
            final SubLObject _prev_bind_0 = Errors.$error_handler$.currentBinding(thread);
            try {
                Errors.$error_handler$.bind((SubLObject)linkage.$sym25$CATCH_ERROR_MESSAGE_HANDLER, thread);
                try {
                    result = interpret_link_response(link_execute((SubLObject)ConsesLow.listS((SubLObject)linkage.$kw10$CYC_LINK_INTERFACE, version, (SubLObject)linkage.$list26), server, port), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                }
                catch (Throwable catch_var) {
                    Errors.handleThrowable(catch_var, (SubLObject)linkage.NIL);
                }
            }
            finally {
                Errors.$error_handler$.rebind(_prev_bind_0, thread);
            }
        }
        catch (Throwable ccatch_env_var) {
            error = Errors.handleThrowable(ccatch_env_var, subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
        }
        finally {
            thread.throwStack.pop();
        }
        return (SubLObject)((linkage.NIL != result) ? list_utilities.sublisp_boolean(string_utilities.substringP((SubLObject)linkage.$str27$parseSentence_c, result, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 17864L)
    public static SubLObject link_parse(final SubLObject sentence, SubLObject options, SubLObject lexicon, SubLObject use_standardized_word_stringsP) {
        if (options == linkage.UNPROVIDED) {
            options = linkage.$link_parse_options$.getDynamicValue();
        }
        if (lexicon == linkage.UNPROVIDED) {
            lexicon = (SubLObject)linkage.NIL;
        }
        if (use_standardized_word_stringsP == linkage.UNPROVIDED) {
            use_standardized_word_stringsP = (SubLObject)linkage.T;
        }
        return interpret_link_response(link_execute(ConsesLow.append((SubLObject)ConsesLow.list((SubLObject)linkage.$kw29$COMMAND, (SubLObject)linkage.$str30$parse, (SubLObject)linkage.$kw31$SENTENCE, sentence), options), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED), lexicon, sentence, use_standardized_word_stringsP);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 18539L)
    public static SubLObject link_lex(final SubLObject lex, SubLObject options) {
        if (options == linkage.UNPROVIDED) {
            options = linkage.$link_parse_options$.getDynamicValue();
        }
        assert linkage.NIL != Types.stringp(lex) : lex;
        return interpret_link_response(link_execute(ConsesLow.append((SubLObject)ConsesLow.list((SubLObject)linkage.$kw29$COMMAND, (SubLObject)linkage.$str33$lex, (SubLObject)linkage.$kw34$LEX, lex), options), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 18749L)
    public static SubLObject link_execute(final SubLObject parameters, SubLObject server, SubLObject port) {
        if (server == linkage.UNPROVIDED) {
            server = linkage.$link_parser$.getDynamicValue();
        }
        if (port == linkage.UNPROVIDED) {
            port = linkage.$link_port$.getDynamicValue();
        }
        return conses_high.copy_list(link_execute_int(parameters, server, port));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 19240L)
    public static SubLObject clear_link_execute_int() {
        final SubLObject cs = linkage.$link_execute_int_caching_state$.getGlobalValue();
        if (linkage.NIL != cs) {
            memoization_state.caching_state_clear(cs);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 19240L)
    public static SubLObject remove_link_execute_int(final SubLObject parameters, SubLObject server, SubLObject port) {
        if (server == linkage.UNPROVIDED) {
            server = linkage.$link_parser$.getDynamicValue();
        }
        if (port == linkage.UNPROVIDED) {
            port = linkage.$link_port$.getDynamicValue();
        }
        return memoization_state.caching_state_remove_function_results_with_args(linkage.$link_execute_int_caching_state$.getGlobalValue(), (SubLObject)ConsesLow.list(parameters, server, port), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 19240L)
    public static SubLObject link_execute_int_internal(final SubLObject parameters, final SubLObject server, final SubLObject port) {
        SubLObject result = (SubLObject)linkage.NIL;
        SubLObject stream = (SubLObject)linkage.NIL;
        try {
            stream = subl_promotions.open_tcp_stream_with_timeout(server, port, (SubLObject)linkage.NIL, (SubLObject)linkage.$kw36$PUBLIC);
            if (linkage.NIL != subl_macro_promotions.validate_tcp_connection(stream, server, port)) {
                write_link_parameters(parameters, stream);
                streams_high.terpri(stream);
                streams_high.finish_output(stream);
                result = reader.read(stream, (SubLObject)linkage.NIL, (SubLObject)linkage.$list37, (SubLObject)linkage.UNPROVIDED);
            }
        }
        finally {
            final SubLObject _prev_bind_0 = Dynamic.currentBinding(Threads.$is_thread_performing_cleanupP$);
            try {
                Dynamic.bind(Threads.$is_thread_performing_cleanupP$, (SubLObject)linkage.T);
                final SubLObject _values = Values.getValuesAsVector();
                if (linkage.NIL != stream) {
                    streams_high.close(stream, (SubLObject)linkage.UNPROVIDED);
                }
                Values.restoreValuesFromVector(_values);
            }
            finally {
                Dynamic.rebind(Threads.$is_thread_performing_cleanupP$, _prev_bind_0);
            }
        }
        return result;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 19240L)
    public static SubLObject link_execute_int(final SubLObject parameters, SubLObject server, SubLObject port) {
        if (server == linkage.UNPROVIDED) {
            server = linkage.$link_parser$.getDynamicValue();
        }
        if (port == linkage.UNPROVIDED) {
            port = linkage.$link_port$.getDynamicValue();
        }
        SubLObject caching_state = linkage.$link_execute_int_caching_state$.getGlobalValue();
        if (linkage.NIL == caching_state) {
            caching_state = memoization_state.create_global_caching_state_for_name((SubLObject)linkage.$sym35$LINK_EXECUTE_INT, (SubLObject)linkage.$sym38$_LINK_EXECUTE_INT_CACHING_STATE_, (SubLObject)linkage.$int39$10000, (SubLObject)linkage.EQUAL, (SubLObject)linkage.THREE_INTEGER, (SubLObject)linkage.ZERO_INTEGER);
        }
        final SubLObject sxhash = memoization_state.sxhash_calc_3(parameters, server, port);
        final SubLObject collisions = memoization_state.caching_state_lookup(caching_state, sxhash, (SubLObject)linkage.UNPROVIDED);
        if (!collisions.eql(memoization_state.$memoized_item_not_found$.getGlobalValue())) {
            SubLObject cdolist_list_var = collisions;
            SubLObject collision = (SubLObject)linkage.NIL;
            collision = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                SubLObject cached_args = collision.first();
                final SubLObject results2 = conses_high.second(collision);
                if (parameters.equal(cached_args.first())) {
                    cached_args = cached_args.rest();
                    if (server.equal(cached_args.first())) {
                        cached_args = cached_args.rest();
                        if (linkage.NIL != cached_args && linkage.NIL == cached_args.rest() && port.equal(cached_args.first())) {
                            return memoization_state.caching_results(results2);
                        }
                    }
                }
                cdolist_list_var = cdolist_list_var.rest();
                collision = cdolist_list_var.first();
            }
        }
        final SubLObject results3 = Values.arg2(Values.resetMultipleValues(), (SubLObject)Values.multiple_value_list(link_execute_int_internal(parameters, server, port)));
        memoization_state.caching_state_enter_multi_key_n(caching_state, sxhash, collisions, results3, (SubLObject)ConsesLow.list(parameters, server, port));
        return memoization_state.caching_results(results3);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 19727L)
    public static SubLObject link_structure_spec_p(final SubLObject v_object) {
        return pattern_match.tree_matches_pattern(v_object, (SubLObject)linkage.$list40);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 19901L)
    public static SubLObject copy_link_structure_spec(final SubLObject link_structure_spec) {
        assert linkage.NIL != link_structure_spec_p(link_structure_spec) : link_structure_spec;
        final SubLObject new_link_structure_spec = (SubLObject)ConsesLow.make_list((SubLObject)linkage.FIVE_INTEGER, (SubLObject)linkage.UNPROVIDED);
        ConsesLow.set_nth((SubLObject)linkage.ZERO_INTEGER, new_link_structure_spec, (SubLObject)linkage.$kw42$LINKAGE);
        SubLObject current;
        final SubLObject datum = current = link_structure_spec.rest();
        SubLObject words = (SubLObject)linkage.NIL;
        SubLObject links = (SubLObject)linkage.NIL;
        SubLObject diagram = (SubLObject)linkage.NIL;
        SubLObject tree = (SubLObject)linkage.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list43);
        words = current.first();
        current = current.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list43);
        links = current.first();
        current = current.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list43);
        diagram = current.first();
        current = current.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list43);
        tree = current.first();
        current = current.rest();
        if (linkage.NIL == current) {
            ConsesLow.set_nth((SubLObject)linkage.ONE_INTEGER, new_link_structure_spec, vector_utilities.copy_vector(words));
            print_high.print(new_link_structure_spec, (SubLObject)linkage.UNPROVIDED);
            for (SubLObject sequence_var = words, end_index = (SubLObject)(sequence_var.isList() ? linkage.NIL : Sequences.length(sequence_var)), i = (SubLObject)linkage.ZERO_INTEGER, sequence_doneP = subl_macros.do_sequence_index_doneP(i, end_index, sequence_var); linkage.NIL == sequence_doneP; sequence_doneP = subl_macros.do_sequence_index_doneP(i, end_index, sequence_var)) {
                final SubLObject word = subl_macros.do_sequence_index_valueP(i, sequence_var);
                Vectors.set_aref(words, i, string_utilities.copy_string(word));
                sequence_var = subl_macros.do_sequence_index_update(sequence_var);
                i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER);
            }
            print_high.print(new_link_structure_spec, (SubLObject)linkage.UNPROVIDED);
            ConsesLow.set_nth((SubLObject)linkage.TWO_INTEGER, new_link_structure_spec, vector_utilities.copy_vector(links));
            print_high.print(new_link_structure_spec, (SubLObject)linkage.UNPROVIDED);
            ConsesLow.set_nth((SubLObject)linkage.THREE_INTEGER, new_link_structure_spec, string_utilities.copy_string(diagram));
            print_high.print(new_link_structure_spec, (SubLObject)linkage.UNPROVIDED);
            ConsesLow.set_nth((SubLObject)linkage.FOUR_INTEGER, new_link_structure_spec, string_utilities.copy_string(tree));
            print_high.print(new_link_structure_spec, (SubLObject)linkage.UNPROVIDED);
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)linkage.$list43);
        }
        return new_link_structure_spec;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 20817L)
    public static SubLObject clear_link_execute_cached() {
        final SubLObject cs = linkage.$link_execute_cached_caching_state$.getGlobalValue();
        if (linkage.NIL != cs) {
            memoization_state.caching_state_clear(cs);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 20817L)
    public static SubLObject remove_link_execute_cached(final SubLObject parameters, final SubLObject server, final SubLObject port) {
        return memoization_state.caching_state_remove_function_results_with_args(linkage.$link_execute_cached_caching_state$.getGlobalValue(), (SubLObject)ConsesLow.list(parameters, server, port), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 20817L)
    public static SubLObject link_execute_cached_internal(final SubLObject parameters, final SubLObject server, final SubLObject port) {
        SubLObject result = (SubLObject)linkage.NIL;
        SubLObject stream = (SubLObject)linkage.NIL;
        try {
            stream = subl_promotions.open_tcp_stream_with_timeout(server, port, (SubLObject)linkage.NIL, (SubLObject)linkage.$kw36$PUBLIC);
            if (linkage.NIL != subl_macro_promotions.validate_tcp_connection(stream, server, port)) {
                write_link_parameters(parameters, stream);
                streams_high.terpri(stream);
                streams_high.finish_output(stream);
                result = reader.read(stream, (SubLObject)linkage.NIL, (SubLObject)linkage.$list37, (SubLObject)linkage.UNPROVIDED);
            }
        }
        finally {
            final SubLObject _prev_bind_0 = Dynamic.currentBinding(Threads.$is_thread_performing_cleanupP$);
            try {
                Dynamic.bind(Threads.$is_thread_performing_cleanupP$, (SubLObject)linkage.T);
                final SubLObject _values = Values.getValuesAsVector();
                if (linkage.NIL != stream) {
                    streams_high.close(stream, (SubLObject)linkage.UNPROVIDED);
                }
                Values.restoreValuesFromVector(_values);
            }
            finally {
                Dynamic.rebind(Threads.$is_thread_performing_cleanupP$, _prev_bind_0);
            }
        }
        return result;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 20817L)
    public static SubLObject link_execute_cached(final SubLObject parameters, final SubLObject server, final SubLObject port) {
        SubLObject caching_state = linkage.$link_execute_cached_caching_state$.getGlobalValue();
        if (linkage.NIL == caching_state) {
            caching_state = memoization_state.create_global_caching_state_for_name((SubLObject)linkage.$sym44$LINK_EXECUTE_CACHED, (SubLObject)linkage.$sym45$_LINK_EXECUTE_CACHED_CACHING_STATE_, (SubLObject)linkage.$int46$500, (SubLObject)linkage.EQUAL, (SubLObject)linkage.THREE_INTEGER, (SubLObject)linkage.ZERO_INTEGER);
        }
        final SubLObject sxhash = memoization_state.sxhash_calc_3(parameters, server, port);
        final SubLObject collisions = memoization_state.caching_state_lookup(caching_state, sxhash, (SubLObject)linkage.UNPROVIDED);
        if (!collisions.eql(memoization_state.$memoized_item_not_found$.getGlobalValue())) {
            SubLObject cdolist_list_var = collisions;
            SubLObject collision = (SubLObject)linkage.NIL;
            collision = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                SubLObject cached_args = collision.first();
                final SubLObject results2 = conses_high.second(collision);
                if (parameters.equal(cached_args.first())) {
                    cached_args = cached_args.rest();
                    if (server.equal(cached_args.first())) {
                        cached_args = cached_args.rest();
                        if (linkage.NIL != cached_args && linkage.NIL == cached_args.rest() && port.equal(cached_args.first())) {
                            return memoization_state.caching_results(results2);
                        }
                    }
                }
                cdolist_list_var = cdolist_list_var.rest();
                collision = cdolist_list_var.first();
            }
        }
        final SubLObject results3 = Values.arg2(Values.resetMultipleValues(), (SubLObject)Values.multiple_value_list(link_execute_cached_internal(parameters, server, port)));
        memoization_state.caching_state_enter_multi_key_n(caching_state, sxhash, collisions, results3, (SubLObject)ConsesLow.list(parameters, server, port));
        return memoization_state.caching_results(results3);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 21248L)
    public static SubLObject write_link_parameters(SubLObject parameters, final SubLObject stream) {
        SubLObject key = (SubLObject)linkage.NIL;
        SubLObject value = (SubLObject)linkage.NIL;
        key = parameters.first();
        value = conses_high.second(parameters);
        while (linkage.NIL != parameters) {
            streams_high.write_string(Strings.string_downcase(Symbols.symbol_name(key), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            streams_high.write_string((SubLObject)linkage.$str47$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            print_high.prin1(value, stream);
            streams_high.write_string((SubLObject)linkage.$str48$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            parameters = conses_high.cddr(parameters);
            key = parameters.first();
            value = conses_high.second(parameters);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 21796L)
    public static SubLObject interpret_link_response(final SubLObject result, SubLObject lexicon, SubLObject input_sentence, SubLObject use_standardized_word_stringsP) {
        if (lexicon == linkage.UNPROVIDED) {
            lexicon = (SubLObject)linkage.NIL;
        }
        if (input_sentence == linkage.UNPROVIDED) {
            input_sentence = (SubLObject)linkage.NIL;
        }
        if (use_standardized_word_stringsP == linkage.UNPROVIDED) {
            use_standardized_word_stringsP = (SubLObject)linkage.NIL;
        }
        final SubLObject pcase_var;
        final SubLObject type = pcase_var = result.first();
        if (pcase_var.eql((SubLObject)linkage.$kw42$LINKAGE)) {
            return new_link_structures(result.rest(), lexicon, input_sentence, use_standardized_word_stringsP);
        }
        if (pcase_var.eql((SubLObject)linkage.$kw49$ERROR)) {
            Errors.error(conses_high.second(result));
        }
        else {
            if (pcase_var.eql((SubLObject)linkage.$kw50$STATUS)) {
                return conses_high.second(result);
            }
            if (pcase_var.eql((SubLObject)linkage.$kw34$LEX)) {
                return result.rest();
            }
            if (pcase_var.eql((SubLObject)linkage.$kw51$EOF)) {
                return (SubLObject)linkage.NIL;
            }
            Errors.error((SubLObject)linkage.$str52$Unknown_link_response__a, type);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 22474L)
    public static SubLObject new_link_structures(final SubLObject response, SubLObject lexicon, SubLObject input_sentence, SubLObject use_standardized_word_stringsP) {
        if (lexicon == linkage.UNPROVIDED) {
            lexicon = (SubLObject)linkage.NIL;
        }
        if (input_sentence == linkage.UNPROVIDED) {
            input_sentence = (SubLObject)linkage.NIL;
        }
        if (use_standardized_word_stringsP == linkage.UNPROVIDED) {
            use_standardized_word_stringsP = (SubLObject)linkage.NIL;
        }
        SubLObject link_structures = (SubLObject)linkage.NIL;
        SubLObject remaining;
        SubLObject words;
        SubLObject links;
        SubLObject diagram;
        SubLObject tree;
        for (remaining = (SubLObject)linkage.NIL, remaining = response; linkage.NIL != remaining; remaining = list_utilities.cdddr(remaining).rest()) {
            words = clean_up_link_word_strings(remaining.first());
            links = (SubLObject)((linkage.NIL != words) ? ((linkage.NIL != lexicon) ? update_links(words, conses_high.second(remaining), lexicon, input_sentence) : conses_high.second(remaining)) : linkage.NIL);
            diagram = conses_high.third(remaining);
            tree = conses_high.fourth(remaining);
            if (linkage.NIL == use_standardized_word_stringsP) {
                post_process_link_words(words, input_sentence);
            }
            link_structures = (SubLObject)ConsesLow.cons(new_link_structure(words, links, diagram, tree), link_structures);
        }
        return Sequences.nreverse(link_structures);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 23397L)
    public static SubLObject clean_up_link_word_strings(final SubLObject link_word_strings) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL == link_word_strings) {
            return (SubLObject)linkage.NIL;
        }
        final SubLObject clean_link_word_strings = Vectors.make_vector(Sequences.length(link_word_strings), (SubLObject)linkage.UNPROVIDED);
        SubLObject link_parser_failedP = (SubLObject)linkage.NIL;
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject i;
        SubLObject link_word_string;
        SubLObject word_string;
        SubLObject pos;
        for (length = Sequences.length(link_word_strings), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            i = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            link_word_string = Vectors.aref(link_word_strings, i);
            thread.resetMultipleValues();
            word_string = split_link_word(link_word_string);
            pos = thread.secondMultipleValue();
            thread.resetMultipleValues();
            if (linkage.NIL != null_link_token_string_p(word_string)) {
                word_string = linkage_assertion.strip_null_link_token_string_brackets(word_string);
                link_parser_failedP = (SubLObject)linkage.T;
            }
            word_string = link_word_strip_annotational_suffixes(word_string);
            if (linkage.NIL != pos) {
                Vectors.set_aref(clean_link_word_strings, i, Sequences.cconcatenate(format_nil.format_nil_a_no_copy(word_string), new SubLObject[] { linkage.$str53$_, format_nil.format_nil_a_no_copy(pos) }));
            }
            else {
                Vectors.set_aref(clean_link_word_strings, i, word_string);
            }
        }
        return Values.values(clean_link_word_strings, link_parser_failedP);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 24782L)
    public static SubLObject post_process_link_words(final SubLObject words, final SubLObject input_sentence) {
        return restore_link_words_capitalization(words, input_sentence);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 25035L)
    public static SubLObject restore_link_words_capitalization(final SubLObject words, final SubLObject input_sentence) {
        SubLObject target_positionP;
        final SubLObject sentence_has_quoteP = target_positionP = Sequences.find((SubLObject)Characters.CHAR_quotation, input_sentence, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        SubLObject input_sentence_index = (SubLObject)linkage.ZERO_INTEGER;
        for (SubLObject sequence_var = words, end_index = (SubLObject)(sequence_var.isList() ? linkage.NIL : Sequences.length(sequence_var)), i = (SubLObject)linkage.ZERO_INTEGER, sequence_doneP = subl_macros.do_sequence_index_doneP(i, end_index, sequence_var); linkage.NIL == sequence_doneP; sequence_doneP = subl_macros.do_sequence_index_doneP(i, end_index, sequence_var)) {
            final SubLObject word = subl_macros.do_sequence_index_valueP(i, sequence_var);
            if (linkage.NIL != target_positionP && !word_to_class(word).eql((SubLObject)linkage.$sym54$WALL_LINK_WORD)) {
                final SubLObject word_copy = string_utilities.copy_string(word);
                input_sentence_index = try_to_restore_link_word_capitalization(word_copy, input_sentence, input_sentence_index);
                Vectors.set_aref(words, i, word_copy);
            }
            target_positionP = (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != sentence_has_quoteP || linkage.NIL != link_words_sometimes_downcased_after_word_p(word));
            sequence_var = subl_macros.do_sequence_index_update(sequence_var);
            i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER);
        }
        return words;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 25985L)
    public static SubLObject try_to_restore_link_word_capitalization(final SubLObject word, final SubLObject input_sentence, SubLObject input_sentence_index) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject word_length = link_word_unannotated_length(word);
        final SubLObject null_link_token_stringP = null_link_token_string_p(word);
        final SubLObject original_start = Sequences.search(word, input_sentence, Symbols.symbol_function((SubLObject)linkage.EQUALP), Symbols.symbol_function((SubLObject)linkage.IDENTITY), (SubLObject)((linkage.NIL != null_link_token_stringP) ? linkage.ONE_INTEGER : linkage.ZERO_INTEGER), (linkage.NIL != null_link_token_stringP) ? number_utilities.f_1X(word_length) : word_length, input_sentence_index, (SubLObject)linkage.UNPROVIDED);
        if (linkage.NIL != original_start) {
            final SubLObject string_var;
            final SubLObject original = string_var = string_utilities.substring(input_sentence, original_start, Numbers.add(original_start, word_length));
            SubLObject end_var_$1;
            SubLObject end_var;
            SubLObject n;
            SubLObject v_char;
            for (end_var = (end_var_$1 = Sequences.length(string_var)), n = (SubLObject)linkage.NIL, n = (SubLObject)linkage.ZERO_INTEGER; !n.numGE(end_var_$1); n = number_utilities.f_1X(n)) {
                v_char = Strings.sublisp_char(string_var, n);
                string_utilities.set_nth_char((linkage.NIL != null_link_token_stringP) ? number_utilities.f_1X(n) : n, word, v_char, (SubLObject)linkage.UNPROVIDED);
            }
            input_sentence_index = Numbers.add(input_sentence_index, Sequences.length(original));
        }
        else if (linkage.NIL != linkage.$show_link_warnings$.getDynamicValue(thread)) {
            Errors.warn((SubLObject)linkage.$str55$Couldn_t_find__S_in__S, word, input_sentence);
        }
        return input_sentence_index;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 26824L)
    public static SubLObject link_word_unannotated_length(final SubLObject word) {
        final SubLObject null_link_token_stringP = null_link_token_string_p(word);
        final SubLObject raw_word_length = (linkage.NIL != null_link_token_stringP) ? Numbers.subtract(Sequences.length(word), (SubLObject)linkage.TWO_INTEGER) : Sequences.length(word);
        SubLObject word_length = (linkage.NIL != pos_tagged_link_word_p(word)) ? Numbers.subtract(raw_word_length, (SubLObject)linkage.TWO_INTEGER) : raw_word_length;
        SubLObject cdolist_list_var = link_parser_annotational_suffixes();
        SubLObject suffix = (SubLObject)linkage.NIL;
        suffix = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            final SubLObject suffix_length = Sequences.length(suffix);
            if (word_length.numG(suffix_length) && suffix.equal(string_utilities.substring(word, Numbers.subtract(word_length, suffix_length), word_length))) {
                word_length = Numbers.subtract(word_length, suffix_length);
            }
            cdolist_list_var = cdolist_list_var.rest();
            suffix = cdolist_list_var.first();
        }
        return word_length;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 27607L)
    public static SubLObject link_word_strip_annotational_suffixes(SubLObject word) {
        assert linkage.NIL != Types.stringp(word) : word;
        SubLObject found_oneP;
        for (SubLObject passed_unchangedP = (SubLObject)linkage.NIL; linkage.NIL == passed_unchangedP; passed_unchangedP = (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL == found_oneP)) {
            found_oneP = (SubLObject)linkage.NIL;
            if (linkage.NIL == found_oneP) {
                SubLObject csome_list_var = link_parser_annotational_suffixes();
                SubLObject suffix = (SubLObject)linkage.NIL;
                suffix = csome_list_var.first();
                while (linkage.NIL == found_oneP && linkage.NIL != csome_list_var) {
                    if (linkage.NIL != string_utilities.ends_with(word, suffix, (SubLObject)linkage.UNPROVIDED)) {
                        word = string_utilities.post_remove(word, suffix, (SubLObject)linkage.UNPROVIDED);
                        found_oneP = (SubLObject)linkage.T;
                    }
                    csome_list_var = csome_list_var.rest();
                    suffix = csome_list_var.first();
                }
            }
        }
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 28025L)
    public static SubLObject link_words_sometimes_downcased_after_word_p(final SubLObject word) {
        return subl_promotions.memberP(word, (SubLObject)linkage.$list56, Symbols.symbol_function((SubLObject)linkage.EQUALP), (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 28145L)
    public static SubLObject null_link_token_string_p(final SubLObject token_string) {
        return (SubLObject)SubLObjectFactory.makeBoolean(token_string.isString() && string_utilities.first_char(token_string).eql((SubLObject)Characters.CHAR_lbracket) && string_utilities.last_char(token_string).eql((SubLObject)Characters.CHAR_rbracket) && linkage.NIL != list_utilities.lengthG(token_string, (SubLObject)linkage.TWO_INTEGER, (SubLObject)linkage.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 28355L)
    public static SubLObject new_link_structure(final SubLObject words, final SubLObject links, SubLObject diagram, SubLObject tree) {
        if (diagram == linkage.UNPROVIDED) {
            diagram = (SubLObject)linkage.NIL;
        }
        if (tree == linkage.UNPROVIDED) {
            tree = (SubLObject)linkage.NIL;
        }
        return Vectors.vector(new SubLObject[] { words, links, diagram, tree });
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 28547L)
    public static SubLObject update_links(final SubLObject strings, final SubLObject links, final SubLObject lexicon, final SubLObject input_sentence) {
        return Functions.apply(Symbols.symbol_function((SubLObject)linkage.$sym57$VECTOR), ConsesLow.append(vector_utilities.vector_elements(links, (SubLObject)linkage.UNPROVIDED), new_id_links(vector_utilities.vector_elements(strings, (SubLObject)linkage.UNPROVIDED), lexicon, input_sentence)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 28804L)
    public static SubLObject token_using_lexicon_prefixes(final SubLObject string, final SubLObject lexicon) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject prefixes_and_maybe_string = methods.funcall_instance_method_with_1_args(lexicon, (SubLObject)linkage.$sym58$PREFIX_KEYS_FROM_STRING, string);
        final SubLObject prefixes = prefixes_and_maybe_string.first();
        final SubLObject prefix_string = conses_high.second(prefixes_and_maybe_string);
        SubLObject err_msg = (SubLObject)linkage.NIL;
        SubLObject token = (SubLObject)linkage.NIL;
        if (linkage.NIL != string_utilities.starts_with(string, prefix_string)) {
            return prefix_string;
        }
        final SubLObject prefix = prefixes.first();
        if (linkage.NIL != prefix) {
            try {
                thread.throwStack.push(subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
                final SubLObject _prev_bind_0 = Errors.$error_handler$.currentBinding(thread);
                try {
                    Errors.$error_handler$.bind((SubLObject)linkage.$sym25$CATCH_ERROR_MESSAGE_HANDLER, thread);
                    try {
                        token = string_utilities.bunge_according_to_string(prefix, string, (SubLObject)linkage.$list59, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                    }
                    catch (Throwable catch_var) {
                        Errors.handleThrowable(catch_var, (SubLObject)linkage.NIL);
                    }
                }
                finally {
                    Errors.$error_handler$.rebind(_prev_bind_0, thread);
                }
            }
            catch (Throwable ccatch_env_var) {
                err_msg = Errors.handleThrowable(ccatch_env_var, subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
            }
            finally {
                thread.throwStack.pop();
            }
            if (linkage.NIL != err_msg) {
                Errors.warn((SubLObject)linkage.$str60$Failed_to_bunge_according_to_stri, err_msg);
            }
        }
        return token;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 29508L)
    public static SubLObject link_subtokenP(final SubLObject subtoken, final SubLObject token) {
        if (linkage.NIL != list_utilities.lengthE(subtoken, (SubLObject)linkage.ONE_INTEGER, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != link_attached_symbolP(string_utilities.first_char(subtoken))) {
            return string_utilities.substringP(subtoken, token, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        }
        return string_utilities.subwordP(subtoken, token, (SubLObject)linkage.$list61, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 29757L)
    public static SubLObject link_attached_symbolP(final SubLObject v_char) {
        return (SubLObject)SubLObjectFactory.makeBoolean(v_char.isChar() && (linkage.NIL != string_utilities.punctuation_p(v_char) || linkage.NIL != Sequences.find(v_char, (SubLObject)linkage.$str62$_____, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 29894L)
    public static SubLObject new_id_links(final SubLObject strings, final SubLObject lexicon, SubLObject sentence) {
        final SubLObject tokens = Mapping.mapcar((SubLObject)linkage.$sym63$SPLIT_LINK_WORD, strings);
        SubLObject index = (SubLObject)linkage.ONE_INTEGER;
        SubLObject links = (SubLObject)linkage.NIL;
        sentence = string_utilities.trim_whitespace(sentence);
        sentence = string_utilities.strip_punctuation(sentence);
        sentence = Sequences.remove((SubLObject)Characters.CHAR_newline, string_utilities.remove_substring(sentence, (SubLObject)linkage.$str64$_), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        while (linkage.NIL != sentence) {
            final SubLObject relevant_tokens = conses_high.nthcdr(index, tokens);
            SubLObject complex_token = token_using_lexicon_prefixes(sentence, lexicon);
            SubLObject n = (SubLObject)linkage.ZERO_INTEGER;
            final SubLObject first_relevant_token = relevant_tokens.first();
            if (linkage.NIL != complex_token) {
                SubLObject index_inc = (SubLObject)linkage.NIL;
                if (linkage.NIL == index_inc) {
                    SubLObject csome_list_var = relevant_tokens;
                    SubLObject token = (SubLObject)linkage.NIL;
                    token = csome_list_var.first();
                    while (linkage.NIL == index_inc && linkage.NIL != csome_list_var) {
                        if (linkage.NIL != link_subtokenP(token, complex_token)) {
                            n = Numbers.add(n, (SubLObject)linkage.ONE_INTEGER);
                        }
                        else {
                            index_inc = (SubLObject)(n.numG((SubLObject)linkage.ZERO_INTEGER) ? n : linkage.ONE_INTEGER);
                        }
                        csome_list_var = csome_list_var.rest();
                        token = csome_list_var.first();
                    }
                }
                if (n.numG((SubLObject)linkage.ONE_INTEGER)) {
                    SubLObject cdotimes_end_var;
                    SubLObject i;
                    for (cdotimes_end_var = number_utilities.f_1_(n), i = (SubLObject)linkage.NIL, i = (SubLObject)linkage.ZERO_INTEGER; i.numL(cdotimes_end_var); i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER)) {
                        links = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.list((SubLObject)linkage.$str65$IDXX, Numbers.add(index, i), Numbers.add(index, i, (SubLObject)linkage.ONE_INTEGER)), links);
                    }
                }
                index = Numbers.add(index, index_inc);
            }
            else {
                index = Numbers.add(index, (SubLObject)linkage.ONE_INTEGER);
                complex_token = first_relevant_token;
            }
            if (linkage.NIL != list_utilities.greater_length_p(first_relevant_token, complex_token)) {
                complex_token = first_relevant_token;
            }
            if (linkage.NIL != complex_token && linkage.NIL != list_utilities.greater_length_p(sentence, complex_token)) {
                sentence = string_utilities.trim_whitespace(string_utilities.substring(sentence, Sequences.length(complex_token), (SubLObject)linkage.UNPROVIDED));
            }
            else {
                sentence = (SubLObject)linkage.NIL;
            }
        }
        return links;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 31296L)
    public static SubLObject ls_words(final SubLObject ls) {
        return Vectors.aref(ls, (SubLObject)linkage.ZERO_INTEGER);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 31467L)
    public static SubLObject ls_links(final SubLObject ls) {
        return Vectors.aref(ls, (SubLObject)linkage.ONE_INTEGER);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 31609L)
    public static SubLObject ls_diagram(final SubLObject ls) {
        return Vectors.aref(ls, (SubLObject)linkage.TWO_INTEGER);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 31750L)
    public static SubLObject ls_tree(final SubLObject ls) {
        return Vectors.aref(ls, (SubLObject)linkage.THREE_INTEGER);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 31885L)
    public static SubLObject ls_number_of_words(final SubLObject ls) {
        return Sequences.length(ls_words(ls));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 32059L)
    public static SubLObject ls_number_of_links(final SubLObject ls) {
        return Sequences.length(ls_links(ls));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 32233L)
    public static SubLObject ls_link(final SubLObject ls, final SubLObject i) {
        return Vectors.aref(ls_links(ls), i);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 32431L)
    public static SubLObject ls_name_of_link(final SubLObject ls, final SubLObject i) {
        return ls_link(ls, i).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 32647L)
    public static SubLObject ls_lword_index_of_link(final SubLObject ls, final SubLObject i) {
        return conses_high.second(ls_link(ls, i));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 32900L)
    public static SubLObject ls_rword_index_of_link(final SubLObject ls, final SubLObject i) {
        return conses_high.third(ls_link(ls, i));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 33153L)
    public static SubLObject ls_word_of_linkage(final SubLObject ls, final SubLObject i) {
        return Vectors.aref(ls_words(ls), i);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 33700L)
    public static SubLObject reinitialize_linkage() {
        finalize_linkage();
        initialize_linkage();
        return (SubLObject)linkage.T;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 33798L)
    public static SubLObject initialize_linkage() {
        initialize_link_regex_patterns();
        initialize_pos_evidence_tables();
        return (SubLObject)linkage.T;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 33920L)
    public static SubLObject finalize_linkage() {
        finalize_pos_evidence_tables();
        finalize_link_regex_patterns();
        return (SubLObject)linkage.T;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 34036L)
    public static SubLObject ensure_linkage_initialized() {
        if (linkage.NIL == link_regex_patterns_initializedP()) {
            initialize_link_regex_patterns();
        }
        if (linkage.NIL == pos_evidence_tables_initializedP()) {
            initialize_pos_evidence_tables();
        }
        return (SubLObject)linkage.T;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 34316L)
    public static SubLObject link_tree_patterns_initializedP() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != linkage.$category_pattern$.getDynamicValue(thread) && linkage.NIL != linkage.$word_pattern$.getDynamicValue(thread) && linkage.NIL != linkage.$paren_pattern$.getDynamicValue(thread));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 34434L)
    public static SubLObject initialize_link_regex_patterns() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject cdolist_list_var = linkage.$link_patterns$.getDynamicValue(thread);
        SubLObject keyXregex = (SubLObject)linkage.NIL;
        keyXregex = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            linkage.$link_pattern_table$.setDynamicValue((SubLObject)ConsesLow.cons((SubLObject)ConsesLow.cons(keyXregex.first(), regular_expressions.compile_regular_expression(keyXregex.rest(), (SubLObject)linkage.UNPROVIDED)), linkage.$link_pattern_table$.getDynamicValue(thread)), thread);
            cdolist_list_var = cdolist_list_var.rest();
            keyXregex = cdolist_list_var.first();
        }
        return linkage.$link_pattern_table$.getDynamicValue(thread);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 34666L)
    public static SubLObject finalize_link_regex_patterns() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject cdolist_list_var = linkage.$link_pattern_table$.getDynamicValue(thread);
        SubLObject keyXpattern = (SubLObject)linkage.NIL;
        keyXpattern = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            regular_expressions.discard_regular_expression_pattern(keyXpattern.rest());
            cdolist_list_var = cdolist_list_var.rest();
            keyXpattern = cdolist_list_var.first();
        }
        linkage.$link_pattern_table$.setDynamicValue((SubLObject)linkage.NIL, thread);
        return linkage.$link_pattern_table$.getDynamicValue(thread);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 34886L)
    public static SubLObject link_regex_patterns_initializedP() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return linkage.$link_pattern_table$.getDynamicValue(thread);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 34969L)
    public static SubLObject initialize_pos_evidence_tables() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        linkage.$llink_table$.setGlobalValue(alist_to_hashtable(linkage.$left_link_to_class$.getDynamicValue(thread), (SubLObject)linkage.EQUAL));
        linkage.$rlink_table$.setGlobalValue(alist_to_hashtable(linkage.$right_link_to_class$.getDynamicValue(thread), (SubLObject)linkage.EQUAL));
        linkage.$pos_class_table$.setGlobalValue(alist_to_hashtable(linkage.$penn_pos_to_classes$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED));
        linkage.$class_pos_table$.setGlobalValue(alist_to_hashtable_reverse(linkage.$penn_pos_to_classes$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED));
        linkage.$word_pos_probabilities$.setGlobalValue(file_hash_table.open_file_hash_table_read_only((SubLObject)linkage.$str66$data_pos_tagging_states_fht, Symbols.symbol_function((SubLObject)linkage.EQUAL), (SubLObject)linkage.$kw67$IMAGE_INDEPENDENT_CFASL));
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 35548L)
    public static SubLObject finalize_pos_evidence_tables() {
        linkage.$llink_table$.setGlobalValue((SubLObject)linkage.NIL);
        linkage.$rlink_table$.setGlobalValue((SubLObject)linkage.NIL);
        linkage.$pos_class_table$.setGlobalValue((SubLObject)linkage.NIL);
        linkage.$class_pos_table$.setGlobalValue((SubLObject)linkage.NIL);
        if (linkage.NIL != file_hash_table.file_hash_table_p(linkage.$word_pos_probabilities$.getGlobalValue())) {
            file_hash_table.finalize_file_hash_table(linkage.$word_pos_probabilities$.getGlobalValue());
        }
        linkage.$word_pos_probabilities$.setGlobalValue((SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 35949L)
    public static SubLObject pos_evidence_tables_initializedP() {
        return (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != linkage.$llink_table$.getGlobalValue() && linkage.NIL != linkage.$rlink_table$.getGlobalValue() && linkage.NIL != linkage.$pos_class_table$.getGlobalValue() && linkage.NIL != linkage.$class_pos_table$.getGlobalValue() && linkage.NIL != linkage.$word_pos_probabilities$.getGlobalValue());
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36191L)
    public static SubLObject alist_to_hashtable(final SubLObject list, SubLObject test) {
        if (test == linkage.UNPROVIDED) {
            test = (SubLObject)linkage.EQL;
        }
        assert linkage.NIL != Types.listp(list) : list;
        final SubLObject table = Hashtables.make_hash_table(Sequences.length(list), test, (SubLObject)linkage.UNPROVIDED);
        SubLObject cdolist_list_var = list;
        SubLObject entry = (SubLObject)linkage.NIL;
        entry = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            Hashtables.sethash(entry.first(), table, entry.rest());
            cdolist_list_var = cdolist_list_var.rest();
            entry = cdolist_list_var.first();
        }
        return table;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36428L)
    public static SubLObject alist_to_hashtable_reverse(final SubLObject list, SubLObject test) {
        if (test == linkage.UNPROVIDED) {
            test = (SubLObject)linkage.EQL;
        }
        assert linkage.NIL != Types.listp(list) : list;
        final SubLObject table = Hashtables.make_hash_table(Sequences.length(list), test, (SubLObject)linkage.UNPROVIDED);
        SubLObject cdolist_list_var = list;
        SubLObject entry = (SubLObject)linkage.NIL;
        entry = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            SubLObject cdolist_list_var_$2 = entry.rest();
            SubLObject key = (SubLObject)linkage.NIL;
            key = cdolist_list_var_$2.first();
            while (linkage.NIL != cdolist_list_var_$2) {
                SubLObject value = Hashtables.gethash(key, table, (SubLObject)linkage.UNPROVIDED);
                value = (SubLObject)ConsesLow.cons(entry.first(), value);
                Hashtables.sethash(key, table, value);
                cdolist_list_var_$2 = cdolist_list_var_$2.rest();
                key = cdolist_list_var_$2.first();
            }
            cdolist_list_var = cdolist_list_var.rest();
            entry = cdolist_list_var.first();
        }
        return table;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject link_print_function_trampoline(final SubLObject v_object, final SubLObject stream) {
        print_linkage_link(v_object, stream, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject link_p(final SubLObject v_object) {
        return (SubLObject)((v_object.getClass() == $link_native.class) ? linkage.T : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject link_name(final SubLObject v_object) {
        assert linkage.NIL != link_p(v_object) : v_object;
        return v_object.getField2();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject link_left_word(final SubLObject v_object) {
        assert linkage.NIL != link_p(v_object) : v_object;
        return v_object.getField3();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject link_right_word(final SubLObject v_object) {
        assert linkage.NIL != link_p(v_object) : v_object;
        return v_object.getField4();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject _csetf_link_name(final SubLObject v_object, final SubLObject value) {
        assert linkage.NIL != link_p(v_object) : v_object;
        return v_object.setField2(value);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject _csetf_link_left_word(final SubLObject v_object, final SubLObject value) {
        assert linkage.NIL != link_p(v_object) : v_object;
        return v_object.setField3(value);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject _csetf_link_right_word(final SubLObject v_object, final SubLObject value) {
        assert linkage.NIL != link_p(v_object) : v_object;
        return v_object.setField4(value);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject make_link(SubLObject arglist) {
        if (arglist == linkage.UNPROVIDED) {
            arglist = (SubLObject)linkage.NIL;
        }
        final SubLObject v_new = (SubLObject)new $link_native();
        SubLObject next;
        SubLObject current_arg;
        SubLObject current_value;
        SubLObject pcase_var;
        for (next = (SubLObject)linkage.NIL, next = arglist; linkage.NIL != next; next = conses_high.cddr(next)) {
            current_arg = next.first();
            current_value = conses_high.cadr(next);
            pcase_var = current_arg;
            if (pcase_var.eql((SubLObject)linkage.$kw84$NAME)) {
                _csetf_link_name(v_new, current_value);
            }
            else if (pcase_var.eql((SubLObject)linkage.$kw85$LEFT_WORD)) {
                _csetf_link_left_word(v_new, current_value);
            }
            else if (pcase_var.eql((SubLObject)linkage.$kw86$RIGHT_WORD)) {
                _csetf_link_right_word(v_new, current_value);
            }
            else {
                Errors.error((SubLObject)linkage.$str87$Invalid_slot__S_for_construction_, current_arg);
            }
        }
        return v_new;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject visit_defstruct_link(final SubLObject obj, final SubLObject visitor_fn) {
        Functions.funcall(visitor_fn, obj, (SubLObject)linkage.$kw88$BEGIN, (SubLObject)linkage.$sym89$MAKE_LINK, (SubLObject)linkage.THREE_INTEGER);
        Functions.funcall(visitor_fn, obj, (SubLObject)linkage.$kw90$SLOT, (SubLObject)linkage.$kw84$NAME, link_name(obj));
        Functions.funcall(visitor_fn, obj, (SubLObject)linkage.$kw90$SLOT, (SubLObject)linkage.$kw85$LEFT_WORD, link_left_word(obj));
        Functions.funcall(visitor_fn, obj, (SubLObject)linkage.$kw90$SLOT, (SubLObject)linkage.$kw86$RIGHT_WORD, link_right_word(obj));
        Functions.funcall(visitor_fn, obj, (SubLObject)linkage.$kw91$END, (SubLObject)linkage.$sym89$MAKE_LINK, (SubLObject)linkage.THREE_INTEGER);
        return obj;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36757L)
    public static SubLObject visit_defstruct_object_link_method(final SubLObject obj, final SubLObject visitor_fn) {
        return visit_defstruct_link(obj, visitor_fn);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 36971L)
    public static SubLObject print_linkage_link(final SubLObject link, final SubLObject stream, final SubLObject depth) {
        streams_high.write_string((SubLObject)linkage.$str93$__LINK_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        streams_high.write_string(link_name(link), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        streams_high.write_string((SubLObject)linkage.$str94$__, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        if (linkage.NIL != link_left_word(link)) {
            streams_high.write_string(methods.funcall_instance_method_with_0_args(link_left_word(link), (SubLObject)linkage.$sym95$GET_STRING), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        }
        streams_high.write_string((SubLObject)linkage.$str96$__, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        if (linkage.NIL != link_right_word(link)) {
            streams_high.write_string(methods.funcall_instance_method_with_0_args(link_right_word(link), (SubLObject)linkage.$sym95$GET_STRING), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        }
        streams_high.write_string((SubLObject)linkage.$str97$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        return link;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 37419L)
    public static SubLObject new_link(final SubLObject name) {
        final SubLObject link = make_link((SubLObject)linkage.UNPROVIDED);
        _csetf_link_name(link, name);
        return link;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 37579L)
    public static SubLObject link_contains_wall_link_wordP(final SubLObject link) {
        return (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != wall_link_word_p(link_left_word(link)) || linkage.NIL != wall_link_word_p(link_right_word(link)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 37839L)
    public static SubLObject link_contains_wall_word_linkage_wordP(final SubLObject link) {
        return (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != word_linkage.wall_word_linkage_wordP(link_left_word(link)) || linkage.NIL != word_linkage.wall_word_linkage_wordP(link_right_word(link)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject get_link_tree_modifiers(final SubLObject link_tree) {
        return classes.subloop_get_access_protected_instance_slot(link_tree, (SubLObject)linkage.FIVE_INTEGER, (SubLObject)linkage.$sym102$MODIFIERS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject set_link_tree_modifiers(final SubLObject link_tree, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_tree, value, (SubLObject)linkage.FIVE_INTEGER, (SubLObject)linkage.$sym102$MODIFIERS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject get_link_tree_index(final SubLObject link_tree) {
        return classes.subloop_get_access_protected_instance_slot(link_tree, (SubLObject)linkage.FOUR_INTEGER, (SubLObject)linkage.$sym103$INDEX);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject set_link_tree_index(final SubLObject link_tree, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_tree, value, (SubLObject)linkage.FOUR_INTEGER, (SubLObject)linkage.$sym103$INDEX);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject get_link_tree_mother(final SubLObject link_tree) {
        return classes.subloop_get_access_protected_instance_slot(link_tree, (SubLObject)linkage.THREE_INTEGER, (SubLObject)linkage.$sym104$MOTHER);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject set_link_tree_mother(final SubLObject link_tree, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_tree, value, (SubLObject)linkage.THREE_INTEGER, (SubLObject)linkage.$sym104$MOTHER);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject get_link_tree_heads(final SubLObject link_tree) {
        return classes.subloop_get_access_protected_instance_slot(link_tree, (SubLObject)linkage.TWO_INTEGER, (SubLObject)linkage.$sym105$HEADS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject set_link_tree_heads(final SubLObject link_tree, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_tree, value, (SubLObject)linkage.TWO_INTEGER, (SubLObject)linkage.$sym105$HEADS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject get_link_tree_pos(final SubLObject link_tree) {
        return classes.subloop_get_access_protected_instance_slot(link_tree, (SubLObject)linkage.ONE_INTEGER, (SubLObject)linkage.$sym106$POS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject set_link_tree_pos(final SubLObject link_tree, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_tree, value, (SubLObject)linkage.ONE_INTEGER, (SubLObject)linkage.$sym106$POS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject subloop_reserved_initialize_link_tree_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject subloop_reserved_initialize_link_tree_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 38150L)
    public static SubLObject link_tree_p(final SubLObject link_tree) {
        return classes.subloop_instanceof_class(link_tree, (SubLObject)linkage.$sym98$LINK_TREE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 39174L)
    public static SubLObject link_tree_get_modifiers_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject modifiers = get_link_tree_modifiers(self);
        try {
            thread.throwStack.push(linkage.$sym115$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym115$OUTER_CATCH_FOR_LINK_TREE_METHOD, modifiers);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_modifiers(self, modifiers);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym115$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 39312L)
    public static SubLObject link_tree_get_modifieds_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 39484L)
    public static SubLObject link_tree_print_method(final SubLObject self, final SubLObject stream, final SubLObject depth) {
        return pprint_link_tree(self, stream, (SubLObject)linkage.ZERO_INTEGER);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 39656L)
    public static SubLObject link_tree_xml_method(final SubLObject self, final SubLObject stream, final SubLObject indent) {
        return link_tree_xml(self, stream, indent);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 39828L)
    public static SubLObject link_tree_get_category_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject pos = get_link_tree_pos(self);
        try {
            thread.throwStack.push(linkage.$sym131$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym131$OUTER_CATCH_FOR_LINK_TREE_METHOD, pos);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_pos(self, pos);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym131$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 39950L)
    public static SubLObject link_tree_get_root_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym135$GET_LINKAGE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 40083L)
    public static SubLObject link_tree_root_p_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject mother = get_link_tree_mother(self);
        try {
            thread.throwStack.push(linkage.$sym139$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym139$OUTER_CATCH_FOR_LINK_TREE_METHOD, (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL == mother));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_mother(self, mother);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym139$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 40222L)
    public static SubLObject link_tree_get_mother_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject mother = get_link_tree_mother(self);
        try {
            thread.throwStack.push(linkage.$sym143$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym143$OUTER_CATCH_FOR_LINK_TREE_METHOD, mother);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_mother(self, mother);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym143$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 40348L)
    public static SubLObject link_tree_get_refs_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject heads = get_link_tree_heads(self);
        try {
            thread.throwStack.push(linkage.$sym147$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                SubLObject refs = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = heads;
                SubLObject head = (SubLObject)linkage.NIL;
                head = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    SubLObject cdolist_list_var_$3 = methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym145$GET_REFS);
                    SubLObject ref = (SubLObject)linkage.NIL;
                    ref = cdolist_list_var_$3.first();
                    while (linkage.NIL != cdolist_list_var_$3) {
                        refs = (SubLObject)ConsesLow.cons(ref, refs);
                        cdolist_list_var_$3 = cdolist_list_var_$3.rest();
                        ref = cdolist_list_var_$3.first();
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    head = cdolist_list_var.first();
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym147$OUTER_CATCH_FOR_LINK_TREE_METHOD, refs);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_heads(self, heads);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym147$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 40585L)
    public static SubLObject link_tree_get_index_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject index = get_link_tree_index(self);
        try {
            thread.throwStack.push(linkage.$sym151$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym151$OUTER_CATCH_FOR_LINK_TREE_METHOD, index);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_index(self, index);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym151$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 40699L)
    public static SubLObject link_tree_get_sister_method(final SubLObject self, final SubLObject i) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject index = get_link_tree_index(self);
        final SubLObject mother = get_link_tree_mother(self);
        try {
            thread.throwStack.push(linkage.$sym156$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                assert linkage.NIL != Types.integerp(i) : i;
                if (linkage.NIL != index) {
                    final SubLObject sister_index = Numbers.add(index, i);
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym156$OUTER_CATCH_FOR_LINK_TREE_METHOD, (SubLObject)((linkage.NIL != mother && linkage.NIL != subl_promotions.non_negative_integer_p(sister_index)) ? methods.funcall_instance_method_with_1_args(mother, (SubLObject)linkage.$sym158$GET_DAUGHTER, Numbers.add(index, i)) : linkage.NIL));
                }
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_index(self, index);
                    set_link_tree_mother(self, mother);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym156$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41137L)
    public static SubLObject link_tree_yield_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41258L)
    public static SubLObject link_tree_get_ancestors_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_tree_method = (SubLObject)linkage.NIL;
        final SubLObject mother = get_link_tree_mother(self);
        try {
            thread.throwStack.push(linkage.$sym165$OUTER_CATCH_FOR_LINK_TREE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym165$OUTER_CATCH_FOR_LINK_TREE_METHOD, (SubLObject)((linkage.NIL != mother) ? ConsesLow.cons(mother, methods.funcall_instance_method_with_0_args(mother, (SubLObject)linkage.$sym163$GET_ANCESTORS)) : linkage.NIL));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_mother(self, mother);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_tree_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym165$OUTER_CATCH_FOR_LINK_TREE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_tree_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41446L)
    public static SubLObject link_tree_depth_method(final SubLObject self) {
        SubLObject depth = (SubLObject)linkage.ZERO_INTEGER;
        for (SubLObject tree = self; linkage.NIL == methods.funcall_instance_method_with_0_args(tree, (SubLObject)linkage.$sym137$ROOT_P); tree = methods.funcall_instance_method_with_0_args(tree, (SubLObject)linkage.$sym141$GET_MOTHER)) {
            depth = Numbers.add(depth, (SubLObject)linkage.ONE_INTEGER);
        }
        return depth;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41717L)
    public static SubLObject get_link_phrase_daughters(final SubLObject link_phrase) {
        return classes.subloop_get_access_protected_instance_slot(link_phrase, (SubLObject)linkage.SIX_INTEGER, (SubLObject)linkage.$sym172$DAUGHTERS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41717L)
    public static SubLObject set_link_phrase_daughters(final SubLObject link_phrase, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_phrase, value, (SubLObject)linkage.SIX_INTEGER, (SubLObject)linkage.$sym172$DAUGHTERS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41717L)
    public static SubLObject subloop_reserved_initialize_link_phrase_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41717L)
    public static SubLObject subloop_reserved_initialize_link_phrase_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym172$DAUGHTERS, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 41717L)
    public static SubLObject link_phrase_p(final SubLObject link_phrase) {
        return classes.subloop_instanceof_class(link_phrase, (SubLObject)linkage.$sym170$LINK_PHRASE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 42936L)
    public static SubLObject do_link_tree_subtrees(final SubLObject macroform, final SubLObject environment) {
        SubLObject current;
        final SubLObject datum = current = macroform.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list175);
        final SubLObject temp = current.rest();
        current = current.first();
        SubLObject subtree = (SubLObject)linkage.NIL;
        SubLObject phrase = (SubLObject)linkage.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list175);
        subtree = current.first();
        current = current.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list175);
        phrase = current.first();
        current = current.rest();
        if (linkage.NIL == current) {
            final SubLObject body;
            current = (body = temp);
            final SubLObject stack = (SubLObject)linkage.$sym176$STACK;
            return (SubLObject)ConsesLow.list((SubLObject)linkage.$sym177$CLET, (SubLObject)ConsesLow.list(subtree, reader.bq_cons(stack, (SubLObject)linkage.$list178)), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym179$STACK_PUSH, phrase, stack), (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym180$UNTIL, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym181$STACK_EMPTY_P, stack), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym182$CSETQ, subtree, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym183$STACK_POP, stack)), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym184$PWHEN, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym185$LINK_PHRASE_P, subtree), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym186$DO_VECTOR, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym187$DAUGHTER, (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym188$GET_SLOT, subtree, (SubLObject)linkage.$list189)), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym179$STACK_PUSH, (SubLObject)linkage.$sym187$DAUGHTER, stack))), ConsesLow.append(body, (SubLObject)linkage.NIL)));
        }
        cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)linkage.$list175);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 43351L)
    public static SubLObject link_phrase_get_conjunction_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym192$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                final SubLObject vector_var = daughters;
                final SubLObject backwardP_var = (SubLObject)linkage.NIL;
                SubLObject length;
                SubLObject v_iteration;
                SubLObject element_num;
                SubLObject daughter;
                for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
                    element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
                    daughter = Vectors.aref(vector_var, element_num);
                    if (linkage.NIL != conjunction_link_word_p(daughter)) {
                        Dynamic.sublisp_throw((SubLObject)linkage.$sym192$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, daughter);
                    }
                }
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym192$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 43598L)
    public static SubLObject link_phrase_get_string_method(final SubLObject self) {
        return concatenate_word_strings(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym160$YIELD));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 43757L)
    public static SubLObject link_phrase_daughter_count_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym198$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym198$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, Sequences.length(daughters));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym198$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 43926L)
    public static SubLObject link_phrase_get_daughter_method(final SubLObject self, final SubLObject i) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym201$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                assert linkage.NIL != subl_promotions.non_negative_integer_p(i) : i;
                Dynamic.sublisp_throw((SubLObject)linkage.$sym201$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, (SubLObject)(i.numL(Sequences.length(daughters)) ? Vectors.aref(daughters, i) : linkage.NIL));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym201$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 44231L)
    public static SubLObject link_phrase_get_head_daughters_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != methods.$report_default_method_callsP$.getDynamicValue(thread)) {
            Errors.warn((SubLObject)linkage.$str206$Default_method_call__a_on_class__, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym170$LINK_PHRASE);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 44416L)
    public static SubLObject link_phrase_get_head_daughter_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 44588L)
    public static SubLObject link_phrase_get_semantic_head_daughters_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 44763L)
    public static SubLObject link_phrase_cyclify_int_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject heads = get_link_tree_heads(self);
        try {
            thread.throwStack.push(linkage.$sym216$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                final SubLObject scycls = subcyclifier.subcyclifier_cyclify(self);
                if (linkage.NIL != scycls) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym216$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, scycls);
                }
                final SubLObject heads_$4 = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym217$GET_HEADS);
                SubLObject cycls = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = heads_$4;
                SubLObject head = (SubLObject)linkage.NIL;
                head = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    cycls = (SubLObject)ConsesLow.cons(methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym214$CYCLIFY_INT), cycls);
                    cdolist_list_var = cdolist_list_var.rest();
                    head = cdolist_list_var.first();
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym216$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products(cycls)));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_heads(self, heads);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym216$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 45172L)
    public static SubLObject link_phrase_yield_method(final SubLObject self) {
        SubLObject yield = (SubLObject)linkage.NIL;
        SubLObject daughter = (SubLObject)linkage.NIL;
        final SubLObject stack = stacks.create_stack();
        stacks.stack_push(self, stack);
        while (linkage.NIL == stacks.stack_empty_p(stack)) {
            daughter = stacks.stack_pop(stack);
            if (linkage.NIL != link_phrase_p(daughter)) {
                final SubLObject vector_var = instances.get_slot(daughter, (SubLObject)linkage.$sym172$DAUGHTERS);
                final SubLObject backwardP_var = (SubLObject)linkage.NIL;
                SubLObject length;
                SubLObject v_iteration;
                SubLObject element_num;
                SubLObject daughter_$5;
                for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
                    element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
                    daughter_$5 = Vectors.aref(vector_var, element_num);
                    stacks.stack_push(daughter_$5, stack);
                }
            }
            if (linkage.NIL != link_word_p(daughter)) {
                yield = (SubLObject)ConsesLow.cons(daughter, yield);
            }
        }
        return yield;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 45426L)
    public static SubLObject link_phrase_get_heads_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        SubLObject heads = get_link_tree_heads(self);
        try {
            thread.throwStack.push(linkage.$sym223$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                if (linkage.NIL == heads) {
                    SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS);
                    SubLObject head_daughter = (SubLObject)linkage.NIL;
                    head_daughter = cdolist_list_var.first();
                    while (linkage.NIL != cdolist_list_var) {
                        SubLObject cdolist_list_var_$6 = methods.funcall_instance_method_with_0_args(head_daughter, (SubLObject)linkage.$sym217$GET_HEADS);
                        SubLObject head = (SubLObject)linkage.NIL;
                        head = cdolist_list_var_$6.first();
                        while (linkage.NIL != cdolist_list_var_$6) {
                            heads = (SubLObject)ConsesLow.cons(head, heads);
                            cdolist_list_var_$6 = cdolist_list_var_$6.rest();
                            head = cdolist_list_var_$6.first();
                        }
                        cdolist_list_var = cdolist_list_var.rest();
                        head_daughter = cdolist_list_var.first();
                    }
                    heads = Sequences.nreverse(heads);
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym223$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, heads);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_heads(self, heads);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym223$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 45741L)
    public static SubLObject link_phrase_get_head_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym217$GET_HEADS).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 45902L)
    public static SubLObject link_phrase_get_semantic_heads_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject heads = get_link_tree_heads(self);
        try {
            thread.throwStack.push(linkage.$sym230$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                SubLObject heads_$7 = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym211$GET_SEMANTIC_HEAD_DAUGHTERS);
                SubLObject head_daughter = (SubLObject)linkage.NIL;
                head_daughter = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    SubLObject cdolist_list_var_$8 = methods.funcall_instance_method_with_0_args(head_daughter, (SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS);
                    SubLObject head = (SubLObject)linkage.NIL;
                    head = cdolist_list_var_$8.first();
                    while (linkage.NIL != cdolist_list_var_$8) {
                        final SubLObject item_var = head;
                        if (linkage.NIL == conses_high.member(item_var, heads_$7, Symbols.symbol_function((SubLObject)linkage.EQL), Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                            heads_$7 = (SubLObject)ConsesLow.cons(item_var, heads_$7);
                        }
                        cdolist_list_var_$8 = cdolist_list_var_$8.rest();
                        head = cdolist_list_var_$8.first();
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    head_daughter = cdolist_list_var.first();
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym230$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, Sequences.nreverse(heads_$7));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_heads(self, heads);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym230$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 46912L)
    public static SubLObject link_phrase_preterminal_p_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym234$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym234$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL == list_utilities.find_if_not((SubLObject)linkage.$sym235$LINK_WORD_P, daughters, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym234$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 47112L)
    public static SubLObject link_phrase_idiom_p_method(final SubLObject self) {
        final SubLObject words = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym160$YIELD);
        if (linkage.NIL != methods.funcall_instance_method_with_2_args(words.first(), (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw241$LEFT)) {
            return (SubLObject)linkage.NIL;
        }
        SubLObject cdolist_list_var = conses_high.butlast(words, (SubLObject)linkage.UNPROVIDED);
        SubLObject word = (SubLObject)linkage.NIL;
        word = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL == methods.funcall_instance_method_with_2_args(word, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw242$RIGHT)) {
                return (SubLObject)linkage.NIL;
            }
            cdolist_list_var = cdolist_list_var.rest();
            word = cdolist_list_var.first();
        }
        return methods.funcall_instance_method_with_2_args(conses_high.last(words, (SubLObject)linkage.UNPROVIDED).first(), (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw241$LEFT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 47646L)
    public static SubLObject link_phrase_coordinate_phrase_p_method(final SubLObject self) {
        return list_utilities.sublisp_boolean(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym190$GET_CONJUNCTION));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 47832L)
    public static SubLObject link_phrase_get_linkage_method(final SubLObject self) {
        SubLObject tree;
        for (tree = self; linkage.NIL == link_word_p(tree); tree = methods.funcall_instance_method_with_1_args(tree, (SubLObject)linkage.$sym158$GET_DAUGHTER, (SubLObject)linkage.ZERO_INTEGER)) {}
        return methods.funcall_instance_method_with_0_args(tree, (SubLObject)linkage.$sym135$GET_LINKAGE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 48089L)
    public static SubLObject link_phrase_find_method(final SubLObject self, final SubLObject predicate, SubLObject start, SubLObject end) {
        if (start == linkage.UNPROVIDED) {
            start = (SubLObject)linkage.ZERO_INTEGER;
        }
        if (end == linkage.UNPROVIDED) {
            end = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym252$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                SubLObject daughter = (SubLObject)linkage.NIL;
                final SubLObject stop = (linkage.NIL != end) ? end : Sequences.length(daughters);
                SubLObject found = (SubLObject)linkage.NIL;
                if (start.numG(stop)) {
                    Errors.warn((SubLObject)linkage.$str253$start__A__after_stop__A__when_fin, new SubLObject[] { start, stop, predicate, self });
                }
                SubLObject i;
                for (i = (SubLObject)linkage.NIL, i = start; !i.numGE(stop); i = number_utilities.f_1X(i)) {
                    daughter = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym158$GET_DAUGHTER, i);
                    if (linkage.NIL != Functions.funcall(predicate, daughter)) {
                        found = (SubLObject)ConsesLow.cons(daughter, found);
                    }
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym252$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, Sequences.nreverse(found));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym252$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 48720L)
    public static SubLObject link_phrase_find_first_method(final SubLObject self, final SubLObject predicate, SubLObject start) {
        if (start == linkage.UNPROVIDED) {
            start = (SubLObject)linkage.ZERO_INTEGER;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym258$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                SubLObject daughter = (SubLObject)linkage.NIL;
                SubLObject i;
                for (i = (SubLObject)linkage.NIL, i = start; !i.numGE(Sequences.length(daughters)); i = number_utilities.f_1X(i)) {
                    daughter = link_phrase_get_daughter_method(self, i);
                    if (linkage.NIL != Functions.funcall(predicate, daughter)) {
                        Dynamic.sublisp_throw((SubLObject)linkage.$sym258$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, daughter);
                    }
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym258$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, (SubLObject)linkage.NIL);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym258$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 49161L)
    public static SubLObject link_phrase_find_last_method(final SubLObject self, final SubLObject predicate, SubLObject end) {
        if (end == linkage.UNPROVIDED) {
            end = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym263$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
            try {
                SubLObject daughter = (SubLObject)linkage.NIL;
                SubLObject i;
                for (i = (SubLObject)linkage.NIL, i = ((linkage.NIL != end) ? end : number_utilities.f_1_(Sequences.length(daughters))); !i.isNegative(); i = number_utilities.f_1_(i)) {
                    daughter = link_phrase_get_daughter_method(self, i);
                    if (linkage.NIL != Functions.funcall(predicate, daughter)) {
                        Dynamic.sublisp_throw((SubLObject)linkage.$sym263$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, daughter);
                    }
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym263$OUTER_CATCH_FOR_LINK_PHRASE_METHOD, (SubLObject)linkage.NIL);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym263$OUTER_CATCH_FOR_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 49605L)
    public static SubLObject pprint_link_phrase(final SubLObject lp, final SubLObject stream, final SubLObject level) {
        final SubLObject indent = (SubLObject)linkage.THREE_INTEGER;
        final SubLObject base_column = Numbers.multiply(level, indent);
        string_utilities.indent(stream, base_column);
        streams_high.write_string((SubLObject)linkage.$str265$__LP_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        print_high.princ(methods.funcall_instance_method_with_0_args(lp, (SubLObject)linkage.$sym129$GET_CATEGORY), stream);
        streams_high.write_string((SubLObject)linkage.$str266$__, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        streams_high.terpri(stream);
        final SubLObject vector_var = get_link_phrase_daughters(lp);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject daughter;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            daughter = Vectors.aref(vector_var, element_num);
            pprint_link_tree(daughter, stream, Numbers.add(level, (SubLObject)linkage.ONE_INTEGER));
            streams_high.terpri(stream);
        }
        string_utilities.indent(stream, base_column);
        streams_high.write_string((SubLObject)linkage.$str97$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        return lp;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 50081L)
    public static SubLObject pprint_link_word(final SubLObject lw, final SubLObject stream, final SubLObject level) {
        final SubLObject indent = (SubLObject)linkage.THREE_INTEGER;
        final SubLObject base_column = Numbers.multiply(level, indent);
        string_utilities.indent(stream, base_column);
        streams_high.write_string((SubLObject)linkage.$str267$__LW_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        if (linkage.NIL != lw) {
            print_high.princ(methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym129$GET_CATEGORY), stream);
        }
        streams_high.write_string((SubLObject)linkage.$str268$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        if (linkage.NIL != lw && linkage.NIL != methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym269$GET_RANKED_LEXES)) {
            streams_high.write_string((SubLObject)linkage.$str270$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        }
        streams_high.write_string((SubLObject)linkage.$str94$__, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        if (linkage.NIL != lw && linkage.NIL != methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym95$GET_STRING)) {
            streams_high.write_string(methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym95$GET_STRING), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        }
        streams_high.write_string((SubLObject)linkage.$str97$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        return lw;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 50573L)
    public static SubLObject pprint_link_tree(final SubLObject lt, final SubLObject stream, final SubLObject level) {
        return (linkage.NIL != link_phrase_p(lt)) ? pprint_link_phrase(lt, stream, level) : pprint_link_word(lt, stream, level);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 50741L)
    public static SubLObject link_tree_xml(final SubLObject lt, final SubLObject stream, final SubLObject indent) {
        return (linkage.NIL != link_phrase_p(lt)) ? link_phrase_xml(lt, stream, indent) : link_word_xml(lt, stream, indent);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 50995L)
    public static SubLObject link_word_xml(final SubLObject lw, final SubLObject stream, final SubLObject indent) {
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        return PrintLow.format(stream, (SubLObject)linkage.$str271$_word_cat___a__class___a___a__wor, new SubLObject[] { methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym129$GET_CATEGORY), subloop_structures.class_name(methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym272$CLASS_OF)), methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym95$GET_STRING) });
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 51320L)
    public static SubLObject link_xml(final SubLObject link, final SubLObject stream, final SubLObject indent) {
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        return PrintLow.format(stream, (SubLObject)linkage.$str273$_link_name___a__left___a__right__, new SubLObject[] { link_name(link), methods.funcall_instance_method_with_0_args(link_left_word(link), (SubLObject)linkage.$sym274$GET_ABS_INDEX), methods.funcall_instance_method_with_0_args(link_right_word(link), (SubLObject)linkage.$sym274$GET_ABS_INDEX) });
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 51662L)
    public static SubLObject link_phrase_xml(final SubLObject lp, final SubLObject stream, final SubLObject indent) {
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str275$_phrase_cat___a____, methods.funcall_instance_method_with_0_args(lp, (SubLObject)linkage.$sym129$GET_CATEGORY));
        final SubLObject vector_var = get_link_phrase_daughters(lp);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject daughter;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            daughter = Vectors.aref(vector_var, element_num);
            link_tree_xml(daughter, stream, Numbers.add(indent, (SubLObject)linkage.THREE_INTEGER));
        }
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str276$__phrase___);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52059L)
    public static SubLObject link_phrase_expression_p(final SubLObject expr) {
        return list_utilities.proper_list_p(expr);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52170L)
    public static SubLObject link_word_expression_p(final SubLObject expr) {
        return Types.stringp(expr);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52241L)
    public static SubLObject link_phrase_expression_category(final SubLObject expr) {
        return expr.first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52317L)
    public static SubLObject link_phrase_expression_daughters(final SubLObject expr) {
        return expr.rest();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52394L)
    public static SubLObject new_counter(SubLObject initial_value) {
        if (initial_value == linkage.UNPROVIDED) {
            initial_value = (SubLObject)linkage.ZERO_INTEGER;
        }
        return (SubLObject)ConsesLow.list(initial_value);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52506L)
    public static SubLObject inc_counter(final SubLObject counter, SubLObject increment) {
        if (increment == linkage.UNPROVIDED) {
            increment = (SubLObject)linkage.ONE_INTEGER;
        }
        ConsesLow.rplaca(counter, Numbers.add(counter.first(), increment));
        return counter;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52633L)
    public static SubLObject counter_value(final SubLObject counter) {
        return counter.first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52697L)
    public static SubLObject retokenize_link_tree(final SubLObject tree, final SubLObject lost_tokens) {
        if (linkage.NIL != link_phrase_p(tree)) {
            return retokenize_link_phrase(tree, lost_tokens);
        }
        instances.set_slot(tree, (SubLObject)linkage.$sym277$ABS_INDEX, Numbers.subtract(methods.funcall_instance_method_with_0_args(tree, (SubLObject)linkage.$sym274$GET_ABS_INDEX), counter_value(lost_tokens)));
        return tree;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 52964L)
    public static SubLObject retokenize_link_phrase(final SubLObject phrase, final SubLObject lost_tokens) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(phrase, (SubLObject)linkage.$sym232$PRETERMINAL_P)) {
            return retokenize_preterminal(phrase, lost_tokens);
        }
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(phrase, (SubLObject)linkage.$sym237$IDIOM_P)) {
            return retokenize_idiom(phrase, lost_tokens);
        }
        if (linkage.NIL != verbal_link_phrase_p(phrase) && linkage.NIL == sentential_link_phrase_p(phrase) && linkage.NIL != vp_verb_in_idiomP(phrase)) {
            return retokenize_vp_with_verb_idiom(phrase, lost_tokens);
        }
        final SubLObject vector_var = get_link_phrase_daughters(phrase);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject daughter;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            daughter = Vectors.aref(vector_var, element_num);
            retokenize_link_tree(daughter, lost_tokens);
        }
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 53809L)
    public static SubLObject vp_verb_in_idiomP(final SubLObject vp) {
        final SubLObject verb = Vectors.aref(get_link_phrase_daughters(vp), (SubLObject)linkage.ZERO_INTEGER);
        if (linkage.NIL != verb_link_word_p(verb) && linkage.NIL != methods.funcall_instance_method_with_2_args(verb, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw242$RIGHT).first() && linkage.NIL == methods.funcall_instance_method_with_2_args(verb, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw241$LEFT).first()) {
            return (SubLObject)linkage.T;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 54274L)
    public static SubLObject retokenize_preterminal(final SubLObject phrase, final SubLObject lost_tokens) {
        SubLObject index = (SubLObject)linkage.ZERO_INTEGER;
        final SubLObject last_index = number_utilities.f_1_(Sequences.length(get_link_phrase_daughters(phrase)));
        final SubLObject limit = methods.funcall_instance_method_with_0_args(methods.funcall_instance_method_with_1_args(phrase, (SubLObject)linkage.$sym158$GET_DAUGHTER, last_index), (SubLObject)linkage.$sym274$GET_ABS_INDEX);
        SubLObject new_tokens = (SubLObject)linkage.NIL;
        while (!index.numG(last_index)) {
            final SubLObject daughter = methods.funcall_instance_method_with_1_args(phrase, (SubLObject)linkage.$sym158$GET_DAUGHTER, index);
            SubLObject sub_tokens = (SubLObject)ConsesLow.list(daughter);
            SubLObject sub_token = next_subtoken(daughter, limit);
            index = Numbers.add(index, (SubLObject)linkage.ONE_INTEGER);
            while (linkage.NIL != sub_token) {
                index = Numbers.add(index, (SubLObject)linkage.ONE_INTEGER);
                sub_tokens = (SubLObject)ConsesLow.cons(sub_token, sub_tokens);
                sub_token = next_subtoken(sub_token, limit);
            }
            new_tokens = (SubLObject)ConsesLow.cons(merge_subtokens(Sequences.nreverse(sub_tokens), lost_tokens), new_tokens);
        }
        new_tokens = Sequences.nreverse(new_tokens);
        SubLObject i = (SubLObject)linkage.ZERO_INTEGER;
        SubLObject cdolist_list_var = new_tokens;
        SubLObject token = (SubLObject)linkage.NIL;
        token = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            instances.set_slot(token, (SubLObject)linkage.$sym103$INDEX, i);
            instances.set_slot(token, (SubLObject)linkage.$sym104$MOTHER, phrase);
            i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER);
            cdolist_list_var = cdolist_list_var.rest();
            token = cdolist_list_var.first();
        }
        set_link_phrase_daughters(phrase, Functions.apply((SubLObject)linkage.$sym57$VECTOR, new_tokens));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 55438L)
    public static SubLObject next_subtoken(final SubLObject token, final SubLObject limit) {
        final SubLObject subtoken = methods.funcall_instance_method_with_2_args(token, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw242$RIGHT).first();
        if (linkage.NIL != subtoken && methods.funcall_instance_method_with_0_args(subtoken, (SubLObject)linkage.$sym274$GET_ABS_INDEX).numLE(limit)) {
            return subtoken;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 55704L)
    public static SubLObject retokenize_idiom(final SubLObject phrase, final SubLObject lost_tokens) {
        final SubLObject only_token = merge_subtokens(methods.funcall_instance_method_with_0_args(phrase, (SubLObject)linkage.$sym160$YIELD), lost_tokens);
        final SubLObject new_daughters = Vectors.vector(new SubLObject[] { only_token });
        instances.set_slot(phrase, (SubLObject)linkage.$sym172$DAUGHTERS, new_daughters);
        instances.set_slot(only_token, (SubLObject)linkage.$sym104$MOTHER, phrase);
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 55977L)
    public static SubLObject retokenize_vp_with_verb_idiom(final SubLObject phrase, final SubLObject lost_tokens) {
        final SubLObject dtrs = vector_utilities.vector_elements(get_link_phrase_daughters(phrase), (SubLObject)linkage.UNPROVIDED);
        SubLObject used_dtrs = (SubLObject)ConsesLow.list(dtrs.first());
        SubLObject idiom_words = (SubLObject)ConsesLow.list(dtrs.first());
        SubLObject doneP = (SubLObject)linkage.NIL;
        SubLObject unused_dtrs = (SubLObject)linkage.NIL;
        SubLObject idiom = (SubLObject)linkage.NIL;
        if (linkage.NIL == doneP) {
            SubLObject csome_list_var = dtrs.rest();
            SubLObject dtr = (SubLObject)linkage.NIL;
            dtr = csome_list_var.first();
            while (linkage.NIL == doneP && linkage.NIL != csome_list_var) {
                if (linkage.NIL != link_phrase_p(dtr)) {
                    final SubLObject dtr_words = methods.funcall_instance_method_with_0_args(dtr, (SubLObject)linkage.$sym160$YIELD);
                    SubLObject dtr_in_idiomP = (SubLObject)linkage.T;
                    SubLObject cdolist_list_var = dtr_words;
                    SubLObject word = (SubLObject)linkage.NIL;
                    word = cdolist_list_var.first();
                    while (linkage.NIL != cdolist_list_var) {
                        if (linkage.NIL == methods.funcall_instance_method_with_2_args(word, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw241$LEFT)) {
                            dtr_in_idiomP = (SubLObject)linkage.NIL;
                        }
                        cdolist_list_var = cdolist_list_var.rest();
                        word = cdolist_list_var.first();
                    }
                    if (linkage.NIL != dtr_in_idiomP) {
                        idiom_words = Sequences.cconcatenate(idiom_words, dtr_words);
                        used_dtrs = (SubLObject)ConsesLow.cons(dtr, used_dtrs);
                    }
                    else {
                        doneP = (SubLObject)linkage.T;
                    }
                }
                else if (linkage.NIL != methods.funcall_instance_method_with_2_args(dtr, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw240$ID_PATTERN, (SubLObject)linkage.$kw241$LEFT)) {
                    idiom_words = Sequences.cconcatenate(idiom_words, (SubLObject)ConsesLow.list(dtr));
                    used_dtrs = (SubLObject)ConsesLow.cons(dtr, used_dtrs);
                }
                else {
                    doneP = (SubLObject)linkage.T;
                }
                csome_list_var = csome_list_var.rest();
                dtr = csome_list_var.first();
            }
        }
        SubLObject cdolist_list_var2;
        unused_dtrs = (cdolist_list_var2 = list_utilities.ordered_set_difference(dtrs, used_dtrs, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
        SubLObject dtr = (SubLObject)linkage.NIL;
        dtr = cdolist_list_var2.first();
        while (linkage.NIL != cdolist_list_var2) {
            retokenize_link_tree(dtr, lost_tokens);
            cdolist_list_var2 = cdolist_list_var2.rest();
            dtr = cdolist_list_var2.first();
        }
        if (Sequences.length(idiom_words).numG((SubLObject)linkage.ONE_INTEGER)) {
            idiom = merge_subtokens(idiom_words, lost_tokens);
            instances.set_slot(idiom, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.ZERO_INTEGER);
            instances.set_slot(idiom, (SubLObject)linkage.$sym104$MOTHER, phrase);
            set_link_phrase_daughters(phrase, Functions.apply((SubLObject)linkage.$sym57$VECTOR, Sequences.cconcatenate((SubLObject)ConsesLow.list(idiom), unused_dtrs)));
        }
        else {
            retokenize_link_tree(idiom_words.first(), lost_tokens);
        }
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 57921L)
    public static SubLObject merge_subtokens(final SubLObject tokens, final SubLObject lost_tokens) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != list_utilities.singletonP(tokens)) {
            set_link_word_abs_index(tokens.first(), Numbers.subtract(methods.funcall_instance_method_with_0_args(tokens.first(), (SubLObject)linkage.$sym274$GET_ABS_INDEX), counter_value(lost_tokens)));
            return tokens.first();
        }
        SubLObject new_token = (SubLObject)linkage.NIL;
        final SubLObject penn = get_mw_lexeme_tag(tokens);
        final SubLObject new_string = concatenate_word_strings(tokens);
        final SubLObject new_left_links = get_mw_lexeme_left_links(tokens);
        final SubLObject new_right_links = get_mw_lexeme_right_links(tokens);
        final SubLObject v_linkage = methods.funcall_instance_method_with_0_args(tokens.first(), (SubLObject)linkage.$sym135$GET_LINKAGE);
        final SubLObject v_context = methods.funcall_instance_method_with_0_args(tokens.first(), (SubLObject)linkage.$sym278$GET_CONTEXT);
        thread.resetMultipleValues();
        final SubLObject v_class = get_link_word_class(new_string, (SubLObject)linkage.NIL, Mapping.mapcar((SubLObject)linkage.$sym78$LINK_NAME, new_left_links), Mapping.mapcar((SubLObject)linkage.$sym78$LINK_NAME, new_right_links), penn);
        final SubLObject pos = thread.secondMultipleValue();
        thread.resetMultipleValues();
        new_token = object.new_class_instance(v_class);
        SubLObject cdolist_list_var = new_left_links;
        SubLObject left_link = (SubLObject)linkage.NIL;
        left_link = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            _csetf_link_right_word(left_link, new_token);
            cdolist_list_var = cdolist_list_var.rest();
            left_link = cdolist_list_var.first();
        }
        cdolist_list_var = new_right_links;
        SubLObject right_link = (SubLObject)linkage.NIL;
        right_link = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            _csetf_link_left_word(right_link, new_token);
            cdolist_list_var = cdolist_list_var.rest();
            right_link = cdolist_list_var.first();
        }
        set_link_tree_pos(new_token, pos);
        set_link_word_linkage(new_token, v_linkage);
        set_link_word_context(new_token, v_context);
        set_link_word_string(new_token, new_string);
        set_link_word_abs_index(new_token, Numbers.subtract(methods.funcall_instance_method_with_0_args(tokens.first(), (SubLObject)linkage.$sym274$GET_ABS_INDEX), counter_value(lost_tokens)));
        set_link_word_left_links(new_token, new_left_links);
        set_link_word_right_links(new_token, new_right_links);
        inc_counter(lost_tokens, number_utilities.f_1_(Sequences.length(tokens)));
        return new_token;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 59691L)
    public static SubLObject concatenate_word_strings(final SubLObject words) {
        final SubLObject last = conses_high.last(words, (SubLObject)linkage.UNPROVIDED).first();
        SubLObject string = (SubLObject)linkage.NIL;
        SubLObject out = (SubLObject)linkage.NIL;
        try {
            out = streams_high.make_private_string_output_stream();
            SubLObject cdolist_list_var = words;
            SubLObject word = (SubLObject)linkage.NIL;
            word = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                print_high.princ(methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym95$GET_STRING), out);
                if (!word.eql(last)) {
                    print_high.princ((SubLObject)linkage.$str279$_, out);
                }
                cdolist_list_var = cdolist_list_var.rest();
                word = cdolist_list_var.first();
            }
            string = streams_high.get_output_stream_string(out);
        }
        finally {
            final SubLObject _prev_bind_0 = Dynamic.currentBinding(Threads.$is_thread_performing_cleanupP$);
            try {
                Dynamic.bind(Threads.$is_thread_performing_cleanupP$, (SubLObject)linkage.T);
                final SubLObject _values = Values.getValuesAsVector();
                streams_high.close(out, (SubLObject)linkage.UNPROVIDED);
                Values.restoreValuesFromVector(_values);
            }
            finally {
                Dynamic.rebind(Threads.$is_thread_performing_cleanupP$, _prev_bind_0);
            }
        }
        string = string_utilities.replace_substring(string, (SubLObject)linkage.$str280$__, (SubLObject)linkage.$str281$_);
        string = string_utilities.replace_substring(string, (SubLObject)linkage.$str282$__, (SubLObject)linkage.$str53$_);
        string = string_utilities.replace_substring(string, (SubLObject)linkage.$str283$__, (SubLObject)linkage.$str284$_);
        return string;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 60216L)
    public static SubLObject get_mw_lexeme_tag(final SubLObject words) {
        final SubLObject string = concatenate_word_strings(words);
        final SubLObject lexicon = object.new_class_instance((SubLObject)linkage.$sym285$CYCLIFIER_LEXICON);
        methods.funcall_instance_method_with_1_args(lexicon, (SubLObject)linkage.$sym286$SET_CASE_SENSITIVITY, (SubLObject)linkage.$kw287$OFF);
        final SubLObject lex = methods.funcall_instance_method_with_1_args(lexicon, (SubLObject)linkage.$sym288$GET, string).first();
        final SubLObject penn_tag = (linkage.NIL != lex) ? methods.funcall_instance_method_with_1_args(lex, (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw289$PENN_TAGS).first() : methods.funcall_instance_method_with_0_args(conses_high.last(words, (SubLObject)linkage.UNPROVIDED).first(), (SubLObject)linkage.$sym129$GET_CATEGORY);
        return (SubLObject)((linkage.NIL != penn_tag) ? penn_tag : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 60712L)
    public static SubLObject link_left_word_equal(final SubLObject link1, final SubLObject link2) {
        return (SubLObject)SubLObjectFactory.makeBoolean(link_left_word(link1).eql(link_left_word(link2)) && linkage.NIL != Strings.stringE(link_name(link1), link_name(link2), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 60960L)
    public static SubLObject link_right_word_equal(final SubLObject link1, final SubLObject link2) {
        return (SubLObject)SubLObjectFactory.makeBoolean(link_right_word(link1).eql(link_right_word(link2)) && linkage.NIL != Strings.stringE(link_name(link1), link_name(link2), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 61212L)
    public static SubLObject get_mw_lexeme_left_links(final SubLObject words) {
        if (linkage.NIL == words) {
            return (SubLObject)linkage.NIL;
        }
        SubLObject left_links = (SubLObject)linkage.NIL;
        final SubLObject start = methods.funcall_instance_method_with_0_args(words.first(), (SubLObject)linkage.$sym274$GET_ABS_INDEX);
        SubLObject cdolist_list_var = words;
        SubLObject word = (SubLObject)linkage.NIL;
        word = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            SubLObject cdolist_list_var_$9 = get_left_links_ending(word, start);
            SubLObject link = (SubLObject)linkage.NIL;
            link = cdolist_list_var_$9.first();
            while (linkage.NIL != cdolist_list_var_$9) {
                final SubLObject item_var = link;
                if (linkage.NIL == conses_high.member(item_var, left_links, (SubLObject)linkage.$sym290$LINK_LEFT_WORD_EQUAL, Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                    left_links = (SubLObject)ConsesLow.cons(item_var, left_links);
                }
                cdolist_list_var_$9 = cdolist_list_var_$9.rest();
                link = cdolist_list_var_$9.first();
            }
            cdolist_list_var = cdolist_list_var.rest();
            word = cdolist_list_var.first();
        }
        return left_links;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 61625L)
    public static SubLObject get_mw_lexeme_right_links(final SubLObject words) {
        if (linkage.NIL == words) {
            return (SubLObject)linkage.NIL;
        }
        SubLObject right_links = (SubLObject)linkage.NIL;
        final SubLObject end = methods.funcall_instance_method_with_0_args(conses_high.last(words, (SubLObject)linkage.UNPROVIDED).first(), (SubLObject)linkage.$sym274$GET_ABS_INDEX);
        SubLObject cdolist_list_var = words;
        SubLObject word = (SubLObject)linkage.NIL;
        word = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            SubLObject cdolist_list_var_$10 = get_right_links_ending(word, end);
            SubLObject link = (SubLObject)linkage.NIL;
            link = cdolist_list_var_$10.first();
            while (linkage.NIL != cdolist_list_var_$10) {
                final SubLObject item_var = link;
                if (linkage.NIL == conses_high.member(item_var, right_links, (SubLObject)linkage.$sym291$LINK_RIGHT_WORD_EQUAL, Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                    right_links = (SubLObject)ConsesLow.cons(item_var, right_links);
                }
                cdolist_list_var_$10 = cdolist_list_var_$10.rest();
                link = cdolist_list_var_$10.first();
            }
            cdolist_list_var = cdolist_list_var.rest();
            word = cdolist_list_var.first();
        }
        return right_links;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 62046L)
    public static SubLObject get_right_links_ending(final SubLObject token, final SubLObject end) {
        SubLObject ending = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(token, (SubLObject)linkage.$sym292$GET_RIGHT_LINKS);
        SubLObject link = (SubLObject)linkage.NIL;
        link = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (methods.funcall_instance_method_with_0_args(link_right_word(link), (SubLObject)linkage.$sym274$GET_ABS_INDEX).numG(end)) {
                ending = (SubLObject)ConsesLow.cons(link, ending);
            }
            cdolist_list_var = cdolist_list_var.rest();
            link = cdolist_list_var.first();
        }
        return ending;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 62374L)
    public static SubLObject get_left_links_ending(final SubLObject token, final SubLObject start) {
        SubLObject ending = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(token, (SubLObject)linkage.$sym293$GET_LEFT_LINKS);
        SubLObject link = (SubLObject)linkage.NIL;
        link = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (methods.funcall_instance_method_with_0_args(link_left_word(link), (SubLObject)linkage.$sym274$GET_ABS_INDEX).numL(start)) {
                ending = (SubLObject)ConsesLow.cons(link, ending);
            }
            cdolist_list_var = cdolist_list_var.rest();
            link = cdolist_list_var.first();
        }
        return ending;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 62708L)
    public static SubLObject new_link_tree(final SubLObject phrase_structure_string, final SubLObject words) {
        final SubLObject tree0 = reader.read_from_string_ignoring_errors(phrase_structure_string, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        final SubLObject tree2 = (SubLObject)((linkage.NIL != tree0) ? new_link_tree_int(tree0, (SubLObject)linkage.NIL, new_counter((SubLObject)linkage.UNPROVIDED), words) : linkage.NIL);
        if (linkage.NIL != tree2) {
            instances.set_slot(tree2, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.ZERO_INTEGER);
            return retokenize_link_tree(tree2, new_counter((SubLObject)linkage.UNPROVIDED));
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 63028L)
    public static SubLObject new_link_tree_int(final SubLObject expr, final SubLObject mother, final SubLObject counter, final SubLObject words) {
        return (linkage.NIL != link_phrase_expression_p(expr)) ? link_phrase_expression_to_tree(expr, mother, counter, words) : link_word_expression_to_tree(expr, mother, counter, words);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 63265L)
    public static SubLObject link_phrase_expression_to_tree(final SubLObject expr, final SubLObject mother, final SubLObject counter, final SubLObject words) {
        final SubLObject category = link_phrase_expression_category(expr);
        final SubLObject v_class = category_to_link_tree_class(category);
        final SubLObject tree = object.new_class_instance(v_class);
        final SubLObject expr_daughters = link_phrase_expression_daughters(expr);
        SubLObject daughters0 = (SubLObject)linkage.NIL;
        SubLObject i = (SubLObject)linkage.ZERO_INTEGER;
        instances.set_slot(tree, (SubLObject)linkage.$sym106$POS, category);
        instances.set_slot(tree, (SubLObject)linkage.$sym104$MOTHER, mother);
        SubLObject cdolist_list_var = expr_daughters;
        SubLObject daughter = (SubLObject)linkage.NIL;
        daughter = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            final SubLObject d = new_link_tree_int(daughter, tree, counter, words);
            instances.set_slot(d, (SubLObject)linkage.$sym103$INDEX, i);
            daughters0 = (SubLObject)ConsesLow.cons(d, daughters0);
            i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER);
            cdolist_list_var = cdolist_list_var.rest();
            daughter = cdolist_list_var.first();
        }
        instances.set_slot(tree, (SubLObject)linkage.$sym172$DAUGHTERS, Functions.apply((SubLObject)linkage.$sym57$VECTOR, Sequences.nreverse(daughters0)));
        return tree;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 63890L)
    public static SubLObject link_word_expression_to_tree(final SubLObject expr, final SubLObject mother, final SubLObject counter, final SubLObject words) {
        inc_counter(counter, (SubLObject)linkage.UNPROVIDED);
        final SubLObject word = Vectors.aref(words, counter_value(counter));
        instances.set_slot(word, (SubLObject)linkage.$sym277$ABS_INDEX, counter_value(counter));
        instances.set_slot(word, (SubLObject)linkage.$sym104$MOTHER, mother);
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 64361L)
    public static SubLObject category_to_link_tree_class(final SubLObject category) {
        final SubLObject v_class = conses_high.assoc(category, linkage.$category_to_link_tree_class$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED).rest();
        return (SubLObject)((linkage.NIL != v_class) ? v_class : linkage.$sym170$LINK_PHRASE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 64531L)
    public static SubLObject get_nearest_common_ancestor(final SubLObject trees) {
        if (linkage.NIL != trees) {
            final SubLObject common_ancestors = get_common_ancestors(trees);
            SubLObject max_tree = common_ancestors.first();
            SubLObject max_depth = methods.funcall_instance_method_with_0_args(max_tree, (SubLObject)linkage.$sym167$DEPTH);
            SubLObject depth = (SubLObject)linkage.NIL;
            SubLObject cdolist_list_var = common_ancestors.rest();
            SubLObject ca = (SubLObject)linkage.NIL;
            ca = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                depth = methods.funcall_instance_method_with_0_args(ca, (SubLObject)linkage.$sym167$DEPTH);
                if (depth.numG(max_depth)) {
                    max_depth = depth;
                    max_tree = ca;
                }
                cdolist_list_var = cdolist_list_var.rest();
                ca = cdolist_list_var.first();
            }
            return max_tree;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 65058L)
    public static SubLObject get_common_ancestors(final SubLObject trees) {
        if (linkage.NIL != trees) {
            SubLObject common_ancestors = methods.funcall_instance_method_with_0_args(trees.first(), (SubLObject)linkage.$sym163$GET_ANCESTORS);
            SubLObject cdolist_list_var = trees.rest();
            SubLObject tree = (SubLObject)linkage.NIL;
            tree = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                common_ancestors = conses_high.intersection(common_ancestors, methods.funcall_instance_method_with_0_args(tree, (SubLObject)linkage.$sym163$GET_ANCESTORS), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED);
                cdolist_list_var = cdolist_list_var.rest();
                tree = cdolist_list_var.first();
            }
            return common_ancestors;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 65470L)
    public static SubLObject get_link_phrase(final SubLObject heads) {
        if (linkage.NIL != heads) {
            SubLObject expanded = heads;
            SubLObject cdolist_list_var = heads;
            SubLObject head = (SubLObject)linkage.NIL;
            head = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                if (linkage.NIL != noun_link_word_p(head)) {
                    SubLObject cdolist_list_var_$11 = conses_high.set_difference(methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym112$GET_MODIFIERS), methods.funcall_instance_method_with_1_args(head, (SubLObject)linkage.$sym295$GET_RELATED, (SubLObject)linkage.$list296), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED);
                    SubLObject mod = (SubLObject)linkage.NIL;
                    mod = cdolist_list_var_$11.first();
                    while (linkage.NIL != cdolist_list_var_$11) {
                        SubLObject cdolist_list_var_$12 = methods.funcall_instance_method_with_0_args(mod, (SubLObject)linkage.$sym217$GET_HEADS);
                        SubLObject mod_head = (SubLObject)linkage.NIL;
                        mod_head = cdolist_list_var_$12.first();
                        while (linkage.NIL != cdolist_list_var_$12) {
                            final SubLObject item_var = mod_head;
                            if (linkage.NIL == conses_high.member(item_var, expanded, (SubLObject)linkage.EQ, Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                                expanded = (SubLObject)ConsesLow.cons(item_var, expanded);
                            }
                            cdolist_list_var_$12 = cdolist_list_var_$12.rest();
                            mod_head = cdolist_list_var_$12.first();
                        }
                        cdolist_list_var_$11 = cdolist_list_var_$11.rest();
                        mod = cdolist_list_var_$11.first();
                    }
                }
                cdolist_list_var = cdolist_list_var.rest();
                head = cdolist_list_var.first();
            }
            final SubLObject phrase = get_nearest_common_ancestor(expanded);
            if (linkage.NIL != phrase) {
                instances.set_slot(phrase, (SubLObject)linkage.$sym105$HEADS, heads);
            }
            return phrase;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66177L)
    public static SubLObject get_link_phrases(final SubLObject heads) {
        SubLObject phrases = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = heads;
        SubLObject head = (SubLObject)linkage.NIL;
        head = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            phrases = (SubLObject)ConsesLow.cons(get_link_phrase((SubLObject)ConsesLow.list(head)), phrases);
            cdolist_list_var = cdolist_list_var.rest();
            head = cdolist_list_var.first();
        }
        return phrases;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66344L)
    public static SubLObject verbal_link_tree_p(final SubLObject verbal_link_tree) {
        return interfaces.subloop_instanceof_interface(verbal_link_tree, (SubLObject)linkage.$sym297$VERBAL_LINK_TREE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66445L)
    public static SubLObject verbal_link_phrase_cyclify_int_vp_coordination_method(final SubLObject self) {
        final SubLObject scycls = subcyclifier.subcyclifier_cyclify(self);
        if (linkage.NIL != scycls) {
            return scycls;
        }
        final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym303$GET_SUBJECT);
        final SubLObject subj_cycls = (SubLObject)((linkage.NIL != subject) ? methods.funcall_instance_method_with_0_args(subject, (SubLObject)linkage.$sym214$CYCLIFY_INT) : linkage.NIL);
        final SubLObject conjunction = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym190$GET_CONJUNCTION);
        final SubLObject vps = methods.funcall_instance_method_with_0_args(conjunction, (SubLObject)linkage.$sym304$GET_COMPLEMENTS);
        SubLObject cycls = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = vps;
        SubLObject vp = (SubLObject)linkage.NIL;
        vp = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            cycls = (SubLObject)ConsesLow.cons(methods.funcall_instance_method_with_0_args(vp, (SubLObject)linkage.$sym305$CYCLIFY_INT_VP), cycls);
            cdolist_list_var = cdolist_list_var.rest();
            vp = cdolist_list_var.first();
        }
        return Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products((SubLObject)ConsesLow.cons(subj_cycls, cycls)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66445L)
    public static SubLObject verbal_link_phrase_cyclify_int_vp_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_verbal_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject heads = get_link_tree_heads(self);
        try {
            thread.throwStack.push(linkage.$sym308$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD);
            try {
                final SubLObject scycls = subcyclifier.subcyclifier_cyclify(self);
                if (linkage.NIL != scycls) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym308$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD, scycls);
                }
                final SubLObject heads_$13 = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS);
                SubLObject all_conjunction_cycls = (SubLObject)linkage.NIL;
                final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym303$GET_SUBJECT);
                SubLObject complements = (SubLObject)((linkage.NIL != heads_$13) ? methods.funcall_instance_method_with_0_args(heads_$13.first(), (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS) : linkage.NIL);
                SubLObject comp_cycls = (SubLObject)linkage.NIL;
                SubLObject cycls = (SubLObject)linkage.NIL;
                complements = cyclifier_interface.delete_cyclifiable(subject, complements);
                if (linkage.NIL == subl_promotions.memberP(self, cyclifier_interface.$cyclification_in_progress$.getDynamicValue(thread), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
                    final SubLObject _prev_bind_0 = cyclifier_interface.$cyclification_in_progress$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = cyclifier_interface.$cyclification_in_progress$.currentBinding(thread);
                    try {
                        cyclifier_interface.$cyclification_in_progress$.bind((SubLObject)ConsesLow.cons(self, cyclifier_interface.$cyclification_in_progress$.getDynamicValue(thread)), thread);
                        cyclifier_interface.$cyclification_in_progress$.bind(ConsesLow.append(heads_$13, cyclifier_interface.$cyclification_in_progress$.getDynamicValue(thread)), thread);
                        SubLObject cdolist_list_var = heads_$13;
                        SubLObject head = (SubLObject)linkage.NIL;
                        head = cdolist_list_var.first();
                        while (linkage.NIL != cdolist_list_var) {
                            SubLObject all_head_cycls = (SubLObject)linkage.NIL;
                            final SubLObject mod_cycls = cyclifier_interface.get_mod_cycls(head);
                            SubLObject cdolist_list_var_$14;
                            final SubLObject renamings = cdolist_list_var_$14 = methods.funcall_instance_method_with_1_args(head, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, cyclifier.required_keywords(methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym269$GET_RANKED_LEXES)));
                            SubLObject conjunction = (SubLObject)linkage.NIL;
                            conjunction = cdolist_list_var_$14.first();
                            while (linkage.NIL != cdolist_list_var_$14) {
                                SubLObject all_rle_cycls = (SubLObject)linkage.NIL;
                                SubLObject cdolist_list_var_$15 = methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
                                SubLObject rle = (SubLObject)linkage.NIL;
                                rle = cdolist_list_var_$15.first();
                                while (linkage.NIL != cdolist_list_var_$15) {
                                    SubLObject composite_verbal_cycls = (SubLObject)linkage.NIL;
                                    SubLObject cdolist_list_var_$16 = conjunction;
                                    SubLObject renaming = (SubLObject)linkage.NIL;
                                    renaming = cdolist_list_var_$16.first();
                                    while (linkage.NIL != cdolist_list_var_$16) {
                                        final SubLObject renamed0 = cyclifier_interface.apply_lex_renaming(head, rle, renaming);
                                        final SubLObject renamed2 = (SubLObject)((linkage.NIL != renamed0) ? ConsesLow.list(cyclifier.quantify_implicit_subject(renamed0)) : linkage.NIL);
                                        composite_verbal_cycls = list_utilities.alist_pushnew(composite_verbal_cycls, cyclifier_interface.renaming_key(renaming), Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products((SubLObject)ConsesLow.cons(renamed2, mod_cycls))), (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED);
                                        cdolist_list_var_$16 = cdolist_list_var_$16.rest();
                                        renaming = cdolist_list_var_$16.first();
                                    }
                                    SubLObject sense_cycls = (SubLObject)linkage.NIL;
                                    SubLObject cdolist_list_var_$17 = list_utilities.alist_values(composite_verbal_cycls);
                                    SubLObject value = (SubLObject)linkage.NIL;
                                    value = cdolist_list_var_$17.first();
                                    while (linkage.NIL != cdolist_list_var_$17) {
                                        sense_cycls = (SubLObject)ConsesLow.cons(Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.indexed_products(value)), sense_cycls);
                                        cdolist_list_var_$17 = cdolist_list_var_$17.rest();
                                        value = cdolist_list_var_$17.first();
                                    }
                                    all_rle_cycls = (SubLObject)ConsesLow.cons(sense_cycls, all_rle_cycls);
                                    cdolist_list_var_$15 = cdolist_list_var_$15.rest();
                                    rle = cdolist_list_var_$15.first();
                                }
                                all_head_cycls = (SubLObject)ConsesLow.cons(list_utilities.indexed_products(all_rle_cycls), all_head_cycls);
                                cdolist_list_var_$14 = cdolist_list_var_$14.rest();
                                conjunction = cdolist_list_var_$14.first();
                            }
                            all_conjunction_cycls = (SubLObject)ConsesLow.cons(all_head_cycls, all_conjunction_cycls);
                            cdolist_list_var = cdolist_list_var.rest();
                            head = cdolist_list_var.first();
                        }
                        cdolist_list_var = complements;
                        SubLObject complement = (SubLObject)linkage.NIL;
                        complement = cdolist_list_var.first();
                        while (linkage.NIL != cdolist_list_var) {
                            final SubLObject comp_cycl = methods.funcall_instance_method_with_0_args(complement, (SubLObject)linkage.$sym214$CYCLIFY_INT);
                            if (linkage.NIL != comp_cycl) {
                                comp_cycls = (SubLObject)ConsesLow.cons(comp_cycl, comp_cycls);
                            }
                            cdolist_list_var = cdolist_list_var.rest();
                            complement = cdolist_list_var.first();
                        }
                        cdolist_list_var = list_utilities.indexed_products(all_conjunction_cycls);
                        SubLObject all_head_cycls2 = (SubLObject)linkage.NIL;
                        all_head_cycls2 = cdolist_list_var.first();
                        while (linkage.NIL != cdolist_list_var) {
                            SubLObject cycls2 = (SubLObject)linkage.NIL;
                            SubLObject all_subjects_with_objects_cycls = (SubLObject)linkage.NIL;
                            SubLObject cdolist_list_var_$18 = list_utilities.indexed_products(all_head_cycls2);
                            SubLObject item = (SubLObject)linkage.NIL;
                            item = cdolist_list_var_$18.first();
                            while (linkage.NIL != cdolist_list_var_$18) {
                                SubLObject complete_cycl_for_one_subject = (SubLObject)linkage.NIL;
                                SubLObject cdolist_list_var_$19 = list_utilities.cross_products(item);
                                SubLObject item2 = (SubLObject)linkage.NIL;
                                item2 = cdolist_list_var_$19.first();
                                while (linkage.NIL != cdolist_list_var_$19) {
                                    complete_cycl_for_one_subject = ConsesLow.append(Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.indexed_products(item2)), complete_cycl_for_one_subject);
                                    cdolist_list_var_$19 = cdolist_list_var_$19.rest();
                                    item2 = cdolist_list_var_$19.first();
                                }
                                all_subjects_with_objects_cycls = (SubLObject)ConsesLow.cons(Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products((SubLObject)ConsesLow.cons(complete_cycl_for_one_subject, comp_cycls))), all_subjects_with_objects_cycls);
                                cdolist_list_var_$18 = cdolist_list_var_$18.rest();
                                item = cdolist_list_var_$18.first();
                            }
                            cycls2 = Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.indexed_products(all_subjects_with_objects_cycls));
                            cycls = ConsesLow.append(cycls2, cycls);
                            cdolist_list_var = cdolist_list_var.rest();
                            all_head_cycls2 = cdolist_list_var.first();
                        }
                    }
                    finally {
                        cyclifier_interface.$cyclification_in_progress$.rebind(_prev_bind_2, thread);
                        cyclifier_interface.$cyclification_in_progress$.rebind(_prev_bind_0, thread);
                    }
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym308$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD, cycls);
            }
            finally {
                final SubLObject _prev_bind_3 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_heads(self, heads);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_3, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_verbal_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym308$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_verbal_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66445L)
    public static SubLObject verbal_link_phrase_cyclify_int_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != cyclifier_interface.$allow_duplicate_cyclificationsP$.getDynamicValue(thread) || linkage.NIL == conses_high.member(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
            cyclifier_interface.$cyclification_complete$.setDynamicValue((SubLObject)ConsesLow.cons(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread)), thread);
            final SubLObject scycls = subcyclifier.subcyclifier_cyclify(self);
            if (linkage.NIL != scycls) {
                return scycls;
            }
            if (linkage.NIL != cyclifier_interface.cyclifiable_sentential_phrase_p(self)) {
                final SubLObject head_dtr = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym208$GET_HEAD_DAUGHTER);
                if (linkage.NIL != head_dtr) {
                    return methods.funcall_instance_method_with_0_args(head_dtr, (SubLObject)linkage.$sym214$CYCLIFY_INT);
                }
            }
            else {
                if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym313$VP_COORDINATE_PHRASE_P)) {
                    return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym301$CYCLIFY_INT_VP_COORDINATION);
                }
                final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym303$GET_SUBJECT);
                final SubLObject subj_cycls = (SubLObject)((linkage.NIL != subject) ? methods.funcall_instance_method_with_0_args(subject, (SubLObject)linkage.$sym214$CYCLIFY_INT) : linkage.NIL);
                final SubLObject vp_cycls = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym305$CYCLIFY_INT_VP);
                SubLObject subj_vp_cycls = (SubLObject)((linkage.NIL != subj_cycls) ? ConsesLow.list(subj_cycls) : linkage.NIL);
                if (linkage.NIL != vp_cycls) {
                    subj_vp_cycls = (SubLObject)ConsesLow.cons(vp_cycls, subj_vp_cycls);
                }
                return Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products(subj_vp_cycls));
            }
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66445L)
    public static SubLObject verbal_link_phrase_vp_coordinate_phrase_p_method(final SubLObject self) {
        final SubLObject conjunction = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym190$GET_CONJUNCTION);
        return (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != conjunction && linkage.NIL == list_utilities.member_if_not((SubLObject)linkage.$sym316$CYCLIFIABLE_VERB_PHRASE_P, methods.funcall_instance_method_with_0_args(conjunction, (SubLObject)linkage.$sym304$GET_COMPLEMENTS), (SubLObject)linkage.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66445L)
    public static SubLObject subloop_reserved_initialize_verbal_link_phrase_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66445L)
    public static SubLObject subloop_reserved_initialize_verbal_link_phrase_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym172$DAUGHTERS, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 66445L)
    public static SubLObject verbal_link_phrase_p(final SubLObject verbal_link_phrase) {
        return classes.subloop_instanceof_class(verbal_link_phrase, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 67106L)
    public static SubLObject verbal_link_phrase_get_subject_method(final SubLObject self) {
        final SubLObject verb = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym217$GET_HEADS).first();
        return (SubLObject)((linkage.NIL != verb_link_word_p(verb)) ? methods.funcall_instance_method_with_0_args(verb, (SubLObject)linkage.$sym303$GET_SUBJECT) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 67355L)
    public static SubLObject verbal_link_phrase_get_semantic_subject_method(final SubLObject self) {
        final SubLObject head = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym217$GET_HEADS).first();
        return (SubLObject)((linkage.NIL != verb_link_word_p(head)) ? methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 67624L)
    public static SubLObject verbal_link_phrase_get_verbal_complement_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_verbal_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject heads = get_link_tree_heads(self);
        try {
            thread.throwStack.push(linkage.$sym327$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD);
            try {
                final SubLObject verb = heads.first();
                Dynamic.sublisp_throw((SubLObject)linkage.$sym327$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD, (SubLObject)((linkage.NIL != verb_link_word_p(verb)) ? methods.funcall_instance_method_with_0_args(verb, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT) : linkage.NIL));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_heads(self, heads);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_verbal_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym327$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_verbal_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 67878L)
    public static SubLObject verbal_link_phrase_get_head_daughters_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_verbal_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym330$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD);
            try {
                SubLObject head_daughters = (SubLObject)linkage.NIL;
                final SubLObject vector_var = daughters;
                final SubLObject backwardP_var = (SubLObject)linkage.NIL;
                SubLObject length;
                SubLObject v_iteration;
                SubLObject element_num;
                SubLObject daughter;
                for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
                    element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
                    daughter = Vectors.aref(vector_var, element_num);
                    if (linkage.NIL != verbal_link_tree_p(daughter)) {
                        head_daughters = (SubLObject)ConsesLow.cons(daughter, head_daughters);
                    }
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym330$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD, Sequences.nreverse(head_daughters));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_verbal_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym330$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_verbal_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68202L)
    public static SubLObject subloop_reserved_initialize_sentential_link_phrase_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68202L)
    public static SubLObject subloop_reserved_initialize_sentential_link_phrase_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym172$DAUGHTERS, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68202L)
    public static SubLObject sentential_link_phrase_p(final SubLObject sentential_link_phrase) {
        return classes.subloop_instanceof_class(sentential_link_phrase, (SubLObject)linkage.$sym332$SENTENTIAL_LINK_PHRASE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68325L)
    public static SubLObject prepositional_link_tree_p(final SubLObject prepositional_link_tree) {
        return interfaces.subloop_instanceof_interface(prepositional_link_tree, (SubLObject)linkage.$sym336$PREPOSITIONAL_LINK_TREE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68430L)
    public static SubLObject subloop_reserved_initialize_prepositional_link_phrase_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68430L)
    public static SubLObject subloop_reserved_initialize_prepositional_link_phrase_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym172$DAUGHTERS, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68430L)
    public static SubLObject prepositional_link_phrase_p(final SubLObject prepositional_link_phrase) {
        return classes.subloop_instanceof_class(prepositional_link_phrase, (SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 68693L)
    public static SubLObject prepositional_link_phrase_get_head_daughters_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_prepositional_link_phrase_method = (SubLObject)linkage.NIL;
        final SubLObject daughters = get_link_phrase_daughters(self);
        try {
            thread.throwStack.push(linkage.$sym343$OUTER_CATCH_FOR_PREPOSITIONAL_LINK_PHRASE_METHOD);
            try {
                SubLObject head_daughters = (SubLObject)linkage.NIL;
                final SubLObject vector_var = daughters;
                final SubLObject backwardP_var = (SubLObject)linkage.NIL;
                SubLObject length;
                SubLObject v_iteration;
                SubLObject element_num;
                SubLObject daughter;
                for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
                    element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
                    daughter = Vectors.aref(vector_var, element_num);
                    if (linkage.NIL != prepositional_link_tree_p(daughter)) {
                        head_daughters = (SubLObject)ConsesLow.cons(daughter, head_daughters);
                    }
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym343$OUTER_CATCH_FOR_PREPOSITIONAL_LINK_PHRASE_METHOD, Sequences.nreverse(head_daughters));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_phrase_daughters(self, daughters);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_prepositional_link_phrase_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym343$OUTER_CATCH_FOR_PREPOSITIONAL_LINK_PHRASE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_prepositional_link_phrase_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 69037L)
    public static SubLObject prepositional_link_phrase_get_oblique_object_method(final SubLObject self) {
        final SubLObject head = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym225$GET_HEAD);
        return (SubLObject)((linkage.NIL != head) ? methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 69286L)
    public static SubLObject nominal_link_tree_p(final SubLObject nominal_link_tree) {
        return interfaces.subloop_instanceof_interface(nominal_link_tree, (SubLObject)linkage.$sym348$NOMINAL_LINK_TREE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 69465L)
    public static SubLObject subloop_reserved_initialize_nominal_link_phrase_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 69465L)
    public static SubLObject subloop_reserved_initialize_nominal_link_phrase_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym172$DAUGHTERS, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 69465L)
    public static SubLObject nominal_link_phrase_p(final SubLObject nominal_link_phrase) {
        return classes.subloop_instanceof_class(nominal_link_phrase, (SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 69642L)
    public static SubLObject nominal_link_phrase_get_head_daughters_method(final SubLObject self) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym244$COORDINATE_PHRASE_P)) {
            return methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym249$FIND, (SubLObject)linkage.$sym355$NOMINAL_LINK_TREE_P);
        }
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym232$PRETERMINAL_P)) {
            final SubLObject head_daughter = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym260$FIND_LAST, (SubLObject)linkage.$sym356$NOUN_LINK_WORD_P);
            return (SubLObject)((linkage.NIL != head_daughter) ? ConsesLow.list(head_daughter) : linkage.NIL);
        }
        SubLObject head_daughter = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym260$FIND_LAST, (SubLObject)linkage.$sym356$NOUN_LINK_WORD_P);
        if (linkage.NIL != head_daughter) {
            return (SubLObject)ConsesLow.list(head_daughter);
        }
        head_daughter = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym255$FIND_FIRST, (SubLObject)linkage.$sym357$NOMINAL_LINK_PHRASE_P);
        return (SubLObject)((linkage.NIL != head_daughter) ? ConsesLow.list(head_daughter) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_context(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.THIRTEEN_INTEGER, (SubLObject)linkage.$sym362$CONTEXT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_context(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.THIRTEEN_INTEGER, (SubLObject)linkage.$sym362$CONTEXT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_lexes(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.TWELVE_INTEGER, (SubLObject)linkage.$sym363$LEXES);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_lexes(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.TWELVE_INTEGER, (SubLObject)linkage.$sym363$LEXES);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_right_links(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.ELEVEN_INTEGER, (SubLObject)linkage.$sym364$RIGHT_LINKS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_right_links(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.ELEVEN_INTEGER, (SubLObject)linkage.$sym364$RIGHT_LINKS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_left_links(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.TEN_INTEGER, (SubLObject)linkage.$sym365$LEFT_LINKS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_left_links(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.TEN_INTEGER, (SubLObject)linkage.$sym365$LEFT_LINKS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_abs_index(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.NINE_INTEGER, (SubLObject)linkage.$sym277$ABS_INDEX);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_abs_index(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.NINE_INTEGER, (SubLObject)linkage.$sym277$ABS_INDEX);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_ref(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.EIGHT_INTEGER, (SubLObject)linkage.$sym366$REF);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_ref(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.EIGHT_INTEGER, (SubLObject)linkage.$sym366$REF);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_string(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.SEVEN_INTEGER, (SubLObject)linkage.$sym367$STRING);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_string(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.SEVEN_INTEGER, (SubLObject)linkage.$sym367$STRING);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject get_link_word_linkage(final SubLObject link_word) {
        return classes.subloop_get_access_protected_instance_slot(link_word, (SubLObject)linkage.SIX_INTEGER, (SubLObject)linkage.$sym368$LINKAGE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject set_link_word_linkage(final SubLObject link_word, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(link_word, value, (SubLObject)linkage.SIX_INTEGER, (SubLObject)linkage.$sym368$LINKAGE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.NIL;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_modified_dependent_meaning_p_method(final SubLObject self) {
        SubLObject semtrans = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
        SubLObject rle = (SubLObject)linkage.NIL;
        rle = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            semtrans = methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw374$SEMTRANS);
            if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw375$REPLACE, cyclifier.formula_keywords(semtrans), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                return (SubLObject)linkage.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            rle = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_tree_keyword_eq_classes_method(final SubLObject self) {
        return cyclifier_interface.keyword_eq_classes(Mapping.mapcar((SubLObject)linkage.$sym379$CAR, methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS).first().first()));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_frame_filter_lexes_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        SubLObject lexes = get_link_word_lexes(self);
        try {
            thread.throwStack.push(linkage.$sym383$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                SubLObject filtered = (SubLObject)linkage.NIL;
                final SubLObject tree_keywords = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym377$TREE_KEYWORD_EQ_CLASSES);
                SubLObject lex_scores = (SubLObject)linkage.NIL;
                SubLObject max_score = (SubLObject)linkage.$int384$_5;
                SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
                SubLObject rle = (SubLObject)linkage.NIL;
                rle = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject lex_score = cyclifier_interface.lex_entry_score(cyclifier.rle_lex(rle), tree_keywords);
                    cyclifier.rle_set_confidence(rle, lex_score);
                    lex_scores = (SubLObject)ConsesLow.cons(rle, lex_scores);
                    if (lex_score.numG(max_score)) {
                        max_score = lex_score;
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    rle = cdolist_list_var.first();
                }
                cdolist_list_var = lex_scores;
                rle = (SubLObject)linkage.NIL;
                rle = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    if (cyclifier.rle_confidence(rle).numE(max_score)) {
                        filtered = (SubLObject)ConsesLow.cons(rle, filtered);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    rle = cdolist_list_var.first();
                }
                lexes = filtered;
                Dynamic.sublisp_throw((SubLObject)linkage.$sym383$OUTER_CATCH_FOR_LINK_WORD_METHOD, lexes);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_lexes(self, lexes);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym383$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_pp_comp_filter_lexes_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        SubLObject lexes = get_link_word_lexes(self);
        try {
            thread.throwStack.push(linkage.$sym388$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                SubLObject filtered = (SubLObject)linkage.NIL;
                final SubLObject pp = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym389$GET_PP_COMPLEMENT);
                final SubLObject pp_head = (SubLObject)((linkage.NIL != pp) ? methods.funcall_instance_method_with_0_args(pp, (SubLObject)linkage.$sym225$GET_HEAD) : linkage.NIL);
                SubLObject frame = (SubLObject)linkage.NIL;
                if (linkage.NIL != pp_head) {
                    SubLObject cdolist_list_var = lexes;
                    SubLObject rle = (SubLObject)linkage.NIL;
                    rle = cdolist_list_var.first();
                    while (linkage.NIL != cdolist_list_var) {
                        frame = methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw390$FRAME);
                        if (linkage.NIL != cycl_utilities.formula_arg2(frame, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != isa.isaP(frame, linkage.$const391$PPCompFrame, linkage.$const392$EverythingPSC, (SubLObject)linkage.UNPROVIDED)) {
                            final SubLObject preposition = cycl_utilities.formula_arg2(frame, (SubLObject)linkage.UNPROVIDED);
                            final SubLObject prep_string = lexicon_accessors.get_strings_of_type(preposition, linkage.$const393$Preposition, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED).first();
                            if (prep_string.equalp(methods.funcall_instance_method_with_0_args(pp_head, (SubLObject)linkage.$sym95$GET_STRING))) {
                                cyclifier.rle_set_confidence(rle, (SubLObject)linkage.ONE_INTEGER);
                                filtered = (SubLObject)ConsesLow.cons(rle, filtered);
                            }
                        }
                        else {
                            filtered = (SubLObject)ConsesLow.cons(rle, filtered);
                        }
                        cdolist_list_var = cdolist_list_var.rest();
                        rle = cdolist_list_var.first();
                    }
                    lexes = filtered;
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym388$OUTER_CATCH_FOR_LINK_WORD_METHOD, lexes);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_lexes(self, lexes);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym388$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_pos_filter_lexes_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        SubLObject lexes = get_link_word_lexes(self);
        try {
            thread.throwStack.push(linkage.$sym397$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                SubLObject filtered = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = lexes;
                SubLObject rle = (SubLObject)linkage.NIL;
                rle = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    if (linkage.NIL != conses_high.member(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY), methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw289$PENN_TAGS), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                        cyclifier.rle_set_confidence(rle, (SubLObject)linkage.ONE_INTEGER);
                        filtered = (SubLObject)ConsesLow.cons(rle, filtered);
                    }
                    else if (linkage.NIL != conses_high.member(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY), methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw398$BACKOFF_PENN_TAGS), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                        cyclifier.rle_set_confidence(rle, (SubLObject)linkage.$float399$0_75);
                        filtered = (SubLObject)ConsesLow.cons(rle, filtered);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    rle = cdolist_list_var.first();
                }
                lexes = filtered;
                Dynamic.sublisp_throw((SubLObject)linkage.$sym397$OUTER_CATCH_FOR_LINK_WORD_METHOD, lexes);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_lexes(self, lexes);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym397$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_cyclify_nucleus_method(final SubLObject self, SubLObject renamings) {
        if (renamings == linkage.UNPROVIDED) {
            renamings = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject ndistr_comp_cycls = (SubLObject)linkage.NIL;
        SubLObject distr_comp_cycls = (SubLObject)linkage.NIL;
        SubLObject mod_cycls = (SubLObject)linkage.NIL;
        SubLObject cycls = (SubLObject)linkage.NIL;
        if (linkage.NIL == subl_promotions.memberP(self, cyclifier_interface.$cyclification_in_progress$.getDynamicValue(thread), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
            final SubLObject _prev_bind_0 = cyclifier_interface.$cyclification_in_progress$.currentBinding(thread);
            try {
                cyclifier_interface.$cyclification_in_progress$.bind((SubLObject)ConsesLow.cons(self, cyclifier_interface.$cyclification_in_progress$.getDynamicValue(thread)), thread);
                if (linkage.NIL == renamings) {
                    renamings = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, cyclifier.required_keywords(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES)));
                }
                renamings = cyclifier_interface.group_disjunctive_renamings(renamings);
                thread.resetMultipleValues();
                final SubLObject non_distributing = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym404$PARTITION_SEMANTIC_COMPLEMENTS);
                final SubLObject distributing = thread.secondMultipleValue();
                thread.resetMultipleValues();
                SubLObject cdolist_list_var = non_distributing;
                SubLObject complement = (SubLObject)linkage.NIL;
                complement = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject comp_cycl = methods.funcall_instance_method_with_0_args(complement, (SubLObject)linkage.$sym214$CYCLIFY_INT);
                    if (linkage.NIL != comp_cycl) {
                        ndistr_comp_cycls = (SubLObject)ConsesLow.cons(comp_cycl, ndistr_comp_cycls);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    complement = cdolist_list_var.first();
                }
                cdolist_list_var = distributing;
                complement = (SubLObject)linkage.NIL;
                complement = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject comp_cycl = methods.funcall_instance_method_with_0_args(complement, (SubLObject)linkage.$sym214$CYCLIFY_INT);
                    if (linkage.NIL != comp_cycl) {
                        distr_comp_cycls = (SubLObject)ConsesLow.cons(comp_cycl, distr_comp_cycls);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    complement = cdolist_list_var.first();
                }
                cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym112$GET_MODIFIERS);
                SubLObject modifier = (SubLObject)linkage.NIL;
                modifier = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject mod_cycl = methods.funcall_instance_method_with_0_args(modifier, (SubLObject)linkage.$sym214$CYCLIFY_INT);
                    if (linkage.NIL != mod_cycl) {
                        mod_cycls = (SubLObject)ConsesLow.cons(mod_cycl, mod_cycls);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    modifier = cdolist_list_var.first();
                }
                cdolist_list_var = renamings;
                SubLObject conjunction = (SubLObject)linkage.NIL;
                conjunction = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    SubLObject cdolist_list_var_$20 = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
                    SubLObject rle = (SubLObject)linkage.NIL;
                    rle = cdolist_list_var_$20.first();
                    while (linkage.NIL != cdolist_list_var_$20) {
                        SubLObject my_cycls0 = (SubLObject)linkage.NIL;
                        SubLObject cdolist_list_var_$21 = conjunction;
                        SubLObject grouping = (SubLObject)linkage.NIL;
                        grouping = cdolist_list_var_$21.first();
                        while (linkage.NIL != cdolist_list_var_$21) {
                            SubLObject this_and_mods = (SubLObject)linkage.NIL;
                            SubLObject cdolist_list_var_$22 = grouping;
                            SubLObject renaming = (SubLObject)linkage.NIL;
                            renaming = cdolist_list_var_$22.first();
                            while (linkage.NIL != cdolist_list_var_$22) {
                                this_and_mods = (SubLObject)ConsesLow.cons(Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products((SubLObject)ConsesLow.cons((SubLObject)ConsesLow.list(cyclifier_interface.apply_lex_renaming(self, rle, renaming)), mod_cycls))), this_and_mods);
                                cdolist_list_var_$22 = cdolist_list_var_$22.rest();
                                renaming = cdolist_list_var_$22.first();
                            }
                            my_cycls0 = (SubLObject)ConsesLow.cons(Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products((SubLObject)ConsesLow.cons(Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.indexed_products(this_and_mods)), ndistr_comp_cycls))), my_cycls0);
                            cdolist_list_var_$21 = cdolist_list_var_$21.rest();
                            grouping = cdolist_list_var_$21.first();
                        }
                        cycls = ConsesLow.append(cycls, Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.indexed_products(my_cycls0)));
                        cdolist_list_var_$20 = cdolist_list_var_$20.rest();
                        rle = cdolist_list_var_$20.first();
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    conjunction = cdolist_list_var.first();
                }
            }
            finally {
                cyclifier_interface.$cyclification_in_progress$.rebind(_prev_bind_0, thread);
            }
        }
        return Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products((SubLObject)ConsesLow.cons(cycls, distr_comp_cycls)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_cyclify_int_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != cyclifier_interface.$allow_duplicate_cyclificationsP$.getDynamicValue(thread) || linkage.NIL == conses_high.member(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
            cyclifier_interface.$cyclification_complete$.setDynamicValue((SubLObject)ConsesLow.cons(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread)), thread);
            return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_get_oblique_object_method(final SubLObject self) {
        final SubLObject pp = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym389$GET_PP_COMPLEMENT);
        final SubLObject obl_obj = (SubLObject)((linkage.NIL != pp) ? methods.funcall_instance_method_with_0_args(pp, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT) : linkage.NIL);
        return obl_obj;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_get_pp_complement_method(final SubLObject self) {
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym414$GET_PPS);
        SubLObject pp = (SubLObject)linkage.NIL;
        pp = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            final SubLObject pp_head = (SubLObject)((linkage.NIL != pp) ? methods.funcall_instance_method_with_0_args(pp, (SubLObject)linkage.$sym225$GET_HEAD) : linkage.NIL);
            final SubLObject pp_head_string = (SubLObject)((linkage.NIL != pp_head) ? methods.funcall_instance_method_with_0_args(pp_head, (SubLObject)linkage.$sym95$GET_STRING) : linkage.NIL);
            if (linkage.NIL != pp_head_string) {
                SubLObject cdolist_list_var_$23 = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
                SubLObject rle = (SubLObject)linkage.NIL;
                rle = cdolist_list_var_$23.first();
                while (linkage.NIL != cdolist_list_var_$23) {
                    final SubLObject cycl = methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw374$SEMTRANS);
                    final SubLObject keywords = cyclifier.formula_keywords(cycl);
                    final SubLObject frame = methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw390$FRAME);
                    if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != cycl_utilities.formula_arg2(frame, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != isa.isaP(frame, linkage.$const391$PPCompFrame, linkage.$const392$EverythingPSC, (SubLObject)linkage.UNPROVIDED)) {
                        final SubLObject preposition = cycl_utilities.formula_arg2(frame, (SubLObject)linkage.UNPROVIDED);
                        final SubLObject prep_string = lexicon_accessors.get_strings_of_type(preposition, linkage.$const393$Preposition, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED).first();
                        if (prep_string.equalp(pp_head_string)) {
                            return pp;
                        }
                    }
                    else if (linkage.NIL != conses_high.intersection((SubLObject)linkage.$list412, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED) && linkage.$str413$of.equalp(pp_head_string)) {
                        return pp;
                    }
                    cdolist_list_var_$23 = cdolist_list_var_$23.rest();
                    rle = cdolist_list_var_$23.first();
                }
            }
            cdolist_list_var = cdolist_list_var.rest();
            pp = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_partition_semantic_complements_method(final SubLObject self) {
        return Values.values(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS), (SubLObject)linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_get_semantic_complements_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym304$GET_COMPLEMENTS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject subloop_reserved_initialize_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject subloop_reserved_initialize_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 70311L)
    public static SubLObject link_word_p(final SubLObject link_word) {
        return classes.subloop_instanceof_class(link_word, (SubLObject)linkage.$sym359$LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 72637L)
    public static SubLObject link_word_print_method(final SubLObject self, final SubLObject stream, final SubLObject depth) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject lexes = get_link_word_lexes(self);
        final SubLObject string = get_link_word_string(self);
        final SubLObject pos = get_link_tree_pos(self);
        try {
            thread.throwStack.push(linkage.$sym423$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                streams_high.write_string((SubLObject)linkage.$str424$__LW, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                if (linkage.NIL != lexes) {
                    streams_high.write_string((SubLObject)linkage.$str270$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                }
                streams_high.write_string((SubLObject)linkage.$str425$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                print_high.princ(pos, stream);
                streams_high.write_string((SubLObject)linkage.$str426$___, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                streams_high.write_string(string, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                streams_high.write_string((SubLObject)linkage.$str97$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
                Dynamic.sublisp_throw((SubLObject)linkage.$sym423$OUTER_CATCH_FOR_LINK_WORD_METHOD, self);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_lexes(self, lexes);
                    set_link_word_string(self, string);
                    set_link_tree_pos(self, pos);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym423$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 72997L)
    public static SubLObject clear_split_link_word() {
        final SubLObject cs = linkage.$split_link_word_caching_state$.getGlobalValue();
        if (linkage.NIL != cs) {
            memoization_state.caching_state_clear(cs);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 72997L)
    public static SubLObject remove_split_link_word(final SubLObject wordXpos) {
        return memoization_state.caching_state_remove_function_results_with_args(linkage.$split_link_word_caching_state$.getGlobalValue(), (SubLObject)ConsesLow.list(wordXpos), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 72997L)
    public static SubLObject split_link_word_internal(final SubLObject wordXpos) {
        final SubLObject pos = (SubLObject)((linkage.NIL != pos_tagged_link_word_p(wordXpos)) ? string_utilities.last_char(wordXpos) : linkage.NIL);
        final SubLObject word = (linkage.NIL != pos) ? string_utilities.remove_last_char(wordXpos, (SubLObject)linkage.TWO_INTEGER) : wordXpos;
        return Values.values(word, pos);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 72997L)
    public static SubLObject split_link_word(final SubLObject wordXpos) {
        SubLObject caching_state = linkage.$split_link_word_caching_state$.getGlobalValue();
        if (linkage.NIL == caching_state) {
            caching_state = memoization_state.create_global_caching_state_for_name((SubLObject)linkage.$sym63$SPLIT_LINK_WORD, (SubLObject)linkage.$sym428$_SPLIT_LINK_WORD_CACHING_STATE_, (SubLObject)linkage.$int429$256, (SubLObject)linkage.EQUAL, (SubLObject)linkage.ONE_INTEGER, (SubLObject)linkage.ZERO_INTEGER);
        }
        SubLObject results = memoization_state.caching_state_lookup(caching_state, wordXpos, memoization_state.$memoized_item_not_found$.getGlobalValue());
        if (results.eql(memoization_state.$memoized_item_not_found$.getGlobalValue())) {
            results = Values.arg2(Values.resetMultipleValues(), (SubLObject)Values.multiple_value_list(split_link_word_internal(wordXpos)));
            memoization_state.caching_state_put(caching_state, wordXpos, results, (SubLObject)linkage.UNPROVIDED);
        }
        return memoization_state.caching_results(results);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 73433L)
    public static SubLObject pos_tagged_link_word_p(final SubLObject word) {
        return (SubLObject)SubLObjectFactory.makeBoolean(word.isString() && linkage.NIL != list_utilities.lengthG(word, (SubLObject)linkage.TWO_INTEGER, (SubLObject)linkage.UNPROVIDED) && Characters.CHAR_period.eql(string_utilities.char_from_end(word, (SubLObject)linkage.ONE_INTEGER)) && linkage.NIL != link_pos_p(string_utilities.last_char(word)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 73608L)
    public static SubLObject create_link_word(final SubLObject v_linkage, final SubLObject string, final SubLObject index, final SubLObject abs_index, final SubLObject llinks, final SubLObject rlinks, final SubLObject penn_pos, final SubLObject v_context) {
        final SubLObject word = object.new_class_instance(penn_pos_to_classes(penn_pos).first());
        instances.set_slot(word, (SubLObject)linkage.$sym368$LINKAGE, v_linkage);
        instances.set_slot(word, (SubLObject)linkage.$sym367$STRING, string);
        instances.set_slot(word, (SubLObject)linkage.$sym106$POS, penn_pos);
        instances.set_slot(word, (SubLObject)linkage.$sym103$INDEX, index);
        instances.set_slot(word, (SubLObject)linkage.$sym277$ABS_INDEX, abs_index);
        instances.set_slot(word, (SubLObject)linkage.$sym366$REF, methods.funcall_instance_method_with_1_args(v_context, (SubLObject)linkage.$sym430$NEW_VARIABLE, string));
        instances.set_slot(word, (SubLObject)linkage.$sym365$LEFT_LINKS, llinks);
        instances.set_slot(word, (SubLObject)linkage.$sym364$RIGHT_LINKS, rlinks);
        instances.set_slot(word, (SubLObject)linkage.$sym362$CONTEXT, v_context);
        SubLObject cdolist_list_var = llinks;
        SubLObject llink = (SubLObject)linkage.NIL;
        llink = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            _csetf_link_right_word(llink, word);
            cdolist_list_var = cdolist_list_var.rest();
            llink = cdolist_list_var.first();
        }
        cdolist_list_var = rlinks;
        SubLObject rlink = (SubLObject)linkage.NIL;
        rlink = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            _csetf_link_left_word(rlink, word);
            cdolist_list_var = cdolist_list_var.rest();
            rlink = cdolist_list_var.first();
        }
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 74340L)
    public static SubLObject new_link_word(final SubLObject v_linkage, final SubLObject stringXpos, final SubLObject index, final SubLObject llinks, final SubLObject rlinks, final SubLObject penn_pos, final SubLObject v_context) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject word = (SubLObject)linkage.NIL;
        thread.resetMultipleValues();
        final SubLObject string = split_link_word(stringXpos);
        final SubLObject link_pos = thread.secondMultipleValue();
        thread.resetMultipleValues();
        thread.resetMultipleValues();
        final SubLObject v_class = get_link_word_class(string, link_pos, Mapping.mapcar((SubLObject)linkage.$sym78$LINK_NAME, llinks), Mapping.mapcar((SubLObject)linkage.$sym78$LINK_NAME, rlinks), penn_pos);
        final SubLObject derived_pos = thread.secondMultipleValue();
        thread.resetMultipleValues();
        word = object.new_class_instance(v_class);
        instances.set_slot(word, (SubLObject)linkage.$sym368$LINKAGE, v_linkage);
        instances.set_slot(word, (SubLObject)linkage.$sym367$STRING, string);
        instances.set_slot(word, (SubLObject)linkage.$sym106$POS, derived_pos);
        instances.set_slot(word, (SubLObject)linkage.$sym103$INDEX, index);
        instances.set_slot(word, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.ZERO_INTEGER);
        instances.set_slot(word, (SubLObject)linkage.$sym366$REF, methods.funcall_instance_method_with_1_args(v_context, (SubLObject)linkage.$sym430$NEW_VARIABLE, string));
        instances.set_slot(word, (SubLObject)linkage.$sym365$LEFT_LINKS, llinks);
        instances.set_slot(word, (SubLObject)linkage.$sym364$RIGHT_LINKS, rlinks);
        instances.set_slot(word, (SubLObject)linkage.$sym362$CONTEXT, v_context);
        SubLObject cdolist_list_var = llinks;
        SubLObject llink = (SubLObject)linkage.NIL;
        llink = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            _csetf_link_right_word(llink, word);
            cdolist_list_var = cdolist_list_var.rest();
            llink = cdolist_list_var.first();
        }
        cdolist_list_var = rlinks;
        SubLObject rlink = (SubLObject)linkage.NIL;
        rlink = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            _csetf_link_left_word(rlink, word);
            cdolist_list_var = cdolist_list_var.rest();
            rlink = cdolist_list_var.first();
        }
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 75484L)
    public static SubLObject link_word_get_string_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject string = get_link_word_string(self);
        try {
            thread.throwStack.push(linkage.$sym432$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym432$OUTER_CATCH_FOR_LINK_WORD_METHOD, string);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_string(self, string);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym432$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 75613L)
    public static SubLObject link_word_get_pos_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject pos = get_link_tree_pos(self);
        try {
            thread.throwStack.push(linkage.$sym436$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym436$OUTER_CATCH_FOR_LINK_WORD_METHOD, pos);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_pos(self, pos);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym436$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 75733L)
    public static SubLObject link_word_get_abs_index_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject abs_index = get_link_word_abs_index(self);
        try {
            thread.throwStack.push(linkage.$sym439$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym439$OUTER_CATCH_FOR_LINK_WORD_METHOD, abs_index);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_abs_index(self, abs_index);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym439$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 75864L)
    public static SubLObject link_word_get_refs_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject ref = get_link_word_ref(self);
        try {
            thread.throwStack.push(linkage.$sym442$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym442$OUTER_CATCH_FOR_LINK_WORD_METHOD, (SubLObject)ConsesLow.list(ref));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_ref(self, ref);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym442$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 75994L)
    public static SubLObject link_word_get_linkage_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject v_linkage = get_link_word_linkage(self);
        try {
            thread.throwStack.push(linkage.$sym445$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym445$OUTER_CATCH_FOR_LINK_WORD_METHOD, v_linkage);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_linkage(self, v_linkage);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym445$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 76126L)
    public static SubLObject link_word_get_context_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject v_context = get_link_word_context(self);
        try {
            thread.throwStack.push(linkage.$sym448$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym448$OUTER_CATCH_FOR_LINK_WORD_METHOD, v_context);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_context(self, v_context);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym448$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 76259L)
    public static SubLObject link_word_get_head_method(final SubLObject self) {
        return self;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 76372L)
    public static SubLObject link_word_get_heads_method(final SubLObject self) {
        return (SubLObject)ConsesLow.list(self);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 76493L)
    public static SubLObject link_word_get_semantic_heads_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym217$GET_HEADS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 76656L)
    public static SubLObject link_word_get_complements_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 76790L)
    public static SubLObject link_word_get_ranked_lexes_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject lexes = get_link_word_lexes(self);
        try {
            thread.throwStack.push(linkage.$sym459$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym459$OUTER_CATCH_FOR_LINK_WORD_METHOD, lexes);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_lexes(self, lexes);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym459$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 76942L)
    public static SubLObject link_word_get_lexes_method(final SubLObject self) {
        return Mapping.mapcar((SubLObject)linkage.$sym379$CAR, methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 77109L)
    public static SubLObject link_word_get_pps_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 77281L)
    public static SubLObject link_word_after(final SubLObject word1, final SubLObject word2) {
        return Numbers.numG(methods.funcall_instance_method_with_0_args(word1, (SubLObject)linkage.$sym149$GET_INDEX), methods.funcall_instance_method_with_0_args(word2, (SubLObject)linkage.$sym149$GET_INDEX));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 77433L)
    public static SubLObject link_word_lexify_method(final SubLObject self, final SubLObject lexicon) {
        SubLObject filtered = (SubLObject)linkage.NIL;
        final SubLObject string = instances.get_slot(self, (SubLObject)linkage.$sym367$STRING);
        instances.set_slot(self, (SubLObject)linkage.$sym363$LEXES, cyclifier.new_even_lex_entry_distribution(methods.funcall_instance_method_with_1_args(lexicon, (SubLObject)linkage.$sym288$GET, string)));
        if (linkage.NIL != instances.get_slot(self, (SubLObject)linkage.$sym363$LEXES)) {
            filtered = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym395$POS_FILTER_LEXES);
            filtered = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym386$PP_COMP_FILTER_LEXES);
            if (linkage.NIL != main_verb_link_word_p(self)) {
                filtered = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym470$PARTICLE_FILTER_LEXES);
            }
            filtered = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym381$FRAME_FILTER_LEXES);
        }
        if (linkage.NIL == filtered && linkage.NIL == wall_link_word_p(self) && methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY).isKeyword()) {
            final SubLObject fabricated_lexes = methods.funcall_instance_method_with_3_args(lexicon, (SubLObject)linkage.$sym471$FABRICATE, string, Mapping.mapcar((SubLObject)linkage.$sym379$CAR, methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS).first().first()), methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY));
            if (linkage.NIL != fabricated_lexes) {
                filtered = Mapping.mapcar((SubLObject)linkage.$sym472$NEW_RANKED_LEX_ENTRY, fabricated_lexes);
            }
            instances.set_slot(self, (SubLObject)linkage.$sym363$LEXES, filtered);
        }
        if (linkage.NIL != noun_link_word_p(self)) {
            if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym473$DEFINITE_DESCRIPTION_P)) {
                SubLObject augmented_lexes = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
                SubLObject rle = (SubLObject)linkage.NIL;
                rle = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject lex = (SubLObject)((linkage.NIL != rle) ? cyclifier.rle_lex(rle) : linkage.NIL);
                    if (linkage.NIL == parse_tree.introduces_termP(lex)) {
                        final SubLObject instance = methods.funcall_instance_method_with_1_args(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym278$GET_CONTEXT), (SubLObject)linkage.$sym474$GET_INSTANCE, self);
                        final SubLObject semtrans = methods.funcall_instance_method_with_1_args(lex, (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw374$SEMTRANS);
                        methods.funcall_instance_method_with_2_args(lex, (SubLObject)linkage.$sym475$SET, (SubLObject)linkage.$kw374$SEMTRANS, simplifier.conjoin((SubLObject)ConsesLow.list(semtrans, (SubLObject)ConsesLow.list(linkage.$const476$equals, (SubLObject)linkage.$kw477$NOUN, instance)), (SubLObject)linkage.UNPROVIDED));
                        cyclifier.rle_set_confidence(rle, (SubLObject)linkage.ONE_INTEGER);
                    }
                    augmented_lexes = (SubLObject)ConsesLow.cons(rle, augmented_lexes);
                    cdolist_list_var = cdolist_list_var.rest();
                    rle = cdolist_list_var.first();
                }
                instances.set_slot(self, (SubLObject)linkage.$sym363$LEXES, augmented_lexes);
            }
            else if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym478$APPOSITIVE_P)) {
                SubLObject cdolist_list_var2 = filtered;
                SubLObject rle2 = (SubLObject)linkage.NIL;
                rle2 = cdolist_list_var2.first();
                while (linkage.NIL != cdolist_list_var2) {
                    final SubLObject lex2 = cyclifier.rle_lex(rle2);
                    methods.funcall_instance_method_with_2_args(lex2, (SubLObject)linkage.$sym475$SET, (SubLObject)linkage.$kw374$SEMTRANS, simplifier.conjoin((SubLObject)ConsesLow.list((SubLObject)linkage.$list479, methods.funcall_instance_method_with_1_args(lex2, (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw374$SEMTRANS)), (SubLObject)linkage.UNPROVIDED));
                    cdolist_list_var2 = cdolist_list_var2.rest();
                    rle2 = cdolist_list_var2.first();
                }
            }
        }
        return instances.get_slot(self, (SubLObject)linkage.$sym363$LEXES);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 80044L)
    public static SubLObject link_word_get_left_links_method(final SubLObject self, SubLObject link_pattern) {
        if (link_pattern == linkage.UNPROVIDED) {
            link_pattern = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject left_links = get_link_word_left_links(self);
        try {
            thread.throwStack.push(linkage.$sym483$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                if (linkage.NIL != link_pattern && !linkage.assertionsDisabledSynth && linkage.NIL == regular_expressions.regex_pattern_p(link_pattern)) {
                    throw new AssertionError(link_pattern);
                }
                if (linkage.NIL == link_pattern) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym483$OUTER_CATCH_FOR_LINK_WORD_METHOD, left_links);
                }
                SubLObject links = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = left_links;
                SubLObject link = (SubLObject)linkage.NIL;
                link = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    if (linkage.NIL != regular_expression_utilities.regex_matchP(link_pattern, link_name(link))) {
                        links = (SubLObject)ConsesLow.cons(link, links);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    link = cdolist_list_var.first();
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym483$OUTER_CATCH_FOR_LINK_WORD_METHOD, links);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_left_links(self, left_links);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym483$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 80477L)
    public static SubLObject link_word_get_right_links_method(final SubLObject self, SubLObject link_pattern) {
        if (link_pattern == linkage.UNPROVIDED) {
            link_pattern = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject right_links = get_link_word_right_links(self);
        try {
            thread.throwStack.push(linkage.$sym487$OUTER_CATCH_FOR_LINK_WORD_METHOD);
            try {
                if (linkage.NIL != link_pattern && !linkage.assertionsDisabledSynth && linkage.NIL == regular_expressions.regex_pattern_p(link_pattern)) {
                    throw new AssertionError(link_pattern);
                }
                if (linkage.NIL == link_pattern) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym487$OUTER_CATCH_FOR_LINK_WORD_METHOD, right_links);
                }
                SubLObject links = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = right_links;
                SubLObject link = (SubLObject)linkage.NIL;
                link = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    if (linkage.NIL != regular_expression_utilities.regex_matchP(link_pattern, link_name(link))) {
                        links = (SubLObject)ConsesLow.cons(link, links);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    link = cdolist_list_var.first();
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym487$OUTER_CATCH_FOR_LINK_WORD_METHOD, links);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_right_links(self, right_links);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym487$OUTER_CATCH_FOR_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 80914L)
    public static SubLObject link_word_get_links_method(final SubLObject self, SubLObject link_pattern) {
        if (link_pattern == linkage.UNPROVIDED) {
            link_pattern = (SubLObject)linkage.NIL;
        }
        if (linkage.NIL != link_pattern && !linkage.assertionsDisabledSynth && linkage.NIL == regular_expressions.regex_pattern_p(link_pattern)) {
            throw new AssertionError(link_pattern);
        }
        return ConsesLow.append(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym293$GET_LEFT_LINKS, link_pattern), methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym292$GET_RIGHT_LINKS, link_pattern));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 81252L)
    public static SubLObject link_word_get_directly_related_method(final SubLObject self, final SubLObject pattern_keyword, SubLObject direction) {
        if (direction == linkage.UNPROVIDED) {
            direction = (SubLObject)linkage.NIL;
        }
        SubLObject words = (SubLObject)linkage.NIL;
        final SubLObject link_pattern = get_link_pattern(pattern_keyword);
        final SubLObject link_getter = (SubLObject)((linkage.NIL == direction) ? linkage.$sym489$GET_LINKS : (direction.eql((SubLObject)linkage.$kw241$LEFT) ? linkage.$sym293$GET_LEFT_LINKS : (direction.eql((SubLObject)linkage.$kw242$RIGHT) ? linkage.$sym292$GET_RIGHT_LINKS : Errors.error((SubLObject)linkage.$str494$Invalid_link_direction__a, direction))));
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_1_args(self, link_getter, link_pattern);
        SubLObject link = (SubLObject)linkage.NIL;
        link = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (link_left_word(link).eql(self)) {
                words = (SubLObject)ConsesLow.cons(link_right_word(link), words);
            }
            else {
                words = (SubLObject)ConsesLow.cons(link_left_word(link), words);
            }
            cdolist_list_var = cdolist_list_var.rest();
            link = cdolist_list_var.first();
        }
        return words;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 81960L)
    public static SubLObject link_word_get_related_method(final SubLObject self, final SubLObject link_path) {
        if (linkage.NIL == link_path) {
            return (SubLObject)ConsesLow.list(self);
        }
        SubLObject words = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, link_path.first());
        SubLObject related = (SubLObject)linkage.NIL;
        related = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            words = ConsesLow.append(methods.funcall_instance_method_with_1_args(related, (SubLObject)linkage.$sym295$GET_RELATED, link_path.rest()), words);
            cdolist_list_var = cdolist_list_var.rest();
            related = cdolist_list_var.first();
        }
        return words;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 82411L)
    public static SubLObject verb_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list504;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        SubLObject disjuncts = (SubLObject)linkage.NIL;
        SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        final SubLObject direct_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT);
        final SubLObject indirect_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT);
        final SubLObject oblique_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
        final SubLObject cl_complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        final SubLObject modified = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
        if (linkage.NIL != subl_promotions.memberP(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY), (SubLObject)linkage.$list507, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED) && linkage.NIL == subject) {
            subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
        }
        if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw508$ACTION, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw508$ACTION, self), conjuncts);
        }
        if (linkage.NIL != subject && linkage.NIL != conses_high.member((SubLObject)linkage.$kw509$SUBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw509$SUBJECT, subject), conjuncts);
        }
        if (linkage.NIL != direct_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw510$OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw510$OBJECT, direct_object), conjuncts);
        }
        if (linkage.NIL != indirect_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, indirect_object), conjuncts);
        }
        if (linkage.NIL != oblique_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw511$PREP_OBJECT, oblique_object), conjuncts);
        }
        if (linkage.NIL != modified && linkage.NIL != conses_high.member((SubLObject)linkage.$kw477$NOUN, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw477$NOUN, modified), conjuncts);
        }
        if (linkage.NIL != cl_complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw512$CLAUSE, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            SubLObject cdolist_list_var;
            final SubLObject cl_cycls = cdolist_list_var = methods.funcall_instance_method_with_0_args(cl_complement, (SubLObject)linkage.$sym214$CYCLIFY_INT);
            SubLObject cl_cycl = (SubLObject)linkage.NIL;
            cl_cycl = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                cl_cycl = simplifier.lift_conjuncts(cl_cycl);
                disjuncts = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.cons((SubLObject)linkage.$kw512$CLAUSE, cl_cycl), disjuncts);
                cdolist_list_var = cdolist_list_var.rest();
                cl_cycl = cdolist_list_var.first();
            }
        }
        if (linkage.NIL != cl_complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw513$INF_COMP, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw513$INF_COMP, cl_complement), conjuncts);
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, disjuncts);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 82411L)
    public static SubLObject verb_link_word_partition_semantic_complements_method(final SubLObject self) {
        final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        SubLObject non_distributing = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS);
        if (linkage.NIL != subject) {
            non_distributing = cyclifier_interface.delete_cyclifiable(subject, non_distributing);
        }
        return Values.values(non_distributing, (SubLObject)((linkage.NIL != subject) ? ConsesLow.list(subject) : linkage.NIL));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 82411L)
    public static SubLObject subloop_reserved_initialize_verb_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 82411L)
    public static SubLObject subloop_reserved_initialize_verb_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 82411L)
    public static SubLObject verb_link_word_p(final SubLObject verb_link_word) {
        return classes.subloop_instanceof_class(verb_link_word, (SubLObject)linkage.$sym499$VERB_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 83454L)
    public static SubLObject verb_link_word_get_subject_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != methods.$report_default_method_callsP$.getDynamicValue(thread)) {
            Errors.warn((SubLObject)linkage.$str206$Default_method_call__a_on_class__, (SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 83640L)
    public static SubLObject verb_link_word_get_semantic_subject_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != methods.$report_default_method_callsP$.getDynamicValue(thread)) {
            Errors.warn((SubLObject)linkage.$str206$Default_method_call__a_on_class__, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 83834L)
    public static SubLObject verb_link_word_get_objects_method(final SubLObject self) {
        SubLObject objects = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = (SubLObject)ConsesLow.list(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT), methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT), methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT));
        SubLObject v_object = (SubLObject)linkage.NIL;
        v_object = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != v_object) {
                objects = (SubLObject)ConsesLow.cons(v_object, objects);
            }
            cdolist_list_var = cdolist_list_var.rest();
            v_object = cdolist_list_var.first();
        }
        return objects;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 84165L)
    public static SubLObject verb_link_word_get_semantic_direct_object_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != methods.$report_default_method_callsP$.getDynamicValue(thread)) {
            Errors.warn((SubLObject)linkage.$str206$Default_method_call__a_on_class__, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 84367L)
    public static SubLObject verb_link_word_get_semantic_indirect_object_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != methods.$report_default_method_callsP$.getDynamicValue(thread)) {
            Errors.warn((SubLObject)linkage.$str206$Default_method_call__a_on_class__, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 84573L)
    public static SubLObject verb_link_word_get_semantic_objects_method(final SubLObject self) {
        SubLObject semantic_objects = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = (SubLObject)ConsesLow.list(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT), methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT), methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT));
        SubLObject sem_obj = (SubLObject)linkage.NIL;
        sem_obj = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != sem_obj) {
                final SubLObject item_var = sem_obj;
                if (linkage.NIL == conses_high.member(item_var, semantic_objects, (SubLObject)linkage.EQ, Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                    semantic_objects = (SubLObject)ConsesLow.cons(item_var, semantic_objects);
                }
            }
            cdolist_list_var = cdolist_list_var.rest();
            sem_obj = cdolist_list_var.first();
        }
        return semantic_objects;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 84976L)
    public static SubLObject verb_link_word_get_verbal_complement_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != methods.$report_default_method_callsP$.getDynamicValue(thread)) {
            Errors.warn((SubLObject)linkage.$str206$Default_method_call__a_on_class__, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym499$VERB_LINK_WORD);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 85173L)
    public static SubLObject verb_link_word_get_adjectival_complement_method(final SubLObject self) {
        return methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw539$P_A_PATTERN, (SubLObject)linkage.$kw242$RIGHT).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 85391L)
    public static SubLObject verb_link_word_get_pps_method(final SubLObject self) {
        return methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw542$MV_P_PATTERN);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 85543L)
    public static SubLObject verb_link_word_get_infinitive_marker_method(final SubLObject self) {
        final SubLObject candidate = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw546$I_PATTERN, (SubLObject)linkage.$kw241$LEFT);
        return (SubLObject)((linkage.NIL != inf_marker_link_word_p(candidate)) ? candidate : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 85810L)
    public static SubLObject verb_link_word_infinitive_p_method(final SubLObject self) {
        return list_utilities.sublisp_boolean(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym544$GET_INFINITIVE_MARKER));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86007L)
    public static SubLObject verb_link_word_base_p_method(final SubLObject self) {
        return list_utilities.sublisp_boolean(methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw546$I_PATTERN, (SubLObject)linkage.$kw241$LEFT));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_get_controller_method(final SubLObject self) {
        final SubLObject control_verb = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym559$GET_CONTROL_VERB);
        if (linkage.NIL == control_verb) {
            return (SubLObject)linkage.NIL;
        }
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(control_verb, (SubLObject)linkage.$sym560$SUBJECT_CONTROLLER_P)) {
            return methods.funcall_instance_method_with_0_args(control_verb, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        }
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(control_verb, (SubLObject)linkage.$sym561$OBJECT_CONTROLLER_P)) {
            return methods.funcall_instance_method_with_0_args(control_verb, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_get_control_verb_method(final SubLObject self) {
        final SubLObject matrix = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym564$GET_MATRIX_CLAUSE);
        final SubLObject matrix_head = (SubLObject)((linkage.NIL != matrix) ? methods.funcall_instance_method_with_0_args(matrix, (SubLObject)linkage.$sym225$GET_HEAD) : linkage.NIL);
        if (linkage.NIL != matrix_head && linkage.NIL != methods.funcall_instance_method_with_0_args(matrix_head, (SubLObject)linkage.$sym565$CONTROL_VERB_P)) {
            return matrix_head;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_control_verb_p_method(final SubLObject self) {
        return (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym560$SUBJECT_CONTROLLER_P) || linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym561$OBJECT_CONTROLLER_P));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_object_controller_p_method(final SubLObject self) {
        SubLObject result = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym461$GET_LEXES);
        SubLObject lex = (SubLObject)linkage.NIL;
        lex = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            result = conses_high.member(methods.funcall_instance_method_with_1_args(lex, (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw390$FRAME), (SubLObject)linkage.$list570, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            if (linkage.NIL != result) {
                return list_utilities.sublisp_boolean(result);
            }
            cdolist_list_var = cdolist_list_var.rest();
            lex = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_subject_controller_p_method(final SubLObject self) {
        SubLObject result = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym461$GET_LEXES);
        SubLObject lex = (SubLObject)linkage.NIL;
        lex = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            result = conses_high.member(methods.funcall_instance_method_with_1_args(lex, (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw390$FRAME), (SubLObject)linkage.$list573, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            if (linkage.NIL != result) {
                return list_utilities.sublisp_boolean(result);
            }
            cdolist_list_var = cdolist_list_var.rest();
            lex = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_get_matrix_clause_method(final SubLObject self) {
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym163$GET_ANCESTORS);
        SubLObject ancestor = (SubLObject)linkage.NIL;
        ancestor = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != parse_tree.sentential_tree_p(ancestor) && !methods.funcall_instance_method_with_0_args(ancestor, (SubLObject)linkage.$sym225$GET_HEAD).eql(self)) {
                return ancestor;
            }
            cdolist_list_var = cdolist_list_var.rest();
            ancestor = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_partition_semantic_complements_method(final SubLObject self) {
        final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        SubLObject non_distributing = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS);
        if (linkage.NIL != subject) {
            non_distributing = cyclifier_interface.delete_cyclifiable(subject, non_distributing);
        }
        return Values.values(non_distributing, (SubLObject)((linkage.NIL != subject) ? ConsesLow.list(subject) : linkage.NIL));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_particle_filter_lexes_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_main_verb_link_word_method = (SubLObject)linkage.NIL;
        SubLObject lexes = get_link_word_lexes(self);
        try {
            thread.throwStack.push(linkage.$sym579$OUTER_CATCH_FOR_MAIN_VERB_LINK_WORD_METHOD);
            try {
                SubLObject filtered = (SubLObject)linkage.NIL;
                final SubLObject sentence_particle = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym580$GET_PARTICLE);
                final SubLObject sentence_particle_head = (SubLObject)((linkage.NIL != sentence_particle) ? methods.funcall_instance_method_with_0_args(sentence_particle, (SubLObject)linkage.$sym225$GET_HEAD) : linkage.NIL);
                SubLObject frame = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = lexes;
                SubLObject rle = (SubLObject)linkage.NIL;
                rle = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    frame = methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw390$FRAME);
                    if (linkage.NIL != cycl_utilities.formula_arg2(frame, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != isa.isaP(frame, linkage.$const581$ParticleFrameType, linkage.$const392$EverythingPSC, (SubLObject)linkage.UNPROVIDED)) {
                        if (linkage.NIL != sentence_particle_head) {
                            final SubLObject required_particle_string = lexicon_accessors.get_strings_of_type(cycl_utilities.formula_arg2(frame, (SubLObject)linkage.UNPROVIDED), linkage.$const582$VerbParticle, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED).first();
                            if (required_particle_string.equalp(methods.funcall_instance_method_with_0_args(sentence_particle_head, (SubLObject)linkage.$sym95$GET_STRING))) {
                                cyclifier.rle_set_confidence(rle, (SubLObject)linkage.ONE_INTEGER);
                                filtered = (SubLObject)ConsesLow.cons(rle, filtered);
                            }
                        }
                    }
                    else if (linkage.NIL == sentence_particle_head) {
                        filtered = (SubLObject)ConsesLow.cons(rle, filtered);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    rle = cdolist_list_var.first();
                }
                lexes = filtered;
                Dynamic.sublisp_throw((SubLObject)linkage.$sym579$OUTER_CATCH_FOR_MAIN_VERB_LINK_WORD_METHOD, lexes);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_lexes(self, lexes);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_main_verb_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym579$OUTER_CATCH_FOR_MAIN_VERB_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_main_verb_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list504;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        SubLObject disjuncts = (SubLObject)linkage.NIL;
        SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        final SubLObject direct_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT);
        final SubLObject indirect_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT);
        final SubLObject oblique_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
        final SubLObject cl_complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        final SubLObject modified = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
        if (linkage.NIL != subl_promotions.memberP(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY), (SubLObject)linkage.$list507, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED) && linkage.NIL == subject) {
            subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
        }
        if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw508$ACTION, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw508$ACTION, self), conjuncts);
        }
        if (linkage.NIL != subject && linkage.NIL != conses_high.member((SubLObject)linkage.$kw509$SUBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw509$SUBJECT, subject), conjuncts);
        }
        if (linkage.NIL != direct_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw510$OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw510$OBJECT, direct_object), conjuncts);
        }
        if (linkage.NIL != indirect_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, indirect_object), conjuncts);
        }
        if (linkage.NIL != oblique_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw511$PREP_OBJECT, oblique_object), conjuncts);
        }
        if (linkage.NIL != modified && linkage.NIL != conses_high.member((SubLObject)linkage.$kw477$NOUN, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw477$NOUN, modified), conjuncts);
        }
        if (linkage.NIL != cl_complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw512$CLAUSE, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            SubLObject cdolist_list_var;
            final SubLObject cl_cycls = cdolist_list_var = methods.funcall_instance_method_with_0_args(cl_complement, (SubLObject)linkage.$sym214$CYCLIFY_INT);
            SubLObject cl_cycl = (SubLObject)linkage.NIL;
            cl_cycl = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                cl_cycl = simplifier.lift_conjuncts(cl_cycl);
                disjuncts = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.cons((SubLObject)linkage.$kw512$CLAUSE, cl_cycl), disjuncts);
                cdolist_list_var = cdolist_list_var.rest();
                cl_cycl = cdolist_list_var.first();
            }
        }
        if (linkage.NIL != cl_complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw513$INF_COMP, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw513$INF_COMP, cl_complement), conjuncts);
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, disjuncts);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_cyclify_int_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != cyclifier_interface.$allow_duplicate_cyclificationsP$.getDynamicValue(thread) || linkage.NIL == conses_high.member(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
            cyclifier_interface.$cyclification_complete$.setDynamicValue((SubLObject)ConsesLow.cons(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread)), thread);
            return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject subloop_reserved_initialize_main_verb_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject subloop_reserved_initialize_main_verb_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 86208L)
    public static SubLObject main_verb_link_word_p(final SubLObject main_verb_link_word) {
        return classes.subloop_instanceof_class(main_verb_link_word, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 87850L)
    public static SubLObject main_verb_link_word_passive_p_method(final SubLObject self) {
        return list_utilities.sublisp_boolean(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw590$P_V_PATTERN));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 88033L)
    public static SubLObject main_verb_link_word_get_subject_method(final SubLObject self) {
        final SubLObject subjects = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw593$S_PATTERN);
        if (linkage.NIL != subjects) {
            return get_link_phrase(subjects);
        }
        final SubLObject aux = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym594$GET_AUX_VERB);
        if (linkage.NIL != aux) {
            return methods.funcall_instance_method_with_0_args(aux, (SubLObject)linkage.$sym303$GET_SUBJECT);
        }
        final SubLObject controller = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym557$GET_CONTROLLER);
        if (linkage.NIL != controller) {
            return controller;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 88459L)
    public static SubLObject main_verb_link_word_get_semantic_subject_method(final SubLObject self) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym588$PASSIVE_P)) {
            SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym414$GET_PPS);
            SubLObject preposition = (SubLObject)linkage.NIL;
            preposition = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                if (methods.funcall_instance_method_with_0_args(preposition, (SubLObject)linkage.$sym95$GET_STRING).equal((SubLObject)linkage.$str597$by)) {
                    return methods.funcall_instance_method_with_0_args(preposition, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
                }
                cdolist_list_var = cdolist_list_var.rest();
                preposition = cdolist_list_var.first();
            }
            return (SubLObject)linkage.NIL;
        }
        final SubLObject aux = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym594$GET_AUX_VERB);
        return (linkage.NIL != aux) ? methods.funcall_instance_method_with_0_args(aux, (SubLObject)linkage.$sym303$GET_SUBJECT) : methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym303$GET_SUBJECT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 88991L)
    public static SubLObject main_verb_link_word_get_direct_object_method(final SubLObject self) {
        SubLObject v_object = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw600$O___N_PATTERN);
        if (linkage.NIL != v_object) {
            return get_link_phrase(v_object);
        }
        v_object = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw601$O_PATTERN);
        if (linkage.NIL != v_object) {
            return get_link_phrase(v_object);
        }
        v_object = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw602$B_PATTERN);
        if (linkage.NIL != v_object) {
            return get_link_phrase(v_object);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 89465L)
    public static SubLObject main_verb_link_word_get_semantic_direct_object_method(final SubLObject self) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym588$PASSIVE_P)) {
            SubLObject v_object = (SubLObject)linkage.NIL;
            if (linkage.NIL == v_object) {
                SubLObject csome_list_var;
                SubLObject pattern;
                for (csome_list_var = (SubLObject)linkage.$list605, pattern = (SubLObject)linkage.NIL, pattern = csome_list_var.first(); linkage.NIL == v_object && linkage.NIL != csome_list_var; v_object = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, pattern), csome_list_var = csome_list_var.rest(), pattern = csome_list_var.first()) {}
            }
            return get_link_phrase(v_object);
        }
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 89997L)
    public static SubLObject main_verb_link_word_get_indirect_object_method(final SubLObject self) {
        final SubLObject obl_obj = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
        if (linkage.NIL != obl_obj) {
            return obl_obj;
        }
        if (linkage.NIL != methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw600$O___N_PATTERN)) {
            final SubLObject v_object = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw601$O_PATTERN);
            if (linkage.NIL != v_object) {
                return get_link_phrase(v_object);
            }
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 90391L)
    public static SubLObject main_verb_link_word_get_semantic_indirect_object_method(final SubLObject self) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym588$PASSIVE_P)) {
            SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym414$GET_PPS);
            SubLObject preposition = (SubLObject)linkage.NIL;
            preposition = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                if (methods.funcall_instance_method_with_0_args(preposition, (SubLObject)linkage.$sym95$GET_STRING).equal((SubLObject)linkage.$str610$to)) {
                    return methods.funcall_instance_method_with_0_args(preposition, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
                }
                cdolist_list_var = cdolist_list_var.rest();
                preposition = cdolist_list_var.first();
            }
            final SubLObject aux = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym594$GET_AUX_VERB);
            return (SubLObject)((linkage.NIL != aux) ? methods.funcall_instance_method_with_0_args(aux, (SubLObject)linkage.$sym303$GET_SUBJECT) : linkage.NIL);
        }
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 91000L)
    public static SubLObject main_verb_link_word_get_verbal_complement_method(final SubLObject self) {
        SubLObject complement = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, (SubLObject)linkage.$list613);
        if (linkage.NIL == complement) {
            complement = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, (SubLObject)linkage.$list614);
        }
        if (linkage.NIL == complement) {
            complement = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, (SubLObject)linkage.$list615);
        }
        return (SubLObject)((linkage.NIL != complement) ? get_link_phrase(complement) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 91488L)
    public static SubLObject main_verb_link_word_get_complements_method(final SubLObject self) {
        final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        final SubLObject v_do = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT);
        final SubLObject io = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT);
        SubLObject complements = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = (SubLObject)ConsesLow.list(io, v_do, subject);
        SubLObject complement = (SubLObject)linkage.NIL;
        complement = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != complement) {
                complements = (SubLObject)ConsesLow.cons(complement, complements);
            }
            cdolist_list_var = cdolist_list_var.rest();
            complement = cdolist_list_var.first();
        }
        return complements;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 91912L)
    public static SubLObject main_verb_link_word_get_aux_verb_method(final SubLObject self) {
        SubLObject aux = (SubLObject)linkage.NIL;
        if (linkage.NIL == aux) {
            SubLObject csome_list_var;
            SubLObject patterns;
            for (csome_list_var = (SubLObject)linkage.$list620, patterns = (SubLObject)linkage.NIL, patterns = csome_list_var.first(); linkage.NIL == aux && linkage.NIL != csome_list_var; aux = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, patterns).first(), csome_list_var = csome_list_var.rest(), patterns = csome_list_var.first()) {}
        }
        return (SubLObject)((linkage.NIL != aux_verb_link_word_p(aux)) ? aux : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92318L)
    public static SubLObject main_verb_link_word_get_particle_method(final SubLObject self) {
        return get_link_phrase(methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw623$K_PATTERN, (SubLObject)linkage.$kw242$RIGHT));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92535L)
    public static SubLObject main_verb_link_word_get_modifieds_method(final SubLObject self) {
        return ConsesLow.append(methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw626$M_PATTERN, (SubLObject)linkage.$kw241$LEFT), methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw627$A_PATTERN, (SubLObject)linkage.$kw242$RIGHT));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject aux_verb_link_word_copula_p_method(final SubLObject self) {
        return (SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL == methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject aux_verb_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list637;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        SubLObject disjuncts = (SubLObject)linkage.NIL;
        final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        final SubLObject direct_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT);
        final SubLObject complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS).first();
        if (linkage.NIL != subject && linkage.NIL != conses_high.member((SubLObject)linkage.$kw509$SUBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw509$SUBJECT, subject), conjuncts);
        }
        if (linkage.NIL != direct_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw510$OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw510$OBJECT, direct_object), conjuncts);
        }
        if (linkage.NIL != complement && (linkage.NIL == subject || !complement.eql(subject)) && !complement.eql(direct_object) && linkage.NIL != conses_high.member((SubLObject)linkage.$kw638$COMPLEMENT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            SubLObject comp_cycls = methods.funcall_instance_method_with_0_args(complement, (SubLObject)linkage.$sym214$CYCLIFY_INT);
            if (linkage.NIL == comp_cycls) {
                comp_cycls = (SubLObject)ConsesLow.cons((SubLObject)linkage.NIL, comp_cycls);
            }
            SubLObject cdolist_list_var = comp_cycls;
            SubLObject comp_cycl = (SubLObject)linkage.NIL;
            comp_cycl = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                comp_cycl = simplifier.lift_conjuncts(comp_cycl);
                disjuncts = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.cons((SubLObject)linkage.$kw638$COMPLEMENT, comp_cycl), disjuncts);
                cdolist_list_var = cdolist_list_var.rest();
                comp_cycl = cdolist_list_var.first();
            }
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, disjuncts);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject aux_verb_link_word_get_semantic_heads_method(final SubLObject self) {
        final SubLObject main_verb = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        return (SubLObject)((linkage.NIL != main_verb) ? methods.funcall_instance_method_with_0_args(main_verb, (SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS) : ConsesLow.list(self));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject aux_verb_link_word_get_tense_method(final SubLObject self) {
        return (SubLObject)((linkage.NIL != conses_high.member(link_word_get_string_method(self), (SubLObject)linkage.$list644, (SubLObject)linkage.EQUALP, (SubLObject)linkage.UNPROVIDED)) ? linkage.$kw645$PRESENT : ((linkage.NIL != conses_high.member(link_word_get_string_method(self), (SubLObject)linkage.$list646, (SubLObject)linkage.EQUALP, (SubLObject)linkage.UNPROVIDED)) ? linkage.$kw647$PAST : ((linkage.NIL != conses_high.member(link_word_get_string_method(self), (SubLObject)linkage.$list648, (SubLObject)linkage.EQUALP, (SubLObject)linkage.UNPROVIDED)) ? linkage.$kw649$INFINITIVE : linkage.NIL)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject aux_verb_link_word_get_semantic_complements_method(final SubLObject self) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym632$COPULA_P)) {
            return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym304$GET_COMPLEMENTS);
        }
        final SubLObject complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        return (SubLObject)((linkage.NIL != complement) ? ConsesLow.list(complement) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject aux_verb_link_word_get_complements_method(final SubLObject self) {
        SubLObject complements = (SubLObject)linkage.NIL;
        final SubLObject subject = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT);
        final SubLObject v_object = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT);
        final SubLObject verbal_complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        final SubLObject prep_complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym654$GET_PREPOSITIONAL_COMPLEMENT);
        final SubLObject adj_complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym537$GET_ADJECTIVAL_COMPLEMENT);
        final SubLObject adv_complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym655$GET_ADVERBIAL_COMPLEMENT);
        SubLObject cdolist_list_var = (SubLObject)ConsesLow.list(adv_complement, adj_complement, prep_complement, verbal_complement, v_object, subject);
        SubLObject complement = (SubLObject)linkage.NIL;
        complement = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != complement) {
                complements = (SubLObject)ConsesLow.cons(complement, complements);
            }
            cdolist_list_var = cdolist_list_var.rest();
            complement = cdolist_list_var.first();
        }
        return complements;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject subloop_reserved_initialize_aux_verb_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject subloop_reserved_initialize_aux_verb_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 92790L)
    public static SubLObject aux_verb_link_word_p(final SubLObject aux_verb_link_word) {
        return classes.subloop_instanceof_class(aux_verb_link_word, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 94090L)
    public static SubLObject aux_verb_link_word_get_subject_method(final SubLObject self) {
        return get_link_phrase(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw593$S_PATTERN));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 94286L)
    public static SubLObject aux_verb_link_word_get_verbal_complement_method(final SubLObject self) {
        SubLObject cdolist_list_var = (SubLObject)linkage.$list662;
        SubLObject pattern = (SubLObject)linkage.NIL;
        pattern = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            SubLObject vcomps = (SubLObject)linkage.NIL;
            vcomps = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, pattern, (SubLObject)linkage.$kw242$RIGHT);
            if (linkage.NIL != vcomps && linkage.NIL != verb_link_word_p(vcomps.first())) {
                return get_link_phrase(vcomps);
            }
            cdolist_list_var = cdolist_list_var.rest();
            pattern = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 94683L)
    public static SubLObject aux_verb_link_word_get_adjectival_complement_method(final SubLObject self) {
        final SubLObject acomp = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw539$P_A_PATTERN, (SubLObject)linkage.$kw242$RIGHT);
        return (SubLObject)((linkage.NIL != acomp) ? get_link_phrase(acomp) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 94954L)
    public static SubLObject aux_verb_link_word_get_adverbial_complement_method(final SubLObject self) {
        final SubLObject acomp = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw667$PF_PATTERN, (SubLObject)linkage.$kw241$LEFT);
        return (SubLObject)((linkage.NIL != acomp) ? get_link_phrase(acomp) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 95219L)
    public static SubLObject aux_verb_link_word_get_prepositional_complement_method(final SubLObject self) {
        final SubLObject pcomp = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw670$P_P_PATTERN, (SubLObject)linkage.$kw242$RIGHT);
        return (SubLObject)((linkage.NIL != pcomp) ? get_link_phrase(pcomp) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 95497L)
    public static SubLObject aux_verb_link_word_equality_p_method(final SubLObject self) {
        return list_utilities.sublisp_boolean(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw601$O_PATTERN));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 95710L)
    public static SubLObject aux_verb_link_word_passive_p_method(final SubLObject self) {
        final SubLObject main = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        return (SubLObject)((linkage.NIL != main) ? methods.funcall_instance_method_with_0_args(methods.funcall_instance_method_with_0_args(main, (SubLObject)linkage.$sym225$GET_HEAD), (SubLObject)linkage.$sym588$PASSIVE_P) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 95972L)
    public static SubLObject aux_verb_link_word_get_semantic_subject_method(final SubLObject self) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym588$PASSIVE_P)) {
            final SubLObject main = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
            return (SubLObject)((linkage.NIL != main && linkage.NIL != main_verb_link_word_p(methods.funcall_instance_method_with_0_args(main, (SubLObject)linkage.$sym225$GET_HEAD))) ? methods.funcall_instance_method_with_0_args(main, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT) : linkage.NIL);
        }
        final SubLObject sister = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym153$GET_SISTER, (SubLObject)linkage.ONE_INTEGER);
        if (linkage.NIL != sister && linkage.NIL != nominal_link_tree_p(sister)) {
            return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym303$GET_SUBJECT);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 96437L)
    public static SubLObject aux_verb_link_word_get_direct_object_method(final SubLObject self) {
        final SubLObject v_do = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw601$O_PATTERN);
        return (SubLObject)((linkage.NIL != v_do) ? get_link_phrase(v_do) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 96666L)
    public static SubLObject aux_verb_link_word_get_semantic_direct_object_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 96850L)
    public static SubLObject aux_verb_link_word_get_indirect_object_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 96994L)
    public static SubLObject aux_verb_link_word_get_semantic_indirect_object_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97156L)
    public static SubLObject aux_verb_link_word_get_oblique_object_method(final SubLObject self) {
        final SubLObject verbal_complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        return (SubLObject)((linkage.NIL != verbal_complement) ? methods.funcall_instance_method_with_0_args(methods.funcall_instance_method_with_0_args(verbal_complement, (SubLObject)linkage.$sym225$GET_HEAD), (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97447L)
    public static SubLObject subloop_reserved_initialize_modal_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97447L)
    public static SubLObject subloop_reserved_initialize_modal_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97447L)
    public static SubLObject modal_link_word_p(final SubLObject modal_link_word) {
        return classes.subloop_instanceof_class(modal_link_word, (SubLObject)linkage.$sym689$MODAL_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97509L)
    public static SubLObject subloop_reserved_initialize_participle_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97509L)
    public static SubLObject subloop_reserved_initialize_participle_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97509L)
    public static SubLObject participle_link_word_p(final SubLObject participle_link_word) {
        return classes.subloop_instanceof_class(participle_link_word, (SubLObject)linkage.$sym692$PARTICIPLE_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject noun_link_word_definite_description_p_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_noun_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject pos = get_link_tree_pos(self);
        try {
            thread.throwStack.push(linkage.$sym699$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD);
            try {
                final SubLObject det = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym700$GET_DETERMINER);
                if (linkage.NIL != det && methods.funcall_instance_method_with_0_args(det, (SubLObject)linkage.$sym95$GET_STRING).equalp((SubLObject)linkage.$str701$the)) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym699$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD, (SubLObject)linkage.T);
                }
                final SubLObject head = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym225$GET_HEAD);
                if (linkage.NIL != head && linkage.NIL != cyclifier_interface.name_word_p(head) && linkage.NIL != methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym702$SINGULAR_P)) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym699$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD, (SubLObject)linkage.T);
                }
                final SubLObject pos_$24 = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym703$GET_POSSESSOR);
                if (linkage.NIL != pos_$24) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym699$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD, (SubLObject)linkage.T);
                }
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_pos(self, pos);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_noun_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym699$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_noun_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject noun_link_word_cyclify_nucleus_method(final SubLObject self, SubLObject renamings_disj) {
        if (renamings_disj == linkage.UNPROVIDED) {
            renamings_disj = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject cycls = (SubLObject)linkage.NIL;
        SubLObject independent_mods = (SubLObject)linkage.NIL;
        SubLObject dependent_mods = (SubLObject)linkage.NIL;
        SubLObject comp_mod_cycls = (SubLObject)linkage.NIL;
        thread.resetMultipleValues();
        final SubLObject independent_mods_$25 = cyclifier_interface.partition_modifiers(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym112$GET_MODIFIERS));
        final SubLObject dependent_mods_$26 = thread.secondMultipleValue();
        thread.resetMultipleValues();
        independent_mods = independent_mods_$25;
        dependent_mods = dependent_mods_$26;
        if (linkage.NIL == subl_promotions.memberP(self, cyclifier_interface.$cyclification_in_progress$.getDynamicValue(thread), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
            final SubLObject _prev_bind_0 = cyclifier_interface.$cyclification_in_progress$.currentBinding(thread);
            try {
                cyclifier_interface.$cyclification_in_progress$.bind((SubLObject)ConsesLow.cons(self, cyclifier_interface.$cyclification_in_progress$.getDynamicValue(thread)), thread);
                if (linkage.NIL == renamings_disj) {
                    renamings_disj = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, cyclifier.required_keywords(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES)));
                }
                SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS);
                SubLObject complement = (SubLObject)linkage.NIL;
                complement = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject comp_cycl = methods.funcall_instance_method_with_0_args(complement, (SubLObject)linkage.$sym214$CYCLIFY_INT);
                    if (linkage.NIL != comp_cycl) {
                        comp_mod_cycls = (SubLObject)ConsesLow.cons(comp_cycl, comp_mod_cycls);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    complement = cdolist_list_var.first();
                }
                cdolist_list_var = independent_mods;
                SubLObject modifier = (SubLObject)linkage.NIL;
                modifier = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject mod_cycl = methods.funcall_instance_method_with_0_args(modifier, (SubLObject)linkage.$sym214$CYCLIFY_INT);
                    if (linkage.NIL != mod_cycl) {
                        comp_mod_cycls = (SubLObject)ConsesLow.cons(mod_cycl, comp_mod_cycls);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    modifier = cdolist_list_var.first();
                }
                cdolist_list_var = renamings_disj;
                SubLObject renamings_conj = (SubLObject)linkage.NIL;
                renamings_conj = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    SubLObject cycls_conj = (SubLObject)linkage.NIL;
                    SubLObject cdolist_list_var_$27 = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
                    SubLObject rle = (SubLObject)linkage.NIL;
                    rle = cdolist_list_var_$27.first();
                    while (linkage.NIL != cdolist_list_var_$27) {
                        SubLObject cycls_disj = (SubLObject)linkage.NIL;
                        final SubLObject v_term = methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw707$TERM);
                        SubLObject cdolist_list_var_$28 = renamings_conj;
                        SubLObject renaming = (SubLObject)linkage.NIL;
                        renaming = cdolist_list_var_$28.first();
                        while (linkage.NIL != cdolist_list_var_$28) {
                            SubLObject my_cycls_with_mods = (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list(cyclifier_interface.apply_lex_renaming(self, rle, renaming)));
                            SubLObject cdolist_list_var_$29 = dependent_mods;
                            SubLObject mod = (SubLObject)linkage.NIL;
                            mod = cdolist_list_var_$29.first();
                            while (linkage.NIL != cdolist_list_var_$29) {
                                my_cycls_with_mods = (SubLObject)ConsesLow.cons(methods.funcall_instance_method_with_1_args(mod, (SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS, cyclifier_interface.update_keyword_renamings(methods.funcall_instance_method_with_0_args(mod, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS), (SubLObject)linkage.$kw375$REPLACE, v_term)), my_cycls_with_mods);
                                cdolist_list_var_$29 = cdolist_list_var_$29.rest();
                                mod = cdolist_list_var_$29.first();
                            }
                            cycls_disj = ConsesLow.append(Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products(my_cycls_with_mods)), cycls_disj);
                            cdolist_list_var_$28 = cdolist_list_var_$28.rest();
                            renaming = cdolist_list_var_$28.first();
                        }
                        if (linkage.NIL != cycls_disj) {
                            cycls_conj = ConsesLow.append(cycls_disj, cycls_conj);
                        }
                        cdolist_list_var_$27 = cdolist_list_var_$27.rest();
                        rle = cdolist_list_var_$27.first();
                    }
                    cycls = ConsesLow.append(cycls, Mapping.mapcar((SubLObject)linkage.$sym218$INSTANTIATE_SCOPE, list_utilities.cross_products((SubLObject)ConsesLow.cons(cycls_conj, comp_mod_cycls))));
                    cdolist_list_var = cdolist_list_var.rest();
                    renamings_conj = cdolist_list_var.first();
                }
            }
            finally {
                cyclifier_interface.$cyclification_in_progress$.rebind(_prev_bind_0, thread);
            }
        }
        return cycls;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject noun_link_word_cyclify_int_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (linkage.NIL != cyclifier_interface.$allow_duplicate_cyclificationsP$.getDynamicValue(thread) || linkage.NIL == conses_high.member(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
            cyclifier_interface.$cyclification_complete$.setDynamicValue((SubLObject)ConsesLow.cons(self, cyclifier_interface.$cyclification_complete$.getDynamicValue(thread)), thread);
            final SubLObject quantifier = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym710$GET_QUANTIFIER);
            SubLObject result = (SubLObject)linkage.NIL;
            result = ((linkage.NIL != quantifier) ? methods.funcall_instance_method_with_0_args(quantifier, (SubLObject)linkage.$sym214$CYCLIFY_INT) : methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS));
            return result;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject noun_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list714;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        SubLObject disjuncts = (SubLObject)linkage.NIL;
        final SubLObject complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS).first();
        final SubLObject quantifier0 = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym715$GET_OVERT_QUANTIFIER);
        final SubLObject quantifier2 = (SubLObject)((linkage.NIL != quantifier0) ? methods.funcall_instance_method_with_0_args(quantifier0, (SubLObject)linkage.$sym225$GET_HEAD) : linkage.NIL);
        final SubLObject modified = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
        if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw477$NOUN, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw477$NOUN, self), conjuncts);
        }
        if (linkage.NIL != complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw511$PREP_OBJECT, complement), conjuncts);
        }
        if (linkage.NIL != complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw716$POSSESSOR, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw716$POSSESSOR, complement), conjuncts);
        }
        if (linkage.NIL != modified && linkage.NIL != conses_high.member((SubLObject)linkage.$kw717$MODIFIED, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw717$MODIFIED, modified), conjuncts);
        }
        if (linkage.NIL != quantifier2 && methods.funcall_instance_method_with_0_args(quantifier2, (SubLObject)linkage.$sym129$GET_CATEGORY).eql((SubLObject)linkage.$kw718$CD) && linkage.NIL != conses_high.member((SubLObject)linkage.$kw719$NUMBER, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw719$NUMBER, quantifier2), conjuncts);
        }
        if (linkage.NIL != complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw720$POSS_COL, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            final SubLObject head = methods.funcall_instance_method_with_0_args(complement, (SubLObject)linkage.$sym225$GET_HEAD);
            SubLObject cycl = (SubLObject)linkage.NIL;
            SubLObject col = (SubLObject)linkage.NIL;
            if (linkage.NIL != head) {
                SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym461$GET_LEXES);
                SubLObject lex = (SubLObject)linkage.NIL;
                lex = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    cycl = methods.funcall_instance_method_with_1_args(lex, (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw374$SEMTRANS);
                    col = parse_tree.main_collection(cycl, (SubLObject)linkage.$kw477$NOUN);
                    disjuncts = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.cons((SubLObject)linkage.$kw720$POSS_COL, col), disjuncts);
                    cdolist_list_var = cdolist_list_var.rest();
                    lex = cdolist_list_var.first();
                }
                if (linkage.NIL == disjuncts) {
                    disjuncts = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.cons((SubLObject)linkage.$kw720$POSS_COL, linkage.$const721$Thing), disjuncts);
                }
            }
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, disjuncts);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject noun_link_word_relational_noun_p_method(final SubLObject self) {
        SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym269$GET_RANKED_LEXES);
        SubLObject rle = (SubLObject)linkage.NIL;
        rle = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            final SubLObject denot = cyclifier.rename_variables(methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw374$SEMTRANS), cyclifier.frame_renaming(methods.funcall_instance_method_with_1_args(cyclifier.rle_lex(rle), (SubLObject)linkage.$sym288$GET, (SubLObject)linkage.$kw390$FRAME)));
            final SubLObject keywords = cyclifier.formula_keywords(denot);
            SubLObject cdolist_list_var_$30 = (SubLObject)linkage.$list412;
            SubLObject keyword = (SubLObject)linkage.NIL;
            keyword = cdolist_list_var_$30.first();
            while (linkage.NIL != cdolist_list_var_$30) {
                if (linkage.NIL != subl_promotions.memberP(keyword, keywords, (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED)) {
                    return (SubLObject)linkage.T;
                }
                cdolist_list_var_$30 = cdolist_list_var_$30.rest();
                keyword = cdolist_list_var_$30.first();
            }
            cdolist_list_var = cdolist_list_var.rest();
            rle = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject noun_link_word_get_quantifier_method(final SubLObject self) {
        final SubLObject quantifier = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym715$GET_OVERT_QUANTIFIER);
        if (linkage.NIL != quantifier) {
            return (SubLObject)(methods.funcall_instance_method_with_0_args(quantifier, (SubLObject)linkage.$sym95$GET_STRING).equalp((SubLObject)linkage.$str701$the) ? linkage.NIL : quantifier);
        }
        if (linkage.NIL == methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym703$GET_POSSESSOR) && linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym702$SINGULAR_P)) {
            return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym727$GET_EXISTENTIAL_NULL_DETERMINER);
        }
        if (linkage.NIL == methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym703$GET_POSSESSOR) && linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym728$PLURAL_P)) {
            return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym727$GET_EXISTENTIAL_NULL_DETERMINER);
        }
        if (linkage.NIL == methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym703$GET_POSSESSOR)) {
            return (SubLObject)linkage.NIL;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject subloop_reserved_initialize_noun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject subloop_reserved_initialize_noun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 97572L)
    public static SubLObject noun_link_word_p(final SubLObject noun_link_word) {
        return classes.subloop_instanceof_class(noun_link_word, (SubLObject)linkage.$sym695$NOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 98763L)
    public static SubLObject noun_link_word_get_complements_method(final SubLObject self) {
        if (linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym723$RELATIONAL_NOUN_P)) {
            SubLObject complement = (SubLObject)linkage.NIL;
            SubLObject possessor = (SubLObject)linkage.NIL;
            SubLObject preposition = (SubLObject)linkage.NIL;
            possessor = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym703$GET_POSSESSOR);
            if (linkage.NIL != possessor) {
                complement = possessor;
            }
            if (linkage.NIL == complement) {
                final SubLObject pp = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym414$GET_PPS).first();
                if (linkage.NIL != pp) {
                    preposition = methods.funcall_instance_method_with_0_args(pp, (SubLObject)linkage.$sym225$GET_HEAD);
                }
                if (linkage.NIL != preposition && methods.funcall_instance_method_with_0_args(preposition, (SubLObject)linkage.$sym95$GET_STRING).equalp((SubLObject)linkage.$str413$of)) {
                    complement = methods.funcall_instance_method_with_0_args(preposition, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
                }
            }
            return (SubLObject)((linkage.NIL != complement) ? ConsesLow.list(complement) : linkage.NIL);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 99541L)
    public static SubLObject noun_link_word_get_modifieds_method(final SubLObject self) {
        return ConsesLow.append(methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw735$MX_PATTERN, (SubLObject)linkage.$kw241$LEFT), methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw736$GN_PATTERN, (SubLObject)linkage.$kw242$RIGHT), methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw737$AN_PATTERN, (SubLObject)linkage.$kw242$RIGHT));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 99850L)
    public static SubLObject noun_link_word_get_determiner_method(final SubLObject self) {
        final SubLObject det = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw740$D_S_PATTERN).first();
        if (linkage.NIL != det && linkage.NIL == subl_promotions.memberP(methods.funcall_instance_method_with_0_args(det, (SubLObject)linkage.$sym129$GET_CATEGORY), (SubLObject)linkage.$list741, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
            return det;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 100135L)
    public static SubLObject noun_link_word_get_cardinal_method(final SubLObject self) {
        return methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw745$D_MC_PATTERN).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 100313L)
    public static SubLObject noun_link_word_get_overt_quantifier_method(final SubLObject self) {
        SubLObject quant = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym700$GET_DETERMINER);
        if (linkage.NIL != quant) {
            return quant;
        }
        quant = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym743$GET_CARDINAL);
        if (linkage.NIL != quant) {
            return quant;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 100587L)
    public static SubLObject noun_link_word_get_possessor_method(final SubLObject self) {
        final SubLObject det = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw750$D_PATTERN).first();
        if (linkage.NIL != det && linkage.NIL != conses_high.member(methods.funcall_instance_method_with_0_args(det, (SubLObject)linkage.$sym129$GET_CATEGORY), (SubLObject)linkage.$list741, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
            return det;
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 100859L)
    public static SubLObject noun_link_word_get_specifier_method(final SubLObject self) {
        final SubLObject spec = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw750$D_PATTERN);
        return (SubLObject)((linkage.NIL != spec) ? get_link_phrase(spec) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 101123L)
    public static SubLObject noun_link_word_get_pps_method(final SubLObject self) {
        return get_link_phrases(methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw756$M_P_PATTERN, (SubLObject)linkage.$kw242$RIGHT));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 101300L)
    public static SubLObject noun_link_word_get_existential_null_determiner_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_noun_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject lexes = get_link_word_lexes(self);
        SubLObject left_links = get_link_word_left_links(self);
        final SubLObject v_linkage = get_link_word_linkage(self);
        try {
            thread.throwStack.push(linkage.$sym759$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD);
            try {
                final SubLObject lex = object.new_class_instance((SubLObject)linkage.$sym760$LEX_ENTRY);
                final SubLObject link = new_link((SubLObject)linkage.$str761$D);
                SubLObject det = (SubLObject)linkage.NIL;
                methods.funcall_instance_method_with_2_args(lex, (SubLObject)linkage.$sym475$SET, (SubLObject)linkage.$kw762$STRING, (SubLObject)linkage.$str763$);
                methods.funcall_instance_method_with_2_args(lex, (SubLObject)linkage.$sym475$SET, (SubLObject)linkage.$kw764$CYC_POS, linkage.$const765$Determiner);
                methods.funcall_instance_method_with_2_args(lex, (SubLObject)linkage.$sym475$SET, (SubLObject)linkage.$kw374$SEMTRANS, (SubLObject)linkage.$list766);
                methods.funcall_instance_method_with_2_args(lex, (SubLObject)linkage.$sym475$SET, (SubLObject)linkage.$kw390$FRAME, linkage.$const767$DeterminerFrame);
                det = new_link_word(v_linkage, (SubLObject)linkage.$str763$, (SubLObject)linkage.ZERO_INTEGER, (SubLObject)linkage.NIL, (SubLObject)ConsesLow.list(link), (SubLObject)linkage.$kw768$DT, methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym278$GET_CONTEXT));
                instances.set_slot(det, (SubLObject)linkage.$sym363$LEXES, cyclifier.new_even_lex_entry_distribution((SubLObject)ConsesLow.list(lex)));
                _csetf_link_right_word(link, self);
                _csetf_link_left_word(link, det);
                left_links = (SubLObject)ConsesLow.cons(link, left_links);
                Dynamic.sublisp_throw((SubLObject)linkage.$sym759$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD, det);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_lexes(self, lexes);
                    set_link_word_left_links(self, left_links);
                    set_link_word_linkage(self, v_linkage);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_noun_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym759$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_noun_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102000L)
    public static SubLObject noun_link_word_singular_p_method(final SubLObject self) {
        return conses_high.member(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY), (SubLObject)linkage.$list771, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102183L)
    public static SubLObject noun_link_word_plural_p_method(final SubLObject self) {
        return conses_high.member(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym129$GET_CATEGORY), (SubLObject)linkage.$list774, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102360L)
    public static SubLObject noun_link_word_appositive_p_method(final SubLObject self) {
        return list_utilities.sublisp_boolean((SubLObject)SubLObjectFactory.makeBoolean(linkage.NIL != methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw735$MX_PATTERN, (SubLObject)linkage.$kw241$LEFT) || linkage.NIL != methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw736$GN_PATTERN, (SubLObject)linkage.$kw242$RIGHT)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102627L)
    public static SubLObject subloop_reserved_initialize_common_noun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102627L)
    public static SubLObject subloop_reserved_initialize_common_noun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102627L)
    public static SubLObject common_noun_link_word_p(final SubLObject common_noun_link_word) {
        return classes.subloop_instanceof_class(common_noun_link_word, (SubLObject)linkage.$sym778$COMMON_NOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102691L)
    public static SubLObject proper_noun_link_word_get_quantifier_method(final SubLObject self) {
        final SubLObject quantifier = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym715$GET_OVERT_QUANTIFIER);
        return (linkage.NIL == quantifier && linkage.NIL != methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym728$PLURAL_P)) ? methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym727$GET_EXISTENTIAL_NULL_DETERMINER) : quantifier;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102691L)
    public static SubLObject subloop_reserved_initialize_proper_noun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102691L)
    public static SubLObject subloop_reserved_initialize_proper_noun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102691L)
    public static SubLObject proper_noun_link_word_p(final SubLObject proper_noun_link_word) {
        return classes.subloop_instanceof_class(proper_noun_link_word, (SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102851L)
    public static SubLObject subloop_reserved_initialize_gerund_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102851L)
    public static SubLObject subloop_reserved_initialize_gerund_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102851L)
    public static SubLObject gerund_link_word_p(final SubLObject gerund_link_word) {
        return classes.subloop_instanceof_class(gerund_link_word, (SubLObject)linkage.$sym788$GERUND_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102910L)
    public static SubLObject subloop_reserved_initialize_pronoun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102910L)
    public static SubLObject subloop_reserved_initialize_pronoun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102910L)
    public static SubLObject pronoun_link_word_p(final SubLObject pronoun_link_word) {
        return classes.subloop_instanceof_class(pronoun_link_word, (SubLObject)linkage.$sym791$PRONOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102970L)
    public static SubLObject subloop_reserved_initialize_w_pronoun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102970L)
    public static SubLObject subloop_reserved_initialize_w_pronoun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 102970L)
    public static SubLObject w_pronoun_link_word_p(final SubLObject w_pronoun_link_word) {
        return classes.subloop_instanceof_class(w_pronoun_link_word, (SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 103279L)
    public static SubLObject w_pronoun_link_word_get_refs_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_w_pronoun_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject ref = get_link_word_ref(self);
        try {
            thread.throwStack.push(linkage.$sym799$OUTER_CATCH_FOR_W_PRONOUN_LINK_WORD_METHOD);
            try {
                final SubLObject antecedent = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym800$GET_ANTECEDENT);
                Dynamic.sublisp_throw((SubLObject)linkage.$sym799$OUTER_CATCH_FOR_W_PRONOUN_LINK_WORD_METHOD, (SubLObject)((linkage.NIL != antecedent) ? methods.funcall_instance_method_with_0_args(antecedent, (SubLObject)linkage.$sym145$GET_REFS) : ConsesLow.list(ref)));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_word_ref(self, ref);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_w_pronoun_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym799$OUTER_CATCH_FOR_W_PRONOUN_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_w_pronoun_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 103515L)
    public static SubLObject w_pronoun_link_word_get_antecedent_method(final SubLObject self) {
        final SubLObject antecedents = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw735$MX_PATTERN, (SubLObject)linkage.$kw241$LEFT);
        return (SubLObject)((linkage.NIL != antecedents) ? get_link_phrase(antecedents) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 103802L)
    public static SubLObject w_pronoun_link_word_appositive_p_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 103951L)
    public static SubLObject w_pronoun_link_word_get_quantifier_method(final SubLObject self) {
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104112L)
    public static SubLObject w_pronoun_link_word_get_modifieds_method(final SubLObject self) {
        return methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw809$R_PATTERN, (SubLObject)linkage.$kw241$LEFT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104316L)
    public static SubLObject subloop_reserved_initialize_rel_pronoun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104316L)
    public static SubLObject subloop_reserved_initialize_rel_pronoun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104316L)
    public static SubLObject rel_pronoun_link_word_p(final SubLObject rel_pronoun_link_word) {
        return classes.subloop_instanceof_class(rel_pronoun_link_word, (SubLObject)linkage.$sym811$REL_PRONOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104387L)
    public static SubLObject subloop_reserved_initialize_personal_pronoun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104387L)
    public static SubLObject subloop_reserved_initialize_personal_pronoun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104387L)
    public static SubLObject personal_pronoun_link_word_p(final SubLObject personal_pronoun_link_word) {
        return classes.subloop_instanceof_class(personal_pronoun_link_word, (SubLObject)linkage.$sym814$PERSONAL_PRONOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104459L)
    public static SubLObject adjective_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list822;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        final SubLObject modified = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
        final SubLObject obl_obj = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
        final SubLObject obl_obj_head = (SubLObject)((linkage.NIL != obl_obj) ? methods.funcall_instance_method_with_0_args(obl_obj, (SubLObject)linkage.$sym225$GET_HEAD) : linkage.NIL);
        if (linkage.NIL != modified) {
            if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw477$NOUN, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
                conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw477$NOUN, modified), conjuncts);
            }
            if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw508$ACTION, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
                conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw508$ACTION, modified), conjuncts);
            }
            if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw375$REPLACE, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
                conjuncts = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.list((SubLObject)ConsesLow.cons((SubLObject)linkage.$kw375$REPLACE, (SubLObject)linkage.NIL)), conjuncts);
            }
        }
        if (linkage.NIL != obl_obj_head && linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw411$OBLIQUE_OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw511$PREP_OBJECT, obl_obj_head), conjuncts);
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, (SubLObject)linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104459L)
    public static SubLObject adjective_link_word_get_complements_method(final SubLObject self) {
        final SubLObject modifieds = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS);
        final SubLObject obl_obj = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
        return ConsesLow.append(modifieds, (SubLObject)((linkage.NIL != obl_obj) ? ConsesLow.list(obl_obj) : linkage.NIL));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104459L)
    public static SubLObject subloop_reserved_initialize_adjective_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104459L)
    public static SubLObject subloop_reserved_initialize_adjective_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104459L)
    public static SubLObject adjective_link_word_p(final SubLObject adjective_link_word) {
        return classes.subloop_instanceof_class(adjective_link_word, (SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 104829L)
    public static SubLObject adjective_link_word_get_modifieds_method(final SubLObject self) {
        SubLObject result = (SubLObject)linkage.NIL;
        if (linkage.NIL == result) {
            SubLObject csome_list_var;
            SubLObject pattern;
            for (csome_list_var = (SubLObject)linkage.$list829, pattern = (SubLObject)linkage.NIL, pattern = csome_list_var.first(); linkage.NIL == result && linkage.NIL != csome_list_var; result = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, pattern), csome_list_var = csome_list_var.rest(), pattern = csome_list_var.first()) {}
        }
        return result;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 105401L)
    public static SubLObject adjective_link_word_get_pps_method(final SubLObject self) {
        return get_link_phrases(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw542$MV_P_PATTERN));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 105582L)
    public static SubLObject adverb_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list838;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        final SubLObject modified = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
        final SubLObject subject = (SubLObject)((linkage.NIL != cyclifier_interface.verbal_word_p(modified)) ? methods.funcall_instance_method_with_0_args(modified, (SubLObject)linkage.$sym303$GET_SUBJECT) : linkage.NIL);
        final SubLObject v_object = (SubLObject)((linkage.NIL != cyclifier_interface.verbal_word_p(modified)) ? methods.funcall_instance_method_with_0_args(modified, (SubLObject)linkage.$sym523$GET_OBJECTS).first() : linkage.NIL);
        if (linkage.NIL != modified && linkage.NIL != conses_high.member((SubLObject)linkage.$kw508$ACTION, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw508$ACTION, modified), conjuncts);
        }
        if (linkage.NIL != subject && linkage.NIL != conses_high.member((SubLObject)linkage.$kw509$SUBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw509$SUBJECT, subject), conjuncts);
        }
        if (linkage.NIL != v_object && linkage.NIL != conses_high.member((SubLObject)linkage.$kw510$OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw510$OBJECT, v_object), conjuncts);
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, (SubLObject)linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 105582L)
    public static SubLObject subloop_reserved_initialize_adverb_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 105582L)
    public static SubLObject subloop_reserved_initialize_adverb_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 105582L)
    public static SubLObject adverb_link_word_p(final SubLObject adverb_link_word) {
        return classes.subloop_instanceof_class(adverb_link_word, (SubLObject)linkage.$sym833$ADVERB_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 105874L)
    public static SubLObject adverb_link_word_get_modifieds_method(final SubLObject self) {
        SubLObject result = (SubLObject)linkage.NIL;
        if (linkage.NIL == result) {
            SubLObject csome_list_var;
            SubLObject pattern;
            for (csome_list_var = (SubLObject)linkage.$list843, pattern = (SubLObject)linkage.NIL, pattern = csome_list_var.first(); linkage.NIL == result && linkage.NIL != csome_list_var; result = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, pattern), csome_list_var = csome_list_var.rest(), pattern = csome_list_var.first()) {}
        }
        if (linkage.NIL == result) {
            SubLObject cdolist_list_var = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw844$N_PATTERN);
            SubLObject aux = (SubLObject)linkage.NIL;
            aux = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                if (linkage.NIL != aux_verb_link_word_p(aux)) {
                    final SubLObject verbal_complement = methods.funcall_instance_method_with_0_args(aux, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
                    if (linkage.NIL != verbal_complement) {
                        final SubLObject head = methods.funcall_instance_method_with_0_args(verbal_complement, (SubLObject)linkage.$sym225$GET_HEAD);
                        if (linkage.NIL != head) {
                            result = (SubLObject)ConsesLow.cons(head, result);
                        }
                    }
                }
                cdolist_list_var = cdolist_list_var.rest();
                aux = cdolist_list_var.first();
            }
        }
        return result;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 106646L)
    public static SubLObject adverb_link_word_get_complements_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 106799L)
    public static SubLObject subloop_reserved_initialize_w_adverb_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 106799L)
    public static SubLObject subloop_reserved_initialize_w_adverb_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 106799L)
    public static SubLObject w_adverb_link_word_p(final SubLObject w_adverb_link_word) {
        return classes.subloop_instanceof_class(w_adverb_link_word, (SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 106911L)
    public static SubLObject w_adverb_link_word_get_modifieds_method(final SubLObject self) {
        final SubLObject verb = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw853$Q_PATTERN, (SubLObject)linkage.$kw242$RIGHT).first();
        SubLObject modifieds = (SubLObject)((linkage.NIL != verb) ? methods.funcall_instance_method_with_0_args(verb, (SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS) : linkage.NIL);
        if (linkage.NIL == modifieds) {
            final SubLObject copula = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw667$PF_PATTERN).first();
            final SubLObject subject = (SubLObject)((linkage.NIL != verb_link_word_p(copula)) ? methods.funcall_instance_method_with_0_args(copula, (SubLObject)linkage.$sym303$GET_SUBJECT) : linkage.NIL);
            if (linkage.NIL != subject) {
                modifieds = (SubLObject)ConsesLow.cons(subject, modifieds);
            }
        }
        return modifieds;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 107430L)
    public static SubLObject preposition_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list860;
        }
        if (!methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym95$GET_STRING).equalp((SubLObject)linkage.$str861$that)) {
            SubLObject conjuncts = (SubLObject)linkage.NIL;
            final SubLObject modified = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS).first();
            final SubLObject complement = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
            final SubLObject clause = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
            if (linkage.NIL != modified && linkage.NIL != conses_high.member((SubLObject)linkage.$kw477$NOUN, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != cyclifier_interface.nominal_word_p(modified)) {
                conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw477$NOUN, modified), conjuncts);
            }
            if (linkage.NIL != modified && linkage.NIL != conses_high.member((SubLObject)linkage.$kw508$ACTION, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != cyclifier_interface.verbal_word_p(modified)) {
                conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw508$ACTION, modified), conjuncts);
            }
            if (linkage.NIL != complement && linkage.NIL != conses_high.member((SubLObject)linkage.$kw510$OBJECT, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
                conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw510$OBJECT, complement), conjuncts);
            }
            if (linkage.NIL != clause && linkage.NIL != conses_high.member((SubLObject)linkage.$kw512$CLAUSE, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
                conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw512$CLAUSE, clause), conjuncts);
            }
            return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, (SubLObject)linkage.NIL);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 107430L)
    public static SubLObject subloop_reserved_initialize_preposition_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 107430L)
    public static SubLObject subloop_reserved_initialize_preposition_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 107430L)
    public static SubLObject preposition_link_word_p(final SubLObject preposition_link_word) {
        return classes.subloop_instanceof_class(preposition_link_word, (SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 107908L)
    public static SubLObject preposition_link_word_get_oblique_object_method(final SubLObject self) {
        SubLObject obl_obj = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw866$J_PATTERN);
        if (linkage.NIL == obl_obj) {
            obl_obj = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw867$ON_PATTERN);
        }
        return (SubLObject)((linkage.NIL != obl_obj) ? get_link_phrase(obl_obj) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 108251L)
    public static SubLObject preposition_link_word_get_verbal_complement_method(final SubLObject self) {
        final SubLObject embedded_subject = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw870$C_PATTERN, (SubLObject)linkage.$kw242$RIGHT).first();
        final SubLObject embedded_verb = (SubLObject)((linkage.NIL != embedded_subject) ? methods.funcall_instance_method_with_2_args(embedded_subject, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw593$S_PATTERN, (SubLObject)linkage.$kw242$RIGHT) : linkage.NIL);
        if (linkage.NIL != embedded_verb) {
            return get_link_phrase(embedded_verb);
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 108669L)
    public static SubLObject preposition_link_word_get_modifieds_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_preposition_link_word_method = (SubLObject)linkage.NIL;
        final SubLObject modifiers = get_link_tree_modifiers(self);
        try {
            thread.throwStack.push(linkage.$sym873$OUTER_CATCH_FOR_PREPOSITION_LINK_WORD_METHOD);
            try {
                final SubLObject copula = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw874$P_PATTERN, (SubLObject)linkage.$kw241$LEFT);
                final SubLObject subject = (SubLObject)((linkage.NIL != aux_verb_link_word_p(copula.first())) ? methods.funcall_instance_method_with_0_args(copula.first(), (SubLObject)linkage.$sym303$GET_SUBJECT) : linkage.NIL);
                final SubLObject subj_head = (SubLObject)((linkage.NIL != subject) ? methods.funcall_instance_method_with_0_args(subject, (SubLObject)linkage.$sym225$GET_HEAD) : linkage.NIL);
                final SubLObject candidates = ConsesLow.append((SubLObject)((linkage.NIL != subj_head) ? ConsesLow.list(subj_head) : linkage.NIL), methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw875$MV_PATTERN), methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw626$M_PATTERN), methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym295$GET_RELATED, (SubLObject)linkage.$list876));
                SubLObject complements = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = candidates;
                SubLObject candidate = (SubLObject)linkage.NIL;
                candidate = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    SubLObject cdolist_list_var_$31 = classes_utilities.funcall_instance_method_wXo_recursion(candidate, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.NIL);
                    SubLObject complement = (SubLObject)linkage.NIL;
                    complement = cdolist_list_var_$31.first();
                    while (linkage.NIL != cdolist_list_var_$31) {
                        if (complement.eql(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT))) {
                            instances.set_slot(candidate, (SubLObject)linkage.$sym102$MODIFIERS, Sequences.remove(self, instances.get_slot(candidate, (SubLObject)linkage.$sym102$MODIFIERS), (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
                            complements = (SubLObject)ConsesLow.cons(candidate, complements);
                        }
                        cdolist_list_var_$31 = cdolist_list_var_$31.rest();
                        complement = cdolist_list_var_$31.first();
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    candidate = cdolist_list_var.first();
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym873$OUTER_CATCH_FOR_PREPOSITION_LINK_WORD_METHOD, conses_high.set_difference(candidates, complements, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_link_tree_modifiers(self, modifiers);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_preposition_link_word_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym873$OUTER_CATCH_FOR_PREPOSITION_LINK_WORD_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_preposition_link_word_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 109685L)
    public static SubLObject preposition_link_word_get_complements_method(final SubLObject self) {
        final SubLObject modifieds = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym117$GET_MODIFIEDS);
        final SubLObject obj = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT);
        final SubLObject clause = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT);
        return ConsesLow.append(modifieds, (SubLObject)((linkage.NIL != obj) ? ConsesLow.list(obj) : linkage.NIL), (SubLObject)((linkage.NIL != clause) ? ConsesLow.list(clause) : linkage.NIL));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110026L)
    public static SubLObject quantifier_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list885;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        final SubLObject disjuncts = (SubLObject)linkage.NIL;
        if (linkage.NIL != subl_promotions.memberP((SubLObject)linkage.$kw477$NOUN, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw477$NOUN, self), conjuncts);
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, disjuncts);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110026L)
    public static SubLObject subloop_reserved_initialize_quantifier_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110026L)
    public static SubLObject subloop_reserved_initialize_quantifier_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110026L)
    public static SubLObject quantifier_link_word_p(final SubLObject quantifier_link_word) {
        return classes.subloop_instanceof_class(quantifier_link_word, (SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110278L)
    public static SubLObject quantifier_link_word_get_quantified_method(final SubLObject self) {
        return methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw750$D_PATTERN).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110507L)
    public static SubLObject subloop_reserved_initialize_determiner_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110507L)
    public static SubLObject subloop_reserved_initialize_determiner_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110507L)
    public static SubLObject determiner_link_word_p(final SubLObject determiner_link_word) {
        return classes.subloop_instanceof_class(determiner_link_word, (SubLObject)linkage.$sym892$DETERMINER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110576L)
    public static SubLObject subloop_reserved_initialize_definite_determiner_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110576L)
    public static SubLObject subloop_reserved_initialize_definite_determiner_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110576L)
    public static SubLObject definite_determiner_link_word_p(final SubLObject definite_determiner_link_word) {
        return classes.subloop_instanceof_class(definite_determiner_link_word, (SubLObject)linkage.$sym895$DEFINITE_DETERMINER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110654L)
    public static SubLObject subloop_reserved_initialize_w_determiner_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110654L)
    public static SubLObject subloop_reserved_initialize_w_determiner_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110654L)
    public static SubLObject w_determiner_link_word_p(final SubLObject w_determiner_link_word) {
        return classes.subloop_instanceof_class(w_determiner_link_word, (SubLObject)linkage.$sym898$W_DETERMINER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110725L)
    public static SubLObject subloop_reserved_initialize_predeterminer_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110725L)
    public static SubLObject subloop_reserved_initialize_predeterminer_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110725L)
    public static SubLObject predeterminer_link_word_p(final SubLObject predeterminer_link_word) {
        return classes.subloop_instanceof_class(predeterminer_link_word, (SubLObject)linkage.$sym901$PREDETERMINER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110797L)
    public static SubLObject subloop_reserved_initialize_possessive_pronoun_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110797L)
    public static SubLObject subloop_reserved_initialize_possessive_pronoun_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110797L)
    public static SubLObject possessive_pronoun_link_word_p(final SubLObject possessive_pronoun_link_word) {
        return classes.subloop_instanceof_class(possessive_pronoun_link_word, (SubLObject)linkage.$sym904$POSSESSIVE_PRONOUN_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110883L)
    public static SubLObject subloop_reserved_initialize_cardinal_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110883L)
    public static SubLObject subloop_reserved_initialize_cardinal_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110883L)
    public static SubLObject cardinal_link_word_p(final SubLObject cardinal_link_word) {
        return classes.subloop_instanceof_class(cardinal_link_word, (SubLObject)linkage.$sym907$CARDINAL_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110950L)
    public static SubLObject subloop_reserved_initialize_conjunction_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110950L)
    public static SubLObject subloop_reserved_initialize_conjunction_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 110950L)
    public static SubLObject conjunction_link_word_p(final SubLObject conjunction_link_word) {
        return classes.subloop_instanceof_class(conjunction_link_word, (SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111080L)
    public static SubLObject conjunction_link_word_get_complements_method(final SubLObject self) {
        return (SubLObject)ConsesLow.list(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym153$GET_SISTER, (SubLObject)linkage.MINUS_ONE_INTEGER), methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym153$GET_SISTER, (SubLObject)linkage.ONE_INTEGER));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111285L)
    public static SubLObject subloop_reserved_initialize_existential_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111285L)
    public static SubLObject subloop_reserved_initialize_existential_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111285L)
    public static SubLObject existential_link_word_p(final SubLObject existential_link_word) {
        return classes.subloop_instanceof_class(existential_link_word, (SubLObject)linkage.$sym916$EXISTENTIAL_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111360L)
    public static SubLObject subloop_reserved_initialize_comparator_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111360L)
    public static SubLObject subloop_reserved_initialize_comparator_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111360L)
    public static SubLObject comparator_link_word_p(final SubLObject comparator_link_word) {
        return classes.subloop_instanceof_class(comparator_link_word, (SubLObject)linkage.$sym919$COMPARATOR_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111434L)
    public static SubLObject subloop_reserved_initialize_inf_marker_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111434L)
    public static SubLObject subloop_reserved_initialize_inf_marker_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111434L)
    public static SubLObject inf_marker_link_word_p(final SubLObject inf_marker_link_word) {
        return classes.subloop_instanceof_class(inf_marker_link_word, (SubLObject)linkage.$sym922$INF_MARKER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111515L)
    public static SubLObject subloop_reserved_initialize_particle_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111515L)
    public static SubLObject subloop_reserved_initialize_particle_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111515L)
    public static SubLObject particle_link_word_p(final SubLObject particle_link_word) {
        return classes.subloop_instanceof_class(particle_link_word, (SubLObject)linkage.$sym925$PARTICLE_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111585L)
    public static SubLObject subloop_reserved_initialize_punctuation_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111585L)
    public static SubLObject subloop_reserved_initialize_punctuation_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111585L)
    public static SubLObject punctuation_link_word_p(final SubLObject punctuation_link_word) {
        return classes.subloop_instanceof_class(punctuation_link_word, (SubLObject)linkage.$sym928$PUNCTUATION_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111692L)
    public static SubLObject poss_marker_link_word_get_keyword_renamings_method(final SubLObject self, SubLObject keywords) {
        if (keywords == linkage.UNPROVIDED) {
            keywords = (SubLObject)linkage.$list937;
        }
        SubLObject conjuncts = (SubLObject)linkage.NIL;
        final SubLObject possessor = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym703$GET_POSSESSOR);
        final SubLObject possessed = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym938$GET_POSSESSED);
        if (linkage.NIL != possessor && linkage.NIL != conses_high.member((SubLObject)linkage.$kw716$POSSESSOR, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw716$POSSESSOR, possessor), conjuncts);
        }
        if (linkage.NIL != possessed && linkage.NIL != conses_high.member((SubLObject)linkage.$kw939$POSSESSED, keywords, (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED)) {
            conjuncts = (SubLObject)ConsesLow.cons(cyclifier_interface.coordinate_keyword_renaming((SubLObject)linkage.$kw939$POSSESSED, possessed), conjuncts);
        }
        return cyclifier_interface.disjunctive_keyword_renamings(conjuncts, (SubLObject)linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111692L)
    public static SubLObject subloop_reserved_initialize_poss_marker_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111692L)
    public static SubLObject subloop_reserved_initialize_poss_marker_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 111692L)
    public static SubLObject poss_marker_link_word_p(final SubLObject poss_marker_link_word) {
        return classes.subloop_instanceof_class(poss_marker_link_word, (SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 112099L)
    public static SubLObject poss_marker_link_word_get_possessor_method(final SubLObject self) {
        final SubLObject possessor = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw944$YS_PATTERN, (SubLObject)linkage.$kw241$LEFT);
        return (SubLObject)((linkage.NIL != possessor) ? possessor.first() : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 112365L)
    public static SubLObject poss_marker_link_word_get_possessed_method(final SubLObject self) {
        final SubLObject possessed = methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw750$D_PATTERN, (SubLObject)linkage.$kw242$RIGHT);
        return (SubLObject)((linkage.NIL != possessed) ? possessed.first() : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 112637L)
    public static SubLObject poss_marker_link_word_get_complements_method(final SubLObject self) {
        SubLObject complements = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = (SubLObject)ConsesLow.list(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym703$GET_POSSESSOR), methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym938$GET_POSSESSED));
        SubLObject complement = (SubLObject)linkage.NIL;
        complement = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != complement) {
                complements = (SubLObject)ConsesLow.cons(complement, complements);
            }
            cdolist_list_var = cdolist_list_var.rest();
            complement = cdolist_list_var.first();
        }
        return complements;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 112980L)
    public static SubLObject poss_marker_link_word_get_modifieds_method(final SubLObject self) {
        return methods.funcall_instance_method_with_2_args(self, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$kw750$D_PATTERN, (SubLObject)linkage.$kw242$RIGHT);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113179L)
    public static SubLObject subloop_reserved_initialize_complementizer_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113179L)
    public static SubLObject subloop_reserved_initialize_complementizer_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113179L)
    public static SubLObject complementizer_link_word_p(final SubLObject complementizer_link_word) {
        return classes.subloop_instanceof_class(complementizer_link_word, (SubLObject)linkage.$sym952$COMPLEMENTIZER_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113268L)
    public static SubLObject subloop_reserved_initialize_wall_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113268L)
    public static SubLObject subloop_reserved_initialize_wall_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113268L)
    public static SubLObject wall_link_word_p(final SubLObject wall_link_word) {
        return classes.subloop_instanceof_class(wall_link_word, (SubLObject)linkage.$sym54$WALL_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113362L)
    public static SubLObject subloop_reserved_initialize_left_wall_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113362L)
    public static SubLObject subloop_reserved_initialize_left_wall_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113362L)
    public static SubLObject left_wall_link_word_p(final SubLObject left_wall_link_word) {
        return classes.subloop_instanceof_class(left_wall_link_word, (SubLObject)linkage.$sym957$LEFT_WALL_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113424L)
    public static SubLObject subloop_reserved_initialize_right_wall_link_word_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113424L)
    public static SubLObject subloop_reserved_initialize_right_wall_link_word_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym106$POS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym105$HEADS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym104$MOTHER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym366$REF, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym277$ABS_INDEX, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym363$LEXES, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym362$CONTEXT, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113424L)
    public static SubLObject right_wall_link_word_p(final SubLObject right_wall_link_word) {
        return classes.subloop_instanceof_class(right_wall_link_word, (SubLObject)linkage.$sym960$RIGHT_WALL_LINK_WORD);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject get_linkage_tree_string(final SubLObject v_linkage) {
        return classes.subloop_get_access_protected_instance_slot(v_linkage, (SubLObject)linkage.FIVE_INTEGER, (SubLObject)linkage.$sym965$TREE_STRING);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject set_linkage_tree_string(final SubLObject v_linkage, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(v_linkage, value, (SubLObject)linkage.FIVE_INTEGER, (SubLObject)linkage.$sym965$TREE_STRING);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject get_linkage_tree(final SubLObject v_linkage) {
        return classes.subloop_get_access_protected_instance_slot(v_linkage, (SubLObject)linkage.FOUR_INTEGER, (SubLObject)linkage.$sym966$TREE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject set_linkage_tree(final SubLObject v_linkage, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(v_linkage, value, (SubLObject)linkage.FOUR_INTEGER, (SubLObject)linkage.$sym966$TREE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject get_linkage_diagram(final SubLObject v_linkage) {
        return classes.subloop_get_access_protected_instance_slot(v_linkage, (SubLObject)linkage.THREE_INTEGER, (SubLObject)linkage.$sym967$DIAGRAM);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject set_linkage_diagram(final SubLObject v_linkage, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(v_linkage, value, (SubLObject)linkage.THREE_INTEGER, (SubLObject)linkage.$sym967$DIAGRAM);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject get_linkage_words(final SubLObject v_linkage) {
        return classes.subloop_get_access_protected_instance_slot(v_linkage, (SubLObject)linkage.TWO_INTEGER, (SubLObject)linkage.$sym968$WORDS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject set_linkage_words(final SubLObject v_linkage, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(v_linkage, value, (SubLObject)linkage.TWO_INTEGER, (SubLObject)linkage.$sym968$WORDS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject get_linkage_links(final SubLObject v_linkage) {
        return classes.subloop_get_access_protected_instance_slot(v_linkage, (SubLObject)linkage.ONE_INTEGER, (SubLObject)linkage.$sym969$LINKS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject set_linkage_links(final SubLObject v_linkage, final SubLObject value) {
        return classes.subloop_set_access_protected_instance_slot(v_linkage, value, (SubLObject)linkage.ONE_INTEGER, (SubLObject)linkage.$sym969$LINKS);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject linkage_cyclify_method(final SubLObject self, SubLObject v_properties) {
        if (v_properties == linkage.UNPROVIDED) {
            v_properties = (SubLObject)linkage.NIL;
        }
        final SubLObject v_cyclifier = methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym973$GET_CYCLIFIER, v_properties);
        SubLObject cycls = (SubLObject)linkage.NIL;
        while (linkage.NIL != methods.funcall_instance_method_with_0_args(v_cyclifier, (SubLObject)linkage.$sym974$HAS_NEXT_)) {
            cycls = (SubLObject)ConsesLow.cons(methods.funcall_instance_method_with_0_args(v_cyclifier, (SubLObject)linkage.$sym975$NEXT), cycls);
        }
        return Sequences.nreverse(cycls);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject linkage_get_cyclifier_method(final SubLObject self, SubLObject v_properties) {
        if (v_properties == linkage.UNPROVIDED) {
            v_properties = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject current;
        final SubLObject datum = current = v_properties;
        final SubLObject lexicon_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw978$LEXICON, current);
        final SubLObject lexicon = (linkage.NIL != lexicon_tail) ? conses_high.cadr(lexicon_tail) : object.new_class_instance((SubLObject)linkage.$sym285$CYCLIFIER_LEXICON);
        final SubLObject score_function_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw979$SCORE_FUNCTION, current);
        final SubLObject score_function = (SubLObject)((linkage.NIL != score_function_tail) ? conses_high.cadr(score_function_tail) : linkage.$sym980$CYCLIFICATION_SCORE);
        final SubLObject output_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw981$OUTPUT, current);
        final SubLObject output = (SubLObject)((linkage.NIL != output_tail) ? conses_high.cadr(output_tail) : linkage.$kw982$BRIEF);
        final SubLObject wff_checkP_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw983$WFF_CHECK_, current);
        final SubLObject wff_checkP = (SubLObject)((linkage.NIL != wff_checkP_tail) ? conses_high.cadr(wff_checkP_tail) : linkage.T);
        final SubLObject context_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw984$CONTEXT, current);
        SubLObject v_context = (SubLObject)((linkage.NIL != context_tail) ? conses_high.cadr(context_tail) : linkage.NIL);
        final SubLObject disambiguator_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw985$DISAMBIGUATOR, current);
        final SubLObject disambiguator = (SubLObject)((linkage.NIL != disambiguator_tail) ? conses_high.cadr(disambiguator_tail) : linkage.NIL);
        final SubLObject coreference_resolver_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw986$COREFERENCE_RESOLVER, current);
        final SubLObject v_coreference_resolver = (SubLObject)((linkage.NIL != coreference_resolver_tail) ? conses_high.cadr(coreference_resolver_tail) : linkage.NIL);
        final SubLObject error_handling_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw987$ERROR_HANDLING, current);
        final SubLObject error_handling = (SubLObject)((linkage.NIL != error_handling_tail) ? conses_high.cadr(error_handling_tail) : linkage.$kw988$THROW);
        final SubLObject subcyclifier_pool_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw989$SUBCYCLIFIER_POOL, current);
        final SubLObject subcyclifier_pool = (linkage.NIL != subcyclifier_pool_tail) ? conses_high.cadr(subcyclifier_pool_tail) : subcyclifier.new_cyclifier_pool((SubLObject)ConsesLow.list(object.new_class_instance((SubLObject)linkage.$sym990$DATE_CYCLIFIER)));
        assert linkage.NIL != cyclifier_lexicon.cyclifier_lexicon_p(lexicon) : lexicon;
        assert linkage.NIL != Types.function_spec_p(score_function) : score_function;
        assert linkage.NIL != Types.keywordp(output) : output;
        if (linkage.NIL != v_context && !linkage.assertionsDisabledSynth && linkage.NIL == context.parse_tree_context_p(v_context)) {
            throw new AssertionError(v_context);
        }
        assert linkage.NIL != Types.booleanp(wff_checkP) : wff_checkP;
        if (linkage.NIL == Errors.$ignore_mustsP$.getDynamicValue(thread) && linkage.NIL == conses_high.member(error_handling, (SubLObject)linkage.$list996, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
            Errors.error((SubLObject)linkage.$str997$Invalid_error_handling_tag__a, error_handling);
        }
        if (linkage.NIL != subcyclifier_pool && !linkage.assertionsDisabledSynth && linkage.NIL == subcyclifier.cyclifier_pool_p(subcyclifier_pool)) {
            throw new AssertionError(subcyclifier_pool);
        }
        final SubLObject v_cyclifier = object.new_class_instance((SubLObject)linkage.$sym999$CYCLIFIER);
        cyclifier.set_cyclifier_score_function(v_cyclifier, score_function);
        cyclifier.set_cyclifier_output(v_cyclifier, output);
        cyclifier.set_cyclifier_error_handling(v_cyclifier, error_handling);
        cyclifier.set_cyclifier_subcyclifier_pool(v_cyclifier, subcyclifier_pool);
        if (linkage.NIL != lexicon) {
            methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym466$LEXIFY, lexicon);
        }
        if (linkage.NIL != disambiguator) {
            if (linkage.NIL == v_context) {
                v_context = object.new_class_instance((SubLObject)linkage.$sym1000$PARSE_TREE_CONTEXT);
            }
            methods.funcall_instance_method_with_2_args(disambiguator, (SubLObject)linkage.$sym1001$DISAMBIGUATE, self, v_context);
        }
        cyclifier.set_cyclifier_tree(v_cyclifier, self);
        cyclifier.set_cyclifier_wff_checkP(v_cyclifier, wff_checkP);
        if (linkage.NIL != wff_checkP) {
            cyclifier.set_cyclifier_memoization_state(v_cyclifier, memoization_state.new_memoization_state((SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
            cyclifier.set_cyclifier_sbhl_resource(v_cyclifier, sbhl_marking_vars.new_sbhl_marking_space_resource((SubLObject)linkage.TEN_INTEGER));
        }
        return v_cyclifier;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject subloop_reserved_initialize_linkage_class(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym107$INSTANCE_COUNT, (SubLObject)linkage.ZERO_INTEGER);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject subloop_reserved_initialize_linkage_instance(final SubLObject new_instance) {
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym109$ISOLATED_P, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$sym110$INSTANCE_NUMBER, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym969$LINKS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym968$WORDS, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym967$DIAGRAM, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym966$TREE, (SubLObject)linkage.NIL);
        classes.subloop_initialize_slot(new_instance, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym965$TREE_STRING, (SubLObject)linkage.NIL);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 113487L)
    public static SubLObject linkage_p(final SubLObject v_linkage) {
        return classes.subloop_instanceof_class(v_linkage, (SubLObject)linkage.$sym368$LINKAGE);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 114971L)
    public static SubLObject do_linkage_links(final SubLObject macroform, final SubLObject environment) {
        SubLObject current;
        final SubLObject datum = current = macroform.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1005);
        final SubLObject temp = current.rest();
        current = current.first();
        SubLObject link = (SubLObject)linkage.NIL;
        SubLObject v_linkage = (SubLObject)linkage.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1005);
        link = current.first();
        current = current.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1005);
        v_linkage = current.first();
        current = current.rest();
        SubLObject allow_other_keys_p = (SubLObject)linkage.NIL;
        SubLObject rest = current;
        SubLObject bad = (SubLObject)linkage.NIL;
        SubLObject current_$32 = (SubLObject)linkage.NIL;
        while (linkage.NIL != rest) {
            cdestructuring_bind.destructuring_bind_must_consp(rest, datum, (SubLObject)linkage.$list1005);
            current_$32 = rest.first();
            rest = rest.rest();
            cdestructuring_bind.destructuring_bind_must_consp(rest, datum, (SubLObject)linkage.$list1005);
            if (linkage.NIL == conses_high.member(current_$32, (SubLObject)linkage.$list1006, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                bad = (SubLObject)linkage.T;
            }
            if (current_$32 == linkage.$kw1007$ALLOW_OTHER_KEYS) {
                allow_other_keys_p = rest.first();
            }
            rest = rest.rest();
        }
        if (linkage.NIL != bad && linkage.NIL == allow_other_keys_p) {
            cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)linkage.$list1005);
        }
        final SubLObject done_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw1008$DONE, current);
        final SubLObject done = (SubLObject)((linkage.NIL != done_tail) ? conses_high.cadr(done_tail) : linkage.NIL);
        final SubLObject body;
        current = (body = temp);
        return (SubLObject)ConsesLow.list((SubLObject)linkage.$sym177$CLET, (SubLObject)ConsesLow.list(link), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym186$DO_VECTOR, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym1009$L, (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym188$GET_SLOT, v_linkage, (SubLObject)linkage.$list1010), (SubLObject)linkage.$kw1008$DONE, done), (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym184$PWHEN, (SubLObject)linkage.$sym1009$L, (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym182$CSETQ, link, (SubLObject)linkage.$list1011), ConsesLow.append(body, (SubLObject)linkage.NIL))));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 115304L)
    public static SubLObject do_linkage_words(final SubLObject macroform, final SubLObject environment) {
        SubLObject current;
        final SubLObject datum = current = macroform.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1012);
        final SubLObject temp = current.rest();
        current = current.first();
        SubLObject word = (SubLObject)linkage.NIL;
        SubLObject v_linkage = (SubLObject)linkage.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1012);
        word = current.first();
        current = current.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1012);
        v_linkage = current.first();
        current = current.rest();
        if (linkage.NIL == current) {
            final SubLObject body;
            current = (body = temp);
            return (SubLObject)ConsesLow.list((SubLObject)linkage.$sym177$CLET, (SubLObject)ConsesLow.list(word), (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym186$DO_VECTOR, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym1013$W, (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym188$GET_SLOT, v_linkage, (SubLObject)linkage.$list1014)), (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym182$CSETQ, word, (SubLObject)linkage.$list1015), ConsesLow.append(body, (SubLObject)linkage.NIL)));
        }
        cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)linkage.$list1012);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 115598L)
    public static SubLObject words_to_sentence(final SubLObject words) {
        final SubLObject length = Numbers.subtract(Sequences.length(words), (SubLObject)linkage.TWO_INTEGER);
        final SubLObject sentence = document.new_sentence((SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        document._csetf_sign_constituents(sentence, Vectors.make_vector(length, (SubLObject)linkage.UNPROVIDED));
        SubLObject i;
        for (i = (SubLObject)linkage.NIL, i = (SubLObject)linkage.ZERO_INTEGER; i.numL(length); i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER)) {
            document.sentence_set(sentence, i, document.new_word((SubLObject)ConsesLow.list((SubLObject)linkage.$kw762$STRING, split_link_word(Vectors.aref(words, number_utilities.f_1X(i))))));
        }
        return sentence;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 116011L)
    public static SubLObject new_linkage(final SubLObject sentence, SubLObject v_properties) {
        if (v_properties == linkage.UNPROVIDED) {
            v_properties = (SubLObject)linkage.NIL;
        }
        return new_linkages(sentence, v_properties).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 116399L)
    public static SubLObject set_new_linkage(final SubLObject macroform, final SubLObject environment) {
        SubLObject current;
        final SubLObject datum = current = macroform.rest();
        SubLObject v_linkage = (SubLObject)linkage.NIL;
        SubLObject sentence = (SubLObject)linkage.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1016);
        v_linkage = current.first();
        current = current.rest();
        cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)linkage.$list1016);
        sentence = current.first();
        current = current.rest();
        final SubLObject v_properties = (SubLObject)(current.isCons() ? current.first() : linkage.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, datum, (SubLObject)linkage.$list1016);
        final SubLObject body;
        current = (body = current.rest());
        final SubLObject error = (SubLObject)linkage.$sym1017$ERROR;
        return (SubLObject)ConsesLow.listS((SubLObject)linkage.$sym177$CLET, (SubLObject)ConsesLow.list(error), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym1018$CATCH_ERROR_MESSAGE, (SubLObject)ConsesLow.list(error), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym182$CSETQ, v_linkage, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym1019$NEW_LINKAGE, sentence, v_properties))), (SubLObject)ConsesLow.list((SubLObject)linkage.$sym184$PWHEN, error, (SubLObject)linkage.$list1020, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym182$CSETQ, v_linkage, (SubLObject)ConsesLow.list((SubLObject)linkage.$sym1019$NEW_LINKAGE, sentence, v_properties))), ConsesLow.append(body, (SubLObject)linkage.NIL));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 116813L)
    public static SubLObject new_linkages(final SubLObject sentence, SubLObject v_properties) {
        if (v_properties == linkage.UNPROVIDED) {
            v_properties = (SubLObject)linkage.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject current;
        final SubLObject datum = current = v_properties;
        SubLObject allow_other_keys_p = (SubLObject)linkage.NIL;
        SubLObject rest = current;
        SubLObject bad = (SubLObject)linkage.NIL;
        SubLObject current_$33 = (SubLObject)linkage.NIL;
        while (linkage.NIL != rest) {
            cdestructuring_bind.destructuring_bind_must_consp(rest, datum, (SubLObject)linkage.$list1021);
            current_$33 = rest.first();
            rest = rest.rest();
            cdestructuring_bind.destructuring_bind_must_consp(rest, datum, (SubLObject)linkage.$list1021);
            if (linkage.NIL == conses_high.member(current_$33, (SubLObject)linkage.$list1022, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                bad = (SubLObject)linkage.T;
            }
            if (current_$33 == linkage.$kw1007$ALLOW_OTHER_KEYS) {
                allow_other_keys_p = rest.first();
            }
            rest = rest.rest();
        }
        if (linkage.NIL != bad && linkage.NIL == allow_other_keys_p) {
            cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)linkage.$list1021);
        }
        final SubLObject context_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw984$CONTEXT, current);
        final SubLObject v_context = (linkage.NIL != context_tail) ? conses_high.cadr(context_tail) : object.new_class_instance((SubLObject)linkage.$sym1000$PARSE_TREE_CONTEXT);
        final SubLObject options_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw1023$OPTIONS, current);
        final SubLObject options = (linkage.NIL != options_tail) ? conses_high.cadr(options_tail) : linkage.$link_parse_options$.getDynamicValue(thread);
        final SubLObject lexicon_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw978$LEXICON, current);
        final SubLObject lexicon = (SubLObject)((linkage.NIL != lexicon_tail) ? conses_high.cadr(lexicon_tail) : linkage.NIL);
        final SubLObject use_standardized_word_stringsP_tail = cdestructuring_bind.property_list_member((SubLObject)linkage.$kw1024$USE_STANDARDIZED_WORD_STRINGS_, current);
        final SubLObject use_standardized_word_stringsP = (SubLObject)((linkage.NIL != use_standardized_word_stringsP_tail) ? conses_high.cadr(use_standardized_word_stringsP_tail) : linkage.T);
        assert linkage.NIL != Types.stringp(sentence) : sentence;
        assert linkage.NIL != Types.listp(options) : options;
        assert linkage.NIL != context.parse_tree_context_p(v_context) : v_context;
        SubLObject linkages = (SubLObject)linkage.NIL;
        final SubLObject link_structures = link_parse(sentence, options, lexicon, use_standardized_word_stringsP);
        SubLObject tagged_sent = (SubLObject)linkage.NIL;
        if (linkage.NIL == link_structures) {
            return (SubLObject)linkage.NIL;
        }
        tagged_sent = words_to_sentence(ls_words(link_structures.first()));
        pos_tagger.tagger_tag_sentence(pos_tagger.get_tagger(), tagged_sent);
        auxify_sentence(tagged_sent);
        SubLObject cdolist_list_var = link_structures;
        SubLObject link_structure = (SubLObject)linkage.NIL;
        link_structure = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            linkages = (SubLObject)ConsesLow.cons(new_linkage_from_link_structure(link_structure, tagged_sent, v_context), linkages);
            cdolist_list_var = cdolist_list_var.rest();
            link_structure = cdolist_list_var.first();
        }
        return linkages;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 118355L)
    public static SubLObject new_linkage_from_link_structure(final SubLObject link_structure, final SubLObject tagged_sent, final SubLObject v_context) {
        if (linkage.NIL == ls_tree(link_structure)) {
            return (SubLObject)linkage.NIL;
        }
        ensure_linkage_initialized();
        final SubLObject v_linkage = object.new_class_instance((SubLObject)linkage.$sym368$LINKAGE);
        final SubLObject word_count = ls_number_of_words(link_structure);
        final SubLObject link_count = ls_number_of_links(link_structure);
        final SubLObject links = Vectors.make_vector(link_count, (SubLObject)linkage.UNPROVIDED);
        SubLObject words = (SubLObject)linkage.NIL;
        final SubLObject word_links = Vectors.make_vector(word_count, (SubLObject)linkage.UNPROVIDED);
        final SubLObject tagged_sent_length = document.sentence_length(tagged_sent);
        SubLObject llinksXrlinks = (SubLObject)linkage.NIL;
        SubLObject link_name = (SubLObject)linkage.NIL;
        SubLObject index = (SubLObject)linkage.NIL;
        SubLObject string = (SubLObject)linkage.NIL;
        SubLObject pos = (SubLObject)linkage.NIL;
        SubLObject wi;
        for (wi = (SubLObject)linkage.NIL, wi = (SubLObject)linkage.ZERO_INTEGER; wi.numL(word_count); wi = Numbers.add(wi, (SubLObject)linkage.ONE_INTEGER)) {
            Vectors.set_aref(word_links, wi, (SubLObject)ConsesLow.cons((SubLObject)linkage.NIL, (SubLObject)linkage.NIL));
        }
        SubLObject li;
        for (li = (SubLObject)linkage.NIL, li = (SubLObject)linkage.ZERO_INTEGER; li.numL(link_count); li = Numbers.add(li, (SubLObject)linkage.ONE_INTEGER)) {
            index = ls_lword_index_of_link(link_structure, li);
            llinksXrlinks = Vectors.aref(word_links, index);
            ConsesLow.rplacd(llinksXrlinks, (SubLObject)ConsesLow.cons(li, llinksXrlinks.rest()));
            index = ls_rword_index_of_link(link_structure, li);
            llinksXrlinks = Vectors.aref(word_links, index);
            ConsesLow.rplaca(llinksXrlinks, (SubLObject)ConsesLow.cons(li, llinksXrlinks.first()));
        }
        SubLObject llinks;
        SubLObject rlinks;
        SubLObject llink;
        SubLObject rlink;
        SubLObject cdolist_list_var;
        SubLObject llink_id;
        SubLObject rlink_id;
        for (wi = (SubLObject)linkage.NIL, wi = (SubLObject)linkage.ZERO_INTEGER; wi.numL(word_count); wi = Numbers.add(wi, (SubLObject)linkage.ONE_INTEGER)) {
            llinks = (SubLObject)linkage.NIL;
            rlinks = (SubLObject)linkage.NIL;
            llink = (SubLObject)linkage.NIL;
            rlink = (SubLObject)linkage.NIL;
            string = ls_word_of_linkage(link_structure, wi);
            pos = (SubLObject)((wi.numL((SubLObject)linkage.ONE_INTEGER) || wi.numG(tagged_sent_length)) ? linkage.NIL : document.word_category(document.sentence_get(tagged_sent, number_utilities.f_1_(wi))));
            llinksXrlinks = Vectors.aref(word_links, wi);
            cdolist_list_var = llinksXrlinks.first();
            llink_id = (SubLObject)linkage.NIL;
            llink_id = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                link_name = ls_name_of_link(link_structure, llink_id);
                llink = Vectors.aref(links, llink_id);
                if (linkage.NIL == llink) {
                    llink = new_link(link_name);
                    Vectors.set_aref(links, llink_id, llink);
                }
                llinks = (SubLObject)ConsesLow.cons(llink, llinks);
                cdolist_list_var = cdolist_list_var.rest();
                llink_id = cdolist_list_var.first();
            }
            cdolist_list_var = llinksXrlinks.rest();
            rlink_id = (SubLObject)linkage.NIL;
            rlink_id = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                link_name = ls_name_of_link(link_structure, rlink_id);
                rlink = Vectors.aref(links, rlink_id);
                if (linkage.NIL == rlink) {
                    rlink = new_link(link_name);
                    Vectors.set_aref(links, rlink_id, rlink);
                }
                rlinks = (SubLObject)ConsesLow.cons(rlink, rlinks);
                cdolist_list_var = cdolist_list_var.rest();
                rlink_id = cdolist_list_var.first();
            }
            words = (SubLObject)ConsesLow.cons(new_link_word(v_linkage, string, wi, llinks, rlinks, pos, v_context), words);
        }
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym967$DIAGRAM, ls_diagram(link_structure));
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym966$TREE, new_link_tree(ls_tree(link_structure), Functions.apply((SubLObject)linkage.$sym57$VECTOR, Sequences.reverse(words))));
        if (linkage.NIL == instances.get_slot(v_linkage, (SubLObject)linkage.$sym966$TREE)) {
            Errors.warn((SubLObject)linkage.$str1025$Couldn_t_build_tree_from__a, ls_tree(link_structure));
            return (SubLObject)linkage.NIL;
        }
        final SubLObject yield = methods.funcall_instance_method_with_0_args(instances.get_slot(v_linkage, (SubLObject)linkage.$sym966$TREE), (SubLObject)linkage.$sym160$YIELD);
        instances.set_slot(words.first(), (SubLObject)linkage.$sym277$ABS_INDEX, number_utilities.f_1X(Sequences.length(yield)));
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym968$WORDS, Functions.apply((SubLObject)linkage.$sym57$VECTOR, ConsesLow.append(conses_high.last(words, (SubLObject)linkage.UNPROVIDED), yield, (SubLObject)ConsesLow.list(words.first()))));
        SubLObject links_$34 = (SubLObject)linkage.NIL;
        final SubLObject vector_var = instances.get_slot(v_linkage, (SubLObject)linkage.$sym968$WORDS);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject word;
        SubLObject cdolist_list_var2;
        SubLObject link;
        SubLObject item_var;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            word = Vectors.aref(vector_var, element_num);
            cdolist_list_var2 = methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym489$GET_LINKS);
            link = (SubLObject)linkage.NIL;
            link = cdolist_list_var2.first();
            while (linkage.NIL != cdolist_list_var2) {
                item_var = link;
                if (linkage.NIL == conses_high.member(item_var, links_$34, Symbols.symbol_function((SubLObject)linkage.EQL), Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                    links_$34 = (SubLObject)ConsesLow.cons(item_var, links_$34);
                }
                cdolist_list_var2 = cdolist_list_var2.rest();
                link = cdolist_list_var2.first();
            }
        }
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym969$LINKS, Functions.apply((SubLObject)linkage.$sym57$VECTOR, Sequences.nreverse(links_$34)));
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym965$TREE_STRING, ls_tree(link_structure));
        process_linkage_modifiers(v_linkage);
        retag_linkage_aux_verbs(v_linkage);
        return v_linkage;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 122278L)
    public static SubLObject retag_linkage_aux_verbs(final SubLObject v_linkage) {
        SubLObject word = (SubLObject)linkage.NIL;
        final SubLObject vector_var = instances.get_slot(v_linkage, (SubLObject)linkage.$sym968$WORDS);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject w;
        SubLObject new_word;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            w = (word = Vectors.aref(vector_var, element_num));
            if (linkage.NIL != aux_verb_link_word_p(word) && linkage.NIL == methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT)) {
                new_word = create_link_word(v_linkage, methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym95$GET_STRING), methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym149$GET_INDEX), methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym274$GET_ABS_INDEX), methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym293$GET_LEFT_LINKS), methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym292$GET_RIGHT_LINKS), cyclifier_interface.compute_main_verb_tag(word), methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym278$GET_CONTEXT));
                Vectors.set_aref(instances.get_slot(methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym141$GET_MOTHER), (SubLObject)linkage.$sym172$DAUGHTERS), methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym149$GET_INDEX), new_word);
                instances.set_slot(new_word, (SubLObject)linkage.$sym104$MOTHER, methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym141$GET_MOTHER));
                Vectors.set_aref(instances.get_slot(v_linkage, (SubLObject)linkage.$sym968$WORDS), methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym274$GET_ABS_INDEX), new_word);
            }
        }
        return v_linkage;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 122987L)
    public static SubLObject process_linkage_modifiers(final SubLObject v_linkage) {
        SubLObject word = (SubLObject)linkage.NIL;
        final SubLObject vector_var = instances.get_slot(v_linkage, (SubLObject)linkage.$sym968$WORDS);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject w;
        SubLObject cdolist_list_var;
        SubLObject modified;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            w = (word = Vectors.aref(vector_var, element_num));
            cdolist_list_var = methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym117$GET_MODIFIEDS);
            modified = (SubLObject)linkage.NIL;
            modified = cdolist_list_var.first();
            while (linkage.NIL != cdolist_list_var) {
                instances.set_slot(modified, (SubLObject)linkage.$sym102$MODIFIERS, (SubLObject)ConsesLow.cons(word, instances.get_slot(modified, (SubLObject)linkage.$sym102$MODIFIERS)));
                cdolist_list_var = cdolist_list_var.rest();
                modified = cdolist_list_var.first();
            }
        }
        return v_linkage;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 123219L)
    public static SubLObject linkage_yield_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject words = get_linkage_words(self);
        try {
            thread.throwStack.push(linkage.$sym1027$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                SubLObject words_$35 = (SubLObject)linkage.NIL;
                SubLObject word = (SubLObject)linkage.NIL;
                final SubLObject vector_var = instances.get_slot(self, (SubLObject)linkage.$sym968$WORDS);
                final SubLObject backwardP_var = (SubLObject)linkage.NIL;
                SubLObject length;
                SubLObject v_iteration;
                SubLObject element_num;
                SubLObject w;
                for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
                    element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
                    w = (word = Vectors.aref(vector_var, element_num));
                    words_$35 = (SubLObject)ConsesLow.cons(word, words_$35);
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1027$OUTER_CATCH_FOR_LINKAGE_METHOD, Sequences.nreverse(words_$35));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_words(self, words);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1027$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 123430L)
    public static SubLObject linkage_print_method(final SubLObject self, final SubLObject stream, final SubLObject depth) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject tree = get_linkage_tree(self);
        try {
            thread.throwStack.push(linkage.$sym1030$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                pprint_link_tree(tree, stream, (SubLObject)linkage.ZERO_INTEGER);
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1030$OUTER_CATCH_FOR_LINKAGE_METHOD, self);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_tree(self, tree);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1030$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 123613L)
    public static SubLObject linkage_xml_method(final SubLObject self) {
        SubLObject xml = (SubLObject)linkage.NIL;
        final SubLObject indent = (SubLObject)linkage.ZERO_INTEGER;
        SubLObject stream = (SubLObject)linkage.NIL;
        try {
            stream = streams_high.make_private_string_output_stream();
            PrintLow.format(stream, (SubLObject)linkage.$str1033$_linkage___);
            string_utilities.tab(Numbers.add(indent, (SubLObject)linkage.THREE_INTEGER), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            PrintLow.format(stream, (SubLObject)linkage.$str1034$_tree___);
            methods.funcall_instance_method_with_2_args(methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym1035$GET_TREE), (SubLObject)linkage.$sym125$XML, stream, Numbers.add(indent, (SubLObject)linkage.SIX_INTEGER));
            string_utilities.tab(Numbers.add(indent, (SubLObject)linkage.THREE_INTEGER), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            PrintLow.format(stream, (SubLObject)linkage.$str1036$__tree___);
            links_xml(get_linkage_links(self), stream, Numbers.add(indent, (SubLObject)linkage.THREE_INTEGER));
            PrintLow.format(stream, (SubLObject)linkage.$str1037$__linkage___);
            xml = streams_high.get_output_stream_string(stream);
        }
        finally {
            final SubLObject _prev_bind_0 = Dynamic.currentBinding(Threads.$is_thread_performing_cleanupP$);
            try {
                Dynamic.bind(Threads.$is_thread_performing_cleanupP$, (SubLObject)linkage.T);
                final SubLObject _values = Values.getValuesAsVector();
                streams_high.close(stream, (SubLObject)linkage.UNPROVIDED);
                Values.restoreValuesFromVector(_values);
            }
            finally {
                Dynamic.rebind(Threads.$is_thread_performing_cleanupP$, _prev_bind_0);
            }
        }
        return xml;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 124197L)
    public static SubLObject link_tree_string(final SubLObject lt, final SubLObject stream) {
        return (linkage.NIL != link_phrase_p(lt)) ? link_phrase_string(lt, stream) : link_word_string(lt, stream);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 124347L)
    public static SubLObject link_phrase_string(final SubLObject lp, final SubLObject stream) {
        PrintLow.format(stream, (SubLObject)linkage.$str1039$__a, methods.funcall_instance_method_with_0_args(lp, (SubLObject)linkage.$sym129$GET_CATEGORY));
        final SubLObject vector_var = get_link_phrase_daughters(lp);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject daughter;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            daughter = Vectors.aref(vector_var, element_num);
            streams_high.write_string((SubLObject)linkage.$str279$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
            link_tree_string(daughter, stream);
        }
        streams_high.write_string((SubLObject)linkage.$str268$_, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 124608L)
    public static SubLObject link_word_string(final SubLObject lw, final SubLObject stream) {
        streams_high.write_string(methods.funcall_instance_method_with_0_args(lw, (SubLObject)linkage.$sym95$GET_STRING), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 124712L)
    public static SubLObject links_xml(final SubLObject links, final SubLObject stream, final SubLObject indent) {
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str1040$_links___);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject link;
        for (length = Sequences.length(links), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            link = Vectors.aref(links, element_num);
            if (linkage.NIL != link) {
                link_xml(link, stream, Numbers.add(indent, (SubLObject)linkage.THREE_INTEGER));
            }
        }
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str1041$__links___);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 124961L)
    public static SubLObject diagram_xml(final SubLObject diagram, final SubLObject stream, final SubLObject indent) {
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str1042$_diagram___);
        string_utilities.tab(Numbers.add(indent, (SubLObject)linkage.THREE_INTEGER), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        streams_high.write_string(diagram, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        streams_high.terpri(stream);
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str1043$__diagram___);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 125214L)
    public static SubLObject tree_string_xml(final SubLObject tree_string, final SubLObject stream, final SubLObject indent) {
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str1044$_tree_string___);
        string_utilities.tab(Numbers.add(indent, (SubLObject)linkage.THREE_INTEGER), stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        streams_high.write_string(tree_string, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        streams_high.terpri(stream);
        string_utilities.tab(indent, stream, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        PrintLow.format(stream, (SubLObject)linkage.$str1045$__tree_string___);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 125487L)
    public static SubLObject linkage_print_diagram_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject diagram = get_linkage_diagram(self);
        try {
            thread.throwStack.push(linkage.$sym1048$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                print_high.princ(diagram, (SubLObject)linkage.UNPROVIDED);
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1048$OUTER_CATCH_FOR_LINKAGE_METHOD, (SubLObject)linkage.NIL);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_diagram(self, diagram);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1048$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 125611L)
    public static SubLObject linkage_length_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject words = get_linkage_words(self);
        try {
            thread.throwStack.push(linkage.$sym1052$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1052$OUTER_CATCH_FOR_LINKAGE_METHOD, Numbers.subtract(Sequences.length(words), (SubLObject)linkage.TWO_INTEGER));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_words(self, words);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1052$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 125749L)
    public static SubLObject linkage_get_tree_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject tree = get_linkage_tree(self);
        try {
            thread.throwStack.push(linkage.$sym1055$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1055$OUTER_CATCH_FOR_LINKAGE_METHOD, tree);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_tree(self, tree);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1055$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 125865L)
    public static SubLObject linkage_get_tree_string_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject tree_string = get_linkage_tree_string(self);
        try {
            thread.throwStack.push(linkage.$sym1059$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1059$OUTER_CATCH_FOR_LINKAGE_METHOD, tree_string);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_tree_string(self, tree_string);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1059$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 126004L)
    public static SubLObject linkage_get_daughter_method(final SubLObject self, final SubLObject i) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject tree = get_linkage_tree(self);
        try {
            thread.throwStack.push(linkage.$sym1062$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1062$OUTER_CATCH_FOR_LINKAGE_METHOD, methods.funcall_instance_method_with_1_args(tree, (SubLObject)linkage.$sym158$GET_DAUGHTER, i));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_tree(self, tree);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1062$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 126233L)
    public static SubLObject linkage_get_word_method(final SubLObject self, final SubLObject i) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject words = get_linkage_words(self);
        try {
            thread.throwStack.push(linkage.$sym1066$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                assert linkage.NIL != subl_promotions.non_negative_integer_p(i) : i;
                if (!i.numG(number_utilities.f_1_(Sequences.length(words)))) {
                    Dynamic.sublisp_throw((SubLObject)linkage.$sym1066$OUTER_CATCH_FOR_LINKAGE_METHOD, Vectors.aref(words, i));
                }
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_words(self, words);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1066$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 126475L)
    public static SubLObject linkage_get_heads_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject words = get_linkage_words(self);
        try {
            thread.throwStack.push(linkage.$sym1069$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                SubLObject heads = (SubLObject)linkage.NIL;
                SubLObject cdolist_list_var = (SubLObject)linkage.$list1070;
                SubLObject patterns = (SubLObject)linkage.NIL;
                patterns = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    SubLObject cdolist_list_var_$36 = methods.funcall_instance_method_with_1_args(Vectors.aref(words, (SubLObject)linkage.ZERO_INTEGER), (SubLObject)linkage.$sym295$GET_RELATED, patterns);
                    SubLObject head = (SubLObject)linkage.NIL;
                    head = cdolist_list_var_$36.first();
                    while (linkage.NIL != cdolist_list_var_$36) {
                        if (linkage.NIL != verb_link_word_p(head)) {
                            final SubLObject item_var = head;
                            if (linkage.NIL == conses_high.member(item_var, heads, (SubLObject)linkage.EQ, Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                                heads = (SubLObject)ConsesLow.cons(item_var, heads);
                            }
                        }
                        cdolist_list_var_$36 = cdolist_list_var_$36.rest();
                        head = cdolist_list_var_$36.first();
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    patterns = cdolist_list_var.first();
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1069$OUTER_CATCH_FOR_LINKAGE_METHOD, heads);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_words(self, words);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1069$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 126941L)
    public static SubLObject linkage_get_head_method(final SubLObject self) {
        return methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym217$GET_HEADS).first();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 127032L)
    public static SubLObject linkage_get_subject_method(final SubLObject self) {
        final SubLObject head = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym225$GET_HEAD);
        return (SubLObject)((linkage.NIL != head) ? methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym303$GET_SUBJECT) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 127222L)
    public static SubLObject linkage_get_direct_object_method(final SubLObject self) {
        final SubLObject head = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym225$GET_HEAD);
        return (SubLObject)((linkage.NIL != head) ? methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 127430L)
    public static SubLObject linkage_get_indirect_object_method(final SubLObject self) {
        final SubLObject head = methods.funcall_instance_method_with_0_args(self, (SubLObject)linkage.$sym225$GET_HEAD);
        return (SubLObject)((linkage.NIL != head) ? methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT) : linkage.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 127644L)
    public static SubLObject linkage_cyclify_int_method(final SubLObject self) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject tree = get_linkage_tree(self);
        try {
            thread.throwStack.push(linkage.$sym1081$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1081$OUTER_CATCH_FOR_LINKAGE_METHOD, methods.funcall_instance_method_with_0_args(tree, (SubLObject)linkage.$sym214$CYCLIFY_INT));
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_tree(self, tree);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1081$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 127806L)
    public static SubLObject linkage_lexify_method(final SubLObject self, final SubLObject lexicon) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject words = get_linkage_words(self);
        try {
            thread.throwStack.push(linkage.$sym1084$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                assert linkage.NIL != semtrans_lexicon.semtrans_lexicon_p(lexicon) : lexicon;
                final SubLObject vector_var = words;
                final SubLObject backwardP_var = (SubLObject)linkage.NIL;
                SubLObject length;
                SubLObject v_iteration;
                SubLObject element_num;
                SubLObject word;
                for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
                    element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
                    word = Vectors.aref(vector_var, element_num);
                    methods.funcall_instance_method_with_1_args(word, (SubLObject)linkage.$sym466$LEXIFY, lexicon);
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1084$OUTER_CATCH_FOR_LINKAGE_METHOD, self);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_words(self, words);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1084$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 128110L)
    public static SubLObject linkage_cyclifiable_question_p_method(final SubLObject self) {
        return list_utilities.sublisp_boolean(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym1089$SEARCH, (SubLObject)linkage.$str1090$_));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 128286L)
    public static SubLObject linkage_search_method(final SubLObject self, final SubLObject word, SubLObject n) {
        if (n == linkage.UNPROVIDED) {
            n = (SubLObject)linkage.ONE_INTEGER;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject catch_var_for_linkage_method = (SubLObject)linkage.NIL;
        final SubLObject words = get_linkage_words(self);
        try {
            thread.throwStack.push(linkage.$sym1094$OUTER_CATCH_FOR_LINKAGE_METHOD);
            try {
                assert linkage.NIL != Types.stringp(word) : word;
                assert linkage.NIL != subl_promotions.non_negative_integer_p(n) : n;
                SubLObject counter = (SubLObject)linkage.ZERO_INTEGER;
                SubLObject cdotimes_end_var;
                SubLObject i;
                for (cdotimes_end_var = Sequences.length(words), i = (SubLObject)linkage.NIL, i = (SubLObject)linkage.ZERO_INTEGER; i.numL(cdotimes_end_var); i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER)) {
                    if (methods.funcall_instance_method_with_0_args(methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym1064$GET_WORD, i), (SubLObject)linkage.$sym95$GET_STRING).equalp(word)) {
                        counter = Numbers.add(counter, (SubLObject)linkage.ONE_INTEGER);
                        if (counter.numE(n)) {
                            Dynamic.sublisp_throw((SubLObject)linkage.$sym1094$OUTER_CATCH_FOR_LINKAGE_METHOD, methods.funcall_instance_method_with_1_args(self, (SubLObject)linkage.$sym1064$GET_WORD, i));
                        }
                    }
                }
                Dynamic.sublisp_throw((SubLObject)linkage.$sym1094$OUTER_CATCH_FOR_LINKAGE_METHOD, (SubLObject)linkage.NIL);
            }
            finally {
                final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                try {
                    Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                    final SubLObject _values = Values.getValuesAsVector();
                    set_linkage_words(self, words);
                    Values.restoreValuesFromVector(_values);
                }
                finally {
                    Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                }
            }
        }
        catch (Throwable ccatch_env_var) {
            catch_var_for_linkage_method = Errors.handleThrowable(ccatch_env_var, (SubLObject)linkage.$sym1094$OUTER_CATCH_FOR_LINKAGE_METHOD);
        }
        finally {
            thread.throwStack.pop();
        }
        return catch_var_for_linkage_method;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 128749L)
    public static SubLObject get_link_pattern(final SubLObject keyword) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject pattern = conses_high.assoc(keyword, linkage.$link_pattern_table$.getDynamicValue(thread), (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED).rest();
        if (linkage.NIL == pattern) {
            Errors.error((SubLObject)linkage.$str1096$No_regex_pattern_for__a, keyword);
        }
        return pattern;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 129109L)
    public static SubLObject links_to_classes(final SubLObject llinks, final SubLObject rlinks) {
        if (linkage.NIL == pos_evidence_tables_initializedP()) {
            initialize_pos_evidence_tables();
        }
        SubLObject classes_conjunction = (SubLObject)linkage.NIL;
        SubLObject classes_disjunction = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = llinks;
        SubLObject left_link = (SubLObject)linkage.NIL;
        left_link = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            classes_disjunction = link_to_classes(left_link, linkage.$llink_table$.getGlobalValue());
            if (linkage.NIL != classes_disjunction) {
                classes_conjunction = (SubLObject)ConsesLow.cons(classes_disjunction, classes_conjunction);
            }
            cdolist_list_var = cdolist_list_var.rest();
            left_link = cdolist_list_var.first();
        }
        cdolist_list_var = rlinks;
        SubLObject right_link = (SubLObject)linkage.NIL;
        right_link = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            classes_disjunction = link_to_classes(right_link, linkage.$rlink_table$.getGlobalValue());
            if (linkage.NIL != classes_disjunction) {
                classes_conjunction = (SubLObject)ConsesLow.cons(classes_disjunction, classes_conjunction);
            }
            cdolist_list_var = cdolist_list_var.rest();
            right_link = cdolist_list_var.first();
        }
        return classes_conjunction;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 129890L)
    public static SubLObject link_to_classes(final SubLObject link, final SubLObject table) {
        final SubLObject coreXmods = split_link(link);
        final SubLObject mod_table = Hashtables.gethash_without_values(coreXmods.first(), table, (SubLObject)linkage.UNPROVIDED);
        final SubLObject mods = coreXmods.rest();
        SubLObject mod_classes = (SubLObject)linkage.NIL;
        SubLObject v_classes = conses_high.assoc((SubLObject)linkage.NIL, mod_table, (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED).rest();
        final SubLObject string_var = mods;
        SubLObject end_var_$37;
        SubLObject end_var;
        SubLObject char_num;
        SubLObject mod;
        for (end_var = (end_var_$37 = Sequences.length(string_var)), char_num = (SubLObject)linkage.NIL, char_num = (SubLObject)linkage.ZERO_INTEGER; !char_num.numGE(end_var_$37); char_num = number_utilities.f_1X(char_num)) {
            mod = Strings.sublisp_char(string_var, char_num);
            mod_classes = conses_high.assoc(mod, mod_table, (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED).rest();
            if (linkage.NIL != mod_classes) {
                v_classes = conses_high.intersection(v_classes, mod_classes, (SubLObject)linkage.EQ, (SubLObject)linkage.UNPROVIDED);
            }
        }
        return v_classes;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 130372L)
    public static SubLObject split_link(final SubLObject link) {
        final SubLObject mod_start = list_utilities.position_if_not((SubLObject)linkage.$sym1097$UPPER_CASE_P, link, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        final SubLObject v_core = Sequences.subseq(link, (SubLObject)linkage.ZERO_INTEGER, mod_start);
        final SubLObject modifier = (SubLObject)((linkage.NIL != mod_start) ? Sequences.subseq(link, mod_start, (SubLObject)linkage.UNPROVIDED) : linkage.$str763$);
        return (SubLObject)ConsesLow.cons(v_core, modifier);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 130661L)
    public static SubLObject strip_link_modifiers(final SubLObject link) {
        SubLObject cdotimes_end_var;
        SubLObject i;
        for (cdotimes_end_var = Sequences.length(link), i = (SubLObject)linkage.NIL, i = (SubLObject)linkage.ZERO_INTEGER; i.numL(cdotimes_end_var); i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER)) {
            if (linkage.NIL == Characters.upper_case_p(Vectors.aref(link, i))) {
                return Sequences.subseq(link, (SubLObject)linkage.ZERO_INTEGER, i);
            }
        }
        return link;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 130924L)
    public static SubLObject get_link_word_class(final SubLObject word, final SubLObject pos, final SubLObject llinks, final SubLObject rlinks, final SubLObject penn_pos) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject classes_conjunction = (SubLObject)linkage.$list1098;
        SubLObject link_classes = (SubLObject)linkage.NIL;
        SubLObject link_penn_classes = (SubLObject)linkage.NIL;
        SubLObject v_class = (SubLObject)linkage.NIL;
        SubLObject most_specific_class = (SubLObject)linkage.NIL;
        SubLObject most_specific_count = (SubLObject)linkage.NIL;
        SubLObject derived_pos = (SubLObject)linkage.NIL;
        if (linkage.NIL != pos) {
            v_class = link_pos_to_class(pos);
            if (linkage.NIL != v_class) {
                classes_conjunction = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.list(v_class), classes_conjunction);
            }
        }
        classes_conjunction = ConsesLow.append(classes_conjunction, links_to_classes(llinks, rlinks));
        v_class = word_to_class(word);
        if (linkage.NIL != v_class) {
            classes_conjunction = (SubLObject)ConsesLow.cons((SubLObject)ConsesLow.list(v_class), classes_conjunction);
        }
        SubLObject cdolist_list_var = list_utilities.cross_products(classes_conjunction);
        SubLObject class_conjunction = (SubLObject)linkage.NIL;
        class_conjunction = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            most_specific_class = most_specific_class(class_conjunction);
            if (linkage.NIL != most_specific_class) {
                link_classes = (SubLObject)ConsesLow.cons(most_specific_class, link_classes);
            }
            cdolist_list_var = cdolist_list_var.rest();
            class_conjunction = cdolist_list_var.first();
        }
        final SubLObject pcase_var;
        most_specific_count = (pcase_var = Sequences.length(link_classes));
        if (pcase_var.eql((SubLObject)linkage.ZERO_INTEGER)) {
            if (linkage.NIL != linkage.$show_link_warnings$.getDynamicValue(thread)) {
                Errors.warn((SubLObject)linkage.$str1099$Inconsistent_class_evidence_from_, new SubLObject[] { classes_conjunction, word, pos, llinks, rlinks });
            }
            v_class = (SubLObject)linkage.NIL;
        }
        else if (pcase_var.eql((SubLObject)linkage.ONE_INTEGER)) {
            if (linkage.NIL == classes.superclassp((SubLObject)linkage.$sym54$WALL_LINK_WORD, link_classes.first())) {
                thread.resetMultipleValues();
                final SubLObject v_class_$38 = strengthen_pos_class(word, link_classes.first(), penn_pos);
                final SubLObject derived_pos_$39 = thread.secondMultipleValue();
                thread.resetMultipleValues();
                v_class = v_class_$38;
                derived_pos = derived_pos_$39;
                if (linkage.NIL != v_class) {
                    if (linkage.NIL == derived_pos) {
                        SubLObject cdolist_list_var2 = list_utilities.cross_products((SubLObject)ConsesLow.list(link_classes, penn_pos_to_classes(penn_pos)));
                        SubLObject class_conjunction2 = (SubLObject)linkage.NIL;
                        class_conjunction2 = cdolist_list_var2.first();
                        while (linkage.NIL != cdolist_list_var2) {
                            final SubLObject specific_class = most_specific_class(class_conjunction2);
                            if (linkage.NIL != specific_class) {
                                v_class = specific_class;
                                derived_pos = penn_pos;
                            }
                            cdolist_list_var2 = cdolist_list_var2.rest();
                            class_conjunction2 = cdolist_list_var2.first();
                        }
                    }
                }
                else {
                    if (linkage.NIL != linkage.$show_link_warnings$.getDynamicValue(thread)) {
                        Errors.warn((SubLObject)linkage.$str1100$Couldn_t_strengthen_link_required, link_classes.first(), word);
                    }
                    v_class = link_classes.first();
                }
            }
        }
        else if (linkage.NIL != penn_pos) {
            SubLObject cdolist_list_var2 = list_utilities.cross_products((SubLObject)ConsesLow.list(penn_pos_to_classes(penn_pos), link_classes));
            SubLObject class_conjunction2 = (SubLObject)linkage.NIL;
            class_conjunction2 = cdolist_list_var2.first();
            while (linkage.NIL != cdolist_list_var2) {
                most_specific_class = most_specific_class(class_conjunction2);
                if (linkage.NIL != most_specific_class) {
                    link_penn_classes = (SubLObject)ConsesLow.cons(most_specific_class, link_penn_classes);
                }
                cdolist_list_var2 = cdolist_list_var2.rest();
                class_conjunction2 = cdolist_list_var2.first();
            }
            final SubLObject pcase_var_$40;
            most_specific_count = (pcase_var_$40 = Sequences.length(link_penn_classes));
            if (pcase_var_$40.eql((SubLObject)linkage.ZERO_INTEGER)) {
                v_class = (SubLObject)linkage.NIL;
                if (linkage.NIL == v_class) {
                    SubLObject csome_list_var = link_classes;
                    SubLObject link_class = (SubLObject)linkage.NIL;
                    link_class = csome_list_var.first();
                    while (linkage.NIL == v_class && linkage.NIL != csome_list_var) {
                        thread.resetMultipleValues();
                        final SubLObject v_class_$39 = strengthen_pos_class(word, link_class, penn_pos);
                        final SubLObject derived_pos_$40 = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        v_class = v_class_$39;
                        derived_pos = derived_pos_$40;
                        csome_list_var = csome_list_var.rest();
                        link_class = csome_list_var.first();
                    }
                }
            }
            else if (pcase_var_$40.eql((SubLObject)linkage.ONE_INTEGER)) {
                v_class = link_penn_classes.first();
                derived_pos = penn_pos;
            }
            else {
                if (linkage.NIL != linkage.$show_link_warnings$.getDynamicValue(thread)) {
                    Errors.warn((SubLObject)linkage.$str1101$Disjunctive_class_evidence__a_for, new SubLObject[] { classes_conjunction, word, pos, llinks, rlinks, penn_pos });
                }
                v_class = (SubLObject)linkage.NIL;
            }
        }
        else {
            if (linkage.NIL != linkage.$show_link_warnings$.getDynamicValue(thread)) {
                Errors.warn((SubLObject)linkage.$str1101$Disjunctive_class_evidence__a_for, new SubLObject[] { classes_conjunction, word, pos, llinks, rlinks, penn_pos });
            }
            v_class = (SubLObject)linkage.NIL;
        }
        if (linkage.NIL == v_class) {
            v_class = (SubLObject)linkage.$sym359$LINK_WORD;
            derived_pos = penn_pos;
        }
        return Values.values(v_class, derived_pos);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 134895L)
    public static SubLObject link_pos_to_class(final SubLObject pos) {
        return conses_high.assoc(pos, linkage.$link_pos_to_class$.getGlobalValue(), (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED).rest();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 135110L)
    public static SubLObject penn_pos_to_classes(final SubLObject pos) {
        return Hashtables.gethash(pos, linkage.$pos_class_table$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 135320L)
    public static SubLObject word_to_class(final SubLObject word) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return conses_high.assoc(word, linkage.$word_to_class$.getDynamicValue(thread), (SubLObject)linkage.EQUALP, (SubLObject)linkage.UNPROVIDED).rest();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 135508L)
    public static SubLObject class_to_penn_poss(final SubLObject v_class) {
        return Hashtables.gethash(v_class, linkage.$class_pos_table$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 135699L)
    public static SubLObject most_specific_class(final SubLObject v_classes) {
        assert linkage.NIL != Types.listp(v_classes) : v_classes;
        SubLObject specific = v_classes.first();
        SubLObject cdolist_list_var = v_classes.rest();
        SubLObject v_class = (SubLObject)linkage.NIL;
        v_class = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != classes.superclassp(specific, v_class)) {
                specific = v_class;
            }
            else if (linkage.NIL == classes.superclassp(v_class, specific)) {
                return (SubLObject)linkage.NIL;
            }
            cdolist_list_var = cdolist_list_var.rest();
            v_class = cdolist_list_var.first();
        }
        return specific;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 136107L)
    public static SubLObject vector_of_pos_tags() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject result = Vectors.make_vector((SubLObject)linkage.$int1102$45, (SubLObject)linkage.UNPROVIDED);
        SubLObject i = (SubLObject)linkage.ZERO_INTEGER;
        SubLObject stream = (SubLObject)linkage.NIL;
        try {
            final SubLObject _prev_bind_0 = stream_macros.$stream_requires_locking$.currentBinding(thread);
            try {
                stream_macros.$stream_requires_locking$.bind((SubLObject)linkage.NIL, thread);
                stream = compatibility.open_text((SubLObject)linkage.$str1103$data_pos_tagging_index_to_state_t, (SubLObject)linkage.$kw1104$INPUT);
            }
            finally {
                stream_macros.$stream_requires_locking$.rebind(_prev_bind_0, thread);
            }
            if (!stream.isStream()) {
                Errors.error((SubLObject)linkage.$str1105$Unable_to_open__S, (SubLObject)linkage.$str1103$data_pos_tagging_index_to_state_t);
            }
            final SubLObject infile = stream;
            if (infile.isStream()) {
                SubLObject line;
                for (line = (SubLObject)linkage.NIL, line = file_utilities.cdolines_get_next_line(infile); linkage.NIL != line; line = file_utilities.cdolines_get_next_line(infile)) {
                    Vectors.set_aref(result, i, Symbols.make_keyword(conses_high.second(string_utilities.split_string(line, (SubLObject)linkage.$list1106))));
                    i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER);
                }
            }
        }
        finally {
            final SubLObject _prev_bind_2 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
            try {
                Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                final SubLObject _values = Values.getValuesAsVector();
                if (stream.isStream()) {
                    streams_high.close(stream, (SubLObject)linkage.UNPROVIDED);
                }
                Values.restoreValuesFromVector(_values);
            }
            finally {
                Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_2, thread);
            }
        }
        return result;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 136526L)
    public static SubLObject initialize_pos_tags() {
        linkage.$pos_tags$.setGlobalValue(vector_of_pos_tags());
        return (SubLObject)linkage.T;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 136698L)
    public static SubLObject strengthen_pos_class(final SubLObject word, final SubLObject pos_class, final SubLObject penn_pos) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        assert linkage.NIL != Types.stringp(word) : word;
        assert linkage.NIL != Types.symbolp(pos_class) : pos_class;
        if (linkage.NIL != classes.superclassp((SubLObject)linkage.$sym499$VERB_LINK_WORD, pos_class) && linkage.NIL != conses_high.member(word, parser.$aux_word_strings$.getDynamicValue(thread), (SubLObject)linkage.EQUAL, (SubLObject)linkage.UNPROVIDED)) {
            return Values.values((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$kw1109$AUX);
        }
        thread.resetMultipleValues();
        final SubLObject v_class = statistical_pos_tag(word, pos_class);
        final SubLObject pos_tag = thread.secondMultipleValue();
        thread.resetMultipleValues();
        if (linkage.NIL != pos_tag) {
            return Values.values(v_class, pos_tag);
        }
        final SubLObject derived_poss = class_to_penn_poss(pos_class);
        return Values.values(pos_class, (linkage.NIL != conses_high.member(penn_pos, derived_poss, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) ? penn_pos : derived_poss.first());
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 137774L)
    public static SubLObject statistical_pos_tag(final SubLObject word, final SubLObject pos_class) {
        SubLObject alist_of_tags = conses_high.copy_alist(file_hash_table.get_file_hash_table(word, linkage.$word_pos_probabilities$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED));
        SubLObject cdolist_list_var;
        alist_of_tags = (cdolist_list_var = list_utilities.sort_alist_by_values(alist_of_tags, Symbols.symbol_function((SubLObject)linkage.$sym1110$_)));
        SubLObject tag_value_pair = (SubLObject)linkage.NIL;
        tag_value_pair = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            final SubLObject pos_tag = Vectors.aref(linkage.$pos_tags$.getGlobalValue(), tag_value_pair.first());
            SubLObject cdolist_list_var_$43 = penn_pos_to_classes(pos_tag);
            SubLObject v_class = (SubLObject)linkage.NIL;
            v_class = cdolist_list_var_$43.first();
            while (linkage.NIL != cdolist_list_var_$43) {
                if (linkage.NIL != classes.superclassp(pos_class, v_class)) {
                    return Values.values(v_class, pos_tag);
                }
                if (linkage.NIL != classes.subclassp(pos_class, v_class)) {
                    final SubLObject pos_tags = class_to_penn_poss(pos_class);
                    if (Sequences.length(pos_tags).numE((SubLObject)linkage.ONE_INTEGER)) {
                        return Values.values(pos_class, pos_tags.first());
                    }
                    return Values.values(pos_class, pos_tag);
                }
                else {
                    cdolist_list_var_$43 = cdolist_list_var_$43.rest();
                    v_class = cdolist_list_var_$43.first();
                }
            }
            cdolist_list_var = cdolist_list_var.rest();
            tag_value_pair = cdolist_list_var.first();
        }
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 138460L)
    public static SubLObject auxify_sentence(final SubLObject sentence) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject cdolist_list_var = document.sentence_yield_exhaustive(sentence);
        SubLObject word = (SubLObject)linkage.NIL;
        word = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (linkage.NIL != conses_high.member(document.word_category(word), abstract_lexicon.$verbal_tags$.getGlobalValue(), (SubLObject)linkage.EQL, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != conses_high.member(document.word_string(word), parser.$aux_word_strings$.getDynamicValue(thread), (SubLObject)linkage.EQUAL, (SubLObject)linkage.UNPROVIDED)) {
                document.word_update(word, (SubLObject)linkage.$list1111);
            }
            cdolist_list_var = cdolist_list_var.rest();
            word = cdolist_list_var.first();
        }
        return sentence;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 138737L)
    public static SubLObject search_atmost_n_link_words(final SubLObject v_linkage, final SubLObject word, final SubLObject n) {
        assert linkage.NIL != Types.stringp(word) : word;
        SubLObject link_words = (SubLObject)linkage.NIL;
        SubLObject i;
        SubLObject link_word;
        SubLObject item_var;
        for (i = (SubLObject)linkage.NIL, i = (SubLObject)linkage.ONE_INTEGER; !i.numG(n); i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER)) {
            link_word = methods.funcall_instance_method_with_2_args(v_linkage, (SubLObject)linkage.$sym1089$SEARCH, word, i);
            if (linkage.NIL != link_word) {
                item_var = link_word;
                if (linkage.NIL == conses_high.member(item_var, link_words, Symbols.symbol_function((SubLObject)linkage.EQL), Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                    link_words = (SubLObject)ConsesLow.cons(item_var, link_words);
                }
            }
            else {
                i = n;
            }
        }
        return link_words;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 139201L)
    public static SubLObject link_phrase_phrases_headed_by_string(final SubLObject head_string, final SubLObject link_phrase, SubLObject case_sensitiveP) {
        if (case_sensitiveP == linkage.UNPROVIDED) {
            case_sensitiveP = (SubLObject)linkage.NIL;
        }
        assert linkage.NIL != Types.stringp(head_string) : head_string;
        assert linkage.NIL != link_phrase_p(link_phrase) : link_phrase;
        SubLObject strings = (SubLObject)linkage.NIL;
        final SubLObject test = (linkage.NIL != case_sensitiveP) ? Symbols.symbol_function((SubLObject)linkage.EQUAL) : Symbols.symbol_function((SubLObject)linkage.EQUALP);
        final SubLObject head_string_length = Sequences.length(head_string);
        SubLObject subtree = (SubLObject)linkage.NIL;
        final SubLObject stack = stacks.create_stack();
        stacks.stack_push(link_phrase, stack);
        while (linkage.NIL == stacks.stack_empty_p(stack)) {
            subtree = stacks.stack_pop(stack);
            if (linkage.NIL != link_phrase_p(subtree)) {
                final SubLObject vector_var = instances.get_slot(subtree, (SubLObject)linkage.$sym172$DAUGHTERS);
                final SubLObject backwardP_var = (SubLObject)linkage.NIL;
                SubLObject length;
                SubLObject v_iteration;
                SubLObject element_num;
                SubLObject daughter;
                for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
                    element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
                    daughter = Vectors.aref(vector_var, element_num);
                    stacks.stack_push(daughter, stack);
                }
            }
            if (linkage.NIL != link_phrase_p(subtree)) {
                SubLObject cdolist_list_var = methods.funcall_instance_method_with_0_args(subtree, (SubLObject)linkage.$sym217$GET_HEADS);
                SubLObject head = (SubLObject)linkage.NIL;
                head = cdolist_list_var.first();
                while (linkage.NIL != cdolist_list_var) {
                    final SubLObject phrase_string = methods.funcall_instance_method_with_0_args(subtree, (SubLObject)linkage.$sym95$GET_STRING);
                    final SubLObject phrase_head_string = methods.funcall_instance_method_with_0_args(head, (SubLObject)linkage.$sym95$GET_STRING);
                    if (linkage.NIL != list_utilities.lengthG(phrase_string, head_string_length, (SubLObject)linkage.UNPROVIDED) && linkage.NIL != string_utilities.subwordP(phrase_head_string, head_string, (SubLObject)linkage.NIL, test) && linkage.NIL != string_utilities.subwordP(head_string, phrase_string, (SubLObject)linkage.NIL, test)) {
                        final SubLObject item_var = phrase_string;
                        if (linkage.NIL == conses_high.member(item_var, strings, test, Symbols.symbol_function((SubLObject)linkage.IDENTITY))) {
                            strings = (SubLObject)ConsesLow.cons(item_var, strings);
                        }
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    head = cdolist_list_var.first();
                }
            }
        }
        return strings;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 140068L)
    public static SubLObject xml_to_linkage(final SubLObject xml) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject sexpr = xml_parsing_utilities.xml_tokens_to_sexpr(xml_parsing_utilities.xml_string_tokenize(xml, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED));
        if (linkage.NIL == Errors.$ignore_mustsP$.getDynamicValue(thread) && linkage.NIL == Strings.stringE(xml_parsing_utilities.xml_sexpr_type(sexpr), (SubLObject)linkage.$str1112$linkage, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
            Errors.error((SubLObject)linkage.$str1113$_a_is_not_a_linkage_xml_string, sexpr);
        }
        final SubLObject v_linkage = object.new_class_instance((SubLObject)linkage.$sym368$LINKAGE);
        final SubLObject links_sexpr = xml_parsing_utilities.xml_sexpr_daughter(sexpr, (SubLObject)linkage.$str1114$links);
        final SubLObject tree_sexpr = xml_parsing_utilities.xml_sexpr_daughter(sexpr, (SubLObject)linkage.$str1115$tree);
        final SubLObject tree = xml_sexpr_to_link_tree(tree_sexpr);
        final SubLObject words = link_tree_word_vector(tree);
        final SubLObject v_context = object.new_class_instance((SubLObject)linkage.$sym1000$PARSE_TREE_CONTEXT);
        SubLObject i = (SubLObject)linkage.ZERO_INTEGER;
        SubLObject links = (SubLObject)linkage.NIL;
        final SubLObject vector_var = words;
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject word;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            word = Vectors.aref(vector_var, element_num);
            instances.set_slot(word, (SubLObject)linkage.$sym368$LINKAGE, v_linkage);
            instances.set_slot(word, (SubLObject)linkage.$sym277$ABS_INDEX, i);
            instances.set_slot(word, (SubLObject)linkage.$sym366$REF, methods.funcall_instance_method_with_1_args(v_context, (SubLObject)linkage.$sym430$NEW_VARIABLE, methods.funcall_instance_method_with_0_args(word, (SubLObject)linkage.$sym95$GET_STRING)));
            instances.set_slot(word, (SubLObject)linkage.$sym362$CONTEXT, v_context);
            i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER);
        }
        links = xml_sexpr_to_links(links_sexpr, words);
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym969$LINKS, links);
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym968$WORDS, words);
        instances.set_slot(v_linkage, (SubLObject)linkage.$sym966$TREE, tree);
        process_linkage_modifiers(v_linkage);
        return v_linkage;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 141373L)
    public static SubLObject link_tree_word_vector(final SubLObject tree) {
        final SubLObject left_wall = object.new_class_instance((SubLObject)linkage.$sym957$LEFT_WALL_LINK_WORD);
        final SubLObject right_wall = object.new_class_instance((SubLObject)linkage.$sym960$RIGHT_WALL_LINK_WORD);
        final SubLObject words = methods.funcall_instance_method_with_0_args(tree, (SubLObject)linkage.$sym160$YIELD);
        final SubLObject last = number_utilities.f_1_(Sequences.length(words));
        instances.set_slot(left_wall, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.$str1116$LEFT_WALL);
        instances.set_slot(left_wall, (SubLObject)linkage.$sym103$INDEX, (SubLObject)linkage.ZERO_INTEGER);
        instances.set_slot(right_wall, (SubLObject)linkage.$sym367$STRING, (SubLObject)linkage.$str1117$RIGHT_WALL);
        instances.set_slot(right_wall, (SubLObject)linkage.$sym103$INDEX, last);
        return Functions.apply((SubLObject)linkage.$sym57$VECTOR, (SubLObject)ConsesLow.cons(left_wall, ConsesLow.append(words, (SubLObject)ConsesLow.list(right_wall))));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 141846L)
    public static SubLObject xml_sexpr_to_links(final SubLObject sexpr, final SubLObject words) {
        SubLObject links = (SubLObject)linkage.NIL;
        SubLObject cdolist_list_var = xml_parsing_utilities.xml_sexpr_daughters(sexpr, (SubLObject)linkage.UNPROVIDED);
        SubLObject link_sexpr = (SubLObject)linkage.NIL;
        link_sexpr = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            links = (SubLObject)ConsesLow.cons(xml_sexpr_link_to_link(link_sexpr, words), links);
            cdolist_list_var = cdolist_list_var.rest();
            link_sexpr = cdolist_list_var.first();
        }
        return Functions.apply((SubLObject)linkage.$sym57$VECTOR, Sequences.nreverse(links));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 142087L)
    public static SubLObject xml_sexpr_link_to_link(final SubLObject sexpr, final SubLObject words) {
        final SubLObject name = xml_parsing_utilities.xml_sexpr_attribute_value(sexpr, (SubLObject)linkage.$str1118$name);
        final SubLObject left_word_index = reader.parse_integer(xml_parsing_utilities.xml_sexpr_attribute_value(sexpr, (SubLObject)linkage.$str1119$left), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        final SubLObject right_word_index = reader.parse_integer(xml_parsing_utilities.xml_sexpr_attribute_value(sexpr, (SubLObject)linkage.$str1120$right), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
        final SubLObject left_word = Vectors.aref(words, left_word_index);
        final SubLObject right_word = Vectors.aref(words, right_word_index);
        final SubLObject link = new_link(name);
        _csetf_link_left_word(link, left_word);
        _csetf_link_right_word(link, right_word);
        instances.set_slot(left_word, (SubLObject)linkage.$sym364$RIGHT_LINKS, (SubLObject)ConsesLow.cons(link, instances.get_slot(left_word, (SubLObject)linkage.$sym364$RIGHT_LINKS)));
        instances.set_slot(right_word, (SubLObject)linkage.$sym365$LEFT_LINKS, (SubLObject)ConsesLow.cons(link, instances.get_slot(right_word, (SubLObject)linkage.$sym365$LEFT_LINKS)));
        return link;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 142820L)
    public static SubLObject xml_sexpr_to_link_tree(final SubLObject sexpr) {
        return xml_sexpr_tree_to_link_tree(xml_parsing_utilities.xml_sexpr_daughter(sexpr, (SubLObject)linkage.$str1121$phrase));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 142943L)
    public static SubLObject xml_sexpr_tree_to_link_tree(final SubLObject sexpr) {
        if (linkage.NIL != xml_sexpr_phrase_p(sexpr)) {
            return xml_sexpr_phrase_to_link_tree(sexpr);
        }
        if (linkage.NIL != xml_sexpr_word_p(sexpr)) {
            return xml_sexpr_word_to_link_tree(sexpr);
        }
        Errors.error((SubLObject)linkage.$str1122$_a_is_not_a_valid_xml_sexpr_tree_);
        return (SubLObject)linkage.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 143219L)
    public static SubLObject xml_sexpr_phrase_to_link_tree(final SubLObject sexpr) {
        final SubLObject category = Symbols.make_keyword(xml_parsing_utilities.xml_sexpr_attribute_value(sexpr, (SubLObject)linkage.$str1123$cat));
        final SubLObject v_class = category_to_link_tree_class(category);
        final SubLObject tree = object.new_class_instance(v_class);
        final SubLObject expr_daughters = xml_parsing_utilities.xml_sexpr_daughters(sexpr, (SubLObject)linkage.UNPROVIDED);
        SubLObject daughters0 = (SubLObject)linkage.NIL;
        SubLObject i = (SubLObject)linkage.ZERO_INTEGER;
        instances.set_slot(tree, (SubLObject)linkage.$sym106$POS, category);
        SubLObject cdolist_list_var = expr_daughters;
        SubLObject daughter = (SubLObject)linkage.NIL;
        daughter = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            final SubLObject d = xml_sexpr_tree_to_link_tree(daughter);
            instances.set_slot(d, (SubLObject)linkage.$sym103$INDEX, i);
            instances.set_slot(d, (SubLObject)linkage.$sym104$MOTHER, tree);
            daughters0 = (SubLObject)ConsesLow.cons(d, daughters0);
            i = Numbers.add(i, (SubLObject)linkage.ONE_INTEGER);
            cdolist_list_var = cdolist_list_var.rest();
            daughter = cdolist_list_var.first();
        }
        instances.set_slot(tree, (SubLObject)linkage.$sym172$DAUGHTERS, Functions.apply((SubLObject)linkage.$sym57$VECTOR, Sequences.nreverse(daughters0)));
        return tree;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 143814L)
    public static SubLObject xml_sexpr_word_to_link_tree(final SubLObject sexpr) {
        final SubLObject pos = xml_parsing_utilities.xml_sexpr_attribute_value(sexpr, (SubLObject)linkage.$str1123$cat);
        final SubLObject string = xml_parsing_utilities.xml_sexpr_daughters(sexpr, (SubLObject)linkage.UNPROVIDED).first();
        final SubLObject v_class = Packages.intern(xml_parsing_utilities.xml_sexpr_attribute_value(sexpr, (SubLObject)linkage.$str1124$class), (SubLObject)linkage.$kw1125$CYC);
        final SubLObject word = object.new_class_instance(v_class);
        instances.set_slot(word, (SubLObject)linkage.$sym367$STRING, string);
        instances.set_slot(word, (SubLObject)linkage.$sym106$POS, Symbols.make_keyword(pos));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 144168L)
    public static SubLObject xml_sexpr_phrase_p(final SubLObject sexpr) {
        return Strings.stringE(xml_parsing_utilities.xml_sexpr_type(sexpr), (SubLObject)linkage.$str1121$phrase, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 144267L)
    public static SubLObject xml_sexpr_word_p(final SubLObject sexpr) {
        return Strings.stringE(xml_parsing_utilities.xml_sexpr_type(sexpr), (SubLObject)linkage.$str1126$word, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 144358L)
    public static SubLObject link_constituent_string_to_list(final SubLObject link_constituent_string) {
        assert linkage.NIL != Types.stringp(link_constituent_string) : link_constituent_string;
        SubLObject const_new_string = string_utilities.$empty_string$.getGlobalValue();
        SubLObject cdolist_list_var = string_utilities.split_string(link_constituent_string, (SubLObject)linkage.$list1131);
        SubLObject v_term = (SubLObject)linkage.NIL;
        v_term = cdolist_list_var.first();
        while (linkage.NIL != cdolist_list_var) {
            if (!v_term.equalp(string_utilities.$empty_string$.getGlobalValue())) {
                if (linkage.NIL != Sequences.search((SubLObject)linkage.$str425$_, v_term, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                    v_term = string_utilities.replace_substring(v_term, (SubLObject)linkage.$str425$_, (SubLObject)linkage.$str1127$__);
                }
                else if (linkage.NIL != Sequences.search((SubLObject)linkage.$str268$_, v_term, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                    SubLObject cdolist_list_var_$44 = string_utilities.split_string(v_term, (SubLObject)linkage.$list1130);
                    SubLObject word = (SubLObject)linkage.NIL;
                    word = cdolist_list_var_$44.first();
                    while (linkage.NIL != cdolist_list_var_$44) {
                        if (!word.equalp(string_utilities.$empty_string$.getGlobalValue())) {
                            v_term = string_utilities.replace_substring(v_term, word, Sequences.cconcatenate((SubLObject)linkage.$str1128$__W__, new SubLObject[] { format_nil.format_nil_a_no_copy(word), linkage.$str1129$__ }));
                        }
                        cdolist_list_var_$44 = cdolist_list_var_$44.rest();
                        word = cdolist_list_var_$44.first();
                    }
                }
                else {
                    v_term = Sequences.cconcatenate((SubLObject)linkage.$str1128$__W__, new SubLObject[] { format_nil.format_nil_a_no_copy(v_term), linkage.$str1129$__ });
                }
                const_new_string = Sequences.cconcatenate(format_nil.format_nil_a_no_copy(const_new_string), new SubLObject[] { linkage.$str279$_, format_nil.format_nil_a_no_copy(v_term) });
            }
            cdolist_list_var = cdolist_list_var.rest();
            v_term = cdolist_list_var.first();
        }
        return reader.read_from_string(const_new_string, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 145541L)
    public static SubLObject parse_link_sentences(final SubLObject file) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject error = (SubLObject)linkage.NIL;
        SubLObject sentence_count = (SubLObject)linkage.ZERO_INTEGER;
        SubLObject error_count = (SubLObject)linkage.ZERO_INTEGER;
        SubLObject stream = (SubLObject)linkage.NIL;
        try {
            final SubLObject _prev_bind_0 = stream_macros.$stream_requires_locking$.currentBinding(thread);
            try {
                stream_macros.$stream_requires_locking$.bind((SubLObject)linkage.NIL, thread);
                stream = compatibility.open_text(file, (SubLObject)linkage.$kw1104$INPUT);
            }
            finally {
                stream_macros.$stream_requires_locking$.rebind(_prev_bind_0, thread);
            }
            if (!stream.isStream()) {
                Errors.error((SubLObject)linkage.$str1105$Unable_to_open__S, file);
            }
            final SubLObject infile = stream;
            if (infile.isStream()) {
                SubLObject sent;
                SubLObject _prev_bind_2;
                SubLObject v_linkage;
                SubLObject error_$45;
                SubLObject _prev_bind_0_$46;
                for (sent = (SubLObject)linkage.NIL, sent = file_utilities.cdolines_get_next_line(infile); linkage.NIL != sent; sent = file_utilities.cdolines_get_next_line(infile)) {
                    error = (SubLObject)linkage.NIL;
                    if (linkage.NIL == string_utilities.starts_with(sent, (SubLObject)linkage.$str270$_)) {
                        sentence_count = Numbers.add(sentence_count, (SubLObject)linkage.ONE_INTEGER);
                        try {
                            thread.throwStack.push(subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
                            _prev_bind_2 = Errors.$error_handler$.currentBinding(thread);
                            try {
                                Errors.$error_handler$.bind((SubLObject)linkage.$sym25$CATCH_ERROR_MESSAGE_HANDLER, thread);
                                try {
                                    print_high.princ(sent, (SubLObject)linkage.UNPROVIDED);
                                    streams_high.terpri((SubLObject)linkage.UNPROVIDED);
                                    v_linkage = (SubLObject)linkage.NIL;
                                    error_$45 = (SubLObject)linkage.NIL;
                                    try {
                                        thread.throwStack.push(subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
                                        _prev_bind_0_$46 = Errors.$error_handler$.currentBinding(thread);
                                        try {
                                            Errors.$error_handler$.bind((SubLObject)linkage.$sym25$CATCH_ERROR_MESSAGE_HANDLER, thread);
                                            try {
                                                v_linkage = new_linkage(sent, (SubLObject)ConsesLow.list((SubLObject)linkage.$kw978$LEXICON, object.new_class_instance((SubLObject)linkage.$sym285$CYCLIFIER_LEXICON)));
                                            }
                                            catch (Throwable catch_var) {
                                                Errors.handleThrowable(catch_var, (SubLObject)linkage.NIL);
                                            }
                                        }
                                        finally {
                                            Errors.$error_handler$.rebind(_prev_bind_0_$46, thread);
                                        }
                                    }
                                    catch (Throwable ccatch_env_var) {
                                        error_$45 = Errors.handleThrowable(ccatch_env_var, subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
                                    }
                                    finally {
                                        thread.throwStack.pop();
                                    }
                                    if (linkage.NIL != error_$45) {
                                        parser.ensure_link_server_running();
                                        v_linkage = new_linkage(sent, (SubLObject)ConsesLow.list((SubLObject)linkage.$kw978$LEXICON, object.new_class_instance((SubLObject)linkage.$sym285$CYCLIFIER_LEXICON)));
                                    }
                                    print_high.print(v_linkage, (SubLObject)linkage.UNPROVIDED);
                                }
                                catch (Throwable catch_var2) {
                                    Errors.handleThrowable(catch_var2, (SubLObject)linkage.NIL);
                                }
                            }
                            finally {
                                Errors.$error_handler$.rebind(_prev_bind_2, thread);
                            }
                        }
                        catch (Throwable ccatch_env_var2) {
                            error = Errors.handleThrowable(ccatch_env_var2, subl_macro_promotions.$catch_error_message_target$.getGlobalValue());
                        }
                        finally {
                            thread.throwStack.pop();
                        }
                        if (linkage.NIL != error) {
                            error_count = Numbers.add(error_count, (SubLObject)linkage.ONE_INTEGER);
                            Errors.warn(error);
                            streams_high.terpri((SubLObject)linkage.UNPROVIDED);
                        }
                    }
                }
            }
        }
        finally {
            final SubLObject _prev_bind_3 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
            try {
                Threads.$is_thread_performing_cleanupP$.bind((SubLObject)linkage.T, thread);
                final SubLObject _values = Values.getValuesAsVector();
                if (stream.isStream()) {
                    streams_high.close(stream, (SubLObject)linkage.UNPROVIDED);
                }
                Values.restoreValuesFromVector(_values);
            }
            finally {
                Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_3, thread);
            }
        }
        return Values.values(sentence_count, error_count);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 146101L)
    public static SubLObject test_linkage_with_retokenization(final SubLObject nl_sentence) {
        return new_linkage(nl_sentence, (SubLObject)ConsesLow.list((SubLObject)linkage.$kw978$LEXICON, object.new_class_instance((SubLObject)linkage.$sym285$CYCLIFIER_LEXICON)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 146263L)
    public static SubLObject some_linkage_results(final SubLObject result_linkage, final SubLObject linkageP) {
        return Equality.equal(linkageP, list_utilities.sublisp_boolean(result_linkage));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/linkage.lisp", position = 147038L)
    public static SubLObject links_have_namesP(final SubLObject sentence) {
        final SubLObject v_linkage = new_linkage(sentence, (SubLObject)ConsesLow.list((SubLObject)linkage.$kw978$LEXICON, object.new_class_instance((SubLObject)linkage.$sym285$CYCLIFIER_LEXICON)));
        SubLObject link = (SubLObject)linkage.NIL;
        final SubLObject vector_var = instances.get_slot(v_linkage, (SubLObject)linkage.$sym969$LINKS);
        final SubLObject backwardP_var = (SubLObject)linkage.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject l;
        for (length = Sequences.length(vector_var), v_iteration = (SubLObject)linkage.NIL, v_iteration = (SubLObject)linkage.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)linkage.ONE_INTEGER)) {
            element_num = ((linkage.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)linkage.ONE_INTEGER) : v_iteration);
            l = Vectors.aref(vector_var, element_num);
            if (linkage.NIL != l) {
                link = l;
                if (linkage.NIL != Strings.stringE(link_name(link), string_utilities.$empty_string$.getGlobalValue(), (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED, (SubLObject)linkage.UNPROVIDED)) {
                    return (SubLObject)linkage.NIL;
                }
            }
        }
        return (SubLObject)linkage.T;
    }
    
    public static SubLObject declare_linkage_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_pos_p", "LINK-POS-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_parser_annotational_suffixes", "LINK-PARSER-ANNOTATIONAL-SUFFIXES", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_ping", "LINK-PING", 0, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_parse", "LINK-PARSE", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_lex", "LINK-LEX", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_execute", "LINK-EXECUTE", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "clear_link_execute_int", "CLEAR-LINK-EXECUTE-INT", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "remove_link_execute_int", "REMOVE-LINK-EXECUTE-INT", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_execute_int_internal", "LINK-EXECUTE-INT-INTERNAL", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_execute_int", "LINK-EXECUTE-INT", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_structure_spec_p", "LINK-STRUCTURE-SPEC-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "copy_link_structure_spec", "COPY-LINK-STRUCTURE-SPEC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "clear_link_execute_cached", "CLEAR-LINK-EXECUTE-CACHED", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "remove_link_execute_cached", "REMOVE-LINK-EXECUTE-CACHED", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_execute_cached_internal", "LINK-EXECUTE-CACHED-INTERNAL", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_execute_cached", "LINK-EXECUTE-CACHED", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "write_link_parameters", "WRITE-LINK-PARAMETERS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "interpret_link_response", "INTERPRET-LINK-RESPONSE", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_link_structures", "NEW-LINK-STRUCTURES", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "clean_up_link_word_strings", "CLEAN-UP-LINK-WORD-STRINGS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "post_process_link_words", "POST-PROCESS-LINK-WORDS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "restore_link_words_capitalization", "RESTORE-LINK-WORDS-CAPITALIZATION", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "try_to_restore_link_word_capitalization", "TRY-TO-RESTORE-LINK-WORD-CAPITALIZATION", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_unannotated_length", "LINK-WORD-UNANNOTATED-LENGTH", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_strip_annotational_suffixes", "LINK-WORD-STRIP-ANNOTATIONAL-SUFFIXES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_words_sometimes_downcased_after_word_p", "LINK-WORDS-SOMETIMES-DOWNCASED-AFTER-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "null_link_token_string_p", "NULL-LINK-TOKEN-STRING-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_link_structure", "NEW-LINK-STRUCTURE", 2, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "update_links", "UPDATE-LINKS", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "token_using_lexicon_prefixes", "TOKEN-USING-LEXICON-PREFIXES", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_subtokenP", "LINK-SUBTOKEN?", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_attached_symbolP", "LINK-ATTACHED-SYMBOL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_id_links", "NEW-ID-LINKS", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_words", "LS-WORDS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_links", "LS-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_diagram", "LS-DIAGRAM", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_tree", "LS-TREE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_number_of_words", "LS-NUMBER-OF-WORDS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_number_of_links", "LS-NUMBER-OF-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_link", "LS-LINK", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_name_of_link", "LS-NAME-OF-LINK", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_lword_index_of_link", "LS-LWORD-INDEX-OF-LINK", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_rword_index_of_link", "LS-RWORD-INDEX-OF-LINK", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ls_word_of_linkage", "LS-WORD-OF-LINKAGE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "reinitialize_linkage", "REINITIALIZE-LINKAGE", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "initialize_linkage", "INITIALIZE-LINKAGE", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "finalize_linkage", "FINALIZE-LINKAGE", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "ensure_linkage_initialized", "ENSURE-LINKAGE-INITIALIZED", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_patterns_initializedP", "LINK-TREE-PATTERNS-INITIALIZED?", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "initialize_link_regex_patterns", "INITIALIZE-LINK-REGEX-PATTERNS", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "finalize_link_regex_patterns", "FINALIZE-LINK-REGEX-PATTERNS", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_regex_patterns_initializedP", "LINK-REGEX-PATTERNS-INITIALIZED?", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "initialize_pos_evidence_tables", "INITIALIZE-POS-EVIDENCE-TABLES", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "finalize_pos_evidence_tables", "FINALIZE-POS-EVIDENCE-TABLES", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "pos_evidence_tables_initializedP", "POS-EVIDENCE-TABLES-INITIALIZED?", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "alist_to_hashtable", "ALIST-TO-HASHTABLE", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "alist_to_hashtable_reverse", "ALIST-TO-HASHTABLE-REVERSE", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_print_function_trampoline", "LINK-PRINT-FUNCTION-TRAMPOLINE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_p", "LINK-P", 1, 0, false);
        new $link_p$UnaryFunction();
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_name", "LINK-NAME", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_left_word", "LINK-LEFT-WORD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_right_word", "LINK-RIGHT-WORD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "_csetf_link_name", "_CSETF-LINK-NAME", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "_csetf_link_left_word", "_CSETF-LINK-LEFT-WORD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "_csetf_link_right_word", "_CSETF-LINK-RIGHT-WORD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "make_link", "MAKE-LINK", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "visit_defstruct_link", "VISIT-DEFSTRUCT-LINK", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "visit_defstruct_object_link_method", "VISIT-DEFSTRUCT-OBJECT-LINK-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "print_linkage_link", "PRINT-LINKAGE-LINK", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_link", "NEW-LINK", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_contains_wall_link_wordP", "LINK-CONTAINS-WALL-LINK-WORD?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_contains_wall_word_linkage_wordP", "LINK-CONTAINS-WALL-WORD-LINKAGE-WORD?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_tree_modifiers", "GET-LINK-TREE-MODIFIERS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_tree_modifiers", "SET-LINK-TREE-MODIFIERS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_tree_index", "GET-LINK-TREE-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_tree_index", "SET-LINK-TREE-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_tree_mother", "GET-LINK-TREE-MOTHER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_tree_mother", "SET-LINK-TREE-MOTHER", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_tree_heads", "GET-LINK-TREE-HEADS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_tree_heads", "SET-LINK-TREE-HEADS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_tree_pos", "GET-LINK-TREE-POS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_tree_pos", "SET-LINK-TREE-POS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_link_tree_class", "SUBLOOP-RESERVED-INITIALIZE-LINK-TREE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_link_tree_instance", "SUBLOOP-RESERVED-INITIALIZE-LINK-TREE-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_p", "LINK-TREE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_modifiers_method", "LINK-TREE-GET-MODIFIERS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_modifieds_method", "LINK-TREE-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_print_method", "LINK-TREE-PRINT-METHOD", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_xml_method", "LINK-TREE-XML-METHOD", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_category_method", "LINK-TREE-GET-CATEGORY-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_root_method", "LINK-TREE-GET-ROOT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_root_p_method", "LINK-TREE-ROOT-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_mother_method", "LINK-TREE-GET-MOTHER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_refs_method", "LINK-TREE-GET-REFS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_index_method", "LINK-TREE-GET-INDEX-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_sister_method", "LINK-TREE-GET-SISTER-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_yield_method", "LINK-TREE-YIELD-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_get_ancestors_method", "LINK-TREE-GET-ANCESTORS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_depth_method", "LINK-TREE-DEPTH-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_phrase_daughters", "GET-LINK-PHRASE-DAUGHTERS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_phrase_daughters", "SET-LINK-PHRASE-DAUGHTERS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_link_phrase_class", "SUBLOOP-RESERVED-INITIALIZE-LINK-PHRASE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_link_phrase_instance", "SUBLOOP-RESERVED-INITIALIZE-LINK-PHRASE-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_p", "LINK-PHRASE-P", 1, 0, false);
        SubLFiles.declareMacro("com.cyc.cycjava.cycl.linkage", "do_link_tree_subtrees", "DO-LINK-TREE-SUBTREES");
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_conjunction_method", "LINK-PHRASE-GET-CONJUNCTION-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_string_method", "LINK-PHRASE-GET-STRING-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_daughter_count_method", "LINK-PHRASE-DAUGHTER-COUNT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_daughter_method", "LINK-PHRASE-GET-DAUGHTER-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_head_daughters_method", "LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_head_daughter_method", "LINK-PHRASE-GET-HEAD-DAUGHTER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_semantic_head_daughters_method", "LINK-PHRASE-GET-SEMANTIC-HEAD-DAUGHTERS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_cyclify_int_method", "LINK-PHRASE-CYCLIFY-INT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_yield_method", "LINK-PHRASE-YIELD-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_heads_method", "LINK-PHRASE-GET-HEADS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_head_method", "LINK-PHRASE-GET-HEAD-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_semantic_heads_method", "LINK-PHRASE-GET-SEMANTIC-HEADS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_preterminal_p_method", "LINK-PHRASE-PRETERMINAL-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_idiom_p_method", "LINK-PHRASE-IDIOM-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_coordinate_phrase_p_method", "LINK-PHRASE-COORDINATE-PHRASE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_get_linkage_method", "LINK-PHRASE-GET-LINKAGE-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_find_method", "LINK-PHRASE-FIND-METHOD", 2, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_find_first_method", "LINK-PHRASE-FIND-FIRST-METHOD", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_find_last_method", "LINK-PHRASE-FIND-LAST-METHOD", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "pprint_link_phrase", "PPRINT-LINK-PHRASE", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "pprint_link_word", "PPRINT-LINK-WORD", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "pprint_link_tree", "PPRINT-LINK-TREE", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_xml", "LINK-TREE-XML", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_xml", "LINK-WORD-XML", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_xml", "LINK-XML", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_xml", "LINK-PHRASE-XML", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_expression_p", "LINK-PHRASE-EXPRESSION-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_expression_p", "LINK-WORD-EXPRESSION-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_expression_category", "LINK-PHRASE-EXPRESSION-CATEGORY", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_expression_daughters", "LINK-PHRASE-EXPRESSION-DAUGHTERS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_counter", "NEW-COUNTER", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "inc_counter", "INC-COUNTER", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "counter_value", "COUNTER-VALUE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "retokenize_link_tree", "RETOKENIZE-LINK-TREE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "retokenize_link_phrase", "RETOKENIZE-LINK-PHRASE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "vp_verb_in_idiomP", "VP-VERB-IN-IDIOM?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "retokenize_preterminal", "RETOKENIZE-PRETERMINAL", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "next_subtoken", "NEXT-SUBTOKEN", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "retokenize_idiom", "RETOKENIZE-IDIOM", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "retokenize_vp_with_verb_idiom", "RETOKENIZE-VP-WITH-VERB-IDIOM", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "merge_subtokens", "MERGE-SUBTOKENS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "concatenate_word_strings", "CONCATENATE-WORD-STRINGS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_mw_lexeme_tag", "GET-MW-LEXEME-TAG", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_left_word_equal", "LINK-LEFT-WORD-EQUAL", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_right_word_equal", "LINK-RIGHT-WORD-EQUAL", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_mw_lexeme_left_links", "GET-MW-LEXEME-LEFT-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_mw_lexeme_right_links", "GET-MW-LEXEME-RIGHT-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_right_links_ending", "GET-RIGHT-LINKS-ENDING", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_left_links_ending", "GET-LEFT-LINKS-ENDING", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_link_tree", "NEW-LINK-TREE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_link_tree_int", "NEW-LINK-TREE-INT", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_expression_to_tree", "LINK-PHRASE-EXPRESSION-TO-TREE", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_expression_to_tree", "LINK-WORD-EXPRESSION-TO-TREE", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "category_to_link_tree_class", "CATEGORY-TO-LINK-TREE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_nearest_common_ancestor", "GET-NEAREST-COMMON-ANCESTOR", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_common_ancestors", "GET-COMMON-ANCESTORS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_phrase", "GET-LINK-PHRASE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_phrases", "GET-LINK-PHRASES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_tree_p", "VERBAL-LINK-TREE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_cyclify_int_vp_coordination_method", "VERBAL-LINK-PHRASE-CYCLIFY-INT-VP-COORDINATION-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_cyclify_int_vp_method", "VERBAL-LINK-PHRASE-CYCLIFY-INT-VP-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_cyclify_int_method", "VERBAL-LINK-PHRASE-CYCLIFY-INT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_vp_coordinate_phrase_p_method", "VERBAL-LINK-PHRASE-VP-COORDINATE-PHRASE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_verbal_link_phrase_class", "SUBLOOP-RESERVED-INITIALIZE-VERBAL-LINK-PHRASE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_verbal_link_phrase_instance", "SUBLOOP-RESERVED-INITIALIZE-VERBAL-LINK-PHRASE-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_p", "VERBAL-LINK-PHRASE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_get_subject_method", "VERBAL-LINK-PHRASE-GET-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_get_semantic_subject_method", "VERBAL-LINK-PHRASE-GET-SEMANTIC-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_get_verbal_complement_method", "VERBAL-LINK-PHRASE-GET-VERBAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verbal_link_phrase_get_head_daughters_method", "VERBAL-LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_sentential_link_phrase_class", "SUBLOOP-RESERVED-INITIALIZE-SENTENTIAL-LINK-PHRASE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_sentential_link_phrase_instance", "SUBLOOP-RESERVED-INITIALIZE-SENTENTIAL-LINK-PHRASE-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "sentential_link_phrase_p", "SENTENTIAL-LINK-PHRASE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "prepositional_link_tree_p", "PREPOSITIONAL-LINK-TREE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_prepositional_link_phrase_class", "SUBLOOP-RESERVED-INITIALIZE-PREPOSITIONAL-LINK-PHRASE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_prepositional_link_phrase_instance", "SUBLOOP-RESERVED-INITIALIZE-PREPOSITIONAL-LINK-PHRASE-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "prepositional_link_phrase_p", "PREPOSITIONAL-LINK-PHRASE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "prepositional_link_phrase_get_head_daughters_method", "PREPOSITIONAL-LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "prepositional_link_phrase_get_oblique_object_method", "PREPOSITIONAL-LINK-PHRASE-GET-OBLIQUE-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "nominal_link_tree_p", "NOMINAL-LINK-TREE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_nominal_link_phrase_class", "SUBLOOP-RESERVED-INITIALIZE-NOMINAL-LINK-PHRASE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_nominal_link_phrase_instance", "SUBLOOP-RESERVED-INITIALIZE-NOMINAL-LINK-PHRASE-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "nominal_link_phrase_p", "NOMINAL-LINK-PHRASE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "nominal_link_phrase_get_head_daughters_method", "NOMINAL-LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_context", "GET-LINK-WORD-CONTEXT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_context", "SET-LINK-WORD-CONTEXT", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_lexes", "GET-LINK-WORD-LEXES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_lexes", "SET-LINK-WORD-LEXES", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_right_links", "GET-LINK-WORD-RIGHT-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_right_links", "SET-LINK-WORD-RIGHT-LINKS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_left_links", "GET-LINK-WORD-LEFT-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_left_links", "SET-LINK-WORD-LEFT-LINKS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_abs_index", "GET-LINK-WORD-ABS-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_abs_index", "SET-LINK-WORD-ABS-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_ref", "GET-LINK-WORD-REF", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_ref", "SET-LINK-WORD-REF", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_string", "GET-LINK-WORD-STRING", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_string", "SET-LINK-WORD-STRING", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_linkage", "GET-LINK-WORD-LINKAGE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_link_word_linkage", "SET-LINK-WORD-LINKAGE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_keyword_renamings_method", "LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_modified_dependent_meaning_p_method", "LINK-WORD-MODIFIED-DEPENDENT-MEANING-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_tree_keyword_eq_classes_method", "LINK-WORD-TREE-KEYWORD-EQ-CLASSES-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_frame_filter_lexes_method", "LINK-WORD-FRAME-FILTER-LEXES-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_pp_comp_filter_lexes_method", "LINK-WORD-PP-COMP-FILTER-LEXES-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_pos_filter_lexes_method", "LINK-WORD-POS-FILTER-LEXES-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_cyclify_nucleus_method", "LINK-WORD-CYCLIFY-NUCLEUS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_cyclify_int_method", "LINK-WORD-CYCLIFY-INT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_oblique_object_method", "LINK-WORD-GET-OBLIQUE-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_pp_complement_method", "LINK-WORD-GET-PP-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_partition_semantic_complements_method", "LINK-WORD-PARTITION-SEMANTIC-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_semantic_complements_method", "LINK-WORD-GET-SEMANTIC-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_p", "LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_print_method", "LINK-WORD-PRINT-METHOD", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "clear_split_link_word", "CLEAR-SPLIT-LINK-WORD", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "remove_split_link_word", "REMOVE-SPLIT-LINK-WORD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "split_link_word_internal", "SPLIT-LINK-WORD-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "split_link_word", "SPLIT-LINK-WORD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "pos_tagged_link_word_p", "POS-TAGGED-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "create_link_word", "CREATE-LINK-WORD", 8, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_link_word", "NEW-LINK-WORD", 7, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_string_method", "LINK-WORD-GET-STRING-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_pos_method", "LINK-WORD-GET-POS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_abs_index_method", "LINK-WORD-GET-ABS-INDEX-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_refs_method", "LINK-WORD-GET-REFS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_linkage_method", "LINK-WORD-GET-LINKAGE-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_context_method", "LINK-WORD-GET-CONTEXT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_head_method", "LINK-WORD-GET-HEAD-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_heads_method", "LINK-WORD-GET-HEADS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_semantic_heads_method", "LINK-WORD-GET-SEMANTIC-HEADS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_complements_method", "LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_ranked_lexes_method", "LINK-WORD-GET-RANKED-LEXES-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_lexes_method", "LINK-WORD-GET-LEXES-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_pps_method", "LINK-WORD-GET-PPS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_after", "LINK-WORD-AFTER", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_lexify_method", "LINK-WORD-LEXIFY-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_left_links_method", "LINK-WORD-GET-LEFT-LINKS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_right_links_method", "LINK-WORD-GET-RIGHT-LINKS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_links_method", "LINK-WORD-GET-LINKS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_directly_related_method", "LINK-WORD-GET-DIRECTLY-RELATED-METHOD", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_get_related_method", "LINK-WORD-GET-RELATED-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_keyword_renamings_method", "VERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_partition_semantic_complements_method", "VERB-LINK-WORD-PARTITION-SEMANTIC-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_verb_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-VERB-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_verb_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-VERB-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_p", "VERB-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_subject_method", "VERB-LINK-WORD-GET-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_semantic_subject_method", "VERB-LINK-WORD-GET-SEMANTIC-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_objects_method", "VERB-LINK-WORD-GET-OBJECTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_semantic_direct_object_method", "VERB-LINK-WORD-GET-SEMANTIC-DIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_semantic_indirect_object_method", "VERB-LINK-WORD-GET-SEMANTIC-INDIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_semantic_objects_method", "VERB-LINK-WORD-GET-SEMANTIC-OBJECTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_verbal_complement_method", "VERB-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_adjectival_complement_method", "VERB-LINK-WORD-GET-ADJECTIVAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_pps_method", "VERB-LINK-WORD-GET-PPS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_get_infinitive_marker_method", "VERB-LINK-WORD-GET-INFINITIVE-MARKER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_infinitive_p_method", "VERB-LINK-WORD-INFINITIVE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "verb_link_word_base_p_method", "VERB-LINK-WORD-BASE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_controller_method", "MAIN-VERB-LINK-WORD-GET-CONTROLLER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_control_verb_method", "MAIN-VERB-LINK-WORD-GET-CONTROL-VERB-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_control_verb_p_method", "MAIN-VERB-LINK-WORD-CONTROL-VERB-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_object_controller_p_method", "MAIN-VERB-LINK-WORD-OBJECT-CONTROLLER-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_subject_controller_p_method", "MAIN-VERB-LINK-WORD-SUBJECT-CONTROLLER-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_matrix_clause_method", "MAIN-VERB-LINK-WORD-GET-MATRIX-CLAUSE-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_partition_semantic_complements_method", "MAIN-VERB-LINK-WORD-PARTITION-SEMANTIC-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_particle_filter_lexes_method", "MAIN-VERB-LINK-WORD-PARTICLE-FILTER-LEXES-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_keyword_renamings_method", "MAIN-VERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_cyclify_int_method", "MAIN-VERB-LINK-WORD-CYCLIFY-INT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_main_verb_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-MAIN-VERB-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_main_verb_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-MAIN-VERB-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_p", "MAIN-VERB-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_passive_p_method", "MAIN-VERB-LINK-WORD-PASSIVE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_subject_method", "MAIN-VERB-LINK-WORD-GET-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_semantic_subject_method", "MAIN-VERB-LINK-WORD-GET-SEMANTIC-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_direct_object_method", "MAIN-VERB-LINK-WORD-GET-DIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_semantic_direct_object_method", "MAIN-VERB-LINK-WORD-GET-SEMANTIC-DIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_indirect_object_method", "MAIN-VERB-LINK-WORD-GET-INDIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_semantic_indirect_object_method", "MAIN-VERB-LINK-WORD-GET-SEMANTIC-INDIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_verbal_complement_method", "MAIN-VERB-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_complements_method", "MAIN-VERB-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_aux_verb_method", "MAIN-VERB-LINK-WORD-GET-AUX-VERB-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_particle_method", "MAIN-VERB-LINK-WORD-GET-PARTICLE-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "main_verb_link_word_get_modifieds_method", "MAIN-VERB-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_copula_p_method", "AUX-VERB-LINK-WORD-COPULA-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_keyword_renamings_method", "AUX-VERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_semantic_heads_method", "AUX-VERB-LINK-WORD-GET-SEMANTIC-HEADS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_tense_method", "AUX-VERB-LINK-WORD-GET-TENSE-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_semantic_complements_method", "AUX-VERB-LINK-WORD-GET-SEMANTIC-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_complements_method", "AUX-VERB-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_aux_verb_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-AUX-VERB-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_aux_verb_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-AUX-VERB-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_p", "AUX-VERB-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_subject_method", "AUX-VERB-LINK-WORD-GET-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_verbal_complement_method", "AUX-VERB-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_adjectival_complement_method", "AUX-VERB-LINK-WORD-GET-ADJECTIVAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_adverbial_complement_method", "AUX-VERB-LINK-WORD-GET-ADVERBIAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_prepositional_complement_method", "AUX-VERB-LINK-WORD-GET-PREPOSITIONAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_equality_p_method", "AUX-VERB-LINK-WORD-EQUALITY-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_passive_p_method", "AUX-VERB-LINK-WORD-PASSIVE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_semantic_subject_method", "AUX-VERB-LINK-WORD-GET-SEMANTIC-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_direct_object_method", "AUX-VERB-LINK-WORD-GET-DIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_semantic_direct_object_method", "AUX-VERB-LINK-WORD-GET-SEMANTIC-DIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_indirect_object_method", "AUX-VERB-LINK-WORD-GET-INDIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_semantic_indirect_object_method", "AUX-VERB-LINK-WORD-GET-SEMANTIC-INDIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "aux_verb_link_word_get_oblique_object_method", "AUX-VERB-LINK-WORD-GET-OBLIQUE-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_modal_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-MODAL-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_modal_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-MODAL-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "modal_link_word_p", "MODAL-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_participle_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PARTICIPLE-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_participle_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PARTICIPLE-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "participle_link_word_p", "PARTICIPLE-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_definite_description_p_method", "NOUN-LINK-WORD-DEFINITE-DESCRIPTION-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_cyclify_nucleus_method", "NOUN-LINK-WORD-CYCLIFY-NUCLEUS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_cyclify_int_method", "NOUN-LINK-WORD-CYCLIFY-INT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_keyword_renamings_method", "NOUN-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_relational_noun_p_method", "NOUN-LINK-WORD-RELATIONAL-NOUN-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_quantifier_method", "NOUN-LINK-WORD-GET-QUANTIFIER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_noun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-NOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_noun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-NOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_p", "NOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_complements_method", "NOUN-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_modifieds_method", "NOUN-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_determiner_method", "NOUN-LINK-WORD-GET-DETERMINER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_cardinal_method", "NOUN-LINK-WORD-GET-CARDINAL-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_overt_quantifier_method", "NOUN-LINK-WORD-GET-OVERT-QUANTIFIER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_possessor_method", "NOUN-LINK-WORD-GET-POSSESSOR-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_specifier_method", "NOUN-LINK-WORD-GET-SPECIFIER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_pps_method", "NOUN-LINK-WORD-GET-PPS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_get_existential_null_determiner_method", "NOUN-LINK-WORD-GET-EXISTENTIAL-NULL-DETERMINER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_singular_p_method", "NOUN-LINK-WORD-SINGULAR-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_plural_p_method", "NOUN-LINK-WORD-PLURAL-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "noun_link_word_appositive_p_method", "NOUN-LINK-WORD-APPOSITIVE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_common_noun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-COMMON-NOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_common_noun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-COMMON-NOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "common_noun_link_word_p", "COMMON-NOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "proper_noun_link_word_get_quantifier_method", "PROPER-NOUN-LINK-WORD-GET-QUANTIFIER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_proper_noun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PROPER-NOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_proper_noun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PROPER-NOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "proper_noun_link_word_p", "PROPER-NOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_gerund_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-GERUND-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_gerund_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-GERUND-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "gerund_link_word_p", "GERUND-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_pronoun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PRONOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_pronoun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PRONOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "pronoun_link_word_p", "PRONOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_w_pronoun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-W-PRONOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_w_pronoun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-W-PRONOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_pronoun_link_word_p", "W-PRONOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_pronoun_link_word_get_refs_method", "W-PRONOUN-LINK-WORD-GET-REFS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_pronoun_link_word_get_antecedent_method", "W-PRONOUN-LINK-WORD-GET-ANTECEDENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_pronoun_link_word_appositive_p_method", "W-PRONOUN-LINK-WORD-APPOSITIVE-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_pronoun_link_word_get_quantifier_method", "W-PRONOUN-LINK-WORD-GET-QUANTIFIER-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_pronoun_link_word_get_modifieds_method", "W-PRONOUN-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_rel_pronoun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-REL-PRONOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_rel_pronoun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-REL-PRONOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "rel_pronoun_link_word_p", "REL-PRONOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_personal_pronoun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PERSONAL-PRONOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_personal_pronoun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PERSONAL-PRONOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "personal_pronoun_link_word_p", "PERSONAL-PRONOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adjective_link_word_get_keyword_renamings_method", "ADJECTIVE-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adjective_link_word_get_complements_method", "ADJECTIVE-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_adjective_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-ADJECTIVE-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_adjective_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-ADJECTIVE-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adjective_link_word_p", "ADJECTIVE-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adjective_link_word_get_modifieds_method", "ADJECTIVE-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adjective_link_word_get_pps_method", "ADJECTIVE-LINK-WORD-GET-PPS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adverb_link_word_get_keyword_renamings_method", "ADVERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_adverb_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-ADVERB-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_adverb_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-ADVERB-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adverb_link_word_p", "ADVERB-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adverb_link_word_get_modifieds_method", "ADVERB-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "adverb_link_word_get_complements_method", "ADVERB-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_w_adverb_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-W-ADVERB-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_w_adverb_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-W-ADVERB-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_adverb_link_word_p", "W-ADVERB-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_adverb_link_word_get_modifieds_method", "W-ADVERB-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "preposition_link_word_get_keyword_renamings_method", "PREPOSITION-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_preposition_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PREPOSITION-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_preposition_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PREPOSITION-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "preposition_link_word_p", "PREPOSITION-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "preposition_link_word_get_oblique_object_method", "PREPOSITION-LINK-WORD-GET-OBLIQUE-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "preposition_link_word_get_verbal_complement_method", "PREPOSITION-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "preposition_link_word_get_modifieds_method", "PREPOSITION-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "preposition_link_word_get_complements_method", "PREPOSITION-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "quantifier_link_word_get_keyword_renamings_method", "QUANTIFIER-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_quantifier_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-QUANTIFIER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_quantifier_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-QUANTIFIER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "quantifier_link_word_p", "QUANTIFIER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "quantifier_link_word_get_quantified_method", "QUANTIFIER-LINK-WORD-GET-QUANTIFIED-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_determiner_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-DETERMINER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_determiner_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-DETERMINER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "determiner_link_word_p", "DETERMINER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_definite_determiner_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-DEFINITE-DETERMINER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_definite_determiner_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-DEFINITE-DETERMINER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "definite_determiner_link_word_p", "DEFINITE-DETERMINER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_w_determiner_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-W-DETERMINER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_w_determiner_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-W-DETERMINER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "w_determiner_link_word_p", "W-DETERMINER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_predeterminer_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PREDETERMINER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_predeterminer_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PREDETERMINER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "predeterminer_link_word_p", "PREDETERMINER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_possessive_pronoun_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-POSSESSIVE-PRONOUN-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_possessive_pronoun_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-POSSESSIVE-PRONOUN-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "possessive_pronoun_link_word_p", "POSSESSIVE-PRONOUN-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_cardinal_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-CARDINAL-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_cardinal_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-CARDINAL-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "cardinal_link_word_p", "CARDINAL-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_conjunction_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-CONJUNCTION-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_conjunction_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-CONJUNCTION-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "conjunction_link_word_p", "CONJUNCTION-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "conjunction_link_word_get_complements_method", "CONJUNCTION-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_existential_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-EXISTENTIAL-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_existential_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-EXISTENTIAL-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "existential_link_word_p", "EXISTENTIAL-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_comparator_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-COMPARATOR-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_comparator_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-COMPARATOR-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "comparator_link_word_p", "COMPARATOR-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_inf_marker_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-INF-MARKER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_inf_marker_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-INF-MARKER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "inf_marker_link_word_p", "INF-MARKER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_particle_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PARTICLE-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_particle_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PARTICLE-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "particle_link_word_p", "PARTICLE-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_punctuation_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-PUNCTUATION-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_punctuation_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-PUNCTUATION-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "punctuation_link_word_p", "PUNCTUATION-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "poss_marker_link_word_get_keyword_renamings_method", "POSS-MARKER-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_poss_marker_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-POSS-MARKER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_poss_marker_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-POSS-MARKER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "poss_marker_link_word_p", "POSS-MARKER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "poss_marker_link_word_get_possessor_method", "POSS-MARKER-LINK-WORD-GET-POSSESSOR-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "poss_marker_link_word_get_possessed_method", "POSS-MARKER-LINK-WORD-GET-POSSESSED-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "poss_marker_link_word_get_complements_method", "POSS-MARKER-LINK-WORD-GET-COMPLEMENTS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "poss_marker_link_word_get_modifieds_method", "POSS-MARKER-LINK-WORD-GET-MODIFIEDS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_complementizer_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-COMPLEMENTIZER-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_complementizer_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-COMPLEMENTIZER-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "complementizer_link_word_p", "COMPLEMENTIZER-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_wall_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-WALL-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_wall_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-WALL-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "wall_link_word_p", "WALL-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_left_wall_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-LEFT-WALL-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_left_wall_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-LEFT-WALL-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "left_wall_link_word_p", "LEFT-WALL-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_right_wall_link_word_class", "SUBLOOP-RESERVED-INITIALIZE-RIGHT-WALL-LINK-WORD-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_right_wall_link_word_instance", "SUBLOOP-RESERVED-INITIALIZE-RIGHT-WALL-LINK-WORD-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "right_wall_link_word_p", "RIGHT-WALL-LINK-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_linkage_tree_string", "GET-LINKAGE-TREE-STRING", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_linkage_tree_string", "SET-LINKAGE-TREE-STRING", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_linkage_tree", "GET-LINKAGE-TREE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_linkage_tree", "SET-LINKAGE-TREE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_linkage_diagram", "GET-LINKAGE-DIAGRAM", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_linkage_diagram", "SET-LINKAGE-DIAGRAM", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_linkage_words", "GET-LINKAGE-WORDS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_linkage_words", "SET-LINKAGE-WORDS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_linkage_links", "GET-LINKAGE-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "set_linkage_links", "SET-LINKAGE-LINKS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_cyclify_method", "LINKAGE-CYCLIFY-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_cyclifier_method", "LINKAGE-GET-CYCLIFIER-METHOD", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_linkage_class", "SUBLOOP-RESERVED-INITIALIZE-LINKAGE-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "subloop_reserved_initialize_linkage_instance", "SUBLOOP-RESERVED-INITIALIZE-LINKAGE-INSTANCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_p", "LINKAGE-P", 1, 0, false);
        SubLFiles.declareMacro("com.cyc.cycjava.cycl.linkage", "do_linkage_links", "DO-LINKAGE-LINKS");
        SubLFiles.declareMacro("com.cyc.cycjava.cycl.linkage", "do_linkage_words", "DO-LINKAGE-WORDS");
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "words_to_sentence", "WORDS-TO-SENTENCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_linkage", "NEW-LINKAGE", 1, 1, false);
        SubLFiles.declareMacro("com.cyc.cycjava.cycl.linkage", "set_new_linkage", "SET-NEW-LINKAGE");
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_linkages", "NEW-LINKAGES", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "new_linkage_from_link_structure", "NEW-LINKAGE-FROM-LINK-STRUCTURE", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "retag_linkage_aux_verbs", "RETAG-LINKAGE-AUX-VERBS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "process_linkage_modifiers", "PROCESS-LINKAGE-MODIFIERS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_yield_method", "LINKAGE-YIELD-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_print_method", "LINKAGE-PRINT-METHOD", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_xml_method", "LINKAGE-XML-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_string", "LINK-TREE-STRING", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_string", "LINK-PHRASE-STRING", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_word_string", "LINK-WORD-STRING", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "links_xml", "LINKS-XML", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "diagram_xml", "DIAGRAM-XML", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "tree_string_xml", "TREE-STRING-XML", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_print_diagram_method", "LINKAGE-PRINT-DIAGRAM-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_length_method", "LINKAGE-LENGTH-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_tree_method", "LINKAGE-GET-TREE-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_tree_string_method", "LINKAGE-GET-TREE-STRING-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_daughter_method", "LINKAGE-GET-DAUGHTER-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_word_method", "LINKAGE-GET-WORD-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_heads_method", "LINKAGE-GET-HEADS-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_head_method", "LINKAGE-GET-HEAD-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_subject_method", "LINKAGE-GET-SUBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_direct_object_method", "LINKAGE-GET-DIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_get_indirect_object_method", "LINKAGE-GET-INDIRECT-OBJECT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_cyclify_int_method", "LINKAGE-CYCLIFY-INT-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_lexify_method", "LINKAGE-LEXIFY-METHOD", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_cyclifiable_question_p_method", "LINKAGE-CYCLIFIABLE-QUESTION-P-METHOD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "linkage_search_method", "LINKAGE-SEARCH-METHOD", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_pattern", "GET-LINK-PATTERN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "links_to_classes", "LINKS-TO-CLASSES", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_to_classes", "LINK-TO-CLASSES", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "split_link", "SPLIT-LINK", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "strip_link_modifiers", "STRIP-LINK-MODIFIERS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "get_link_word_class", "GET-LINK-WORD-CLASS", 5, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_pos_to_class", "LINK-POS-TO-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "penn_pos_to_classes", "PENN-POS-TO-CLASSES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "word_to_class", "WORD-TO-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "class_to_penn_poss", "CLASS-TO-PENN-POSS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "most_specific_class", "MOST-SPECIFIC-CLASS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "vector_of_pos_tags", "VECTOR-OF-POS-TAGS", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "initialize_pos_tags", "INITIALIZE-POS-TAGS", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "strengthen_pos_class", "STRENGTHEN-POS-CLASS", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "statistical_pos_tag", "STATISTICAL-POS-TAG", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "auxify_sentence", "AUXIFY-SENTENCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "search_atmost_n_link_words", "SEARCH-ATMOST-N-LINK-WORDS", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_phrase_phrases_headed_by_string", "LINK-PHRASE-PHRASES-HEADED-BY-STRING", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_to_linkage", "XML-TO-LINKAGE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_tree_word_vector", "LINK-TREE-WORD-VECTOR", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_to_links", "XML-SEXPR-TO-LINKS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_link_to_link", "XML-SEXPR-LINK-TO-LINK", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_to_link_tree", "XML-SEXPR-TO-LINK-TREE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_tree_to_link_tree", "XML-SEXPR-TREE-TO-LINK-TREE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_phrase_to_link_tree", "XML-SEXPR-PHRASE-TO-LINK-TREE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_word_to_link_tree", "XML-SEXPR-WORD-TO-LINK-TREE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_phrase_p", "XML-SEXPR-PHRASE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "xml_sexpr_word_p", "XML-SEXPR-WORD-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "link_constituent_string_to_list", "LINK-CONSTITUENT-STRING-TO-LIST", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "parse_link_sentences", "PARSE-LINK-SENTENCES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "test_linkage_with_retokenization", "TEST-LINKAGE-WITH-RETOKENIZATION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "some_linkage_results", "SOME-LINKAGE-RESULTS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.linkage", "links_have_namesP", "LINKS-HAVE-NAMES?", 1, 0, false);
        return (SubLObject)linkage.NIL;
    }
    
    public static SubLObject init_linkage_file() {
        linkage.$link_parser$ = SubLFiles.defparameter("*LINK-PARSER*", red_infrastructure_macros.red_def_helper((SubLObject)(linkage.$list0.isSymbol() ? Symbols.symbol_value((SubLObject)linkage.$list0) : linkage.$list0), (SubLObject)linkage.$sym1$_LINK_PARSER_, (SubLObject)(linkage.$str2$linkparser_cyc_com.isSymbol() ? Symbols.symbol_value((SubLObject)linkage.$str2$linkparser_cyc_com) : linkage.$str2$linkparser_cyc_com), (SubLObject)linkage.$kw3$PARAMETER, (SubLObject)linkage.UNPROVIDED));
        linkage.$link_port$ = SubLFiles.defparameter("*LINK-PORT*", red_infrastructure_macros.red_def_helper((SubLObject)(linkage.$list4.isSymbol() ? Symbols.symbol_value((SubLObject)linkage.$list4) : linkage.$list4), (SubLObject)linkage.$sym5$_LINK_PORT_, (SubLObject)(linkage.$int6$4567.isSymbol() ? Symbols.symbol_value((SubLObject)linkage.$int6$4567) : linkage.$int6$4567), (SubLObject)linkage.$kw3$PARAMETER, (SubLObject)linkage.UNPROVIDED));
        linkage.$cyc_link_interface$ = SubLFiles.defparameter("*CYC-LINK-INTERFACE*", red_infrastructure_macros.red_def_helper((SubLObject)(linkage.$list7.isSymbol() ? Symbols.symbol_value((SubLObject)linkage.$list7) : linkage.$list7), (SubLObject)linkage.$sym8$_CYC_LINK_INTERFACE_, (SubLObject)(linkage.$str9$1_2.isSymbol() ? Symbols.symbol_value((SubLObject)linkage.$str9$1_2) : linkage.$str9$1_2), (SubLObject)linkage.$kw3$PARAMETER, (SubLObject)linkage.UNPROVIDED));
        linkage.$link_parse_options$ = SubLFiles.defparameter("*LINK-PARSE-OPTIONS*", (SubLObject)ConsesLow.list((SubLObject)linkage.$kw10$CYC_LINK_INTERFACE, linkage.$cyc_link_interface$.getDynamicValue(), (SubLObject)linkage.$kw11$MAX_LINKAGE, (SubLObject)linkage.ONE_INTEGER, (SubLObject)linkage.$kw12$DICTIONARY_NICKNAME, (SubLObject)linkage.$str13$default, (SubLObject)linkage.$kw14$MAX_PARSE_TIME, (SubLObject)linkage.$int15$30));
        linkage.$show_link_warnings$ = SubLFiles.defparameter("*SHOW-LINK-WARNINGS*", (SubLObject)linkage.NIL);
        linkage.$link_pattern_table$ = SubLFiles.defparameter("*LINK-PATTERN-TABLE*", (SubLObject)linkage.NIL);
        linkage.$link_patterns$ = SubLFiles.defparameter("*LINK-PATTERNS*", (SubLObject)linkage.$list16);
        linkage.$word_to_class$ = SubLFiles.defparameter("*WORD-TO-CLASS*", (SubLObject)linkage.$list17);
        linkage.$link_pos_to_class$ = SubLFiles.deflexical("*LINK-POS-TO-CLASS*", (SubLObject)linkage.$list18);
        linkage.$link_poses$ = SubLFiles.deflexical("*LINK-POSES*", (SubLObject)linkage.$str19$nvaepstidygrcqmzx);
        linkage.$link_parser_unknown_string_suffix$ = SubLFiles.deflexical("*LINK-PARSER-UNKNOWN-STRING-SUFFIX*", (SubLObject)linkage.$str20$___);
        linkage.$link_parser_guessed_string_suffix$ = SubLFiles.deflexical("*LINK-PARSER-GUESSED-STRING-SUFFIX*", (SubLObject)linkage.$str21$___);
        linkage.$penn_pos_to_classes$ = SubLFiles.deflexical("*PENN-POS-TO-CLASSES*", (SubLObject)linkage.$list22);
        linkage.$llink_table$ = SubLFiles.deflexical("*LLINK-TABLE*", (SubLObject)linkage.NIL);
        linkage.$rlink_table$ = SubLFiles.deflexical("*RLINK-TABLE*", (SubLObject)linkage.NIL);
        linkage.$pos_class_table$ = SubLFiles.deflexical("*POS-CLASS-TABLE*", (SubLObject)linkage.NIL);
        linkage.$class_pos_table$ = SubLFiles.deflexical("*CLASS-POS-TABLE*", (SubLObject)linkage.NIL);
        linkage.$left_link_to_class$ = SubLFiles.defparameter("*LEFT-LINK-TO-CLASS*", linkage.$list23);
        linkage.$right_link_to_class$ = SubLFiles.defparameter("*RIGHT-LINK-TO-CLASS*", linkage.$list24);
        linkage.$word_pos_probabilities$ = SubLFiles.deflexical("*WORD-POS-PROBABILITIES*", (SubLObject)linkage.NIL);
        linkage.$link_execute_int_caching_state$ = SubLFiles.deflexical("*LINK-EXECUTE-INT-CACHING-STATE*", (SubLObject)linkage.NIL);
        linkage.$link_execute_cached_caching_state$ = SubLFiles.deflexical("*LINK-EXECUTE-CACHED-CACHING-STATE*", (SubLObject)linkage.NIL);
        linkage.$category_pattern$ = SubLFiles.defparameter("*CATEGORY-PATTERN*", (SubLObject)linkage.NIL);
        linkage.$word_pattern$ = SubLFiles.defparameter("*WORD-PATTERN*", (SubLObject)linkage.NIL);
        linkage.$paren_pattern$ = SubLFiles.defparameter("*PAREN-PATTERN*", (SubLObject)linkage.NIL);
        linkage.$dtp_link$ = SubLFiles.defconstant("*DTP-LINK*", (SubLObject)linkage.$sym69$LINK);
        linkage.$category_to_link_tree_class$ = SubLFiles.deflexical("*CATEGORY-TO-LINK-TREE-CLASS*", (SubLObject)linkage.$list294);
        linkage.$split_link_word_caching_state$ = SubLFiles.deflexical("*SPLIT-LINK-WORD-CACHING-STATE*", (SubLObject)linkage.NIL);
        linkage.$pos_tags$ = SubLFiles.deflexical("*POS-TAGS*", (SubLObject)linkage.$kw1107$UNINITIALIZED);
        return (SubLObject)linkage.NIL;
    }
    
    public static SubLObject setup_linkage_file() {
        access_macros.register_external_symbol((SubLObject)linkage.$sym28$LINK_PARSE);
        memoization_state.note_globally_cached_function((SubLObject)linkage.$sym35$LINK_EXECUTE_INT);
        memoization_state.note_globally_cached_function((SubLObject)linkage.$sym44$LINK_EXECUTE_CACHED);
        Structures.register_method(print_high.$print_object_method_table$.getGlobalValue(), linkage.$dtp_link$.getGlobalValue(), Symbols.symbol_function((SubLObject)linkage.$sym76$LINK_PRINT_FUNCTION_TRAMPOLINE));
        SubLSpecialOperatorDeclarations.proclaim((SubLObject)linkage.$list77);
        Structures.def_csetf((SubLObject)linkage.$sym78$LINK_NAME, (SubLObject)linkage.$sym79$_CSETF_LINK_NAME);
        Structures.def_csetf((SubLObject)linkage.$sym80$LINK_LEFT_WORD, (SubLObject)linkage.$sym81$_CSETF_LINK_LEFT_WORD);
        Structures.def_csetf((SubLObject)linkage.$sym82$LINK_RIGHT_WORD, (SubLObject)linkage.$sym83$_CSETF_LINK_RIGHT_WORD);
        Equality.identity((SubLObject)linkage.$sym69$LINK);
        Structures.register_method(visitation.$visit_defstruct_object_method_table$.getGlobalValue(), linkage.$dtp_link$.getGlobalValue(), Symbols.symbol_function((SubLObject)linkage.$sym92$VISIT_DEFSTRUCT_OBJECT_LINK_METHOD));
        classes.subloop_new_class((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$list100, (SubLObject)linkage.T, (SubLObject)linkage.$list101);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym108$SUBLOOP_RESERVED_INITIALIZE_LINK_TREE_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym111$SUBLOOP_RESERVED_INITIALIZE_LINK_TREE_INSTANCE);
        subloop_reserved_initialize_link_tree_class((SubLObject)linkage.$sym98$LINK_TREE);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym112$GET_MODIFIERS, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list114);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym112$GET_MODIFIERS, (SubLObject)linkage.$sym116$LINK_TREE_GET_MODIFIERS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list118);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym119$LINK_TREE_GET_MODIFIEDS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym120$PRINT, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.$list122, (SubLObject)linkage.$list123);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym120$PRINT, (SubLObject)linkage.$sym124$LINK_TREE_PRINT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym125$XML, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.$list126, (SubLObject)linkage.$list127);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym125$XML, (SubLObject)linkage.$sym128$LINK_TREE_XML_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym129$GET_CATEGORY, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list130);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym129$GET_CATEGORY, (SubLObject)linkage.$sym132$LINK_TREE_GET_CATEGORY_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym133$GET_ROOT, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list134);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym133$GET_ROOT, (SubLObject)linkage.$sym136$LINK_TREE_GET_ROOT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym137$ROOT_P, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list138);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym137$ROOT_P, (SubLObject)linkage.$sym140$LINK_TREE_ROOT_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym141$GET_MOTHER, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list142);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym141$GET_MOTHER, (SubLObject)linkage.$sym144$LINK_TREE_GET_MOTHER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym145$GET_REFS, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list146);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym145$GET_REFS, (SubLObject)linkage.$sym148$LINK_TREE_GET_REFS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym149$GET_INDEX, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list150);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym149$GET_INDEX, (SubLObject)linkage.$sym152$LINK_TREE_GET_INDEX_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym153$GET_SISTER, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list113, (SubLObject)linkage.$list154, (SubLObject)linkage.$list155);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym153$GET_SISTER, (SubLObject)linkage.$sym159$LINK_TREE_GET_SISTER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym160$YIELD, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list161);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym160$YIELD, (SubLObject)linkage.$sym162$LINK_TREE_YIELD_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym163$GET_ANCESTORS, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list164);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym163$GET_ANCESTORS, (SubLObject)linkage.$sym166$LINK_TREE_GET_ANCESTORS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym167$DEPTH, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list168);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$sym167$DEPTH, (SubLObject)linkage.$sym169$LINK_TREE_DEPTH_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.$list171);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym173$SUBLOOP_RESERVED_INITIALIZE_LINK_PHRASE_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym174$SUBLOOP_RESERVED_INITIALIZE_LINK_PHRASE_INSTANCE);
        subloop_reserved_initialize_link_phrase_class((SubLObject)linkage.$sym170$LINK_PHRASE);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym190$GET_CONJUNCTION, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list191);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym190$GET_CONJUNCTION, (SubLObject)linkage.$sym193$LINK_PHRASE_GET_CONJUNCTION_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym95$GET_STRING, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list194);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym95$GET_STRING, (SubLObject)linkage.$sym195$LINK_PHRASE_GET_STRING_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym196$DAUGHTER_COUNT, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list197);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym196$DAUGHTER_COUNT, (SubLObject)linkage.$sym199$LINK_PHRASE_DAUGHTER_COUNT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym158$GET_DAUGHTER, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.$list154, (SubLObject)linkage.$list200);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym158$GET_DAUGHTER, (SubLObject)linkage.$sym203$LINK_PHRASE_GET_DAUGHTER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list205);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym207$LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym208$GET_HEAD_DAUGHTER, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list209);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym208$GET_HEAD_DAUGHTER, (SubLObject)linkage.$sym210$LINK_PHRASE_GET_HEAD_DAUGHTER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym211$GET_SEMANTIC_HEAD_DAUGHTERS, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list212);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym211$GET_SEMANTIC_HEAD_DAUGHTERS, (SubLObject)linkage.$sym213$LINK_PHRASE_GET_SEMANTIC_HEAD_DAUGHTERS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list215);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym219$LINK_PHRASE_CYCLIFY_INT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym160$YIELD, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list220);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym160$YIELD, (SubLObject)linkage.$sym221$LINK_PHRASE_YIELD_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym217$GET_HEADS, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list222);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym217$GET_HEADS, (SubLObject)linkage.$sym224$LINK_PHRASE_GET_HEADS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym225$GET_HEAD, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list226);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym225$GET_HEAD, (SubLObject)linkage.$sym227$LINK_PHRASE_GET_HEAD_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list229);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS, (SubLObject)linkage.$sym231$LINK_PHRASE_GET_SEMANTIC_HEADS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym232$PRETERMINAL_P, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list233);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym232$PRETERMINAL_P, (SubLObject)linkage.$sym236$LINK_PHRASE_PRETERMINAL_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym237$IDIOM_P, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list238);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym237$IDIOM_P, (SubLObject)linkage.$sym243$LINK_PHRASE_IDIOM_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym244$COORDINATE_PHRASE_P, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list245);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym244$COORDINATE_PHRASE_P, (SubLObject)linkage.$sym246$LINK_PHRASE_COORDINATE_PHRASE_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym135$GET_LINKAGE, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list247);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym135$GET_LINKAGE, (SubLObject)linkage.$sym248$LINK_PHRASE_GET_LINKAGE_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym249$FIND, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.$list250, (SubLObject)linkage.$list251);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym249$FIND, (SubLObject)linkage.$sym254$LINK_PHRASE_FIND_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym255$FIND_FIRST, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.$list256, (SubLObject)linkage.$list257);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym255$FIND_FIRST, (SubLObject)linkage.$sym259$LINK_PHRASE_FIND_FIRST_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym260$FIND_LAST, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.$list261, (SubLObject)linkage.$list262);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$sym260$FIND_LAST, (SubLObject)linkage.$sym264$LINK_PHRASE_FIND_LAST_METHOD);
        interfaces.new_interface((SubLObject)linkage.$sym297$VERBAL_LINK_TREE, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.subloop_new_class((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list299, (SubLObject)linkage.NIL, (SubLObject)linkage.$list300);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym301$CYCLIFY_INT_VP_COORDINATION, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list302);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym301$CYCLIFY_INT_VP_COORDINATION, (SubLObject)linkage.$sym306$VERBAL_LINK_PHRASE_CYCLIFY_INT_VP_COORDINATION_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym305$CYCLIFY_INT_VP, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list307);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym305$CYCLIFY_INT_VP, (SubLObject)linkage.$sym311$VERBAL_LINK_PHRASE_CYCLIFY_INT_VP_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list312);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym314$VERBAL_LINK_PHRASE_CYCLIFY_INT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym313$VP_COORDINATE_PHRASE_P, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.$list315);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym313$VP_COORDINATE_PHRASE_P, (SubLObject)linkage.$sym317$VERBAL_LINK_PHRASE_VP_COORDINATE_PHRASE_P_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym318$SUBLOOP_RESERVED_INITIALIZE_VERBAL_LINK_PHRASE_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym319$SUBLOOP_RESERVED_INITIALIZE_VERBAL_LINK_PHRASE_INSTANCE);
        subloop_reserved_initialize_verbal_link_phrase_class((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list320);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym321$VERBAL_LINK_PHRASE_GET_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list323);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym324$VERBAL_LINK_PHRASE_GET_SEMANTIC_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list326);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym328$VERBAL_LINK_PHRASE_GET_VERBAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list329);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym331$VERBAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym332$SENTENTIAL_LINK_PHRASE, (SubLObject)linkage.$sym298$VERBAL_LINK_PHRASE, (SubLObject)linkage.$list333, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym332$SENTENTIAL_LINK_PHRASE, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym332$SENTENTIAL_LINK_PHRASE, (SubLObject)linkage.$sym334$SUBLOOP_RESERVED_INITIALIZE_SENTENTIAL_LINK_PHRASE_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym332$SENTENTIAL_LINK_PHRASE, (SubLObject)linkage.$sym335$SUBLOOP_RESERVED_INITIALIZE_SENTENTIAL_LINK_PHRASE_INSTANCE);
        subloop_reserved_initialize_sentential_link_phrase_class((SubLObject)linkage.$sym332$SENTENTIAL_LINK_PHRASE);
        interfaces.new_interface((SubLObject)linkage.$sym336$PREPOSITIONAL_LINK_TREE, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.subloop_new_class((SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list338, (SubLObject)linkage.NIL, (SubLObject)linkage.$list339);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.$sym340$SUBLOOP_RESERVED_INITIALIZE_PREPOSITIONAL_LINK_PHRASE_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.$sym341$SUBLOOP_RESERVED_INITIALIZE_PREPOSITIONAL_LINK_PHRASE_INSTANCE);
        subloop_reserved_initialize_prepositional_link_phrase_class((SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list342);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym344$PREPOSITIONAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list346);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym337$PREPOSITIONAL_LINK_PHRASE, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym347$PREPOSITIONAL_LINK_PHRASE_GET_OBLIQUE_OBJECT_METHOD);
        interfaces.new_interface((SubLObject)linkage.$sym348$NOMINAL_LINK_TREE, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.subloop_new_class((SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE, (SubLObject)linkage.$sym170$LINK_PHRASE, (SubLObject)linkage.$list350, (SubLObject)linkage.NIL, (SubLObject)linkage.$list351);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE, (SubLObject)linkage.$sym352$SUBLOOP_RESERVED_INITIALIZE_NOMINAL_LINK_PHRASE_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE, (SubLObject)linkage.$sym353$SUBLOOP_RESERVED_INITIALIZE_NOMINAL_LINK_PHRASE_INSTANCE);
        subloop_reserved_initialize_nominal_link_phrase_class((SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list354);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym349$NOMINAL_LINK_PHRASE, (SubLObject)linkage.$sym204$GET_HEAD_DAUGHTERS, (SubLObject)linkage.$sym358$NOMINAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym98$LINK_TREE, (SubLObject)linkage.$list360, (SubLObject)linkage.NIL, (SubLObject)linkage.$list361);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list369, (SubLObject)linkage.$list370);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym371$LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym372$MODIFIED_DEPENDENT_MEANING_P, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list373);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym372$MODIFIED_DEPENDENT_MEANING_P, (SubLObject)linkage.$sym376$LINK_WORD_MODIFIED_DEPENDENT_MEANING_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym377$TREE_KEYWORD_EQ_CLASSES, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list378);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym377$TREE_KEYWORD_EQ_CLASSES, (SubLObject)linkage.$sym380$LINK_WORD_TREE_KEYWORD_EQ_CLASSES_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym381$FRAME_FILTER_LEXES, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list382);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym381$FRAME_FILTER_LEXES, (SubLObject)linkage.$sym385$LINK_WORD_FRAME_FILTER_LEXES_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym386$PP_COMP_FILTER_LEXES, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list387);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym386$PP_COMP_FILTER_LEXES, (SubLObject)linkage.$sym394$LINK_WORD_PP_COMP_FILTER_LEXES_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym395$POS_FILTER_LEXES, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list396);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym395$POS_FILTER_LEXES, (SubLObject)linkage.$sym400$LINK_WORD_POS_FILTER_LEXES_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list402, (SubLObject)linkage.$list403);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS, (SubLObject)linkage.$sym405$LINK_WORD_CYCLIFY_NUCLEUS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list406);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym407$LINK_WORD_CYCLIFY_INT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list408);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym409$LINK_WORD_GET_OBLIQUE_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym389$GET_PP_COMPLEMENT, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list410);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym389$GET_PP_COMPLEMENT, (SubLObject)linkage.$sym415$LINK_WORD_GET_PP_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym404$PARTITION_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list416);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym404$PARTITION_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym417$LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list418);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym419$LINK_WORD_GET_SEMANTIC_COMPLEMENTS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym420$SUBLOOP_RESERVED_INITIALIZE_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym421$SUBLOOP_RESERVED_INITIALIZE_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_link_word_class((SubLObject)linkage.$sym359$LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym120$PRINT, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list122, (SubLObject)linkage.$list422);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym120$PRINT, (SubLObject)linkage.$sym427$LINK_WORD_PRINT_METHOD);
        memoization_state.note_globally_cached_function((SubLObject)linkage.$sym63$SPLIT_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym95$GET_STRING, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list431);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym95$GET_STRING, (SubLObject)linkage.$sym433$LINK_WORD_GET_STRING_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym434$GET_POS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list435);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym434$GET_POS, (SubLObject)linkage.$sym437$LINK_WORD_GET_POS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym274$GET_ABS_INDEX, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list438);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym274$GET_ABS_INDEX, (SubLObject)linkage.$sym440$LINK_WORD_GET_ABS_INDEX_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym145$GET_REFS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list441);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym145$GET_REFS, (SubLObject)linkage.$sym443$LINK_WORD_GET_REFS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym135$GET_LINKAGE, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list444);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym135$GET_LINKAGE, (SubLObject)linkage.$sym446$LINK_WORD_GET_LINKAGE_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym278$GET_CONTEXT, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list447);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym278$GET_CONTEXT, (SubLObject)linkage.$sym449$LINK_WORD_GET_CONTEXT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym225$GET_HEAD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list450);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym225$GET_HEAD, (SubLObject)linkage.$sym451$LINK_WORD_GET_HEAD_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym217$GET_HEADS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list452);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym217$GET_HEADS, (SubLObject)linkage.$sym453$LINK_WORD_GET_HEADS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list454);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS, (SubLObject)linkage.$sym455$LINK_WORD_GET_SEMANTIC_HEADS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list456);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym457$LINK_WORD_GET_COMPLEMENTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym269$GET_RANKED_LEXES, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list458);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym269$GET_RANKED_LEXES, (SubLObject)linkage.$sym460$LINK_WORD_GET_RANKED_LEXES_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym461$GET_LEXES, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list462);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym461$GET_LEXES, (SubLObject)linkage.$sym463$LINK_WORD_GET_LEXES_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list464);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym465$LINK_WORD_GET_PPS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym466$LEXIFY, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list467, (SubLObject)linkage.$list468, (SubLObject)linkage.$list469);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym466$LEXIFY, (SubLObject)linkage.$sym480$LINK_WORD_LEXIFY_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym293$GET_LEFT_LINKS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list481, (SubLObject)linkage.$list482);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym293$GET_LEFT_LINKS, (SubLObject)linkage.$sym485$LINK_WORD_GET_LEFT_LINKS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym292$GET_RIGHT_LINKS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list481, (SubLObject)linkage.$list486);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym292$GET_RIGHT_LINKS, (SubLObject)linkage.$sym488$LINK_WORD_GET_RIGHT_LINKS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym489$GET_LINKS, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list481, (SubLObject)linkage.$list490);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym489$GET_LINKS, (SubLObject)linkage.$sym491$LINK_WORD_GET_LINKS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list492, (SubLObject)linkage.$list493);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym239$GET_DIRECTLY_RELATED, (SubLObject)linkage.$sym495$LINK_WORD_GET_DIRECTLY_RELATED_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym295$GET_RELATED, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list496, (SubLObject)linkage.$list497);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$sym295$GET_RELATED, (SubLObject)linkage.$sym498$LINK_WORD_GET_RELATED_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list500, (SubLObject)linkage.NIL, (SubLObject)linkage.$list501);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list502, (SubLObject)linkage.$list503);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym514$VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym404$PARTITION_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list515);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym404$PARTITION_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym516$VERB_LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym517$SUBLOOP_RESERVED_INITIALIZE_VERB_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym518$SUBLOOP_RESERVED_INITIALIZE_VERB_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_verb_link_word_class((SubLObject)linkage.$sym499$VERB_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list519);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym520$VERB_LINK_WORD_GET_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list521);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym522$VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym523$GET_OBJECTS, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list524);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym523$GET_OBJECTS, (SubLObject)linkage.$sym527$VERB_LINK_WORD_GET_OBJECTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list528);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT, (SubLObject)linkage.$sym529$VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list530);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT, (SubLObject)linkage.$sym531$VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym532$GET_SEMANTIC_OBJECTS, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list533);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym532$GET_SEMANTIC_OBJECTS, (SubLObject)linkage.$sym534$VERB_LINK_WORD_GET_SEMANTIC_OBJECTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list535);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym536$VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym537$GET_ADJECTIVAL_COMPLEMENT, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list538);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym537$GET_ADJECTIVAL_COMPLEMENT, (SubLObject)linkage.$sym540$VERB_LINK_WORD_GET_ADJECTIVAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list541);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym543$VERB_LINK_WORD_GET_PPS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym544$GET_INFINITIVE_MARKER, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list545);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym544$GET_INFINITIVE_MARKER, (SubLObject)linkage.$sym547$VERB_LINK_WORD_GET_INFINITIVE_MARKER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym548$INFINITIVE_P, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list549);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym548$INFINITIVE_P, (SubLObject)linkage.$sym550$VERB_LINK_WORD_INFINITIVE_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym551$BASE_P, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list552);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$sym551$BASE_P, (SubLObject)linkage.$sym553$VERB_LINK_WORD_BASE_P_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list555, (SubLObject)linkage.NIL, (SubLObject)linkage.$list556);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym557$GET_CONTROLLER, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list558);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym557$GET_CONTROLLER, (SubLObject)linkage.$sym562$MAIN_VERB_LINK_WORD_GET_CONTROLLER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym559$GET_CONTROL_VERB, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list563);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym559$GET_CONTROL_VERB, (SubLObject)linkage.$sym566$MAIN_VERB_LINK_WORD_GET_CONTROL_VERB_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym565$CONTROL_VERB_P, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list567);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym565$CONTROL_VERB_P, (SubLObject)linkage.$sym568$MAIN_VERB_LINK_WORD_CONTROL_VERB_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym561$OBJECT_CONTROLLER_P, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list569);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym561$OBJECT_CONTROLLER_P, (SubLObject)linkage.$sym571$MAIN_VERB_LINK_WORD_OBJECT_CONTROLLER_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym560$SUBJECT_CONTROLLER_P, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list572);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym560$SUBJECT_CONTROLLER_P, (SubLObject)linkage.$sym574$MAIN_VERB_LINK_WORD_SUBJECT_CONTROLLER_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym564$GET_MATRIX_CLAUSE, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list575);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym564$GET_MATRIX_CLAUSE, (SubLObject)linkage.$sym576$MAIN_VERB_LINK_WORD_GET_MATRIX_CLAUSE_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym404$PARTITION_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list515);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym404$PARTITION_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym577$MAIN_VERB_LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym470$PARTICLE_FILTER_LEXES, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list578);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym470$PARTICLE_FILTER_LEXES, (SubLObject)linkage.$sym583$MAIN_VERB_LINK_WORD_PARTICLE_FILTER_LEXES_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list502, (SubLObject)linkage.$list503);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym584$MAIN_VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list406);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym585$MAIN_VERB_LINK_WORD_CYCLIFY_INT_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym586$SUBLOOP_RESERVED_INITIALIZE_MAIN_VERB_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym587$SUBLOOP_RESERVED_INITIALIZE_MAIN_VERB_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_main_verb_link_word_class((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym588$PASSIVE_P, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list589);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym588$PASSIVE_P, (SubLObject)linkage.$sym591$MAIN_VERB_LINK_WORD_PASSIVE_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list592);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym595$MAIN_VERB_LINK_WORD_GET_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list596);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym598$MAIN_VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym526$GET_DIRECT_OBJECT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list599);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT, (SubLObject)linkage.$sym603$MAIN_VERB_LINK_WORD_GET_DIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list604);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT, (SubLObject)linkage.$sym606$MAIN_VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list607);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT, (SubLObject)linkage.$sym608$MAIN_VERB_LINK_WORD_GET_INDIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list609);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT, (SubLObject)linkage.$sym611$MAIN_VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list612);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym616$MAIN_VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list617);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym618$MAIN_VERB_LINK_WORD_GET_COMPLEMENTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym594$GET_AUX_VERB, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list619);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym594$GET_AUX_VERB, (SubLObject)linkage.$sym621$MAIN_VERB_LINK_WORD_GET_AUX_VERB_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym580$GET_PARTICLE, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list622);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym580$GET_PARTICLE, (SubLObject)linkage.$sym624$MAIN_VERB_LINK_WORD_GET_PARTICLE_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list625);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym554$MAIN_VERB_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym628$MAIN_VERB_LINK_WORD_GET_MODIFIEDS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.$list630, (SubLObject)linkage.NIL, (SubLObject)linkage.$list631);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym632$COPULA_P, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list633);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym632$COPULA_P, (SubLObject)linkage.$sym634$AUX_VERB_LINK_WORD_COPULA_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list635, (SubLObject)linkage.$list636);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym639$AUX_VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list640);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym228$GET_SEMANTIC_HEADS, (SubLObject)linkage.$sym641$AUX_VERB_LINK_WORD_GET_SEMANTIC_HEADS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym642$GET_TENSE, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list643);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym642$GET_TENSE, (SubLObject)linkage.$sym650$AUX_VERB_LINK_WORD_GET_TENSE_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list651);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym309$GET_SEMANTIC_COMPLEMENTS, (SubLObject)linkage.$sym652$AUX_VERB_LINK_WORD_GET_SEMANTIC_COMPLEMENTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list653);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym656$AUX_VERB_LINK_WORD_GET_COMPLEMENTS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym657$SUBLOOP_RESERVED_INITIALIZE_AUX_VERB_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym658$SUBLOOP_RESERVED_INITIALIZE_AUX_VERB_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_aux_verb_link_word_class((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list659);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym660$AUX_VERB_LINK_WORD_GET_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list661);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym663$AUX_VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym537$GET_ADJECTIVAL_COMPLEMENT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list664);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym537$GET_ADJECTIVAL_COMPLEMENT, (SubLObject)linkage.$sym665$AUX_VERB_LINK_WORD_GET_ADJECTIVAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym655$GET_ADVERBIAL_COMPLEMENT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list666);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym655$GET_ADVERBIAL_COMPLEMENT, (SubLObject)linkage.$sym668$AUX_VERB_LINK_WORD_GET_ADVERBIAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym654$GET_PREPOSITIONAL_COMPLEMENT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list669);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym654$GET_PREPOSITIONAL_COMPLEMENT, (SubLObject)linkage.$sym671$AUX_VERB_LINK_WORD_GET_PREPOSITIONAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym672$EQUALITY_P, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list673);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym672$EQUALITY_P, (SubLObject)linkage.$sym674$AUX_VERB_LINK_WORD_EQUALITY_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym588$PASSIVE_P, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list675);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym588$PASSIVE_P, (SubLObject)linkage.$sym676$AUX_VERB_LINK_WORD_PASSIVE_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list677);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym322$GET_SEMANTIC_SUBJECT, (SubLObject)linkage.$sym678$AUX_VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym526$GET_DIRECT_OBJECT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list679);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT, (SubLObject)linkage.$sym680$AUX_VERB_LINK_WORD_GET_DIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list681);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym505$GET_SEMANTIC_DIRECT_OBJECT, (SubLObject)linkage.$sym682$AUX_VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list683);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT, (SubLObject)linkage.$sym684$AUX_VERB_LINK_WORD_GET_INDIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list685);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym506$GET_SEMANTIC_INDIRECT_OBJECT, (SubLObject)linkage.$sym686$AUX_VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list687);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym688$AUX_VERB_LINK_WORD_GET_OBLIQUE_OBJECT_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym689$MODAL_LINK_WORD, (SubLObject)linkage.$sym629$AUX_VERB_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym689$MODAL_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym689$MODAL_LINK_WORD, (SubLObject)linkage.$sym690$SUBLOOP_RESERVED_INITIALIZE_MODAL_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym689$MODAL_LINK_WORD, (SubLObject)linkage.$sym691$SUBLOOP_RESERVED_INITIALIZE_MODAL_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_modal_link_word_class((SubLObject)linkage.$sym689$MODAL_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym692$PARTICIPLE_LINK_WORD, (SubLObject)linkage.$sym499$VERB_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym692$PARTICIPLE_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym692$PARTICIPLE_LINK_WORD, (SubLObject)linkage.$sym693$SUBLOOP_RESERVED_INITIALIZE_PARTICIPLE_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym692$PARTICIPLE_LINK_WORD, (SubLObject)linkage.$sym694$SUBLOOP_RESERVED_INITIALIZE_PARTICIPLE_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_participle_link_word_class((SubLObject)linkage.$sym692$PARTICIPLE_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list696, (SubLObject)linkage.NIL, (SubLObject)linkage.$list697);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym473$DEFINITE_DESCRIPTION_P, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list698);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym473$DEFINITE_DESCRIPTION_P, (SubLObject)linkage.$sym704$NOUN_LINK_WORD_DEFINITE_DESCRIPTION_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list705, (SubLObject)linkage.$list706);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym401$CYCLIFY_NUCLEUS, (SubLObject)linkage.$sym708$NOUN_LINK_WORD_CYCLIFY_NUCLEUS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list709);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym711$NOUN_LINK_WORD_CYCLIFY_INT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list712, (SubLObject)linkage.$list713);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym722$NOUN_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym723$RELATIONAL_NOUN_P, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list724);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym723$RELATIONAL_NOUN_P, (SubLObject)linkage.$sym725$NOUN_LINK_WORD_RELATIONAL_NOUN_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym710$GET_QUANTIFIER, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list726);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym710$GET_QUANTIFIER, (SubLObject)linkage.$sym729$NOUN_LINK_WORD_GET_QUANTIFIER_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym730$SUBLOOP_RESERVED_INITIALIZE_NOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym731$SUBLOOP_RESERVED_INITIALIZE_NOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_noun_link_word_class((SubLObject)linkage.$sym695$NOUN_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list732);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym733$NOUN_LINK_WORD_GET_COMPLEMENTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list734);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym738$NOUN_LINK_WORD_GET_MODIFIEDS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym700$GET_DETERMINER, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list739);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym700$GET_DETERMINER, (SubLObject)linkage.$sym742$NOUN_LINK_WORD_GET_DETERMINER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym743$GET_CARDINAL, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list744);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym743$GET_CARDINAL, (SubLObject)linkage.$sym746$NOUN_LINK_WORD_GET_CARDINAL_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym715$GET_OVERT_QUANTIFIER, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list747);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym715$GET_OVERT_QUANTIFIER, (SubLObject)linkage.$sym748$NOUN_LINK_WORD_GET_OVERT_QUANTIFIER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym703$GET_POSSESSOR, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list749);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym703$GET_POSSESSOR, (SubLObject)linkage.$sym751$NOUN_LINK_WORD_GET_POSSESSOR_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym752$GET_SPECIFIER, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list753);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym752$GET_SPECIFIER, (SubLObject)linkage.$sym754$NOUN_LINK_WORD_GET_SPECIFIER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list755);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym757$NOUN_LINK_WORD_GET_PPS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym727$GET_EXISTENTIAL_NULL_DETERMINER, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list758);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym727$GET_EXISTENTIAL_NULL_DETERMINER, (SubLObject)linkage.$sym769$NOUN_LINK_WORD_GET_EXISTENTIAL_NULL_DETERMINER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym702$SINGULAR_P, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list770);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym702$SINGULAR_P, (SubLObject)linkage.$sym772$NOUN_LINK_WORD_SINGULAR_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym728$PLURAL_P, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list773);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym728$PLURAL_P, (SubLObject)linkage.$sym775$NOUN_LINK_WORD_PLURAL_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym478$APPOSITIVE_P, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list776);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$sym478$APPOSITIVE_P, (SubLObject)linkage.$sym777$NOUN_LINK_WORD_APPOSITIVE_P_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym778$COMMON_NOUN_LINK_WORD, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym778$COMMON_NOUN_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym778$COMMON_NOUN_LINK_WORD, (SubLObject)linkage.$sym779$SUBLOOP_RESERVED_INITIALIZE_COMMON_NOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym778$COMMON_NOUN_LINK_WORD, (SubLObject)linkage.$sym780$SUBLOOP_RESERVED_INITIALIZE_COMMON_NOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_common_noun_link_word_class((SubLObject)linkage.$sym778$COMMON_NOUN_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.$list782, (SubLObject)linkage.NIL, (SubLObject)linkage.$list783);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym710$GET_QUANTIFIER, (SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list784);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD, (SubLObject)linkage.$sym710$GET_QUANTIFIER, (SubLObject)linkage.$sym785$PROPER_NOUN_LINK_WORD_GET_QUANTIFIER_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD, (SubLObject)linkage.$sym786$SUBLOOP_RESERVED_INITIALIZE_PROPER_NOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD, (SubLObject)linkage.$sym787$SUBLOOP_RESERVED_INITIALIZE_PROPER_NOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_proper_noun_link_word_class((SubLObject)linkage.$sym781$PROPER_NOUN_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym788$GERUND_LINK_WORD, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym788$GERUND_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym788$GERUND_LINK_WORD, (SubLObject)linkage.$sym789$SUBLOOP_RESERVED_INITIALIZE_GERUND_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym788$GERUND_LINK_WORD, (SubLObject)linkage.$sym790$SUBLOOP_RESERVED_INITIALIZE_GERUND_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_gerund_link_word_class((SubLObject)linkage.$sym788$GERUND_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym791$PRONOUN_LINK_WORD, (SubLObject)linkage.$sym695$NOUN_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym791$PRONOUN_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym791$PRONOUN_LINK_WORD, (SubLObject)linkage.$sym792$SUBLOOP_RESERVED_INITIALIZE_PRONOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym791$PRONOUN_LINK_WORD, (SubLObject)linkage.$sym793$SUBLOOP_RESERVED_INITIALIZE_PRONOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_pronoun_link_word_class((SubLObject)linkage.$sym791$PRONOUN_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym791$PRONOUN_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.$list795);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym796$SUBLOOP_RESERVED_INITIALIZE_W_PRONOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym797$SUBLOOP_RESERVED_INITIALIZE_W_PRONOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_w_pronoun_link_word_class((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym145$GET_REFS, (SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list798);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym145$GET_REFS, (SubLObject)linkage.$sym801$W_PRONOUN_LINK_WORD_GET_REFS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym800$GET_ANTECEDENT, (SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list802);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym800$GET_ANTECEDENT, (SubLObject)linkage.$sym803$W_PRONOUN_LINK_WORD_GET_ANTECEDENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym478$APPOSITIVE_P, (SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list804);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym478$APPOSITIVE_P, (SubLObject)linkage.$sym805$W_PRONOUN_LINK_WORD_APPOSITIVE_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym710$GET_QUANTIFIER, (SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list806);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym710$GET_QUANTIFIER, (SubLObject)linkage.$sym807$W_PRONOUN_LINK_WORD_GET_QUANTIFIER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list808);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym810$W_PRONOUN_LINK_WORD_GET_MODIFIEDS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym811$REL_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym794$W_PRONOUN_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym811$REL_PRONOUN_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym811$REL_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym812$SUBLOOP_RESERVED_INITIALIZE_REL_PRONOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym811$REL_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym813$SUBLOOP_RESERVED_INITIALIZE_REL_PRONOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_rel_pronoun_link_word_class((SubLObject)linkage.$sym811$REL_PRONOUN_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym814$PERSONAL_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym791$PRONOUN_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym814$PERSONAL_PRONOUN_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym814$PERSONAL_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym815$SUBLOOP_RESERVED_INITIALIZE_PERSONAL_PRONOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym814$PERSONAL_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym816$SUBLOOP_RESERVED_INITIALIZE_PERSONAL_PRONOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_personal_pronoun_link_word_class((SubLObject)linkage.$sym814$PERSONAL_PRONOUN_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list818, (SubLObject)linkage.NIL, (SubLObject)linkage.$list819);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list820, (SubLObject)linkage.$list821);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym823$ADJECTIVE_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list824);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym825$ADJECTIVE_LINK_WORD_GET_COMPLEMENTS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$sym826$SUBLOOP_RESERVED_INITIALIZE_ADJECTIVE_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$sym827$SUBLOOP_RESERVED_INITIALIZE_ADJECTIVE_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_adjective_link_word_class((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list828);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym830$ADJECTIVE_LINK_WORD_GET_MODIFIEDS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list831);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym817$ADJECTIVE_LINK_WORD, (SubLObject)linkage.$sym414$GET_PPS, (SubLObject)linkage.$sym832$ADJECTIVE_LINK_WORD_GET_PPS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list834, (SubLObject)linkage.NIL, (SubLObject)linkage.$list835);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list836, (SubLObject)linkage.$list837);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym839$ADVERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$sym840$SUBLOOP_RESERVED_INITIALIZE_ADVERB_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$sym841$SUBLOOP_RESERVED_INITIALIZE_ADVERB_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_adverb_link_word_class((SubLObject)linkage.$sym833$ADVERB_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list842);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym845$ADVERB_LINK_WORD_GET_MODIFIEDS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list846);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym847$ADVERB_LINK_WORD_GET_COMPLEMENTS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD, (SubLObject)linkage.$sym833$ADVERB_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.$list849);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD, (SubLObject)linkage.$sym850$SUBLOOP_RESERVED_INITIALIZE_W_ADVERB_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD, (SubLObject)linkage.$sym851$SUBLOOP_RESERVED_INITIALIZE_W_ADVERB_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_w_adverb_link_word_class((SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list852);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym848$W_ADVERB_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym854$W_ADVERB_LINK_WORD_GET_MODIFIEDS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list856, (SubLObject)linkage.NIL, (SubLObject)linkage.$list857);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list858, (SubLObject)linkage.$list859);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym862$PREPOSITION_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym863$SUBLOOP_RESERVED_INITIALIZE_PREPOSITION_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym864$SUBLOOP_RESERVED_INITIALIZE_PREPOSITION_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_preposition_link_word_class((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list865);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym345$GET_OBLIQUE_OBJECT, (SubLObject)linkage.$sym868$PREPOSITION_LINK_WORD_GET_OBLIQUE_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list869);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym325$GET_VERBAL_COMPLEMENT, (SubLObject)linkage.$sym871$PREPOSITION_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list872);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym877$PREPOSITION_LINK_WORD_GET_MODIFIEDS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list878);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym855$PREPOSITION_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym879$PREPOSITION_LINK_WORD_GET_COMPLEMENTS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list881, (SubLObject)linkage.NIL, (SubLObject)linkage.$list882);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list883, (SubLObject)linkage.$list884);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym886$QUANTIFIER_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.$sym887$SUBLOOP_RESERVED_INITIALIZE_QUANTIFIER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.$sym888$SUBLOOP_RESERVED_INITIALIZE_QUANTIFIER_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_quantifier_link_word_class((SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym889$GET_QUANTIFIED, (SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list890);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.$sym889$GET_QUANTIFIED, (SubLObject)linkage.$sym891$QUANTIFIER_LINK_WORD_GET_QUANTIFIED_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.$sym880$QUANTIFIER_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.$sym893$SUBLOOP_RESERVED_INITIALIZE_DETERMINER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.$sym894$SUBLOOP_RESERVED_INITIALIZE_DETERMINER_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_determiner_link_word_class((SubLObject)linkage.$sym892$DETERMINER_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym895$DEFINITE_DETERMINER_LINK_WORD, (SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym895$DEFINITE_DETERMINER_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym895$DEFINITE_DETERMINER_LINK_WORD, (SubLObject)linkage.$sym896$SUBLOOP_RESERVED_INITIALIZE_DEFINITE_DETERMINER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym895$DEFINITE_DETERMINER_LINK_WORD, (SubLObject)linkage.$sym897$SUBLOOP_RESERVED_INITIALIZE_DEFINITE_DETERMINER_LINK_WORD_INSTANC);
        subloop_reserved_initialize_definite_determiner_link_word_class((SubLObject)linkage.$sym895$DEFINITE_DETERMINER_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym898$W_DETERMINER_LINK_WORD, (SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym898$W_DETERMINER_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym898$W_DETERMINER_LINK_WORD, (SubLObject)linkage.$sym899$SUBLOOP_RESERVED_INITIALIZE_W_DETERMINER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym898$W_DETERMINER_LINK_WORD, (SubLObject)linkage.$sym900$SUBLOOP_RESERVED_INITIALIZE_W_DETERMINER_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_w_determiner_link_word_class((SubLObject)linkage.$sym898$W_DETERMINER_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym901$PREDETERMINER_LINK_WORD, (SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym901$PREDETERMINER_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym901$PREDETERMINER_LINK_WORD, (SubLObject)linkage.$sym902$SUBLOOP_RESERVED_INITIALIZE_PREDETERMINER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym901$PREDETERMINER_LINK_WORD, (SubLObject)linkage.$sym903$SUBLOOP_RESERVED_INITIALIZE_PREDETERMINER_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_predeterminer_link_word_class((SubLObject)linkage.$sym901$PREDETERMINER_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym904$POSSESSIVE_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym895$DEFINITE_DETERMINER_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym904$POSSESSIVE_PRONOUN_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym904$POSSESSIVE_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym905$SUBLOOP_RESERVED_INITIALIZE_POSSESSIVE_PRONOUN_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym904$POSSESSIVE_PRONOUN_LINK_WORD, (SubLObject)linkage.$sym906$SUBLOOP_RESERVED_INITIALIZE_POSSESSIVE_PRONOUN_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_possessive_pronoun_link_word_class((SubLObject)linkage.$sym904$POSSESSIVE_PRONOUN_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym907$CARDINAL_LINK_WORD, (SubLObject)linkage.$sym892$DETERMINER_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym907$CARDINAL_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym907$CARDINAL_LINK_WORD, (SubLObject)linkage.$sym908$SUBLOOP_RESERVED_INITIALIZE_CARDINAL_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym907$CARDINAL_LINK_WORD, (SubLObject)linkage.$sym909$SUBLOOP_RESERVED_INITIALIZE_CARDINAL_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_cardinal_link_word_class((SubLObject)linkage.$sym907$CARDINAL_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.$list911);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD, (SubLObject)linkage.$sym912$SUBLOOP_RESERVED_INITIALIZE_CONJUNCTION_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD, (SubLObject)linkage.$sym913$SUBLOOP_RESERVED_INITIALIZE_CONJUNCTION_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_conjunction_link_word_class((SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.NIL, (SubLObject)linkage.$list914);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym910$CONJUNCTION_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym915$CONJUNCTION_LINK_WORD_GET_COMPLEMENTS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym916$EXISTENTIAL_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym916$EXISTENTIAL_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym916$EXISTENTIAL_LINK_WORD, (SubLObject)linkage.$sym917$SUBLOOP_RESERVED_INITIALIZE_EXISTENTIAL_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym916$EXISTENTIAL_LINK_WORD, (SubLObject)linkage.$sym918$SUBLOOP_RESERVED_INITIALIZE_EXISTENTIAL_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_existential_link_word_class((SubLObject)linkage.$sym916$EXISTENTIAL_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym919$COMPARATOR_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym919$COMPARATOR_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym919$COMPARATOR_LINK_WORD, (SubLObject)linkage.$sym920$SUBLOOP_RESERVED_INITIALIZE_COMPARATOR_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym919$COMPARATOR_LINK_WORD, (SubLObject)linkage.$sym921$SUBLOOP_RESERVED_INITIALIZE_COMPARATOR_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_comparator_link_word_class((SubLObject)linkage.$sym919$COMPARATOR_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym922$INF_MARKER_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym922$INF_MARKER_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym922$INF_MARKER_LINK_WORD, (SubLObject)linkage.$sym923$SUBLOOP_RESERVED_INITIALIZE_INF_MARKER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym922$INF_MARKER_LINK_WORD, (SubLObject)linkage.$sym924$SUBLOOP_RESERVED_INITIALIZE_INF_MARKER_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_inf_marker_link_word_class((SubLObject)linkage.$sym922$INF_MARKER_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym925$PARTICLE_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym925$PARTICLE_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym925$PARTICLE_LINK_WORD, (SubLObject)linkage.$sym926$SUBLOOP_RESERVED_INITIALIZE_PARTICLE_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym925$PARTICLE_LINK_WORD, (SubLObject)linkage.$sym927$SUBLOOP_RESERVED_INITIALIZE_PARTICLE_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_particle_link_word_class((SubLObject)linkage.$sym925$PARTICLE_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym928$PUNCTUATION_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list929, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym928$PUNCTUATION_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym928$PUNCTUATION_LINK_WORD, (SubLObject)linkage.$sym930$SUBLOOP_RESERVED_INITIALIZE_PUNCTUATION_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym928$PUNCTUATION_LINK_WORD, (SubLObject)linkage.$sym931$SUBLOOP_RESERVED_INITIALIZE_PUNCTUATION_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_punctuation_link_word_class((SubLObject)linkage.$sym928$PUNCTUATION_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list933, (SubLObject)linkage.NIL, (SubLObject)linkage.$list934);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$list121, (SubLObject)linkage.$list935, (SubLObject)linkage.$list936);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym310$GET_KEYWORD_RENAMINGS, (SubLObject)linkage.$sym940$POSS_MARKER_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym941$SUBLOOP_RESERVED_INITIALIZE_POSS_MARKER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym942$SUBLOOP_RESERVED_INITIALIZE_POSS_MARKER_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_poss_marker_link_word_class((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym703$GET_POSSESSOR, (SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list943);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym703$GET_POSSESSOR, (SubLObject)linkage.$sym945$POSS_MARKER_LINK_WORD_GET_POSSESSOR_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym938$GET_POSSESSED, (SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list946);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym938$GET_POSSESSED, (SubLObject)linkage.$sym947$POSS_MARKER_LINK_WORD_GET_POSSESSED_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list948);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym304$GET_COMPLEMENTS, (SubLObject)linkage.$sym949$POSS_MARKER_LINK_WORD_GET_COMPLEMENTS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list950);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym932$POSS_MARKER_LINK_WORD, (SubLObject)linkage.$sym117$GET_MODIFIEDS, (SubLObject)linkage.$sym951$POSS_MARKER_LINK_WORD_GET_MODIFIEDS_METHOD);
        classes.subloop_new_class((SubLObject)linkage.$sym952$COMPLEMENTIZER_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym952$COMPLEMENTIZER_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym952$COMPLEMENTIZER_LINK_WORD, (SubLObject)linkage.$sym953$SUBLOOP_RESERVED_INITIALIZE_COMPLEMENTIZER_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym952$COMPLEMENTIZER_LINK_WORD, (SubLObject)linkage.$sym954$SUBLOOP_RESERVED_INITIALIZE_COMPLEMENTIZER_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_complementizer_link_word_class((SubLObject)linkage.$sym952$COMPLEMENTIZER_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym54$WALL_LINK_WORD, (SubLObject)linkage.$sym359$LINK_WORD, (SubLObject)linkage.$list929, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym54$WALL_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym54$WALL_LINK_WORD, (SubLObject)linkage.$sym955$SUBLOOP_RESERVED_INITIALIZE_WALL_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym54$WALL_LINK_WORD, (SubLObject)linkage.$sym956$SUBLOOP_RESERVED_INITIALIZE_WALL_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_wall_link_word_class((SubLObject)linkage.$sym54$WALL_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym957$LEFT_WALL_LINK_WORD, (SubLObject)linkage.$sym54$WALL_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym957$LEFT_WALL_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym957$LEFT_WALL_LINK_WORD, (SubLObject)linkage.$sym958$SUBLOOP_RESERVED_INITIALIZE_LEFT_WALL_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym957$LEFT_WALL_LINK_WORD, (SubLObject)linkage.$sym959$SUBLOOP_RESERVED_INITIALIZE_LEFT_WALL_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_left_wall_link_word_class((SubLObject)linkage.$sym957$LEFT_WALL_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym960$RIGHT_WALL_LINK_WORD, (SubLObject)linkage.$sym54$WALL_LINK_WORD, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL, (SubLObject)linkage.NIL);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym960$RIGHT_WALL_LINK_WORD, (SubLObject)linkage.NIL);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym960$RIGHT_WALL_LINK_WORD, (SubLObject)linkage.$sym961$SUBLOOP_RESERVED_INITIALIZE_RIGHT_WALL_LINK_WORD_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym960$RIGHT_WALL_LINK_WORD, (SubLObject)linkage.$sym962$SUBLOOP_RESERVED_INITIALIZE_RIGHT_WALL_LINK_WORD_INSTANCE);
        subloop_reserved_initialize_right_wall_link_word_class((SubLObject)linkage.$sym960$RIGHT_WALL_LINK_WORD);
        classes.subloop_new_class((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym99$OBJECT, (SubLObject)linkage.$list963, (SubLObject)linkage.NIL, (SubLObject)linkage.$list964);
        classes.class_set_implements_slot_listeners((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.NIL);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym970$CYCLIFY, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.$list971, (SubLObject)linkage.$list972);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym970$CYCLIFY, (SubLObject)linkage.$sym976$LINKAGE_CYCLIFY_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym973$GET_CYCLIFIER, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.$list971, (SubLObject)linkage.$list977);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym973$GET_CYCLIFIER, (SubLObject)linkage.$sym1002$LINKAGE_GET_CYCLIFIER_METHOD);
        classes.subloop_note_class_initialization_function((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1003$SUBLOOP_RESERVED_INITIALIZE_LINKAGE_CLASS);
        classes.subloop_note_instance_initialization_function((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1004$SUBLOOP_RESERVED_INITIALIZE_LINKAGE_INSTANCE);
        subloop_reserved_initialize_linkage_class((SubLObject)linkage.$sym368$LINKAGE);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym160$YIELD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1026);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym160$YIELD, (SubLObject)linkage.$sym1028$LINKAGE_YIELD_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym120$PRINT, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.$list122, (SubLObject)linkage.$list1029);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym120$PRINT, (SubLObject)linkage.$sym1031$LINKAGE_PRINT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym125$XML, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1032);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym125$XML, (SubLObject)linkage.$sym1038$LINKAGE_XML_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym1046$PRINT_DIAGRAM, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1047);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1046$PRINT_DIAGRAM, (SubLObject)linkage.$sym1049$LINKAGE_PRINT_DIAGRAM_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym1050$LENGTH, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1051);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1050$LENGTH, (SubLObject)linkage.$sym1053$LINKAGE_LENGTH_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym1035$GET_TREE, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1054);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1035$GET_TREE, (SubLObject)linkage.$sym1056$LINKAGE_GET_TREE_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym1057$GET_TREE_STRING, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1058);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1057$GET_TREE_STRING, (SubLObject)linkage.$sym1060$LINKAGE_GET_TREE_STRING_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym158$GET_DAUGHTER, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.$list154, (SubLObject)linkage.$list1061);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym158$GET_DAUGHTER, (SubLObject)linkage.$sym1063$LINKAGE_GET_DAUGHTER_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym1064$GET_WORD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.$list154, (SubLObject)linkage.$list1065);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1064$GET_WORD, (SubLObject)linkage.$sym1067$LINKAGE_GET_WORD_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym217$GET_HEADS, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1068);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym217$GET_HEADS, (SubLObject)linkage.$sym1071$LINKAGE_GET_HEADS_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym225$GET_HEAD, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1072);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym225$GET_HEAD, (SubLObject)linkage.$sym1073$LINKAGE_GET_HEAD_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1074);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym303$GET_SUBJECT, (SubLObject)linkage.$sym1075$LINKAGE_GET_SUBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym526$GET_DIRECT_OBJECT, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1076);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym526$GET_DIRECT_OBJECT, (SubLObject)linkage.$sym1077$LINKAGE_GET_DIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1078);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym525$GET_INDIRECT_OBJECT, (SubLObject)linkage.$sym1079$LINKAGE_GET_INDIRECT_OBJECT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1080);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym214$CYCLIFY_INT, (SubLObject)linkage.$sym1082$LINKAGE_CYCLIFY_INT_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym466$LEXIFY, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.$list468, (SubLObject)linkage.$list1083);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym466$LEXIFY, (SubLObject)linkage.$sym1086$LINKAGE_LEXIFY_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym1087$CYCLIFIABLE_QUESTION_P, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list113, (SubLObject)linkage.NIL, (SubLObject)linkage.$list1088);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1087$CYCLIFIABLE_QUESTION_P, (SubLObject)linkage.$sym1091$LINKAGE_CYCLIFIABLE_QUESTION_P_METHOD);
        methods.methods_incorporate_instance_method((SubLObject)linkage.$sym1089$SEARCH, (SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$list121, (SubLObject)linkage.$list1092, (SubLObject)linkage.$list1093);
        methods.subloop_register_instance_method((SubLObject)linkage.$sym368$LINKAGE, (SubLObject)linkage.$sym1089$SEARCH, (SubLObject)linkage.$sym1095$LINKAGE_SEARCH_METHOD);
        generic_testing.define_test_case_table_int((SubLObject)linkage.$sym1132$TEST_LINKAGE_WITH_RETOKENIZATION, (SubLObject)ConsesLow.list(new SubLObject[] { linkage.$kw1133$TEST, linkage.$sym1134$SOME_LINKAGE_RESULTS, linkage.$kw1135$OWNER, linkage.NIL, linkage.$kw1136$CLASSES, linkage.NIL, linkage.$kw1137$KB, linkage.$kw1138$FULL, linkage.$kw1139$WORKING_, linkage.T }), (SubLObject)linkage.$list1140);
        generic_testing.define_test_case_table_int((SubLObject)linkage.$sym1141$LINKS_HAVE_NAMES_, (SubLObject)ConsesLow.list(new SubLObject[] { linkage.$kw1133$TEST, linkage.EQ, linkage.$kw1135$OWNER, linkage.NIL, linkage.$kw1136$CLASSES, linkage.NIL, linkage.$kw1137$KB, linkage.$kw1138$FULL, linkage.$kw1139$WORKING_, linkage.T }), (SubLObject)linkage.$list1142);
        return (SubLObject)linkage.NIL;
    }
    
    private static SubLObject _constant_23_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AA"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AL"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AM"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AZ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("BI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("BT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("BW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("EXISTENTIAL-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CC"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CO"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PARTICIPLE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CQ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("D"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DD"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DG"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("GERUND-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("E"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EA"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EB"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EC"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EE"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EL"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ER"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EZ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("FL"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("FM"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("G"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("GN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("H"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("I"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ID"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("IN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("J"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("JG"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("JQ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("W-DETERMINER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("JT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("K"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PARTICLE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("L"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("LE"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("LI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("M"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PRONOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MG"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MV"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("INF-MARKER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("N"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ND"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NJ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NO"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NR"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("INF-MARKER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("O"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OD"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ON"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("EXISTENTIAL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("P"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD")), (SubLObject)ConsesLow.list((SubLObject)Characters.CHAR_v, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")), (SubLObject)ConsesLow.list((SubLObject)Characters.CHAR_g, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")), (SubLObject)ConsesLow.list((SubLObject)Characters.CHAR_p, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD")), (SubLObject)ConsesLow.list((SubLObject)Characters.CHAR_a, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("PF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("PP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Q"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("QI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("W-DETERMINER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("R"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("RS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("RW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("RIGHT-WALL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("S"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SFI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("EXISTENTIAL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SXI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PERSONAL-PRONOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TA"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TD"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TH"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TM"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("CARDINAL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TO"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("INF-MARKER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TQ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TY"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("CARDINAL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("U"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("UN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("V"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("W"), (SubLObject)ConsesLow.list(new SubLObject[] { linkage.NIL, SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD"), SubLObjectFactory.makeSymbol("EXISTENTIAL-LINK-WORD"), SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("WN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("WR"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("X"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Y"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("YP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("YS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Z"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))) });
    }
    
    private static SubLObject _constant_24_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeString("A"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AA"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AL"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREDETERMINER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AM"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("AZ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("B"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("BI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("BT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("BW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("C"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CC"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CO"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREDETERMINER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("WALL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CQ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMPARATOR-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("CX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMPARATOR-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("D"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DD"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("DEFINITE-DETERMINER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DG"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("DEFINITE-DETERMINER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("POSSESSIVE-PRONOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("DT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("E"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EA"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EB"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EC"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EE"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EL"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ER"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("EZ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("FL"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("FM"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("G"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("GN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("H"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("I"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("INF-MARKER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ID"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("IN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("J"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("JG"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("JQ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("JT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("K"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("L"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("LE"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("LI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("M"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MG"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MV"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("MX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("N"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ND"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NJ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("CARDINAL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NO"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NR"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("NW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("CARDINAL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("O"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OD"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("GERUND-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("ON"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("OX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("P"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("PF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("PP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Q"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("LEFT-WALL-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("QI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("R"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("RS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("REL-PRONOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("RW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LEFT-WALL-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("S"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SF"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("EXISTENTIAL-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SFI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SX"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PERSONAL-PRONOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("SXI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TA"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TD"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TH"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TI"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TM"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TO"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TQ"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TT"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TW"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("TY"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("U"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("UN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("V"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("W"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("WALL-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("WN"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("WR"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("X"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL)), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Y"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("YP"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("YS"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Z"), (SubLObject)ConsesLow.list((SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"))) });
    }
    
    public void declareFunctions() {
        declare_linkage_file();
    }
    
    public void initializeVariables() {
        init_linkage_file();
    }
    
    public void runTopLevelForms() {
        setup_linkage_file();
    }
    
    static {
        me = (SubLFile)new linkage();
        linkage.$link_parser$ = null;
        linkage.$link_port$ = null;
        linkage.$cyc_link_interface$ = null;
        linkage.$link_parse_options$ = null;
        linkage.$show_link_warnings$ = null;
        linkage.$link_pattern_table$ = null;
        linkage.$link_patterns$ = null;
        linkage.$word_to_class$ = null;
        linkage.$link_pos_to_class$ = null;
        linkage.$link_poses$ = null;
        linkage.$link_parser_unknown_string_suffix$ = null;
        linkage.$link_parser_guessed_string_suffix$ = null;
        linkage.$penn_pos_to_classes$ = null;
        linkage.$llink_table$ = null;
        linkage.$rlink_table$ = null;
        linkage.$pos_class_table$ = null;
        linkage.$class_pos_table$ = null;
        linkage.$left_link_to_class$ = null;
        linkage.$right_link_to_class$ = null;
        linkage.$word_pos_probabilities$ = null;
        linkage.$link_execute_int_caching_state$ = null;
        linkage.$link_execute_cached_caching_state$ = null;
        linkage.$category_pattern$ = null;
        linkage.$word_pattern$ = null;
        linkage.$paren_pattern$ = null;
        linkage.$dtp_link$ = null;
        linkage.$category_to_link_tree_class$ = null;
        linkage.$split_link_word_caching_state$ = null;
        linkage.$pos_tags$ = null;
        $list0 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("external.link-parser.server"));
        $sym1$_LINK_PARSER_ = SubLObjectFactory.makeSymbol("*LINK-PARSER*");
        $str2$linkparser_cyc_com = SubLObjectFactory.makeString("linkparser.cyc.com");
        $kw3$PARAMETER = SubLObjectFactory.makeKeyword("PARAMETER");
        $list4 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("external.link-parser.port"));
        $sym5$_LINK_PORT_ = SubLObjectFactory.makeSymbol("*LINK-PORT*");
        $int6$4567 = SubLObjectFactory.makeInteger(4567);
        $list7 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("external.link-parser.interface-version"));
        $sym8$_CYC_LINK_INTERFACE_ = SubLObjectFactory.makeSymbol("*CYC-LINK-INTERFACE*");
        $str9$1_2 = SubLObjectFactory.makeString("1.2");
        $kw10$CYC_LINK_INTERFACE = SubLObjectFactory.makeKeyword("CYC-LINK-INTERFACE");
        $kw11$MAX_LINKAGE = SubLObjectFactory.makeKeyword("MAX-LINKAGE");
        $kw12$DICTIONARY_NICKNAME = SubLObjectFactory.makeKeyword("DICTIONARY-NICKNAME");
        $str13$default = SubLObjectFactory.makeString("default");
        $kw14$MAX_PARSE_TIME = SubLObjectFactory.makeKeyword("MAX-PARSE-TIME");
        $int15$30 = SubLObjectFactory.makeInteger(30);
        $list16 = ConsesLow.list(new SubLObject[] { ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("A-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^A[^A-Z]?")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("AA-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^AA")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("AN-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^AN")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("B-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^B")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("C-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^C")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("C-E-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Ce")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^D")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("D-MC-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Dmc")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("D-S-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Ds")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("E-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^E")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("EZ-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^EZ")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("G-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^G")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("GN-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^GN")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^I")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("ID-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^ID")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("J-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^J")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("K-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^K")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("L-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^L")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("M-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^M[^A-Z]")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("M-P-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Mp")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("MV-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^MV")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("MV-P-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^MVp")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("MX-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^MX")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("N-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^N")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("O-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^O[a-z]?[^n]?$")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("O-.-N-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^O.n$")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("OF-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^OF")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("ON-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^ON")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("P-A-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Pa")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Pv")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("P-G-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Pg")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("P-P-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Pp")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("PF-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^PF")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("PP-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^PP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("Q-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Q")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("Q-D-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Qd")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("R-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^R")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^S")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("TA-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^TA")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("TH-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^TH")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("TO-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^TO")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^W")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("X-C-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Xc")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("X-D-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Xd")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("X-I-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^Xi")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("YS-PATTERN"), (SubLObject)SubLObjectFactory.makeString("^YS")) });
        $list17 = ConsesLow.list(new SubLObject[] { ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("LEFT-WALL"), (SubLObject)SubLObjectFactory.makeSymbol("WALL-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("RIGHT-WALL"), (SubLObject)SubLObjectFactory.makeSymbol("WALL-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("."), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString(","), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString(":"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString(";"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("?"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("!"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("("), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString(")"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("-"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("many"), (SubLObject)SubLObjectFactory.makeSymbol("DETERMINER-LINK-WORD")) });
        $list18 = ConsesLow.list((SubLObject)ConsesLow.cons((SubLObject)Characters.CHAR_n, (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD")), (SubLObject)ConsesLow.cons((SubLObject)Characters.CHAR_v, (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")), (SubLObject)ConsesLow.cons((SubLObject)Characters.CHAR_a, (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD")), (SubLObject)ConsesLow.cons((SubLObject)Characters.CHAR_e, (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD")));
        $str19$nvaepstidygrcqmzx = SubLObjectFactory.makeString("nvaepstidygrcqmzx");
        $str20$___ = SubLObjectFactory.makeString("[?]");
        $str21$___ = SubLObjectFactory.makeString("[!]");
        $list22 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AUX"), (SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CC"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CD"), (SubLObject)SubLObjectFactory.makeSymbol("CARDINAL-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("DT"), (SubLObject)SubLObjectFactory.makeSymbol("DETERMINER-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("EX"), (SubLObject)SubLObjectFactory.makeSymbol("EXISTENTIAL-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("FW"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("IN"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("JJ"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("JJR"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("JJS"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("LS"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("MD"), (SubLObject)SubLObjectFactory.makeSymbol("MODAL-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NN"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NNS"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NNP"), (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NNPS"), (SubLObject)SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PDT"), (SubLObject)SubLObjectFactory.makeSymbol("PREDETERMINER-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("POS"), (SubLObject)SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PRP"), (SubLObject)SubLObjectFactory.makeSymbol("PERSONAL-PRONOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PRP$"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSIVE-PRONOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("RB"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("RBR"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("RBS"), (SubLObject)SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("RP"), (SubLObject)SubLObjectFactory.makeSymbol("PARTICLE-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("SYM"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TO"), (SubLObject)SubLObjectFactory.makeSymbol("INF-MARKER-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("UH"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VB"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VBD"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VBG"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VBN"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VBP"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VBZ"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("WDT"), (SubLObject)SubLObjectFactory.makeSymbol("W-DETERMINER-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("WP"), (SubLObject)SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("WP$"), (SubLObject)SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("WRB"), (SubLObject)SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("$"), (SubLObject)SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword(","), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("."), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword(")"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("("), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("``"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")), ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("''"), (SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD")) });
        $list23 = _constant_23_initializer();
        $list24 = _constant_24_initializer();
        $sym25$CATCH_ERROR_MESSAGE_HANDLER = SubLObjectFactory.makeSymbol("CATCH-ERROR-MESSAGE-HANDLER");
        $list26 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("COMMAND"), (SubLObject)SubLObjectFactory.makeString("status"));
        $str27$parseSentence_c = SubLObjectFactory.makeString("parseSentence.c");
        $sym28$LINK_PARSE = SubLObjectFactory.makeSymbol("LINK-PARSE");
        $kw29$COMMAND = SubLObjectFactory.makeKeyword("COMMAND");
        $str30$parse = SubLObjectFactory.makeString("parse");
        $kw31$SENTENCE = SubLObjectFactory.makeKeyword("SENTENCE");
        $sym32$STRINGP = SubLObjectFactory.makeSymbol("STRINGP");
        $str33$lex = SubLObjectFactory.makeString("lex");
        $kw34$LEX = SubLObjectFactory.makeKeyword("LEX");
        $sym35$LINK_EXECUTE_INT = SubLObjectFactory.makeSymbol("LINK-EXECUTE-INT");
        $kw36$PUBLIC = SubLObjectFactory.makeKeyword("PUBLIC");
        $list37 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("EOF"));
        $sym38$_LINK_EXECUTE_INT_CACHING_STATE_ = SubLObjectFactory.makeSymbol("*LINK-EXECUTE-INT-CACHING-STATE*");
        $int39$10000 = SubLObjectFactory.makeInteger(10000);
        $list40 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("LINKAGE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("VECTORP")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TEST"), (SubLObject)SubLObjectFactory.makeSymbol("VECTORP")), (SubLObject)SubLObjectFactory.makeKeyword("STRING"), (SubLObject)SubLObjectFactory.makeKeyword("STRING"));
        $sym41$LINK_STRUCTURE_SPEC_P = SubLObjectFactory.makeSymbol("LINK-STRUCTURE-SPEC-P");
        $kw42$LINKAGE = SubLObjectFactory.makeKeyword("LINKAGE");
        $list43 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)SubLObjectFactory.makeSymbol("LINKS"), (SubLObject)SubLObjectFactory.makeSymbol("DIAGRAM"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"));
        $sym44$LINK_EXECUTE_CACHED = SubLObjectFactory.makeSymbol("LINK-EXECUTE-CACHED");
        $sym45$_LINK_EXECUTE_CACHED_CACHING_STATE_ = SubLObjectFactory.makeSymbol("*LINK-EXECUTE-CACHED-CACHING-STATE*");
        $int46$500 = SubLObjectFactory.makeInteger(500);
        $str47$_ = SubLObjectFactory.makeString("=");
        $str48$_ = SubLObjectFactory.makeString(";");
        $kw49$ERROR = SubLObjectFactory.makeKeyword("ERROR");
        $kw50$STATUS = SubLObjectFactory.makeKeyword("STATUS");
        $kw51$EOF = SubLObjectFactory.makeKeyword("EOF");
        $str52$Unknown_link_response__a = SubLObjectFactory.makeString("Unknown link response ~a");
        $str53$_ = SubLObjectFactory.makeString(".");
        $sym54$WALL_LINK_WORD = SubLObjectFactory.makeSymbol("WALL-LINK-WORD");
        $str55$Couldn_t_find__S_in__S = SubLObjectFactory.makeString("Couldn't find ~S in ~S");
        $list56 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("LEFT-WALL"), (SubLObject)SubLObjectFactory.makeString(":"));
        $sym57$VECTOR = SubLObjectFactory.makeSymbol("VECTOR");
        $sym58$PREFIX_KEYS_FROM_STRING = SubLObjectFactory.makeSymbol("PREFIX-KEYS-FROM-STRING");
        $list59 = ConsesLow.list((SubLObject)Characters.CHAR_space, (SubLObject)Characters.CHAR_hyphen);
        $str60$Failed_to_bunge_according_to_stri = SubLObjectFactory.makeString("Failed to bunge according to string because ~A");
        $list61 = ConsesLow.list(new SubLObject[] { Characters.CHAR_comma, Characters.CHAR_period, Characters.CHAR_question, Characters.CHAR_exclamation, Characters.CHAR_semicolon, Characters.CHAR_colon, Characters.CHAR_lparen, Characters.CHAR_rparen, Characters.CHAR_hyphen, Characters.CHAR_dollar });
        $str62$_____ = SubLObjectFactory.makeString("$@#*%");
        $sym63$SPLIT_LINK_WORD = SubLObjectFactory.makeSymbol("SPLIT-LINK-WORD");
        $str64$_ = SubLObjectFactory.makeString("\"");
        $str65$IDXX = SubLObjectFactory.makeString("IDXX");
        $str66$data_pos_tagging_states_fht = SubLObjectFactory.makeString("data/pos-tagging/states.fht");
        $kw67$IMAGE_INDEPENDENT_CFASL = SubLObjectFactory.makeKeyword("IMAGE-INDEPENDENT-CFASL");
        $sym68$LISTP = SubLObjectFactory.makeSymbol("LISTP");
        $sym69$LINK = SubLObjectFactory.makeSymbol("LINK");
        $sym70$LINK_P = SubLObjectFactory.makeSymbol("LINK-P");
        $list71 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NAME"), (SubLObject)SubLObjectFactory.makeSymbol("LEFT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("RIGHT-WORD"));
        $list72 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NAME"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT-WORD"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT-WORD"));
        $list73 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-LEFT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-RIGHT-WORD"));
        $list74 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-LINK-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("_CSETF-LINK-LEFT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("_CSETF-LINK-RIGHT-WORD"));
        $sym75$PRINT_LINKAGE_LINK = SubLObjectFactory.makeSymbol("PRINT-LINKAGE-LINK");
        $sym76$LINK_PRINT_FUNCTION_TRAMPOLINE = SubLObjectFactory.makeSymbol("LINK-PRINT-FUNCTION-TRAMPOLINE");
        $list77 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPTIMIZE-FUNCALL"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-P"));
        $sym78$LINK_NAME = SubLObjectFactory.makeSymbol("LINK-NAME");
        $sym79$_CSETF_LINK_NAME = SubLObjectFactory.makeSymbol("_CSETF-LINK-NAME");
        $sym80$LINK_LEFT_WORD = SubLObjectFactory.makeSymbol("LINK-LEFT-WORD");
        $sym81$_CSETF_LINK_LEFT_WORD = SubLObjectFactory.makeSymbol("_CSETF-LINK-LEFT-WORD");
        $sym82$LINK_RIGHT_WORD = SubLObjectFactory.makeSymbol("LINK-RIGHT-WORD");
        $sym83$_CSETF_LINK_RIGHT_WORD = SubLObjectFactory.makeSymbol("_CSETF-LINK-RIGHT-WORD");
        $kw84$NAME = SubLObjectFactory.makeKeyword("NAME");
        $kw85$LEFT_WORD = SubLObjectFactory.makeKeyword("LEFT-WORD");
        $kw86$RIGHT_WORD = SubLObjectFactory.makeKeyword("RIGHT-WORD");
        $str87$Invalid_slot__S_for_construction_ = SubLObjectFactory.makeString("Invalid slot ~S for construction function");
        $kw88$BEGIN = SubLObjectFactory.makeKeyword("BEGIN");
        $sym89$MAKE_LINK = SubLObjectFactory.makeSymbol("MAKE-LINK");
        $kw90$SLOT = SubLObjectFactory.makeKeyword("SLOT");
        $kw91$END = SubLObjectFactory.makeKeyword("END");
        $sym92$VISIT_DEFSTRUCT_OBJECT_LINK_METHOD = SubLObjectFactory.makeSymbol("VISIT-DEFSTRUCT-OBJECT-LINK-METHOD");
        $str93$__LINK_ = SubLObjectFactory.makeString("#<LINK ");
        $str94$__ = SubLObjectFactory.makeString(": ");
        $sym95$GET_STRING = SubLObjectFactory.makeSymbol("GET-STRING");
        $str96$__ = SubLObjectFactory.makeString(", ");
        $str97$_ = SubLObjectFactory.makeString(">");
        $sym98$LINK_TREE = SubLObjectFactory.makeSymbol("LINK-TREE");
        $sym99$OBJECT = SubLObjectFactory.makeSymbol("OBJECT");
        $list100 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE"), (SubLObject)SubLObjectFactory.makeSymbol("PARSE-TREE-INTERFACE"));
        $list101 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MOTHER"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIERS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIERS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ROOT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("ROOT-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PRINT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("XML"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("INDENT")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MOTHER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-REFS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INDEX"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SISTER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("YIELD"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ANCESTORS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")) });
        $sym102$MODIFIERS = SubLObjectFactory.makeSymbol("MODIFIERS");
        $sym103$INDEX = SubLObjectFactory.makeSymbol("INDEX");
        $sym104$MOTHER = SubLObjectFactory.makeSymbol("MOTHER");
        $sym105$HEADS = SubLObjectFactory.makeSymbol("HEADS");
        $sym106$POS = SubLObjectFactory.makeSymbol("POS");
        $sym107$INSTANCE_COUNT = SubLObjectFactory.makeSymbol("INSTANCE-COUNT");
        $sym108$SUBLOOP_RESERVED_INITIALIZE_LINK_TREE_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINK-TREE-CLASS");
        $sym109$ISOLATED_P = SubLObjectFactory.makeSymbol("ISOLATED-P");
        $sym110$INSTANCE_NUMBER = SubLObjectFactory.makeSymbol("INSTANCE-NUMBER");
        $sym111$SUBLOOP_RESERVED_INITIALIZE_LINK_TREE_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINK-TREE-INSTANCE");
        $sym112$GET_MODIFIERS = SubLObjectFactory.makeSymbol("GET-MODIFIERS");
        $list113 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PUBLIC"));
        $list114 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all complements of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIERS")));
        $sym115$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym116$LINK_TREE_GET_MODIFIERS_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-MODIFIERS-METHOD");
        $sym117$GET_MODIFIEDS = SubLObjectFactory.makeSymbol("GET-MODIFIEDS");
        $list118 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all words this tree modifies\n   @note override in each specific case"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym119$LINK_TREE_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-MODIFIEDS-METHOD");
        $sym120$PRINT = SubLObjectFactory.makeSymbol("PRINT");
        $list121 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PROTECTED"));
        $list122 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH"));
        $list123 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("prints this tree to STREAM, ignoring DEPTH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IGNORE"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PPRINT-LINK-TREE"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)linkage.ZERO_INTEGER)));
        $sym124$LINK_TREE_PRINT_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-PRINT-METHOD");
        $sym125$XML = SubLObjectFactory.makeSymbol("XML");
        $list126 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("INDENT"));
        $list127 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return stringp; the XML string represenation of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-TREE-XML"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("INDENT"))));
        $sym128$LINK_TREE_XML_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-XML-METHOD");
        $sym129$GET_CATEGORY = SubLObjectFactory.makeSymbol("GET-CATEGORY");
        $list130 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return keywordp; the category of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("POS")));
        $sym131$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym132$LINK_TREE_GET_CATEGORY_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-CATEGORY-METHOD");
        $sym133$GET_ROOT = SubLObjectFactory.makeSymbol("GET-ROOT");
        $list134 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return linkage-p; the root of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LINKAGE")))));
        $sym135$GET_LINKAGE = SubLObjectFactory.makeSymbol("GET-LINKAGE");
        $sym136$LINK_TREE_GET_ROOT_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-ROOT-METHOD");
        $sym137$ROOT_P = SubLObjectFactory.makeSymbol("ROOT-P");
        $list138 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this tree is the root, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)SubLObjectFactory.makeSymbol("MOTHER"))));
        $sym139$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym140$LINK_TREE_ROOT_P_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-ROOT-P-METHOD");
        $sym141$GET_MOTHER = SubLObjectFactory.makeSymbol("GET-MOTHER");
        $list142 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-phrase-p; the mother of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("MOTHER")));
        $sym143$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym144$LINK_TREE_GET_MOTHER_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-MOTHER-METHOD");
        $sym145$GET_REFS = SubLObjectFactory.makeSymbol("GET-REFS");
        $list146 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of referents of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REFS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-REFS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("REF"), (SubLObject)SubLObjectFactory.makeSymbol("REFS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("REFS"))));
        $sym147$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym148$LINK_TREE_GET_REFS_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-REFS-METHOD");
        $sym149$GET_INDEX = SubLObjectFactory.makeSymbol("GET-INDEX");
        $list150 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return numberp; the index of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX")));
        $sym151$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym152$LINK_TREE_GET_INDEX_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-INDEX-METHOD");
        $sym153$GET_SISTER = SubLObjectFactory.makeSymbol("GET-SISTER");
        $list154 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("I"));
        $list155 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-tree-p; the sister INDEX positions to the right of this\n   parse tree if INDEX is positive and to the left if INDEX is negative;\n   nil if there is no such sister"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)SubLObjectFactory.makeSymbol("INTEGERP")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SISTER-INDEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX"), (SubLObject)SubLObjectFactory.makeSymbol("I")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MOTHER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P"), (SubLObject)SubLObjectFactory.makeSymbol("SISTER-INDEX"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MOTHER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX"), (SubLObject)SubLObjectFactory.makeSymbol("I"))))))));
        $sym156$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym157$INTEGERP = SubLObjectFactory.makeSymbol("INTEGERP");
        $sym158$GET_DAUGHTER = SubLObjectFactory.makeSymbol("GET-DAUGHTER");
        $sym159$LINK_TREE_GET_SISTER_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-SISTER-METHOD");
        $sym160$YIELD = SubLObjectFactory.makeSymbol("YIELD");
        $list161 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all words of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym162$LINK_TREE_YIELD_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-YIELD-METHOD");
        $sym163$GET_ANCESTORS = SubLObjectFactory.makeSymbol("GET-ANCESTORS");
        $list164 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of ancestors of this parse tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("MOTHER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("MOTHER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MOTHER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ANCESTORS")))))));
        $sym165$OUTER_CATCH_FOR_LINK_TREE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-TREE-METHOD");
        $sym166$LINK_TREE_GET_ANCESTORS_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-GET-ANCESTORS-METHOD");
        $sym167$DEPTH = SubLObjectFactory.makeSymbol("DEPTH");
        $list168 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return non-negative-integer-p; the depth of this tree from the root"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEPTH"), (SubLObject)linkage.ZERO_INTEGER), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNTIL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("ROOT-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CINC"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MOTHER"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH"))));
        $sym169$LINK_TREE_DEPTH_METHOD = SubLObjectFactory.makeSymbol("LINK-TREE-DEPTH-METHOD");
        $sym170$LINK_PHRASE = SubLObjectFactory.makeSymbol("LINK-PHRASE");
        $list171 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONJUNCTION"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER-COUNT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEAD-DAUGHTERS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("YIELD"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PRETERMINAL-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("IDIOM-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-PHRASE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LINKAGE"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("FIND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)linkage.ZERO_INTEGER), (SubLObject)SubLObjectFactory.makeSymbol("END"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("FIND-FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREDICATE")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("FIND-LAST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREDICATE")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")) });
        $sym172$DAUGHTERS = SubLObjectFactory.makeSymbol("DAUGHTERS");
        $sym173$SUBLOOP_RESERVED_INITIALIZE_LINK_PHRASE_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINK-PHRASE-CLASS");
        $sym174$SUBLOOP_RESERVED_INITIALIZE_LINK_PHRASE_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINK-PHRASE-INSTANCE");
        $list175 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBTREE"), (SubLObject)SubLObjectFactory.makeSymbol("PHRASE")), (SubLObject)SubLObjectFactory.makeSymbol("&BODY"), (SubLObject)SubLObjectFactory.makeSymbol("BODY"));
        $sym176$STACK = SubLObjectFactory.makeUninternedSymbol("STACK");
        $sym177$CLET = SubLObjectFactory.makeSymbol("CLET");
        $list178 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CREATE-STACK")));
        $sym179$STACK_PUSH = SubLObjectFactory.makeSymbol("STACK-PUSH");
        $sym180$UNTIL = SubLObjectFactory.makeSymbol("UNTIL");
        $sym181$STACK_EMPTY_P = SubLObjectFactory.makeSymbol("STACK-EMPTY-P");
        $sym182$CSETQ = SubLObjectFactory.makeSymbol("CSETQ");
        $sym183$STACK_POP = SubLObjectFactory.makeSymbol("STACK-POP");
        $sym184$PWHEN = SubLObjectFactory.makeSymbol("PWHEN");
        $sym185$LINK_PHRASE_P = SubLObjectFactory.makeSymbol("LINK-PHRASE-P");
        $sym186$DO_VECTOR = SubLObjectFactory.makeSymbol("DO-VECTOR");
        $sym187$DAUGHTER = SubLObjectFactory.makeSymbol("DAUGHTER");
        $sym188$GET_SLOT = SubLObjectFactory.makeSymbol("GET-SLOT");
        $list189 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")));
        $sym190$GET_CONJUNCTION = SubLObjectFactory.makeSymbol("GET-CONJUNCTION");
        $list191 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return object; the conjunction of this tree if there is one, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DO-VECTOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")))));
        $sym192$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym193$LINK_PHRASE_GET_CONJUNCTION_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-CONJUNCTION-METHOD");
        $list194 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return stringp; the string of this phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONCATENATE-WORD-STRINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("YIELD"))))));
        $sym195$LINK_PHRASE_GET_STRING_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-STRING-METHOD");
        $sym196$DAUGHTER_COUNT = SubLObjectFactory.makeSymbol("DAUGHTER-COUNT");
        $list197 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return non-negative-integerp; the number of daughters of this link-phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS"))));
        $sym198$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym199$LINK_PHRASE_DAUGHTER_COUNT_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-DAUGHTER-COUNT-METHOD");
        $list200 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param I non-negative-integer-p; the index of the daughter to be retrieved\n   @return link-tree-p; the daughter at index I of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("<"), (SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AREF"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS"), (SubLObject)SubLObjectFactory.makeSymbol("I")))));
        $sym201$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym202$NON_NEGATIVE_INTEGER_P = SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P");
        $sym203$LINK_PHRASE_GET_DAUGHTER_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-DAUGHTER-METHOD");
        $sym204$GET_HEAD_DAUGHTERS = SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS");
        $list205 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of head daughters of this tree\n   @note override for each subclass"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("*REPORT-DEFAULT-METHOD-CALLS?*"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("Default method call ~a on class ~a"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PHRASE")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $str206$Default_method_call__a_on_class__ = SubLObjectFactory.makeString("Default method call ~a on class ~a");
        $sym207$LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD");
        $sym208$GET_HEAD_DAUGHTER = SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTER");
        $list209 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-tree-p; the head daughter of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS"))))));
        $sym210$LINK_PHRASE_GET_HEAD_DAUGHTER_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-HEAD-DAUGHTER-METHOD");
        $sym211$GET_SEMANTIC_HEAD_DAUGHTERS = SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEAD-DAUGHTERS");
        $list212 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of head daughers of this phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS")))));
        $sym213$LINK_PHRASE_GET_SEMANTIC_HEAD_DAUGHTERS_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-SEMANTIC-HEAD-DAUGHTERS-METHOD");
        $sym214$CYCLIFY_INT = SubLObjectFactory.makeSymbol("CYCLIFY-INT");
        $list215 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the CycL representation of the meaning of this link-tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBCYCLIFIER-CYCLIFY"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"))))));
        $sym216$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym217$GET_HEADS = SubLObjectFactory.makeSymbol("GET-HEADS");
        $sym218$INSTANTIATE_SCOPE = SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE");
        $sym219$LINK_PHRASE_CYCLIFY_INT_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-CYCLIFY-INT-METHOD");
        $list220 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all words of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("YIELD"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DO-LINK-TREE-SUBTREES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("YIELD")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("YIELD"))));
        $sym221$LINK_PHRASE_YIELD_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-YIELD-METHOD");
        $list222 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; a list of all heads of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")));
        $sym223$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym224$LINK_PHRASE_GET_HEADS_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-HEADS-METHOD");
        $sym225$GET_HEAD = SubLObjectFactory.makeSymbol("GET-HEAD");
        $list226 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; the first lexical head of this phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS"))))));
        $sym227$LINK_PHRASE_GET_HEAD_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-HEAD-METHOD");
        $sym228$GET_SEMANTIC_HEADS = SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS");
        $list229 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; a list of all semantic heads of this tree"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEAD-DAUGHTERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSHNEW"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")))));
        $sym230$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym231$LINK_PHRASE_GET_SEMANTIC_HEADS_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-SEMANTIC-HEADS-METHOD");
        $sym232$PRETERMINAL_P = SubLObjectFactory.makeSymbol("PRETERMINAL-P");
        $list233 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this phrase  has only words as daughters, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIND-IF-NOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD-P")), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")))));
        $sym234$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym235$LINK_WORD_P = SubLObjectFactory.makeSymbol("LINK-WORD-P");
        $sym236$LINK_PHRASE_PRETERMINAL_P_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-PRETERMINAL-P-METHOD");
        $sym237$IDIOM_P = SubLObjectFactory.makeSymbol("IDIOM-P");
        $list238 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this entire phrase forms an idiom (as indicated by ID links), \n   nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("YIELD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("ID-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BUTLAST"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("ID-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LAST"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("ID-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")))));
        $sym239$GET_DIRECTLY_RELATED = SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED");
        $kw240$ID_PATTERN = SubLObjectFactory.makeKeyword("ID-PATTERN");
        $kw241$LEFT = SubLObjectFactory.makeKeyword("LEFT");
        $kw242$RIGHT = SubLObjectFactory.makeKeyword("RIGHT");
        $sym243$LINK_PHRASE_IDIOM_P_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-IDIOM-P-METHOD");
        $sym244$COORDINATE_PHRASE_P = SubLObjectFactory.makeSymbol("COORDINATE-PHRASE-P");
        $list245 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this phrase is a coordination, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONJUNCTION"))))));
        $sym246$LINK_PHRASE_COORDINATE_PHRASE_P_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-COORDINATE-PHRASE-P-METHOD");
        $list247 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return linkage-p; the linkage this phrase is a part of"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNTIL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("TREE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER")), (SubLObject)linkage.ZERO_INTEGER))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LINKAGE"))))));
        $sym248$LINK_PHRASE_GET_LINKAGE_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-GET-LINKAGE-METHOD");
        $sym249$FIND = SubLObjectFactory.makeSymbol("FIND");
        $list250 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)linkage.ZERO_INTEGER), (SubLObject)SubLObjectFactory.makeSymbol("END"));
        $list251 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param PREDICATE symbolp\n   @return listp; a list of all daughters between START and END of this phrase-tree \n   which satisfy PREDICATE, from left to right"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STOP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIF"), (SubLObject)SubLObjectFactory.makeSymbol("END"), (SubLObject)SubLObjectFactory.makeSymbol("END"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FOUND"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">"), (SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)SubLObjectFactory.makeSymbol("STOP")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("start(~A) after stop(~A) when finding ~S in ~S~%"), (SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)SubLObjectFactory.makeSymbol("STOP"), (SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDO"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("1+"), (SubLObject)SubLObjectFactory.makeSymbol("I")))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">="), (SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)SubLObjectFactory.makeSymbol("STOP"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER")), (SubLObject)SubLObjectFactory.makeSymbol("I"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCALL"), (SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("FOUND")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeSymbol("FOUND")))));
        $sym252$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $str253$start__A__after_stop__A__when_fin = SubLObjectFactory.makeString("start(~A) after stop(~A) when finding ~S in ~S~%");
        $sym254$LINK_PHRASE_FIND_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-FIND-METHOD");
        $sym255$FIND_FIRST = SubLObjectFactory.makeSymbol("FIND-FIRST");
        $list256 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)linkage.ZERO_INTEGER));
        $list257 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param PREDICATE symbolp\n   @return link-tree-p; the first daughter of this phrase passing PREDICATE, \n     starting at daughter START"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDO"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("1+"), (SubLObject)SubLObjectFactory.makeSymbol("I")))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">="), (SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("I"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCALL"), (SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("I")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)));
        $sym258$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym259$LINK_PHRASE_FIND_FIRST_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-FIND-FIRST-METHOD");
        $sym260$FIND_LAST = SubLObjectFactory.makeSymbol("FIND-LAST");
        $list261 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("END"));
        $list262 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param PREDICATE symbolp\n   @return parse-tree-p; the last daughter of this phrase passing PREDICATE, \n     ending at daughter END"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDO"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIF"), (SubLObject)SubLObjectFactory.makeSymbol("END"), (SubLObject)SubLObjectFactory.makeSymbol("END"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("1-"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("1-"), (SubLObject)SubLObjectFactory.makeSymbol("I")))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MINUSP"), (SubLObject)SubLObjectFactory.makeSymbol("I"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("I"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCALL"), (SubLObject)SubLObjectFactory.makeSymbol("PREDICATE"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)));
        $sym263$OUTER_CATCH_FOR_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-PHRASE-METHOD");
        $sym264$LINK_PHRASE_FIND_LAST_METHOD = SubLObjectFactory.makeSymbol("LINK-PHRASE-FIND-LAST-METHOD");
        $str265$__LP_ = SubLObjectFactory.makeString("#<LP(");
        $str266$__ = SubLObjectFactory.makeString("):");
        $str267$__LW_ = SubLObjectFactory.makeString("#<LW(");
        $str268$_ = SubLObjectFactory.makeString(")");
        $sym269$GET_RANKED_LEXES = SubLObjectFactory.makeSymbol("GET-RANKED-LEXES");
        $str270$_ = SubLObjectFactory.makeString("*");
        $str271$_word_cat___a__class___a___a__wor = SubLObjectFactory.makeString("<word cat=\"~a\" class=\"~a\">~a</word>~%");
        $sym272$CLASS_OF = SubLObjectFactory.makeSymbol("CLASS-OF");
        $str273$_link_name___a__left___a__right__ = SubLObjectFactory.makeString("<link name=\"~a\" left=\"~a\" right=\"~a\"/>~%");
        $sym274$GET_ABS_INDEX = SubLObjectFactory.makeSymbol("GET-ABS-INDEX");
        $str275$_phrase_cat___a____ = SubLObjectFactory.makeString("<phrase cat=\"~a\">~%");
        $str276$__phrase___ = SubLObjectFactory.makeString("</phrase>~%");
        $sym277$ABS_INDEX = SubLObjectFactory.makeSymbol("ABS-INDEX");
        $sym278$GET_CONTEXT = SubLObjectFactory.makeSymbol("GET-CONTEXT");
        $str279$_ = SubLObjectFactory.makeString(" ");
        $str280$__ = SubLObjectFactory.makeString(" ,");
        $str281$_ = SubLObjectFactory.makeString(",");
        $str282$__ = SubLObjectFactory.makeString(" .");
        $str283$__ = SubLObjectFactory.makeString("$ ");
        $str284$_ = SubLObjectFactory.makeString("$");
        $sym285$CYCLIFIER_LEXICON = SubLObjectFactory.makeSymbol("CYCLIFIER-LEXICON");
        $sym286$SET_CASE_SENSITIVITY = SubLObjectFactory.makeSymbol("SET-CASE-SENSITIVITY");
        $kw287$OFF = SubLObjectFactory.makeKeyword("OFF");
        $sym288$GET = SubLObjectFactory.makeSymbol("GET");
        $kw289$PENN_TAGS = SubLObjectFactory.makeKeyword("PENN-TAGS");
        $sym290$LINK_LEFT_WORD_EQUAL = SubLObjectFactory.makeSymbol("LINK-LEFT-WORD-EQUAL");
        $sym291$LINK_RIGHT_WORD_EQUAL = SubLObjectFactory.makeSymbol("LINK-RIGHT-WORD-EQUAL");
        $sym292$GET_RIGHT_LINKS = SubLObjectFactory.makeSymbol("GET-RIGHT-LINKS");
        $sym293$GET_LEFT_LINKS = SubLObjectFactory.makeSymbol("GET-LEFT-LINKS");
        $list294 = ConsesLow.list((SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("S"), (SubLObject)SubLObjectFactory.makeSymbol("SENTENTIAL-LINK-PHRASE")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("VP"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("PP"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-PHRASE")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeKeyword("NP"), (SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-LINK-PHRASE")));
        $sym295$GET_RELATED = SubLObjectFactory.makeSymbol("GET-RELATED");
        $list296 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN"));
        $sym297$VERBAL_LINK_TREE = SubLObjectFactory.makeSymbol("VERBAL-LINK-TREE");
        $sym298$VERBAL_LINK_PHRASE = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE");
        $list299 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-VERB-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-LINK-TREE"));
        $list300 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("VP-COORDINATE-PHRASE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT-VP"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT-VP-COORDINATION"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")));
        $sym301$CYCLIFY_INT_VP_COORDINATION = SubLObjectFactory.makeSymbol("CYCLIFY-INT-VP-COORDINATION");
        $list302 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBCYCLIFIER-CYCLIFY"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJ-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONJUNCTION")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VPS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VP"), (SubLObject)SubLObjectFactory.makeSymbol("VPS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("VP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT-VP"))), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJ-CYCLS"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS")))))));
        $sym303$GET_SUBJECT = SubLObjectFactory.makeSymbol("GET-SUBJECT");
        $sym304$GET_COMPLEMENTS = SubLObjectFactory.makeSymbol("GET-COMPLEMENTS");
        $sym305$CYCLIFY_INT_VP = SubLObjectFactory.makeSymbol("CYCLIFY-INT-VP");
        $sym306$VERBAL_LINK_PHRASE_CYCLIFY_INT_VP_COORDINATION_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-CYCLIFY-INT-VP-COORDINATION-METHOD");
        $list307 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBCYCLIFIER-CYCLIFY"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALL-CONJUNCTION-CYCLS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCLS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DELETE-CYCLIFIABLE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WITHOUT-RECURSIVE-CYCLIFICATION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CYCLIFICATION-IN-PROGRESS*"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)SubLObjectFactory.makeSymbol("*CYCLIFICATION-IN-PROGRESS*")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALL-HEAD-CYCLS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-MOD-CYCLS"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REQUIRED-KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES"))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALL-RLE-CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPOSITE-VERBAL-CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMING"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMED0"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPLY-LEX-RENAMING"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMING"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMED0"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFY-IMPLICIT-SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMED0")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIST-CPUSHNEW"), (SubLObject)SubLObjectFactory.makeSymbol("COMPOSITE-VERBAL-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMING-KEY"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMED"), (SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCLS"))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SENSE-CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VALUE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIST-VALUES"), (SubLObject)SubLObjectFactory.makeSymbol("COMPOSITE-VERBAL-CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), (SubLObject)SubLObjectFactory.makeSymbol("SENSE-CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("SENSE-CYCLS"), (SubLObject)SubLObjectFactory.makeSymbol("ALL-RLE-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("ALL-RLE-CYCLS")), (SubLObject)SubLObjectFactory.makeSymbol("ALL-HEAD-CYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("ALL-HEAD-CYCLS"), (SubLObject)SubLObjectFactory.makeSymbol("ALL-CONJUNCTION-CYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALL-HEAD-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("ALL-CONJUNCTION-CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS0"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALL-SUBJECTS-WITH-OBJECTS-CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ITEM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("ALL-HEAD-CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLETE-CYCL-FOR-ONE-SUBJECT"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ITEM2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("ITEM"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLETE-CYCL-FOR-ONE-SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("ITEM2"))), (SubLObject)SubLObjectFactory.makeSymbol("COMPLETE-CYCL-FOR-ONE-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLETE-CYCL-FOR-ONE-SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCLS")))), (SubLObject)SubLObjectFactory.makeSymbol("ALL-SUBJECTS-WITH-OBJECTS-CYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS0"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("ALL-SUBJECTS-WITH-OBJECTS-CYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS0"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"))));
        $sym308$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-VERBAL-LINK-PHRASE-METHOD");
        $sym309$GET_SEMANTIC_COMPLEMENTS = SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS");
        $sym310$GET_KEYWORD_RENAMINGS = SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS");
        $sym311$VERBAL_LINK_PHRASE_CYCLIFY_INT_VP_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-CYCLIFY-INT-VP-METHOD");
        $list312 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WITHOUT-DUPLICATE-CYCLIFICATION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBCYCLIFIER-CYCLIFY"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SCYCLS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-SENTENTIAL-PHRASE-P"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD-DTR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTER"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DTR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DTR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("VP-COORDINATE-PHRASE-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT-VP-COORDINATION"))))), (SubLObject)ConsesLow.list((SubLObject)linkage.T, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJ-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VP-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT-VP")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJ-VP-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJ-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJ-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("VP-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("VP-CYCLS"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJ-VP-CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJ-VP-CYCLS")))))))));
        $sym313$VP_COORDINATE_PHRASE_P = SubLObjectFactory.makeSymbol("VP-COORDINATE-PHRASE-P");
        $sym314$VERBAL_LINK_PHRASE_CYCLIFY_INT_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-CYCLIFY-INT-METHOD");
        $list315 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONJUNCTION"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER-IF-NOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-VERB-PHRASE-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS")))))))));
        $sym316$CYCLIFIABLE_VERB_PHRASE_P = SubLObjectFactory.makeSymbol("CYCLIFIABLE-VERB-PHRASE-P");
        $sym317$VERBAL_LINK_PHRASE_VP_COORDINATE_PHRASE_P_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-VP-COORDINATE-PHRASE-P-METHOD");
        $sym318$SUBLOOP_RESERVED_INITIALIZE_VERBAL_LINK_PHRASE_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-VERBAL-LINK-PHRASE-CLASS");
        $sym319$SUBLOOP_RESERVED_INITIALIZE_VERBAL_LINK_PHRASE_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-VERBAL-LINK-PHRASE-INSTANCE");
        $list320 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-phrase-p; the subject phrase of this verbal phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("VERB")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")))))));
        $sym321$VERBAL_LINK_PHRASE_GET_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-GET-SUBJECT-METHOD");
        $sym322$GET_SEMANTIC_SUBJECT = SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT");
        $list323 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-phrase-p; the semantic subject of this verbal phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")))))));
        $sym324$VERBAL_LINK_PHRASE_GET_SEMANTIC_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-GET-SEMANTIC-SUBJECT-METHOD");
        $sym325$GET_VERBAL_COMPLEMENT = SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT");
        $list326 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-phrase-p; the verbal complement of this link-phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("VERB")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT")))))));
        $sym327$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-VERBAL-LINK-PHRASE-METHOD");
        $sym328$VERBAL_LINK_PHRASE_GET_VERBAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-GET-VERBAL-COMPLEMENT-METHOD");
        $list329 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of head daughters of this verb phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTERS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DO-VECTOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-LINK-TREE-P"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTERS")))));
        $sym330$OUTER_CATCH_FOR_VERBAL_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-VERBAL-LINK-PHRASE-METHOD");
        $sym331$VERBAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD = SubLObjectFactory.makeSymbol("VERBAL-LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD");
        $sym332$SENTENTIAL_LINK_PHRASE = SubLObjectFactory.makeSymbol("SENTENTIAL-LINK-PHRASE");
        $list333 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-SENTENTIAL-PHRASE"));
        $sym334$SUBLOOP_RESERVED_INITIALIZE_SENTENTIAL_LINK_PHRASE_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-SENTENTIAL-LINK-PHRASE-CLASS");
        $sym335$SUBLOOP_RESERVED_INITIALIZE_SENTENTIAL_LINK_PHRASE_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-SENTENTIAL-LINK-PHRASE-INSTANCE");
        $sym336$PREPOSITIONAL_LINK_TREE = SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-TREE");
        $sym337$PREPOSITIONAL_LINK_PHRASE = SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-PHRASE");
        $list338 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-PREPOSITIONAL-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-TREE"));
        $list339 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $sym340$SUBLOOP_RESERVED_INITIALIZE_PREPOSITIONAL_LINK_PHRASE_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PREPOSITIONAL-LINK-PHRASE-CLASS");
        $sym341$SUBLOOP_RESERVED_INITIALIZE_PREPOSITIONAL_LINK_PHRASE_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PREPOSITIONAL-LINK-PHRASE-INSTANCE");
        $list342 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of head daughters of this prepositional phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTERS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DO-VECTOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTERS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-TREE-P"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("DAUGHTER"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTERS")))));
        $sym343$OUTER_CATCH_FOR_PREPOSITIONAL_LINK_PHRASE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-PREPOSITIONAL-LINK-PHRASE-METHOD");
        $sym344$PREPOSITIONAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD = SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD");
        $sym345$GET_OBLIQUE_OBJECT = SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT");
        $list346 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-phrase-p; the oblique object of this prepositional phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))))));
        $sym347$PREPOSITIONAL_LINK_PHRASE_GET_OBLIQUE_OBJECT_METHOD = SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-PHRASE-GET-OBLIQUE-OBJECT-METHOD");
        $sym348$NOMINAL_LINK_TREE = SubLObjectFactory.makeSymbol("NOMINAL-LINK-TREE");
        $sym349$NOMINAL_LINK_PHRASE = SubLObjectFactory.makeSymbol("NOMINAL-LINK-PHRASE");
        $list350 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-LINK-TREE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-NOUN-PHRASE"));
        $list351 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $sym352$SUBLOOP_RESERVED_INITIALIZE_NOMINAL_LINK_PHRASE_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-NOMINAL-LINK-PHRASE-CLASS");
        $sym353$SUBLOOP_RESERVED_INITIALIZE_NOMINAL_LINK_PHRASE_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-NOMINAL-LINK-PHRASE-INSTANCE");
        $list354 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; a list of the all head daughters of this phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-PHRASE-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("FIND")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-LINK-TREE-P"))))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PRETERMINAL-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("FIND-LAST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-P"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER")))))), (SubLObject)ConsesLow.list((SubLObject)linkage.T, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("FIND-LAST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-P"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROGN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("FIND-FIRST")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-LINK-PHRASE-P")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD-DAUGHTER"))))))))));
        $sym355$NOMINAL_LINK_TREE_P = SubLObjectFactory.makeSymbol("NOMINAL-LINK-TREE-P");
        $sym356$NOUN_LINK_WORD_P = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-P");
        $sym357$NOMINAL_LINK_PHRASE_P = SubLObjectFactory.makeSymbol("NOMINAL-LINK-PHRASE-P");
        $sym358$NOMINAL_LINK_PHRASE_GET_HEAD_DAUGHTERS_METHOD = SubLObjectFactory.makeSymbol("NOMINAL-LINK-PHRASE-GET-HEAD-DAUGHTERS-METHOD");
        $sym359$LINK_WORD = SubLObjectFactory.makeSymbol("LINK-WORD");
        $list360 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-WORD"));
        $list361 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINKAGE"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REF"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ABS-INDEX"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEFT-LINKS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RIGHT-LINKS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEXES"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONTEXT"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ABS-INDEX"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-REFS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LINKAGE"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONTEXT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PARTITION-SEMANTIC-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PP-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-NUCLEUS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("POS-FILTER-LEXES"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PP-COMP-FILTER-LEXES"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME-FILTER-LEXES"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("TREE-KEYWORD-EQ-CLASSES"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED-DEPENDENT-MEANING-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LEXES"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("LEXIFY"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEXICON")), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LEFT-LINKS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-NAME")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RIGHT-LINKS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-NAME")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LINKS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-NAME")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-NAME")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-PATH")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")) });
        $sym362$CONTEXT = SubLObjectFactory.makeSymbol("CONTEXT");
        $sym363$LEXES = SubLObjectFactory.makeSymbol("LEXES");
        $sym364$RIGHT_LINKS = SubLObjectFactory.makeSymbol("RIGHT-LINKS");
        $sym365$LEFT_LINKS = SubLObjectFactory.makeSymbol("LEFT-LINKS");
        $sym366$REF = SubLObjectFactory.makeSymbol("REF");
        $sym367$STRING = SubLObjectFactory.makeSymbol("STRING");
        $sym368$LINKAGE = SubLObjectFactory.makeSymbol("LINKAGE");
        $list369 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"));
        $list370 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IGNORE"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym371$LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $sym372$MODIFIED_DEPENDENT_MEANING_P = SubLObjectFactory.makeSymbol("MODIFIED-DEPENDENT-MEANING-P");
        $list373 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMTRANS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("SEMTRANS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("REPLACE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-KEYWORDS"), (SubLObject)SubLObjectFactory.makeSymbol("SEMTRANS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.T))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)));
        $kw374$SEMTRANS = SubLObjectFactory.makeKeyword("SEMTRANS");
        $kw375$REPLACE = SubLObjectFactory.makeKeyword("REPLACE");
        $sym376$LINK_WORD_MODIFIED_DEPENDENT_MEANING_P_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-MODIFIED-DEPENDENT-MEANING-P-METHOD");
        $sym377$TREE_KEYWORD_EQ_CLASSES = SubLObjectFactory.makeSymbol("TREE-KEYWORD-EQ-CLASSES");
        $list378 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORD-EQ-CLASSES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CAR")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS")))))))));
        $sym379$CAR = SubLObjectFactory.makeSymbol("CAR");
        $sym380$LINK_WORD_TREE_KEYWORD_EQ_CLASSES_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-TREE-KEYWORD-EQ-CLASSES-METHOD");
        $sym381$FRAME_FILTER_LEXES = SubLObjectFactory.makeSymbol("FRAME-FILTER-LEXES");
        $list382 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TREE-KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("TREE-KEYWORD-EQ-CLASSES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX-SCORES"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAX-SCORE"), (SubLObject)SubLObjectFactory.makeInteger(-5))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX-SCORE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX-ENTRY-SCORE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)SubLObjectFactory.makeSymbol("TREE-KEYWORDS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-SET-CONFIDENCE"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("LEX-SCORE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("LEX-SCORES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">"), (SubLObject)SubLObjectFactory.makeSymbol("LEX-SCORE"), (SubLObject)SubLObjectFactory.makeSymbol("MAX-SCORE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("MAX-SCORE"), (SubLObject)SubLObjectFactory.makeSymbol("LEX-SCORE"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("LEX-SCORES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("="), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-CONFIDENCE"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)SubLObjectFactory.makeSymbol("MAX-SCORE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"))));
        $sym383$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $int384$_5 = SubLObjectFactory.makeInteger(-5);
        $sym385$LINK_WORD_FRAME_FILTER_LEXES_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-FRAME-FILTER-LEXES-METHOD");
        $sym386$PP_COMP_FILTER_LEXES = SubLObjectFactory.makeSymbol("PP-COMP-FILTER-LEXES");
        $list387 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PP-COMPLEMENT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)SubLObjectFactory.makeSymbol("FRAME")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("FRAME"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG2"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ISA?"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PPCompFrame")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EverythingPSC")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG2"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREP-STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STRINGS-OF-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Preposition")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)SubLObjectFactory.makeSymbol("PREP-STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-SET-CONFIDENCE"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)linkage.ONE_INTEGER), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"))));
        $sym388$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym389$GET_PP_COMPLEMENT = SubLObjectFactory.makeSymbol("GET-PP-COMPLEMENT");
        $kw390$FRAME = SubLObjectFactory.makeKeyword("FRAME");
        $const391$PPCompFrame = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PPCompFrame"));
        $const392$EverythingPSC = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EverythingPSC"));
        $const393$Preposition = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Preposition"));
        $sym394$LINK_WORD_PP_COMP_FILTER_LEXES_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-PP-COMP-FILTER-LEXES-METHOD");
        $sym395$POS_FILTER_LEXES = SubLObjectFactory.makeSymbol("POS-FILTER-LEXES");
        $list396 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("PENN-TAGS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-SET-CONFIDENCE"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)linkage.ONE_INTEGER), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("BACKOFF-PENN-TAGS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-SET-CONFIDENCE"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeDouble(0.75)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"))));
        $sym397$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $kw398$BACKOFF_PENN_TAGS = SubLObjectFactory.makeKeyword("BACKOFF-PENN-TAGS");
        $float399$0_75 = (SubLFloat)SubLObjectFactory.makeDouble(0.75);
        $sym400$LINK_WORD_POS_FILTER_LEXES_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-POS-FILTER-LEXES-METHOD");
        $sym401$CYCLIFY_NUCLEUS = SubLObjectFactory.makeSymbol("CYCLIFY-NUCLEUS");
        $list402 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS"));
        $list403 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NDISTR-COMP-CYCLS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISTR-COMP-CYCLS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCLS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WITHOUT-RECURSIVE-CYCLIFICATION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REQUIRED-KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES"))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GROUP-DISJUNCTIVE-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CMULTIPLE-VALUE-BIND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NON-DISTRIBUTING"), (SubLObject)SubLObjectFactory.makeSymbol("DISTRIBUTING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PARTITION-SEMANTIC-COMPLEMENTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("NON-DISTRIBUTING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("NDISTR-COMP-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("DISTRIBUTING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("DISTR-COMP-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIERS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MY-CYCLS0"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GROUPING"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("THIS-AND-MODS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMING"), (SubLObject)SubLObjectFactory.makeSymbol("GROUPING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPLY-LEX-RENAMING"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMING"))), (SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCLS")))), (SubLObject)SubLObjectFactory.makeSymbol("THIS-AND-MODS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("THIS-AND-MODS"))), (SubLObject)SubLObjectFactory.makeSymbol("NDISTR-COMP-CYCLS")))), (SubLObject)SubLObjectFactory.makeSymbol("MY-CYCLS0")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEXED-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("MY-CYCLS0")))))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)SubLObjectFactory.makeSymbol("DISTR-COMP-CYCLS")))))));
        $sym404$PARTITION_SEMANTIC_COMPLEMENTS = SubLObjectFactory.makeSymbol("PARTITION-SEMANTIC-COMPLEMENTS");
        $sym405$LINK_WORD_CYCLIFY_NUCLEUS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-CYCLIFY-NUCLEUS-METHOD");
        $list406 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WITHOUT-DUPLICATE-CYCLIFICATION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-NUCLEUS"))))));
        $sym407$LINK_WORD_CYCLIFY_INT_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-CYCLIFY-INT-METHOD");
        $list408 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PP-COMPLEMENT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"))));
        $sym409$LINK_WORD_GET_OBLIQUE_OBJECT_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-OBLIQUE-OBJECT-METHOD");
        $list410 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD-STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD-STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-KEYWORDS"), (SubLObject)SubLObjectFactory.makeSymbol("CYCL"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FRAME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("FRAME")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG2"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ISA?"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("PPCompFrame")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EverythingPSC")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG2"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREP-STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STRINGS-OF-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Preposition")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)SubLObjectFactory.makeSymbol("PREP-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD-STRING")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("PP"))))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTERSECTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL"))), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)SubLObjectFactory.makeString("of"), (SubLObject)SubLObjectFactory.makeSymbol("PP-HEAD-STRING"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("PP"))))))))));
        $kw411$OBLIQUE_OBJECT = SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT");
        $list412 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL"));
        $str413$of = SubLObjectFactory.makeString("of");
        $sym414$GET_PPS = SubLObjectFactory.makeSymbol("GET-PPS");
        $sym415$LINK_WORD_GET_PP_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-PP-COMPLEMENT-METHOD");
        $list416 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VALUES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS"))), (SubLObject)linkage.NIL)));
        $sym417$LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-PARTITION-SEMANTIC-COMPLEMENTS-METHOD");
        $list418 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS")))));
        $sym419$LINK_WORD_GET_SEMANTIC_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-SEMANTIC-COMPLEMENTS-METHOD");
        $sym420$SUBLOOP_RESERVED_INITIALIZE_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINK-WORD-CLASS");
        $sym421$SUBLOOP_RESERVED_INITIALIZE_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINK-WORD-INSTANCE");
        $list422 = ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeString("Prints this link word to STREAM, ignoring DEPTH"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IGNORE"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING"), (SubLObject)SubLObjectFactory.makeString("#<LW"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING"), (SubLObject)SubLObjectFactory.makeString("*"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING"), (SubLObject)SubLObjectFactory.makeString("("), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINC"), (SubLObject)SubLObjectFactory.makeSymbol("POS"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING"), (SubLObject)SubLObjectFactory.makeString("): "), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING"), (SubLObject)SubLObjectFactory.makeString(">"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")) });
        $sym423$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $str424$__LW = SubLObjectFactory.makeString("#<LW");
        $str425$_ = SubLObjectFactory.makeString("(");
        $str426$___ = SubLObjectFactory.makeString("): ");
        $sym427$LINK_WORD_PRINT_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-PRINT-METHOD");
        $sym428$_SPLIT_LINK_WORD_CACHING_STATE_ = SubLObjectFactory.makeSymbol("*SPLIT-LINK-WORD-CACHING-STATE*");
        $int429$256 = SubLObjectFactory.makeInteger(256);
        $sym430$NEW_VARIABLE = SubLObjectFactory.makeSymbol("NEW-VARIABLE");
        $list431 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return string; the surface string of this link word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("STRING")));
        $sym432$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym433$LINK_WORD_GET_STRING_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-STRING-METHOD");
        $sym434$GET_POS = SubLObjectFactory.makeSymbol("GET-POS");
        $list435 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return pos; the part-of-speech of this link word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("POS")));
        $sym436$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym437$LINK_WORD_GET_POS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-POS-METHOD");
        $list438 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return numberp; the absolute index of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("ABS-INDEX")));
        $sym439$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym440$LINK_WORD_GET_ABS_INDEX_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-ABS-INDEX-METHOD");
        $list441 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; a list of the referents of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("REF"))));
        $sym442$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym443$LINK_WORD_GET_REFS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-REFS-METHOD");
        $list444 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return linkage-p; the linkage this word is a part of"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LINKAGE")));
        $sym445$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym446$LINK_WORD_GET_LINKAGE_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-LINKAGE-METHOD");
        $list447 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return parse-tree-context-p; the context of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("CONTEXT")));
        $sym448$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym449$LINK_WORD_GET_CONTEXT_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-CONTEXT-METHOD");
        $list450 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the head of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")));
        $sym451$LINK_WORD_GET_HEAD_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-HEAD-METHOD");
        $list452 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the head of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"))));
        $sym453$LINK_WORD_GET_HEADS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-HEADS-METHOD");
        $list454 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; a list containing the semantic head of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS")))));
        $sym455$LINK_WORD_GET_SEMANTIC_HEADS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-SEMANTIC-HEADS-METHOD");
        $list456 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all complements of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym457$LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-COMPLEMENTS-METHOD");
        $list458 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return list; the list of ranked lex entries associated with this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")));
        $sym459$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym460$LINK_WORD_GET_RANKED_LEXES_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-RANKED-LEXES-METHOD");
        $sym461$GET_LEXES = SubLObjectFactory.makeSymbol("GET-LEXES");
        $list462 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of lexical entries of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CAR")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES"))))));
        $sym463$LINK_WORD_GET_LEXES_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-LEXES-METHOD");
        $list464 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; this word's PPs\n   @note default; override this method for specific parts-of-speech"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym465$LINK_WORD_GET_PPS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-PPS-METHOD");
        $sym466$LEXIFY = SubLObjectFactory.makeSymbol("LEXIFY");
        $list467 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NO-MEMBER-VARIABLES"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED"));
        $list468 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEXICON"));
        $list469 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param LEXICON semtrans-lexicon-p; the lexicon to lexify this word with\n   @return listp; the list of lex entries used to lexify this word\n   @side-effects alters this word's lexes slot"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("STRING"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-EVEN-LEX-ENTRY-DISTRIBUTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEXICON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeSymbol("STRING")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("POS-FILTER-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PP-COMP-FILTER-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PARTICLE-FILTER-LEXES"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME-FILTER-LEXES"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COR"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WALL-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FABRICATED-LEXES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEXICON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("FABRICATE")), (SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CAR")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("FABRICATED-LEXES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("NEW-RANKED-LEX-ENTRY")), (SubLObject)SubLObjectFactory.makeSymbol("FABRICATED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("DEFINITE-DESCRIPTION-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUGMENTED-LEXES"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTRODUCES-TERM?"), (SubLObject)SubLObjectFactory.makeSymbol("LEX")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INSTANCE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONTEXT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INSTANCE")), (SubLObject)SubLObjectFactory.makeSymbol("SELF"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMTRANS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJOIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("SEMTRANS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BQ-LIST"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("equals")), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANCE"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-SET-CONFIDENCE"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)linkage.ONE_INTEGER))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("AUGMENTED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")), (SubLObject)SubLObjectFactory.makeSymbol("AUGMENTED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("APPOSITIVE-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJOIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("equals")), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("MODIFIED"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS")))))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"))))));
        $sym470$PARTICLE_FILTER_LEXES = SubLObjectFactory.makeSymbol("PARTICLE-FILTER-LEXES");
        $sym471$FABRICATE = SubLObjectFactory.makeSymbol("FABRICATE");
        $sym472$NEW_RANKED_LEX_ENTRY = SubLObjectFactory.makeSymbol("NEW-RANKED-LEX-ENTRY");
        $sym473$DEFINITE_DESCRIPTION_P = SubLObjectFactory.makeSymbol("DEFINITE-DESCRIPTION-P");
        $sym474$GET_INSTANCE = SubLObjectFactory.makeSymbol("GET-INSTANCE");
        $sym475$SET = SubLObjectFactory.makeSymbol("SET");
        $const476$equals = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("equals"));
        $kw477$NOUN = SubLObjectFactory.makeKeyword("NOUN");
        $sym478$APPOSITIVE_P = SubLObjectFactory.makeSymbol("APPOSITIVE-P");
        $list479 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("equals")), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("MODIFIED"));
        $sym480$LINK_WORD_LEXIFY_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-LEXIFY-METHOD");
        $list481 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"));
        $list482 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param LINK-NAME stringp\n   @return list; a list of left links of this word with name LINK-NAME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE-IF-PRESENT"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)SubLObjectFactory.makeSymbol("REGEX-PATTERN-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LEFT-LINKS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINKS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)SubLObjectFactory.makeSymbol("LEFT-LINKS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REGEX-MATCH?"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("LINK"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)SubLObjectFactory.makeSymbol("LINKS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LINKS"))));
        $sym483$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym484$REGEX_PATTERN_P = SubLObjectFactory.makeSymbol("REGEX-PATTERN-P");
        $sym485$LINK_WORD_GET_LEFT_LINKS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-LEFT-LINKS-METHOD");
        $list486 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param LINK-NAME stringp\n   @return list; a list of right links of this word with name LINK-NAME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE-IF-PRESENT"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)SubLObjectFactory.makeSymbol("REGEX-PATTERN-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("RIGHT-LINKS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINKS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)SubLObjectFactory.makeSymbol("RIGHT-LINKS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REGEX-MATCH?"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("LINK"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)SubLObjectFactory.makeSymbol("LINKS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LINKS"))));
        $sym487$OUTER_CATCH_FOR_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINK-WORD-METHOD");
        $sym488$LINK_WORD_GET_RIGHT_LINKS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-RIGHT-LINKS-METHOD");
        $sym489$GET_LINKS = SubLObjectFactory.makeSymbol("GET-LINKS");
        $list490 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param LINK-NAME stringp\n   @return list; a list of links of this word with name LINK-NAME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE-IF-PRESENT"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)SubLObjectFactory.makeSymbol("REGEX-PATTERN-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LEFT-LINKS")), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RIGHT-LINKS")), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN")))));
        $sym491$LINK_WORD_GET_LINKS_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-LINKS-METHOD");
        $list492 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATTERN-KEYWORD"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION"));
        $list493 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param PATTERN-KEYWORD keywordp;\n   @return list; the list of words that is related to this word via LINK-NAME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PATTERN"), (SubLObject)SubLObjectFactory.makeSymbol("PATTERN-KEYWORD"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-GETTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NULL"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LINKS"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)linkage.EQL, (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LEFT-LINKS"))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)linkage.EQL, (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RIGHT-LINKS"))), (SubLObject)ConsesLow.list((SubLObject)linkage.T, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ERROR"), (SubLObject)SubLObjectFactory.makeString("Invalid link direction ~a"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-GETTER"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATTERN"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQ, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-LEFT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINK")), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-RIGHT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINK")), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-LEFT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINK")), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"))));
        $str494$Invalid_link_direction__a = SubLObjectFactory.makeString("Invalid link direction ~a");
        $sym495$LINK_WORD_GET_DIRECTLY_RELATED_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-DIRECTLY-RELATED-METHOD");
        $list496 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-PATH"));
        $list497 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param LINK-PATH list; a sequence of link-names\n    @return list; the list of words that is related to this word via LINK-PATH, in that\n    order"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RELATED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAR"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATH")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("RELATED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDR"), (SubLObject)SubLObjectFactory.makeSymbol("LINK-PATH"))), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"))));
        $sym498$LINK_WORD_GET_RELATED_METHOD = SubLObjectFactory.makeSymbol("LINK-WORD-GET-RELATED-METHOD");
        $sym499$VERB_LINK_WORD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD");
        $list500 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-LINK-TREE"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-WORD"));
        $list501 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBJECTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-OBJECTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ADJECTIVAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PARTITION-SEMANTIC-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD-DAUGHTERS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INFINITIVE-MARKER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("INFINITIVE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("BASE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")) });
        $list502 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE"), (SubLObject)SubLObjectFactory.makeKeyword("INF-COMP"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN")))));
        $list503 = ConsesLow.list((SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CLET"), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DIRECT-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDIRECT-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBLIQUE-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS")))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VBN"), (SubLObject)SubLObjectFactory.makeKeyword("VBG"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS")))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECT-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECT-OBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("INDIRECT-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("INDIRECT-OBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("OBLIQUE-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("PREP-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("OBLIQUE-OBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("CL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CL-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CL-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("CL-CYCLS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CL-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIFT-CONJUNCTS"), (SubLObject)SubLObjectFactory.makeSymbol("CL-CYCL"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE"), (SubLObject)SubLObjectFactory.makeSymbol("CL-CYCL")), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("CL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("INF-COMP"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("INF-COMP"), (SubLObject)SubLObjectFactory.makeSymbol("CL-COMPLEMENT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"))) }));
        $list504 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE"), (SubLObject)SubLObjectFactory.makeKeyword("INF-COMP"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"));
        $sym505$GET_SEMANTIC_DIRECT_OBJECT = SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT");
        $sym506$GET_SEMANTIC_INDIRECT_OBJECT = SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT");
        $list507 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("VBN"), (SubLObject)SubLObjectFactory.makeKeyword("VBG"));
        $kw508$ACTION = SubLObjectFactory.makeKeyword("ACTION");
        $kw509$SUBJECT = SubLObjectFactory.makeKeyword("SUBJECT");
        $kw510$OBJECT = SubLObjectFactory.makeKeyword("OBJECT");
        $kw511$PREP_OBJECT = SubLObjectFactory.makeKeyword("PREP-OBJECT");
        $kw512$CLAUSE = SubLObjectFactory.makeKeyword("CLAUSE");
        $kw513$INF_COMP = SubLObjectFactory.makeKeyword("INF-COMP");
        $sym514$VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $list515 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NON-DISTRIBUTING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("NON-DISTRIBUTING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DELETE-CYCLIFIABLE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("NON-DISTRIBUTING")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VALUES"), (SubLObject)SubLObjectFactory.makeSymbol("NON-DISTRIBUTING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT")))))));
        $sym516$VERB_LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-PARTITION-SEMANTIC-COMPLEMENTS-METHOD");
        $sym517$SUBLOOP_RESERVED_INITIALIZE_VERB_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-VERB-LINK-WORD-CLASS");
        $sym518$SUBLOOP_RESERVED_INITIALIZE_VERB_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-VERB-LINK-WORD-INSTANCE");
        $list519 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-phrase-p; the syntactic subject of this verb\n   @note default; override in subclasses"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("*REPORT-DEFAULT-METHOD-CALLS?*"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("Default method call ~a on class ~a"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym520$VERB_LINK_WORD_GET_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-SUBJECT-METHOD");
        $list521 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-phrase-p; the semantic subject of this verb\n   @note default; override in subclasses"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("*REPORT-DEFAULT-METHOD-CALLS?*"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("Default method call ~a on class ~a"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym522$VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-SEMANTIC-SUBJECT-METHOD");
        $sym523$GET_OBJECTS = SubLObjectFactory.makeSymbol("GET-OBJECTS");
        $list524 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the objects of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECTS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INDIRECT-OBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECTS"))));
        $sym525$GET_INDIRECT_OBJECT = SubLObjectFactory.makeSymbol("GET-INDIRECT-OBJECT");
        $sym526$GET_DIRECT_OBJECT = SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT");
        $sym527$VERB_LINK_WORD_GET_OBJECTS_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-OBJECTS-METHOD");
        $list528 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the semantic direct object of this verb\n   @note default; override in subclasses"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("*REPORT-DEFAULT-METHOD-CALLS?*"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("Default method call ~a on class ~a"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym529$VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-SEMANTIC-DIRECT-OBJECT-METHOD");
        $list530 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the semantic indirect object of this verb\n   @note default; override in subclasses"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("*REPORT-DEFAULT-METHOD-CALLS?*"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("Default method call ~a on class ~a"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym531$VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-SEMANTIC-INDIRECT-OBJECT-METHOD");
        $sym532$GET_SEMANTIC_OBJECTS = SubLObjectFactory.makeSymbol("GET-SEMANTIC-OBJECTS");
        $list533 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the semantic object of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEMANTIC-OBJECTS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEM-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SEM-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSHNEW"), (SubLObject)SubLObjectFactory.makeSymbol("SEM-OBJ"), (SubLObject)SubLObjectFactory.makeSymbol("SEMANTIC-OBJECTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQ)))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SEMANTIC-OBJECTS"))));
        $sym534$VERB_LINK_WORD_GET_SEMANTIC_OBJECTS_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-SEMANTIC-OBJECTS-METHOD");
        $list535 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return verb-link-word; the verbal complement of this verb\n   @note default; override in subclasses"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("*REPORT-DEFAULT-METHOD-CALLS?*"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("Default method call ~a on class ~a"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym536$VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD");
        $sym537$GET_ADJECTIVAL_COMPLEMENT = SubLObjectFactory.makeSymbol("GET-ADJECTIVAL-COMPLEMENT");
        $list538 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return adjective-link-word; the adjectival complement of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("P-A-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))));
        $kw539$P_A_PATTERN = SubLObjectFactory.makeKeyword("P-A-PATTERN");
        $sym540$VERB_LINK_WORD_GET_ADJECTIVAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-ADJECTIVAL-COMPLEMENT-METHOD");
        $list541 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; this verb's PPs"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("MV-P-PATTERN"))));
        $kw542$MV_P_PATTERN = SubLObjectFactory.makeKeyword("MV-P-PATTERN");
        $sym543$VERB_LINK_WORD_GET_PPS_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-PPS-METHOD");
        $sym544$GET_INFINITIVE_MARKER = SubLObjectFactory.makeSymbol("GET-INFINITIVE-MARKER");
        $list545 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return word-tree-p; this verb's infinitive marker"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INF-MARKER-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE")), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE")))));
        $kw546$I_PATTERN = SubLObjectFactory.makeKeyword("I-PATTERN");
        $sym547$VERB_LINK_WORD_GET_INFINITIVE_MARKER_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-GET-INFINITIVE-MARKER-METHOD");
        $sym548$INFINITIVE_P = SubLObjectFactory.makeSymbol("INFINITIVE-P");
        $list549 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this verb is in the infinitive form, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INFINITIVE-MARKER"))))));
        $sym550$VERB_LINK_WORD_INFINITIVE_P_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-INFINITIVE-P-METHOD");
        $sym551$BASE_P = SubLObjectFactory.makeSymbol("BASE-P");
        $list552 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this verb is in its base form, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")))));
        $sym553$VERB_LINK_WORD_BASE_P_METHOD = SubLObjectFactory.makeSymbol("VERB-LINK-WORD-BASE-P-METHOD");
        $sym554$MAIN_VERB_LINK_WORD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD");
        $list555 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-WORD"));
        $list556 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PARTICLE-FILTER-LEXES"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PASSIVE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INDIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PARTITION-SEMANTIC-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-AUX-VERB"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PARTICLE"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MATRIX-CLAUSE"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT-CONTROLLER-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT-CONTROLLER-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONTROL-VERB"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONTROLLER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")) });
        $sym557$GET_CONTROLLER = SubLObjectFactory.makeSymbol("GET-CONTROLLER");
        $list558 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONTROL-VERB"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NULL"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT-CONTROLLER-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT-CONTROLLER-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT"))))))));
        $sym559$GET_CONTROL_VERB = SubLObjectFactory.makeSymbol("GET-CONTROL-VERB");
        $sym560$SUBJECT_CONTROLLER_P = SubLObjectFactory.makeSymbol("SUBJECT-CONTROLLER-P");
        $sym561$OBJECT_CONTROLLER_P = SubLObjectFactory.makeSymbol("OBJECT-CONTROLLER-P");
        $sym562$MAIN_VERB_LINK_WORD_GET_CONTROLLER_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-CONTROLLER-METHOD");
        $list563 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MATRIX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MATRIX-CLAUSE")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MATRIX-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("MATRIX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MATRIX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MATRIX-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MATRIX-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROL-VERB-P")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("MATRIX-HEAD")))));
        $sym564$GET_MATRIX_CLAUSE = SubLObjectFactory.makeSymbol("GET-MATRIX-CLAUSE");
        $sym565$CONTROL_VERB_P = SubLObjectFactory.makeSymbol("CONTROL-VERB-P");
        $sym566$MAIN_VERB_LINK_WORD_GET_CONTROL_VERB_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-CONTROL-VERB-METHOD");
        $list567 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT-CONTROLLER-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT-CONTROLLER-P"))))));
        $sym568$MAIN_VERB_LINK_WORD_CONTROL_VERB_P_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-CONTROL-VERB-P-METHOD");
        $list569 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RESULT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("FRAME")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ObjectControlFrame")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT")))))));
        $list570 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ObjectControlFrame")));
        $sym571$MAIN_VERB_LINK_WORD_OBJECT_CONTROLLER_P_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-OBJECT-CONTROLLER-P-METHOD");
        $list572 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RESULT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("FRAME")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("IntransitiveSubjectControlFrame")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TransitiveSubjectControlFrame")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT")))))));
        $list573 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("IntransitiveSubjectControlFrame")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TransitiveSubjectControlFrame")));
        $sym574$MAIN_VERB_LINK_WORD_SUBJECT_CONTROLLER_P_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-SUBJECT-CONTROLLER-P-METHOD");
        $list575 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ANCESTOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ANCESTORS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SENTENTIAL-TREE-P"), (SubLObject)SubLObjectFactory.makeSymbol("ANCESTOR")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQ, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("ANCESTOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))), (SubLObject)SubLObjectFactory.makeSymbol("SELF")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("ANCESTOR")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym576$MAIN_VERB_LINK_WORD_GET_MATRIX_CLAUSE_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-MATRIX-CLAUSE-METHOD");
        $sym577$MAIN_VERB_LINK_WORD_PARTITION_SEMANTIC_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-PARTITION-SEMANTIC-COMPLEMENTS-METHOD");
        $list578 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILTERED"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SENTENCE-PARTICLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PARTICLE")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SENTENCE-PARTICLE-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SENTENCE-PARTICLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SENTENCE-PARTICLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)SubLObjectFactory.makeSymbol("FRAME")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("FRAME"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG2"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ISA?"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParticleFrameType")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EverythingPSC")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SENTENCE-PARTICLE-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REQUIRED-PARTICLE-STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STRINGS-OF-TYPE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-ARG2"), (SubLObject)SubLObjectFactory.makeSymbol("FRAME")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("VerbParticle")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)SubLObjectFactory.makeSymbol("REQUIRED-PARTICLE-STRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SENTENCE-PARTICLE-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-SET-CONFIDENCE"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)linkage.ONE_INTEGER), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("SENTENCE-PARTICLE-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"), (SubLObject)SubLObjectFactory.makeSymbol("FILTERED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES"))));
        $sym579$OUTER_CATCH_FOR_MAIN_VERB_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-MAIN-VERB-LINK-WORD-METHOD");
        $sym580$GET_PARTICLE = SubLObjectFactory.makeSymbol("GET-PARTICLE");
        $const581$ParticleFrameType = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ParticleFrameType"));
        $const582$VerbParticle = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("VerbParticle"));
        $sym583$MAIN_VERB_LINK_WORD_PARTICLE_FILTER_LEXES_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-PARTICLE-FILTER-LEXES-METHOD");
        $sym584$MAIN_VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $sym585$MAIN_VERB_LINK_WORD_CYCLIFY_INT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-CYCLIFY-INT-METHOD");
        $sym586$SUBLOOP_RESERVED_INITIALIZE_MAIN_VERB_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-MAIN-VERB-LINK-WORD-CLASS");
        $sym587$SUBLOOP_RESERVED_INITIALIZE_MAIN_VERB_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-MAIN-VERB-LINK-WORD-INSTANCE");
        $sym588$PASSIVE_P = SubLObjectFactory.makeSymbol("PASSIVE-P");
        $list589 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return boolean; whether the sentence is passive"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN")))));
        $kw590$P_V_PATTERN = SubLObjectFactory.makeKeyword("P-V-PATTERN");
        $sym591$MAIN_VERB_LINK_WORD_PASSIVE_P_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-PASSIVE-P-METHOD");
        $list592 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the subject of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECTS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-AUX-VERB"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONTROLLER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONTROLLER"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROLLER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("CONTROLLER")))));
        $kw593$S_PATTERN = SubLObjectFactory.makeKeyword("S-PATTERN");
        $sym594$GET_AUX_VERB = SubLObjectFactory.makeSymbol("GET-AUX-VERB");
        $sym595$MAIN_VERB_LINK_WORD_GET_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-SUBJECT-METHOD");
        $list596 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the semantic subject of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PASSIVE-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROGN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUAL, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"))), (SubLObject)SubLObjectFactory.makeString("by")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-AUX-VERB"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIF"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"))))))));
        $str597$by = SubLObjectFactory.makeString("by");
        $sym598$MAIN_VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-SEMANTIC-SUBJECT-METHOD");
        $list599 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the direct object of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("O-.-N-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("O-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("B-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))))));
        $kw600$O___N_PATTERN = SubLObjectFactory.makeKeyword("O-.-N-PATTERN");
        $kw601$O_PATTERN = SubLObjectFactory.makeKeyword("O-PATTERN");
        $kw602$B_PATTERN = SubLObjectFactory.makeKeyword("B-PATTERN");
        $sym603$MAIN_VERB_LINK_WORD_GET_DIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-DIRECT-OBJECT-METHOD");
        $list604 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the semantic direct object of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PASSIVE-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSOME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("O-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-G-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")))), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)SubLObjectFactory.makeSymbol("PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT"))))));
        $list605 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("O-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-G-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")));
        $sym606$MAIN_VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-SEMANTIC-DIRECT-OBJECT-METHOD");
        $list607 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the indirect object of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("O-.-N-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("O-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT")))))));
        $sym608$MAIN_VERB_LINK_WORD_GET_INDIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-INDIRECT-OBJECT-METHOD");
        $list609 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the semantic indirect object of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PASSIVE-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROGN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUAL, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"))), (SubLObject)SubLObjectFactory.makeString("to")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-AUX-VERB"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INDIRECT-OBJECT"))))));
        $str610$to = SubLObjectFactory.makeString("to");
        $sym611$MAIN_VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-SEMANTIC-INDIRECT-OBJECT-METHOD");
        $list612 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return verb-link-word; the verbal complement of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TH-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("C-E-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("C-E-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TO-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"))))));
        $list613 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TH-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("C-E-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN"));
        $list614 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("C-E-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN"));
        $list615 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TO-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN"));
        $sym616$MAIN_VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD");
        $list617 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; a list of all complements of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DO"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IO"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("IO"), (SubLObject)SubLObjectFactory.makeSymbol("DO"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"))));
        $sym618$MAIN_VERB_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $list619 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return aux-verb-link-word-p; the aux verb of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSOME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATTERNS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-G-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN")))), (SubLObject)SubLObjectFactory.makeSymbol("AUX")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)SubLObjectFactory.makeSymbol("PATTERNS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("AUX")), (SubLObject)SubLObjectFactory.makeSymbol("AUX")))));
        $list620 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-G-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN")));
        $sym621$MAIN_VERB_LINK_WORD_GET_AUX_VERB_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-AUX-VERB-METHOD");
        $list622 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; this verb's particle, or nil if there is none"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("K-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))));
        $kw623$K_PATTERN = SubLObjectFactory.makeKeyword("K-PATTERN");
        $sym624$MAIN_VERB_LINK_WORD_GET_PARTICLE_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-PARTICLE-METHOD");
        $list625 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all word this verb modifies"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("M-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("A-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))));
        $kw626$M_PATTERN = SubLObjectFactory.makeKeyword("M-PATTERN");
        $kw627$A_PATTERN = SubLObjectFactory.makeKeyword("A-PATTERN");
        $sym628$MAIN_VERB_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-GET-MODIFIEDS-METHOD");
        $sym629$AUX_VERB_LINK_WORD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD");
        $list630 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-WORD"));
        $list631 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ADJECTIVAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ADVERBIAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PREPOSITIONAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("EQUALITY-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PASSIVE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INDIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-INDIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-TENSE"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("COPULA-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")) });
        $sym632$COPULA_P = SubLObjectFactory.makeSymbol("COPULA-P");
        $list633 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))));
        $sym634$AUX_VERB_LINK_WORD_COPULA_P_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-COPULA-P-METHOD");
        $list635 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("COMPLEMENT")))));
        $list636 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DIRECT-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECT-OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECT-OBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQ, (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQ, (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECT-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCLS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIFT-CONJUNCTS"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeKeyword("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL")), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS")))));
        $list637 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("COMPLEMENT"));
        $kw638$COMPLEMENT = SubLObjectFactory.makeKeyword("COMPLEMENT");
        $sym639$AUX_VERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $list640 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIF"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"))))));
        $sym641$AUX_VERB_LINK_WORD_GET_SEMANTIC_HEADS_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-SEMANTIC-HEADS-METHOD");
        $sym642$GET_TENSE = SubLObjectFactory.makeSymbol("GET-TENSE");
        $list643 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FCOND"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("is"), (SubLObject)SubLObjectFactory.makeString("am"), (SubLObject)SubLObjectFactory.makeString("are"), (SubLObject)SubLObjectFactory.makeString("have"), (SubLObject)SubLObjectFactory.makeString("has"), (SubLObject)SubLObjectFactory.makeString("do"), (SubLObject)SubLObjectFactory.makeString("does"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQUALP)), (SubLObject)SubLObjectFactory.makeKeyword("PRESENT")), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("was"), (SubLObject)SubLObjectFactory.makeString("were"), (SubLObject)SubLObjectFactory.makeString("had"), (SubLObject)SubLObjectFactory.makeString("did"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQUALP)), (SubLObject)SubLObjectFactory.makeKeyword("PAST")), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("be"), (SubLObject)SubLObjectFactory.makeString("do"), (SubLObject)SubLObjectFactory.makeString("have"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQUALP)), (SubLObject)SubLObjectFactory.makeKeyword("INFINITIVE")))));
        $list644 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("is"), (SubLObject)SubLObjectFactory.makeString("am"), (SubLObject)SubLObjectFactory.makeString("are"), (SubLObject)SubLObjectFactory.makeString("have"), (SubLObject)SubLObjectFactory.makeString("has"), (SubLObject)SubLObjectFactory.makeString("do"), (SubLObject)SubLObjectFactory.makeString("does"));
        $kw645$PRESENT = SubLObjectFactory.makeKeyword("PRESENT");
        $list646 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("was"), (SubLObject)SubLObjectFactory.makeString("were"), (SubLObject)SubLObjectFactory.makeString("had"), (SubLObject)SubLObjectFactory.makeString("did"));
        $kw647$PAST = SubLObjectFactory.makeKeyword("PAST");
        $list648 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("be"), (SubLObject)SubLObjectFactory.makeString("do"), (SubLObject)SubLObjectFactory.makeString("have"));
        $kw649$INFINITIVE = SubLObjectFactory.makeKeyword("INFINITIVE");
        $sym650$AUX_VERB_LINK_WORD_GET_TENSE_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-TENSE-METHOD");
        $list651 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("COPULA-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT")))))));
        $sym652$AUX_VERB_LINK_WORD_GET_SEMANTIC_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-SEMANTIC-COMPLEMENTS-METHOD");
        $list653 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-DIRECT-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREP-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PREPOSITIONAL-COMPLEMENT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ADJ-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ADJECTIVAL-COMPLEMENT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ADV-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ADVERBIAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("ADV-COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("ADJ-COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("PREP-COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"))));
        $sym654$GET_PREPOSITIONAL_COMPLEMENT = SubLObjectFactory.makeSymbol("GET-PREPOSITIONAL-COMPLEMENT");
        $sym655$GET_ADVERBIAL_COMPLEMENT = SubLObjectFactory.makeSymbol("GET-ADVERBIAL-COMPLEMENT");
        $sym656$AUX_VERB_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $sym657$SUBLOOP_RESERVED_INITIALIZE_AUX_VERB_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-AUX-VERB-LINK-WORD-CLASS");
        $sym658$SUBLOOP_RESERVED_INITIALIZE_AUX_VERB_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-AUX-VERB-LINK-WORD-INSTANCE");
        $list659 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return noun-link-word-p; the subject of this aux verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")))));
        $sym660$AUX_VERB_LINK_WORD_GET_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-SUBJECT-METHOD");
        $list661 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return verb-link-word; this aux verb's verboal complement"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-G-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("PP-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VCOMPS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("VCOMPS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeSymbol("PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("VCOMPS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD-P"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("VCOMPS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("VCOMPS")))))));
        $list662 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("I-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-V-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-G-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("PP-PATTERN"));
        $sym663$AUX_VERB_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD");
        $list664 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return adjective-link-word; this aux verb's adjective complement"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ACOMP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("P-A-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("ACOMP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("ACOMP"))))));
        $sym665$AUX_VERB_LINK_WORD_GET_ADJECTIVAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-ADJECTIVAL-COMPLEMENT-METHOD");
        $list666 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return adverb-link-word; this aux verb's adverbial complement"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ACOMP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("PF-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("ACOMP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("ACOMP"))))));
        $kw667$PF_PATTERN = SubLObjectFactory.makeKeyword("PF-PATTERN");
        $sym668$AUX_VERB_LINK_WORD_GET_ADVERBIAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-ADVERBIAL-COMPLEMENT-METHOD");
        $list669 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return preposition-link-word; this aux verb's preposition complement"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOMP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("P-P-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PCOMP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("PCOMP"))))));
        $kw670$P_P_PATTERN = SubLObjectFactory.makeKeyword("P-P-PATTERN");
        $sym671$AUX_VERB_LINK_WORD_GET_PREPOSITIONAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-PREPOSITIONAL-COMPLEMENT-METHOD");
        $sym672$EQUALITY_P = SubLObjectFactory.makeSymbol("EQUALITY-P");
        $list673 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this verb is being used as a main verb, nil \n   otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("O-PATTERN")))));
        $sym674$AUX_VERB_LINK_WORD_EQUALITY_P_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-EQUALITY-P-METHOD");
        $list675 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return booleanp; t if this word is the head of a passive clause, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PASSIVE-P")))))));
        $sym676$AUX_VERB_LINK_WORD_PASSIVE_P_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-PASSIVE-P-METHOD");
        $list677 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the semantic subject of this word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PASSIVE-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAIN-VERB-LINK-WORD-P"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MAIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-SUBJECT")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SISTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SISTER")), (SubLObject)linkage.ONE_INTEGER))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("SISTER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-LINK-TREE-P"), (SubLObject)SubLObjectFactory.makeSymbol("SISTER"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"))))))));
        $sym678$AUX_VERB_LINK_WORD_GET_SEMANTIC_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-SEMANTIC-SUBJECT-METHOD");
        $list679 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the direct object of this verb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DO"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("O-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("DO"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("DO"))))));
        $sym680$AUX_VERB_LINK_WORD_GET_DIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-DIRECT-OBJECT-METHOD");
        $list681 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-tree-p; this aux verb's semantic direct object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT")))));
        $sym682$AUX_VERB_LINK_WORD_GET_SEMANTIC_DIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-SEMANTIC-DIRECT-OBJECT-METHOD");
        $list683 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-tree-p; this aux verb's indirect object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym684$AUX_VERB_LINK_WORD_GET_INDIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-INDIRECT-OBJECT-METHOD");
        $list685 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-tree-p; this aux verb's semantic indirect object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym686$AUX_VERB_LINK_WORD_GET_SEMANTIC_INDIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-SEMANTIC-INDIRECT-OBJECT-METHOD");
        $list687 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-tree-p; this aux verb's oblique object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))))));
        $sym688$AUX_VERB_LINK_WORD_GET_OBLIQUE_OBJECT_METHOD = SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-GET-OBLIQUE-OBJECT-METHOD");
        $sym689$MODAL_LINK_WORD = SubLObjectFactory.makeSymbol("MODAL-LINK-WORD");
        $sym690$SUBLOOP_RESERVED_INITIALIZE_MODAL_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-MODAL-LINK-WORD-CLASS");
        $sym691$SUBLOOP_RESERVED_INITIALIZE_MODAL_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-MODAL-LINK-WORD-INSTANCE");
        $sym692$PARTICIPLE_LINK_WORD = SubLObjectFactory.makeSymbol("PARTICIPLE-LINK-WORD");
        $sym693$SUBLOOP_RESERVED_INITIALIZE_PARTICIPLE_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PARTICIPLE-LINK-WORD-CLASS");
        $sym694$SUBLOOP_RESERVED_INITIALIZE_PARTICIPLE_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PARTICIPLE-LINK-WORD-INSTANCE");
        $sym695$NOUN_LINK_WORD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD");
        $list696 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-LINK-TREE"));
        $list697 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DETERMINER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CARDINAL"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-QUANTIFIER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OVERT-QUANTIFIER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SPECIFIER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("SINGULAR-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PLURAL-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("APPOSITIVE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("RELATIONAL-NOUN-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-NUCLEUS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-EXISTENTIAL-NULL-DETERMINER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("DEFINITE-DESCRIPTION-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")) });
        $list698 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DETERMINER"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"))), (SubLObject)SubLObjectFactory.makeString("the"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.T))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NAME-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SINGULAR-P")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.T))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("POS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.T))));
        $sym699$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-NOUN-LINK-WORD-METHOD");
        $sym700$GET_DETERMINER = SubLObjectFactory.makeSymbol("GET-DETERMINER");
        $str701$the = SubLObjectFactory.makeString("the");
        $sym702$SINGULAR_P = SubLObjectFactory.makeSymbol("SINGULAR-P");
        $sym703$GET_POSSESSOR = SubLObjectFactory.makeSymbol("GET-POSSESSOR");
        $sym704$NOUN_LINK_WORD_DEFINITE_DESCRIPTION_P_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-DEFINITE-DESCRIPTION-P-METHOD");
        $list705 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS-DISJ"));
        $list706 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)linkage.NIL), (SubLObject)SubLObjectFactory.makeSymbol("INDEPENDENT-MODS"), (SubLObject)SubLObjectFactory.makeSymbol("DEPENDENT-MODS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-MOD-CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CMULTIPLE-VALUE-SETQ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEPENDENT-MODS"), (SubLObject)SubLObjectFactory.makeSymbol("DEPENDENT-MODS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PARTITION-MODIFIERS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIERS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WITHOUT-RECURSIVE-CYCLIFICATION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS-DISJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS-DISJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REQUIRED-KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES"))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-MOD-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIER"), (SubLObject)SubLObjectFactory.makeSymbol("INDEPENDENT-MODS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("MOD-CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-MOD-CYCLS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS-CONJ"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS-DISJ")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS-CONJ"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS-DISJ"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TERM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("TERM")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAMING"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMINGS-CONJ")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MY-CYCLS-WITH-MODS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPLY-LEX-RENAMING"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)SubLObjectFactory.makeSymbol("RENAMING")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MOD"), (SubLObject)SubLObjectFactory.makeSymbol("DEPENDENT-MODS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MOD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-NUCLEUS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UPDATE-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MOD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"))), (SubLObject)SubLObjectFactory.makeKeyword("REPLACE"), (SubLObject)SubLObjectFactory.makeSymbol("TERM"))), (SubLObject)SubLObjectFactory.makeSymbol("MY-CYCLS-WITH-MODS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS-DISJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)SubLObjectFactory.makeSymbol("MY-CYCLS-WITH-MODS"))), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS-DISJ"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS-DISJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS-CONJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS-DISJ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS-CONJ")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("INSTANTIATE-SCOPE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CROSS-PRODUCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS-CONJ"), (SubLObject)SubLObjectFactory.makeSymbol("COMP-MOD-CYCLS"))))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"))));
        $kw707$TERM = SubLObjectFactory.makeKeyword("TERM");
        $sym708$NOUN_LINK_WORD_CYCLIFY_NUCLEUS_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-CYCLIFY-NUCLEUS-METHOD");
        $list709 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WITHOUT-DUPLICATE-CYCLIFICATION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-QUANTIFIER")))), (SubLObject)SubLObjectFactory.makeSymbol("RESULT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIF"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-NUCLEUS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT")))));
        $sym710$GET_QUANTIFIER = SubLObjectFactory.makeSymbol("GET-QUANTIFIER");
        $sym711$NOUN_LINK_WORD_CYCLIFY_INT_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-CYCLIFY-INT-METHOD");
        $list712 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("MODIFIED"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL"), (SubLObject)SubLObjectFactory.makeKeyword("NUMBER")))));
        $list713 = ConsesLow.list((SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CLET"), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-COMPLEMENTS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER0"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OVERT-QUANTIFIER")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER0"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER0"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS")))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("PREP-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("MODIFIED"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("MODIFIED"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQL, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)SubLObjectFactory.makeKeyword("CD")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("NUMBER"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("NUMBER"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD")))), (SubLObject)SubLObjectFactory.makeSymbol("CYCL"), (SubLObject)SubLObjectFactory.makeSymbol("COL")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CYCL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAIN-COLLECTION"), (SubLObject)SubLObjectFactory.makeSymbol("CYCL"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL"), (SubLObject)SubLObjectFactory.makeSymbol("COL")), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Thing"))), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS")))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"))) }));
        $list714 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("MODIFIED"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL"), (SubLObject)SubLObjectFactory.makeKeyword("NUMBER"));
        $sym715$GET_OVERT_QUANTIFIER = SubLObjectFactory.makeSymbol("GET-OVERT-QUANTIFIER");
        $kw716$POSSESSOR = SubLObjectFactory.makeKeyword("POSSESSOR");
        $kw717$MODIFIED = SubLObjectFactory.makeKeyword("MODIFIED");
        $kw718$CD = SubLObjectFactory.makeKeyword("CD");
        $kw719$NUMBER = SubLObjectFactory.makeKeyword("NUMBER");
        $kw720$POSS_COL = SubLObjectFactory.makeKeyword("POSS-COL");
        $const721$Thing = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Thing"));
        $sym722$NOUN_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $sym723$RELATIONAL_NOUN_P = SubLObjectFactory.makeSymbol("RELATIONAL-NOUN-P");
        $list724 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RANKED-LEXES")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DENOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAME-VARIABLES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FRAME-RENAMING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RLE-LEX"), (SubLObject)SubLObjectFactory.makeSymbol("RLE")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET")), (SubLObject)SubLObjectFactory.makeKeyword("FRAME"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMULA-KEYWORDS"), (SubLObject)SubLObjectFactory.makeSymbol("DENOT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeKeyword("POSS-COL")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORD"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQ)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.T))))));
        $sym725$NOUN_LINK_WORD_RELATIONAL_NOUN_P_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-RELATIONAL-NOUN-P-METHOD");
        $list726 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OVERT-QUANTIFIER"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PCOND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"))), (SubLObject)SubLObjectFactory.makeString("the"))), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER")))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SINGULAR-P")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-EXISTENTIAL-NULL-DETERMINER"))))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PLURAL-P")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-EXISTENTIAL-NULL-DETERMINER"))))), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)))));
        $sym727$GET_EXISTENTIAL_NULL_DETERMINER = SubLObjectFactory.makeSymbol("GET-EXISTENTIAL-NULL-DETERMINER");
        $sym728$PLURAL_P = SubLObjectFactory.makeSymbol("PLURAL-P");
        $sym729$NOUN_LINK_WORD_GET_QUANTIFIER_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-QUANTIFIER-METHOD");
        $sym730$SUBLOOP_RESERVED_INITIALIZE_NOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-NOUN-LINK-WORD-CLASS");
        $sym731$SUBLOOP_RESERVED_INITIALIZE_NOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-NOUN-LINK-WORD-INSTANCE");
        $list732 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the complements of this noun"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("RELATIONAL-NOUN-P"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"))), (SubLObject)SubLObjectFactory.makeString("of"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT")))))));
        $sym733$NOUN_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $list734 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of words this noun modifies"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("MX-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("GN-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("AN-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))));
        $kw735$MX_PATTERN = SubLObjectFactory.makeKeyword("MX-PATTERN");
        $kw736$GN_PATTERN = SubLObjectFactory.makeKeyword("GN-PATTERN");
        $kw737$AN_PATTERN = SubLObjectFactory.makeKeyword("AN-PATTERN");
        $sym738$NOUN_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-MODIFIEDS-METHOD");
        $list739 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; the determiner of this noun"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("D-S-PATTERN"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PRP$"), (SubLObject)SubLObjectFactory.makeKeyword("POS")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("DET")))));
        $kw740$D_S_PATTERN = SubLObjectFactory.makeKeyword("D-S-PATTERN");
        $list741 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PRP$"), (SubLObject)SubLObjectFactory.makeKeyword("POS"));
        $sym742$NOUN_LINK_WORD_GET_DETERMINER_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-DETERMINER-METHOD");
        $sym743$GET_CARDINAL = SubLObjectFactory.makeSymbol("GET-CARDINAL");
        $list744 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; the cardinal of this noun"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("D-MC-PATTERN")))));
        $kw745$D_MC_PATTERN = SubLObjectFactory.makeKeyword("D-MC-PATTERN");
        $sym746$NOUN_LINK_WORD_GET_CARDINAL_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-CARDINAL-METHOD");
        $list747 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; the quantifier of this noun"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DETERMINER"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("QUANT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("QUANT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("QUANT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CARDINAL")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("QUANT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("QUANT")))));
        $sym748$NOUN_LINK_WORD_GET_OVERT_QUANTIFIER_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-OVERT-QUANTIFIER-METHOD");
        $list749 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; the possessor of this noun"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("PRP$"), (SubLObject)SubLObjectFactory.makeKeyword("POS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("DET")))));
        $kw750$D_PATTERN = SubLObjectFactory.makeKeyword("D-PATTERN");
        $sym751$NOUN_LINK_WORD_GET_POSSESSOR_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-POSSESSOR-METHOD");
        $sym752$GET_SPECIFIER = SubLObjectFactory.makeSymbol("GET-SPECIFIER");
        $list753 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return quantifier-link-word-p; the quantifier of this noun, or nil if there is none."), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SPEC"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SPEC"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("SPEC"))))));
        $sym754$NOUN_LINK_WORD_GET_SPECIFIER_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-SPECIFIER-METHOD");
        $list755 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; this noun's PPs"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("M-P-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))));
        $kw756$M_P_PATTERN = SubLObjectFactory.makeKeyword("M-P-PATTERN");
        $sym757$NOUN_LINK_WORD_GET_PPS_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-PPS-METHOD");
        $list758 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; an empty (null) determiner for this word"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CLET"), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-CLASS-INSTANCE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEX-ENTRY")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-LINK"), (SubLObject)SubLObjectFactory.makeString("D"))), (SubLObject)SubLObjectFactory.makeSymbol("DET")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("STRING"), (SubLObject)SubLObjectFactory.makeString("")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("CYC-POS"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Determiner"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("SEMTRANS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("thereExists")), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("and")), (SubLObject)SubLObjectFactory.makeKeyword("RESTR"), (SubLObject)SubLObjectFactory.makeKeyword("SCOPE"))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SET")), (SubLObject)SubLObjectFactory.makeKeyword("FRAME"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DeterminerFrame"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-LINK-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINKAGE"), (SubLObject)SubLObjectFactory.makeString(""), (SubLObject)linkage.ZERO_INTEGER, (SubLObject)linkage.NIL, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("LINK")), (SubLObject)SubLObjectFactory.makeKeyword("DT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CONTEXT"))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("DET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-EVEN-LEX-ENTRY-DISTRIBUTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("LEX")))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-RIGHT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINK")), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-LEFT-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINK")), (SubLObject)SubLObjectFactory.makeSymbol("DET")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)SubLObjectFactory.makeSymbol("LEFT-LINKS")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("DET")) }));
        $sym759$OUTER_CATCH_FOR_NOUN_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-NOUN-LINK-WORD-METHOD");
        $sym760$LEX_ENTRY = SubLObjectFactory.makeSymbol("LEX-ENTRY");
        $str761$D = SubLObjectFactory.makeString("D");
        $kw762$STRING = SubLObjectFactory.makeKeyword("STRING");
        $str763$ = SubLObjectFactory.makeString("");
        $kw764$CYC_POS = SubLObjectFactory.makeKeyword("CYC-POS");
        $const765$Determiner = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Determiner"));
        $list766 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("thereExists")), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("and")), (SubLObject)SubLObjectFactory.makeKeyword("RESTR"), (SubLObject)SubLObjectFactory.makeKeyword("SCOPE")));
        $const767$DeterminerFrame = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DeterminerFrame"));
        $kw768$DT = SubLObjectFactory.makeKeyword("DT");
        $sym769$NOUN_LINK_WORD_GET_EXISTENTIAL_NULL_DETERMINER_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-GET-EXISTENTIAL-NULL-DETERMINER-METHOD");
        $list770 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return boolean; t if this noun is singular, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NN"), (SubLObject)SubLObjectFactory.makeKeyword("NNP"), (SubLObject)SubLObjectFactory.makeKeyword("WP"))))));
        $list771 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NN"), (SubLObject)SubLObjectFactory.makeKeyword("NNP"), (SubLObject)SubLObjectFactory.makeKeyword("WP"));
        $sym772$NOUN_LINK_WORD_SINGULAR_P_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-SINGULAR-P-METHOD");
        $list773 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return boolean; t if this noun is plural, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CATEGORY"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NNS"), (SubLObject)SubLObjectFactory.makeKeyword("NNPS"))))));
        $list774 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NNS"), (SubLObject)SubLObjectFactory.makeKeyword("NNPS"));
        $sym775$NOUN_LINK_WORD_PLURAL_P_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-PLURAL-P-METHOD");
        $list776 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return boolean; t if this noun is an appositive, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("MX-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("GN-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT"))))));
        $sym777$NOUN_LINK_WORD_APPOSITIVE_P_METHOD = SubLObjectFactory.makeSymbol("NOUN-LINK-WORD-APPOSITIVE-P-METHOD");
        $sym778$COMMON_NOUN_LINK_WORD = SubLObjectFactory.makeSymbol("COMMON-NOUN-LINK-WORD");
        $sym779$SUBLOOP_RESERVED_INITIALIZE_COMMON_NOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-COMMON-NOUN-LINK-WORD-CLASS");
        $sym780$SUBLOOP_RESERVED_INITIALIZE_COMMON_NOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-COMMON-NOUN-LINK-WORD-INSTANCE");
        $sym781$PROPER_NOUN_LINK_WORD = SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD");
        $list782 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NAME-WORD"));
        $list783 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-QUANTIFIER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $list784 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OVERT-QUANTIFIER"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CNOT"), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PLURAL-P")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-EXISTENTIAL-NULL-DETERMINER"))), (SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER")))));
        $sym785$PROPER_NOUN_LINK_WORD_GET_QUANTIFIER_METHOD = SubLObjectFactory.makeSymbol("PROPER-NOUN-LINK-WORD-GET-QUANTIFIER-METHOD");
        $sym786$SUBLOOP_RESERVED_INITIALIZE_PROPER_NOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PROPER-NOUN-LINK-WORD-CLASS");
        $sym787$SUBLOOP_RESERVED_INITIALIZE_PROPER_NOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PROPER-NOUN-LINK-WORD-INSTANCE");
        $sym788$GERUND_LINK_WORD = SubLObjectFactory.makeSymbol("GERUND-LINK-WORD");
        $sym789$SUBLOOP_RESERVED_INITIALIZE_GERUND_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-GERUND-LINK-WORD-CLASS");
        $sym790$SUBLOOP_RESERVED_INITIALIZE_GERUND_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-GERUND-LINK-WORD-INSTANCE");
        $sym791$PRONOUN_LINK_WORD = SubLObjectFactory.makeSymbol("PRONOUN-LINK-WORD");
        $sym792$SUBLOOP_RESERVED_INITIALIZE_PRONOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PRONOUN-LINK-WORD-CLASS");
        $sym793$SUBLOOP_RESERVED_INITIALIZE_PRONOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PRONOUN-LINK-WORD-INSTANCE");
        $sym794$W_PRONOUN_LINK_WORD = SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD");
        $list795 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-REFS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ANTECEDENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("APPOSITIVE-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-QUANTIFIER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")));
        $sym796$SUBLOOP_RESERVED_INITIALIZE_W_PRONOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-W-PRONOUN-LINK-WORD-CLASS");
        $sym797$SUBLOOP_RESERVED_INITIALIZE_W_PRONOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-W-PRONOUN-LINK-WORD-INSTANCE");
        $list798 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the unique referents of this phrase"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ANTECEDENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-ANTECEDENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIF"), (SubLObject)SubLObjectFactory.makeSymbol("ANTECEDENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("ANTECEDENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-REFS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("REF"))))));
        $sym799$OUTER_CATCH_FOR_W_PRONOUN_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-W-PRONOUN-LINK-WORD-METHOD");
        $sym800$GET_ANTECEDENT = SubLObjectFactory.makeSymbol("GET-ANTECEDENT");
        $sym801$W_PRONOUN_LINK_WORD_GET_REFS_METHOD = SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD-GET-REFS-METHOD");
        $list802 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return parse-tree-p; the tree that serves as an antecedent to this wh word"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ANTECEDENTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("MX-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("ANTECEDENTS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("ANTECEDENTS"))))));
        $sym803$W_PRONOUN_LINK_WORD_GET_ANTECEDENT_METHOD = SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD-GET-ANTECEDENT-METHOD");
        $list804 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return boolean; t if this noun is an appositive, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym805$W_PRONOUN_LINK_WORD_APPOSITIVE_P_METHOD = SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD-APPOSITIVE-P-METHOD");
        $list806 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return word-tree-p; the quantifier of this name, or nil if there is none"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym807$W_PRONOUN_LINK_WORD_GET_QUANTIFIER_METHOD = SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD-GET-QUANTIFIER-METHOD");
        $list808 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return noun-link-word-p; the noun modivied by this relative pronoun"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("R-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT"))));
        $kw809$R_PATTERN = SubLObjectFactory.makeKeyword("R-PATTERN");
        $sym810$W_PRONOUN_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("W-PRONOUN-LINK-WORD-GET-MODIFIEDS-METHOD");
        $sym811$REL_PRONOUN_LINK_WORD = SubLObjectFactory.makeSymbol("REL-PRONOUN-LINK-WORD");
        $sym812$SUBLOOP_RESERVED_INITIALIZE_REL_PRONOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-REL-PRONOUN-LINK-WORD-CLASS");
        $sym813$SUBLOOP_RESERVED_INITIALIZE_REL_PRONOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-REL-PRONOUN-LINK-WORD-INSTANCE");
        $sym814$PERSONAL_PRONOUN_LINK_WORD = SubLObjectFactory.makeSymbol("PERSONAL-PRONOUN-LINK-WORD");
        $sym815$SUBLOOP_RESERVED_INITIALIZE_PERSONAL_PRONOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PERSONAL-PRONOUN-LINK-WORD-CLASS");
        $sym816$SUBLOOP_RESERVED_INITIALIZE_PERSONAL_PRONOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PERSONAL-PRONOUN-LINK-WORD-INSTANCE");
        $sym817$ADJECTIVE_LINK_WORD = SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD");
        $list818 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ADJECTIVAL-WORD"));
        $list819 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-PPS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")));
        $list820 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("REPLACE"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT")))));
        $list821 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("REPLACE"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeKeyword("REPLACE"), (SubLObject)linkage.NIL)), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("PREP-OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ-HEAD")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL))));
        $list822 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("REPLACE"), (SubLObject)SubLObjectFactory.makeKeyword("OBLIQUE-OBJECT"));
        $sym823$ADJECTIVE_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $list824 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ")))))));
        $sym825$ADJECTIVE_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $sym826$SUBLOOP_RESERVED_INITIALIZE_ADJECTIVE_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-ADJECTIVE-LINK-WORD-CLASS");
        $sym827$SUBLOOP_RESERVED_INITIALIZE_ADJECTIVE_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-ADJECTIVE-LINK-WORD-INSTANCE");
        $list828 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all words (generally nouns) that are modified by \n   this adjective."), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSOME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AA-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("A-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("L-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TA-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("M-PATTERN")))), (SubLObject)SubLObjectFactory.makeSymbol("RESULT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)SubLObjectFactory.makeSymbol("PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"))));
        $list829 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("AA-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("A-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("L-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("TA-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("M-PATTERN")));
        $sym830$ADJECTIVE_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD-GET-MODIFIEDS-METHOD");
        $list831 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; this adjective's PPs"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("MV-P-PATTERN")))));
        $sym832$ADJECTIVE_LINK_WORD_GET_PPS_METHOD = SubLObjectFactory.makeSymbol("ADJECTIVE-LINK-WORD-GET-PPS-METHOD");
        $sym833$ADVERB_LINK_WORD = SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD");
        $list834 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ADVERBIAL-WORD"));
        $list835 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $list836 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT")))));
        $list837 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBJECTS"))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL))));
        $list838 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("SUBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"));
        $sym839$ADVERB_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $sym840$SUBLOOP_RESERVED_INITIALIZE_ADVERB_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-ADVERB-LINK-WORD-CLASS");
        $sym841$SUBLOOP_RESERVED_INITIALIZE_ADVERB_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-ADVERB-LINK-WORD-INSTANCE");
        $list842 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all words that are modified by this adverb."), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSOME"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("EZ-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("E-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("MV-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("E-PATTERN")))), (SubLObject)SubLObjectFactory.makeSymbol("RESULT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)SubLObjectFactory.makeSymbol("PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("N-PATTERN"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("AUX")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("AUX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("VERBAL-COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"))))))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"))));
        $list843 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("EZ-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("E-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("MV-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("E-PATTERN")));
        $kw844$N_PATTERN = SubLObjectFactory.makeKeyword("N-PATTERN");
        $sym845$ADVERB_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD-GET-MODIFIEDS-METHOD");
        $list846 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the complements of this adverb"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS")))));
        $sym847$ADVERB_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("ADVERB-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $sym848$W_ADVERB_LINK_WORD = SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD");
        $list849 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $sym850$SUBLOOP_RESERVED_INITIALIZE_W_ADVERB_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-W-ADVERB-LINK-WORD-CLASS");
        $sym851$SUBLOOP_RESERVED_INITIALIZE_W_ADVERB_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-W-ADVERB-LINK-WORD-INSTANCE");
        $list852 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all words that are modified by this adverb."), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("Q-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SEMANTIC-HEADS")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COPULA"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("PF-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("COPULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("COPULA"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"))));
        $kw853$Q_PATTERN = SubLObjectFactory.makeKeyword("Q-PATTERN");
        $sym854$W_ADVERB_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("W-ADVERB-LINK-WORD-GET-MODIFIEDS-METHOD");
        $sym855$PREPOSITION_LINK_WORD = SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD");
        $list856 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PREPOSITIONAL-OR-PARTICLE-WORD"), (SubLObject)SubLObjectFactory.makeSymbol("PREPOSITIONAL-LINK-TREE"));
        $list857 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $list858 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE")))));
        $list859 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"))), (SubLObject)SubLObjectFactory.makeString("that")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLAUSE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOMINAL-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERBAL-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("CLAUSE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE"), (SubLObject)SubLObjectFactory.makeSymbol("CLAUSE")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL)))));
        $list860 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("ACTION"), (SubLObject)SubLObjectFactory.makeKeyword("OBJECT"), (SubLObject)SubLObjectFactory.makeKeyword("CLAUSE"));
        $str861$that = SubLObjectFactory.makeString("that");
        $sym862$PREPOSITION_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $sym863$SUBLOOP_RESERVED_INITIALIZE_PREPOSITION_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PREPOSITION-LINK-WORD-CLASS");
        $sym864$SUBLOOP_RESERVED_INITIALIZE_PREPOSITION_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PREPOSITION-LINK-WORD-INSTANCE");
        $list865 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return noun-link-word-p; the object noun of this preposition"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("J-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("ON-PATTERN")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("OBL-OBJ"))))));
        $kw866$J_PATTERN = SubLObjectFactory.makeKeyword("J-PATTERN");
        $kw867$ON_PATTERN = SubLObjectFactory.makeKeyword("ON-PATTERN");
        $sym868$PREPOSITION_LINK_WORD_GET_OBLIQUE_OBJECT_METHOD = SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD-GET-OBLIQUE-OBJECT-METHOD");
        $list869 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return verbal-tree-p; the verbal complement of this preposition"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EMBEDDED-SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("C-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EMBEDDED-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("EMBEDDED-SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("EMBEDDED-SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("EMBEDDED-VERB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINK-PHRASE"), (SubLObject)SubLObjectFactory.makeSymbol("EMBEDDED-VERB"))))));
        $kw870$C_PATTERN = SubLObjectFactory.makeKeyword("C-PATTERN");
        $sym871$PREPOSITION_LINK_WORD_GET_VERBAL_COMPLEMENT_METHOD = SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD-GET-VERBAL-COMPLEMENT-METHOD");
        $list872 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of words modified by this preposition"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COPULA"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AUX-VERB-LINK-WORD-P"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("COPULA"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("COPULA")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBJ-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CANDIDATES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJ-HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("SUBJ-HEAD"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("MV-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("M-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("Q-D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("PP-PATTERN")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE"), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATES")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM-NR"), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQ, (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIERS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMOVE"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIERS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQ))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATE"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-DIFFERENCE"), (SubLObject)SubLObjectFactory.makeSymbol("CANDIDATES"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS")))));
        $sym873$OUTER_CATCH_FOR_PREPOSITION_LINK_WORD_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-PREPOSITION-LINK-WORD-METHOD");
        $kw874$P_PATTERN = SubLObjectFactory.makeKeyword("P-PATTERN");
        $kw875$MV_PATTERN = SubLObjectFactory.makeKeyword("MV-PATTERN");
        $list876 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("Q-D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("PP-PATTERN"));
        $sym877$PREPOSITION_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD-GET-MODIFIEDS-METHOD");
        $list878 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the complements of this preposition"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-OBLIQUE-OBJECT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLAUSE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-VERBAL-COMPLEMENT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeSymbol("MODIFIEDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("OBJ"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("CLAUSE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeSymbol("CLAUSE")))))));
        $sym879$PREPOSITION_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("PREPOSITION-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $sym880$QUANTIFIER_LINK_WORD = SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD");
        $list881 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUANTIFIER-WORD"));
        $list882 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-QUANTIFIED"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $list883 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("RESTR"), (SubLObject)SubLObjectFactory.makeKeyword("SCOPE")))));
        $list884 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER?"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTS")))));
        $list885 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NOUN"), (SubLObject)SubLObjectFactory.makeKeyword("RESTR"), (SubLObject)SubLObjectFactory.makeKeyword("SCOPE"));
        $sym886$QUANTIFIER_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $sym887$SUBLOOP_RESERVED_INITIALIZE_QUANTIFIER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-QUANTIFIER-LINK-WORD-CLASS");
        $sym888$SUBLOOP_RESERVED_INITIALIZE_QUANTIFIER_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-QUANTIFIER-LINK-WORD-INSTANCE");
        $sym889$GET_QUANTIFIED = SubLObjectFactory.makeSymbol("GET-QUANTIFIED");
        $list890 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return noun-link-word; the word that restricts the variable that this determiner quantifies"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN")))));
        $sym891$QUANTIFIER_LINK_WORD_GET_QUANTIFIED_METHOD = SubLObjectFactory.makeSymbol("QUANTIFIER-LINK-WORD-GET-QUANTIFIED-METHOD");
        $sym892$DETERMINER_LINK_WORD = SubLObjectFactory.makeSymbol("DETERMINER-LINK-WORD");
        $sym893$SUBLOOP_RESERVED_INITIALIZE_DETERMINER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-DETERMINER-LINK-WORD-CLASS");
        $sym894$SUBLOOP_RESERVED_INITIALIZE_DETERMINER_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-DETERMINER-LINK-WORD-INSTANCE");
        $sym895$DEFINITE_DETERMINER_LINK_WORD = SubLObjectFactory.makeSymbol("DEFINITE-DETERMINER-LINK-WORD");
        $sym896$SUBLOOP_RESERVED_INITIALIZE_DEFINITE_DETERMINER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-DEFINITE-DETERMINER-LINK-WORD-CLASS");
        $sym897$SUBLOOP_RESERVED_INITIALIZE_DEFINITE_DETERMINER_LINK_WORD_INSTANC = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-DEFINITE-DETERMINER-LINK-WORD-INSTANCE");
        $sym898$W_DETERMINER_LINK_WORD = SubLObjectFactory.makeSymbol("W-DETERMINER-LINK-WORD");
        $sym899$SUBLOOP_RESERVED_INITIALIZE_W_DETERMINER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-W-DETERMINER-LINK-WORD-CLASS");
        $sym900$SUBLOOP_RESERVED_INITIALIZE_W_DETERMINER_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-W-DETERMINER-LINK-WORD-INSTANCE");
        $sym901$PREDETERMINER_LINK_WORD = SubLObjectFactory.makeSymbol("PREDETERMINER-LINK-WORD");
        $sym902$SUBLOOP_RESERVED_INITIALIZE_PREDETERMINER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PREDETERMINER-LINK-WORD-CLASS");
        $sym903$SUBLOOP_RESERVED_INITIALIZE_PREDETERMINER_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PREDETERMINER-LINK-WORD-INSTANCE");
        $sym904$POSSESSIVE_PRONOUN_LINK_WORD = SubLObjectFactory.makeSymbol("POSSESSIVE-PRONOUN-LINK-WORD");
        $sym905$SUBLOOP_RESERVED_INITIALIZE_POSSESSIVE_PRONOUN_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-POSSESSIVE-PRONOUN-LINK-WORD-CLASS");
        $sym906$SUBLOOP_RESERVED_INITIALIZE_POSSESSIVE_PRONOUN_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-POSSESSIVE-PRONOUN-LINK-WORD-INSTANCE");
        $sym907$CARDINAL_LINK_WORD = SubLObjectFactory.makeSymbol("CARDINAL-LINK-WORD");
        $sym908$SUBLOOP_RESERVED_INITIALIZE_CARDINAL_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-CARDINAL-LINK-WORD-CLASS");
        $sym909$SUBLOOP_RESERVED_INITIALIZE_CARDINAL_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-CARDINAL-LINK-WORD-INSTANCE");
        $sym910$CONJUNCTION_LINK_WORD = SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD");
        $list911 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")));
        $sym912$SUBLOOP_RESERVED_INITIALIZE_CONJUNCTION_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-CONJUNCTION-LINK-WORD-CLASS");
        $sym913$SUBLOOP_RESERVED_INITIALIZE_CONJUNCTION_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-CONJUNCTION-LINK-WORD-INSTANCE");
        $list914 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return list; a list of the conjuncts of this conjunction"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SISTER")), (SubLObject)linkage.MINUS_ONE_INTEGER), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SISTER")), (SubLObject)linkage.ONE_INTEGER))));
        $sym915$CONJUNCTION_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("CONJUNCTION-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $sym916$EXISTENTIAL_LINK_WORD = SubLObjectFactory.makeSymbol("EXISTENTIAL-LINK-WORD");
        $sym917$SUBLOOP_RESERVED_INITIALIZE_EXISTENTIAL_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-EXISTENTIAL-LINK-WORD-CLASS");
        $sym918$SUBLOOP_RESERVED_INITIALIZE_EXISTENTIAL_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-EXISTENTIAL-LINK-WORD-INSTANCE");
        $sym919$COMPARATOR_LINK_WORD = SubLObjectFactory.makeSymbol("COMPARATOR-LINK-WORD");
        $sym920$SUBLOOP_RESERVED_INITIALIZE_COMPARATOR_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-COMPARATOR-LINK-WORD-CLASS");
        $sym921$SUBLOOP_RESERVED_INITIALIZE_COMPARATOR_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-COMPARATOR-LINK-WORD-INSTANCE");
        $sym922$INF_MARKER_LINK_WORD = SubLObjectFactory.makeSymbol("INF-MARKER-LINK-WORD");
        $sym923$SUBLOOP_RESERVED_INITIALIZE_INF_MARKER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-INF-MARKER-LINK-WORD-CLASS");
        $sym924$SUBLOOP_RESERVED_INITIALIZE_INF_MARKER_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-INF-MARKER-LINK-WORD-INSTANCE");
        $sym925$PARTICLE_LINK_WORD = SubLObjectFactory.makeSymbol("PARTICLE-LINK-WORD");
        $sym926$SUBLOOP_RESERVED_INITIALIZE_PARTICLE_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PARTICLE-LINK-WORD-CLASS");
        $sym927$SUBLOOP_RESERVED_INITIALIZE_PARTICLE_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PARTICLE-LINK-WORD-INSTANCE");
        $sym928$PUNCTUATION_LINK_WORD = SubLObjectFactory.makeSymbol("PUNCTUATION-LINK-WORD");
        $list929 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNCTUATION-WORD"));
        $sym930$SUBLOOP_RESERVED_INITIALIZE_PUNCTUATION_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PUNCTUATION-LINK-WORD-CLASS");
        $sym931$SUBLOOP_RESERVED_INITIALIZE_PUNCTUATION_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-PUNCTUATION-LINK-WORD-INSTANCE");
        $sym932$POSS_MARKER_LINK_WORD = SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD");
        $list933 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSSESSIVE-WORD"));
        $list934 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-KEYWORD-RENAMINGS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSED"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-COMPLEMENTS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-MODIFIEDS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")));
        $list935 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSED")))));
        $list936 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSSESSED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSED"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAND"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSED"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQL))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COORDINATE-KEYWORD-RENAMING"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSED"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSED")), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISJUNCTIVE-KEYWORD-RENAMINGS"), (SubLObject)SubLObjectFactory.makeSymbol("CONJUNCTS"), (SubLObject)linkage.NIL))));
        $list937 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("POSSESSOR"), (SubLObject)SubLObjectFactory.makeKeyword("POSSESSED"));
        $sym938$GET_POSSESSED = SubLObjectFactory.makeSymbol("GET-POSSESSED");
        $kw939$POSSESSED = SubLObjectFactory.makeKeyword("POSSESSED");
        $sym940$POSS_MARKER_LINK_WORD_GET_KEYWORD_RENAMINGS_METHOD = SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD-GET-KEYWORD-RENAMINGS-METHOD");
        $sym941$SUBLOOP_RESERVED_INITIALIZE_POSS_MARKER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-POSS-MARKER-LINK-WORD-CLASS");
        $sym942$SUBLOOP_RESERVED_INITIALIZE_POSS_MARKER_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-POSS-MARKER-LINK-WORD-INSTANCE");
        $list943 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return noun-link-word-p; the possessor indicated by this poss marker"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("YS-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("LEFT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSOR"))))));
        $kw944$YS_PATTERN = SubLObjectFactory.makeKeyword("YS-PATTERN");
        $sym945$POSS_MARKER_LINK_WORD_GET_POSSESSOR_METHOD = SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD-GET-POSSESSOR-METHOD");
        $list946 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return noun-link-word-p; the thing possessed indicated by this poss marker"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSSESSED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeSymbol("POSSESSED"))))));
        $sym947$POSS_MARKER_LINK_WORD_GET_POSSESSED_METHOD = SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD-GET-POSSESSED-METHOD");
        $list948 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; a list of all complements of this tree, in surface order"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSOR"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-POSSESSED"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENT"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("COMPLEMENTS"))));
        $sym949$POSS_MARKER_LINK_WORD_GET_COMPLEMENTS_METHOD = SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD-GET-COMPLEMENTS-METHOD");
        $list950 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the constituents this possessive marker modifies"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECTLY-RELATED")), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("RIGHT"))));
        $sym951$POSS_MARKER_LINK_WORD_GET_MODIFIEDS_METHOD = SubLObjectFactory.makeSymbol("POSS-MARKER-LINK-WORD-GET-MODIFIEDS-METHOD");
        $sym952$COMPLEMENTIZER_LINK_WORD = SubLObjectFactory.makeSymbol("COMPLEMENTIZER-LINK-WORD");
        $sym953$SUBLOOP_RESERVED_INITIALIZE_COMPLEMENTIZER_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-COMPLEMENTIZER-LINK-WORD-CLASS");
        $sym954$SUBLOOP_RESERVED_INITIALIZE_COMPLEMENTIZER_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-COMPLEMENTIZER-LINK-WORD-INSTANCE");
        $sym955$SUBLOOP_RESERVED_INITIALIZE_WALL_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-WALL-LINK-WORD-CLASS");
        $sym956$SUBLOOP_RESERVED_INITIALIZE_WALL_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-WALL-LINK-WORD-INSTANCE");
        $sym957$LEFT_WALL_LINK_WORD = SubLObjectFactory.makeSymbol("LEFT-WALL-LINK-WORD");
        $sym958$SUBLOOP_RESERVED_INITIALIZE_LEFT_WALL_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LEFT-WALL-LINK-WORD-CLASS");
        $sym959$SUBLOOP_RESERVED_INITIALIZE_LEFT_WALL_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LEFT-WALL-LINK-WORD-INSTANCE");
        $sym960$RIGHT_WALL_LINK_WORD = SubLObjectFactory.makeSymbol("RIGHT-WALL-LINK-WORD");
        $sym961$SUBLOOP_RESERVED_INITIALIZE_RIGHT_WALL_LINK_WORD_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-RIGHT-WALL-LINK-WORD-CLASS");
        $sym962$SUBLOOP_RESERVED_INITIALIZE_RIGHT_WALL_LINK_WORD_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-RIGHT-WALL-LINK-WORD-INSTANCE");
        $list963 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE"));
        $list964 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINKS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DIAGRAM"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TREE-STRING"), (SubLObject)SubLObjectFactory.makeKeyword("INSTANCE"), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("YIELD"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PRINT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("XML"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("PRINT-DIAGRAM"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-TREE"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-TREE-STRING"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-WORD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("I")), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INDIRECT-OBJECT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CYCLIFIER"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROPERTIES")), (SubLObject)SubLObjectFactory.makeKeyword("INSTANTIATE-TEMPLATE"), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIABLE-QUESTION-P"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("SEARCH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORD")), (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT"), (SubLObject)linkage.NIL, (SubLObject)SubLObjectFactory.makeKeyword("PROTECTED")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-INSTANCE-METHOD"), (SubLObject)SubLObjectFactory.makeSymbol("LEXIFY"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEXICON")), (SubLObject)SubLObjectFactory.makeKeyword("PUBLIC")) });
        $sym965$TREE_STRING = SubLObjectFactory.makeSymbol("TREE-STRING");
        $sym966$TREE = SubLObjectFactory.makeSymbol("TREE");
        $sym967$DIAGRAM = SubLObjectFactory.makeSymbol("DIAGRAM");
        $sym968$WORDS = SubLObjectFactory.makeSymbol("WORDS");
        $sym969$LINKS = SubLObjectFactory.makeSymbol("LINKS");
        $sym970$CYCLIFY = SubLObjectFactory.makeSymbol("CYCLIFY");
        $list971 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("PROPERTIES"));
        $list972 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-CYCLIFIER")), (SubLObject)SubLObjectFactory.makeSymbol("PROPERTIES"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WHILE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("HAS-NEXT?"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("NEXT"))), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLS")))));
        $sym973$GET_CYCLIFIER = SubLObjectFactory.makeSymbol("GET-CYCLIFIER");
        $sym974$HAS_NEXT_ = SubLObjectFactory.makeSymbol("HAS-NEXT?");
        $sym975$NEXT = SubLObjectFactory.makeSymbol("NEXT");
        $sym976$LINKAGE_CYCLIFY_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-CYCLIFY-METHOD");
        $list977 = ConsesLow.list((SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CDESTRUCTURING-BIND"), ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("&KEY"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEXICON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-CLASS-INSTANCE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER-LEXICON")))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SCORE-FUNCTION"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFICATION-SCORE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OUTPUT"), (SubLObject)SubLObjectFactory.makeKeyword("BRIEF")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WFF-CHECK?"), (SubLObject)linkage.T), SubLObjectFactory.makeSymbol("CONTEXT"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISAMBIGUATOR"), (SubLObject)linkage.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COREFERENCE-RESOLVER"), (SubLObject)linkage.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ERROR-HANDLING"), (SubLObject)SubLObjectFactory.makeKeyword("THROW")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBCYCLIFIER-POOL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-CYCLIFIER-POOL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-CLASS-INSTANCE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("DATE-CYCLIFIER")))))), SubLObjectFactory.makeSymbol("&ALLOW-OTHER-KEYS") }), SubLObjectFactory.makeSymbol("PROPERTIES"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXICON"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER-LEXICON-P")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("SCORE-FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("FUNCTION-SPEC-P")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("OUTPUT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYWORDP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE-IF-PRESENT"), (SubLObject)SubLObjectFactory.makeSymbol("CONTEXT"), (SubLObject)SubLObjectFactory.makeSymbol("PARSE-TREE-CONTEXT-P")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("WFF-CHECK?"), (SubLObject)SubLObjectFactory.makeSymbol("BOOLEANP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MUST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeSymbol("ERROR-HANDLING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("THROW"), (SubLObject)SubLObjectFactory.makeKeyword("WARN"), (SubLObject)SubLObjectFactory.makeKeyword("IGNORE")))), (SubLObject)SubLObjectFactory.makeString("Invalid error-handling tag ~a"), (SubLObject)SubLObjectFactory.makeSymbol("ERROR-HANDLING")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE-IF-PRESENT"), (SubLObject)SubLObjectFactory.makeSymbol("SUBCYCLIFIER-POOL"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER-POOL-P")), ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CLET"), ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-CLASS-INSTANCE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"))))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-SCORE-FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)SubLObjectFactory.makeSymbol("SCORE-FUNCTION")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-OUTPUT"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)SubLObjectFactory.makeSymbol("OUTPUT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-ERROR-HANDLING"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)SubLObjectFactory.makeSymbol("ERROR-HANDLING")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-SUBCYCLIFIER-POOL"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)SubLObjectFactory.makeSymbol("SUBCYCLIFIER-POOL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("LEXICON"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXIFY")), (SubLObject)SubLObjectFactory.makeSymbol("LEXICON"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("DISAMBIGUATOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NULL"), (SubLObject)SubLObjectFactory.makeSymbol("CONTEXT")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CSETQ"), (SubLObject)SubLObjectFactory.makeSymbol("CONTEXT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-CLASS-INSTANCE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PARSE-TREE-CONTEXT"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("DISAMBIGUATOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("DISAMBIGUATE")), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)SubLObjectFactory.makeSymbol("CONTEXT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IGNORE"), (SubLObject)SubLObjectFactory.makeSymbol("COREFERENCE-RESOLVER")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-TREE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-WFF-CHECK?"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)SubLObjectFactory.makeSymbol("WFF-CHECK?")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("WFF-CHECK?"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-MEMOIZATION-STATE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-MEMOIZATION-STATE"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CYCLIFIER-SBHL-RESOURCE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-SBHL-MARKING-SPACE-RESOURCE"), (SubLObject)linkage.TEN_INTEGER))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFIER")) }) }));
        $kw978$LEXICON = SubLObjectFactory.makeKeyword("LEXICON");
        $kw979$SCORE_FUNCTION = SubLObjectFactory.makeKeyword("SCORE-FUNCTION");
        $sym980$CYCLIFICATION_SCORE = SubLObjectFactory.makeSymbol("CYCLIFICATION-SCORE");
        $kw981$OUTPUT = SubLObjectFactory.makeKeyword("OUTPUT");
        $kw982$BRIEF = SubLObjectFactory.makeKeyword("BRIEF");
        $kw983$WFF_CHECK_ = SubLObjectFactory.makeKeyword("WFF-CHECK?");
        $kw984$CONTEXT = SubLObjectFactory.makeKeyword("CONTEXT");
        $kw985$DISAMBIGUATOR = SubLObjectFactory.makeKeyword("DISAMBIGUATOR");
        $kw986$COREFERENCE_RESOLVER = SubLObjectFactory.makeKeyword("COREFERENCE-RESOLVER");
        $kw987$ERROR_HANDLING = SubLObjectFactory.makeKeyword("ERROR-HANDLING");
        $kw988$THROW = SubLObjectFactory.makeKeyword("THROW");
        $kw989$SUBCYCLIFIER_POOL = SubLObjectFactory.makeKeyword("SUBCYCLIFIER-POOL");
        $sym990$DATE_CYCLIFIER = SubLObjectFactory.makeSymbol("DATE-CYCLIFIER");
        $sym991$CYCLIFIER_LEXICON_P = SubLObjectFactory.makeSymbol("CYCLIFIER-LEXICON-P");
        $sym992$FUNCTION_SPEC_P = SubLObjectFactory.makeSymbol("FUNCTION-SPEC-P");
        $sym993$KEYWORDP = SubLObjectFactory.makeSymbol("KEYWORDP");
        $sym994$PARSE_TREE_CONTEXT_P = SubLObjectFactory.makeSymbol("PARSE-TREE-CONTEXT-P");
        $sym995$BOOLEANP = SubLObjectFactory.makeSymbol("BOOLEANP");
        $list996 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("THROW"), (SubLObject)SubLObjectFactory.makeKeyword("WARN"), (SubLObject)SubLObjectFactory.makeKeyword("IGNORE"));
        $str997$Invalid_error_handling_tag__a = SubLObjectFactory.makeString("Invalid error-handling tag ~a");
        $sym998$CYCLIFIER_POOL_P = SubLObjectFactory.makeSymbol("CYCLIFIER-POOL-P");
        $sym999$CYCLIFIER = SubLObjectFactory.makeSymbol("CYCLIFIER");
        $sym1000$PARSE_TREE_CONTEXT = SubLObjectFactory.makeSymbol("PARSE-TREE-CONTEXT");
        $sym1001$DISAMBIGUATE = SubLObjectFactory.makeSymbol("DISAMBIGUATE");
        $sym1002$LINKAGE_GET_CYCLIFIER_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-CYCLIFIER-METHOD");
        $sym1003$SUBLOOP_RESERVED_INITIALIZE_LINKAGE_CLASS = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINKAGE-CLASS");
        $sym1004$SUBLOOP_RESERVED_INITIALIZE_LINKAGE_INSTANCE = SubLObjectFactory.makeSymbol("SUBLOOP-RESERVED-INITIALIZE-LINKAGE-INSTANCE");
        $list1005 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK"), (SubLObject)SubLObjectFactory.makeSymbol("LINKAGE"), (SubLObject)SubLObjectFactory.makeSymbol("&KEY"), (SubLObject)SubLObjectFactory.makeSymbol("DONE")), (SubLObject)SubLObjectFactory.makeSymbol("&BODY"), (SubLObject)SubLObjectFactory.makeSymbol("BODY"));
        $list1006 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("DONE"));
        $kw1007$ALLOW_OTHER_KEYS = SubLObjectFactory.makeKeyword("ALLOW-OTHER-KEYS");
        $kw1008$DONE = SubLObjectFactory.makeKeyword("DONE");
        $sym1009$L = SubLObjectFactory.makeSymbol("L");
        $list1010 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LINKS")));
        $list1011 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("L"));
        $list1012 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)SubLObjectFactory.makeSymbol("LINKAGE")), (SubLObject)SubLObjectFactory.makeSymbol("&BODY"), (SubLObject)SubLObjectFactory.makeSymbol("BODY"));
        $sym1013$W = SubLObjectFactory.makeSymbol("W");
        $list1014 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")));
        $list1015 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("W"));
        $list1016 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINKAGE"), (SubLObject)SubLObjectFactory.makeSymbol("SENTENCE"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("PROPERTIES"), (SubLObject)SubLObjectFactory.makeSymbol("&BODY"), (SubLObject)SubLObjectFactory.makeSymbol("BODY"));
        $sym1017$ERROR = SubLObjectFactory.makeUninternedSymbol("ERROR");
        $sym1018$CATCH_ERROR_MESSAGE = SubLObjectFactory.makeSymbol("CATCH-ERROR-MESSAGE");
        $sym1019$NEW_LINKAGE = SubLObjectFactory.makeSymbol("NEW-LINKAGE");
        $list1020 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENSURE-LINK-SERVER-RUNNING"));
        $list1021 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&KEY"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONTEXT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-CLASS-INSTANCE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("PARSE-TREE-CONTEXT")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPTIONS"), (SubLObject)SubLObjectFactory.makeSymbol("*LINK-PARSE-OPTIONS*")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LEXICON"), (SubLObject)linkage.NIL), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("USE-STANDARDIZED-WORD-STRINGS?"), (SubLObject)linkage.T));
        $list1022 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CONTEXT"), (SubLObject)SubLObjectFactory.makeKeyword("OPTIONS"), (SubLObject)SubLObjectFactory.makeKeyword("LEXICON"), (SubLObject)SubLObjectFactory.makeKeyword("USE-STANDARDIZED-WORD-STRINGS?"));
        $kw1023$OPTIONS = SubLObjectFactory.makeKeyword("OPTIONS");
        $kw1024$USE_STANDARDIZED_WORD_STRINGS_ = SubLObjectFactory.makeKeyword("USE-STANDARDIZED-WORD-STRINGS?");
        $str1025$Couldn_t_build_tree_from__a = SubLObjectFactory.makeString("Couldn't build tree from ~a");
        $list1026 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the list of all words of this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DO-LINKAGE-WORDS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSH"), (SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")))));
        $sym1027$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1028$LINKAGE_YIELD_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-YIELD-METHOD");
        $list1029 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Prints this linkage to STREAM, ignoring DEPTH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IGNORE"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PPRINT-LINK-TREE"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)linkage.ZERO_INTEGER), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")));
        $sym1030$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1031$LINKAGE_PRINT_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-PRINT-METHOD");
        $list1032 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return stringp; the XML string representation of this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("XML"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDENT"), (SubLObject)linkage.ZERO_INTEGER)), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("CWITH-OUTPUT-TO-STRING"), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("XML")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeString("<linkage>~%")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TAB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeSymbol("INDENT"), (SubLObject)linkage.THREE_INTEGER), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeString("<tree>~%")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-TREE"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("XML")), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeSymbol("INDENT"), (SubLObject)linkage.SIX_INTEGER)), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TAB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeSymbol("INDENT"), (SubLObject)linkage.THREE_INTEGER), (SubLObject)SubLObjectFactory.makeSymbol("STREAM")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeString("</tree>~%")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINKS-XML"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-LINKAGE-LINKS"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeSymbol("INDENT"), (SubLObject)linkage.THREE_INTEGER)), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeString("</linkage>~%")) }), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("XML"))));
        $str1033$_linkage___ = SubLObjectFactory.makeString("<linkage>~%");
        $str1034$_tree___ = SubLObjectFactory.makeString("<tree>~%");
        $sym1035$GET_TREE = SubLObjectFactory.makeSymbol("GET-TREE");
        $str1036$__tree___ = SubLObjectFactory.makeString("</tree>~%");
        $str1037$__linkage___ = SubLObjectFactory.makeString("</linkage>~%");
        $sym1038$LINKAGE_XML_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-XML-METHOD");
        $str1039$__a = SubLObjectFactory.makeString("(~a");
        $str1040$_links___ = SubLObjectFactory.makeString("<links>~%");
        $str1041$__links___ = SubLObjectFactory.makeString("</links>~%");
        $str1042$_diagram___ = SubLObjectFactory.makeString("<diagram>~%");
        $str1043$__diagram___ = SubLObjectFactory.makeString("</diagram>~%");
        $str1044$_tree_string___ = SubLObjectFactory.makeString("<tree-string>~%");
        $str1045$__tree_string___ = SubLObjectFactory.makeString("</tree-string>~%");
        $sym1046$PRINT_DIAGRAM = SubLObjectFactory.makeSymbol("PRINT-DIAGRAM");
        $list1047 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Prints this linkage's diagram"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINC"), (SubLObject)SubLObjectFactory.makeSymbol("DIAGRAM")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL));
        $sym1048$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1049$LINKAGE_PRINT_DIAGRAM_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-PRINT-DIAGRAM-METHOD");
        $sym1050$LENGTH = SubLObjectFactory.makeSymbol("LENGTH");
        $list1051 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return integerp; the number of words in this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("-"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")), (SubLObject)linkage.TWO_INTEGER)));
        $sym1052$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1053$LINKAGE_LENGTH_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-LENGTH-METHOD");
        $list1054 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-tree-p; the tree of this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("TREE")));
        $sym1055$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1056$LINKAGE_GET_TREE_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-TREE-METHOD");
        $sym1057$GET_TREE_STRING = SubLObjectFactory.makeSymbol("GET-TREE-STRING");
        $list1058 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return stringp; the tree of this linkage, as a string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("TREE-STRING")));
        $sym1059$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1060$LINKAGE_GET_TREE_STRING_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-TREE-STRING-METHOD");
        $list1061 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param I non-negative-integer-p; the index of the daughter to be retrieved\n   @return link-tree-p; the Ith daughter of this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DAUGHTER")), (SubLObject)SubLObjectFactory.makeSymbol("I"))));
        $sym1062$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1063$LINKAGE_GET_DAUGHTER_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-DAUGHTER-METHOD");
        $sym1064$GET_WORD = SubLObjectFactory.makeSymbol("GET-WORD");
        $list1065 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param I non-negative-integer\n   @return link-word; the Ith word of this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUNLESS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">"), (SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("1-"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AREF"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)SubLObjectFactory.makeSymbol("I")))));
        $sym1066$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1067$LINKAGE_GET_WORD_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-WORD-METHOD");
        $list1068 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word; the head of this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)linkage.NIL)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATTERNS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("Q-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("B-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("PP-PATTERN"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOLIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AREF"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"), (SubLObject)linkage.ZERO_INTEGER), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-RELATED")), (SubLObject)SubLObjectFactory.makeSymbol("PATTERNS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VERB-LINK-WORD-P"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CPUSHNEW"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)linkage.EQ))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("HEADS"))));
        $sym1069$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $list1070 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("S-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("Q-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("P-PATTERN")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("W-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("D-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("B-PATTERN"), (SubLObject)SubLObjectFactory.makeKeyword("PP-PATTERN")));
        $sym1071$LINKAGE_GET_HEADS_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-HEADS-METHOD");
        $list1072 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEADS"))))));
        $sym1073$LINKAGE_GET_HEAD_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-HEAD-METHOD");
        $list1074 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; this linkage's subject"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-SUBJECT")))))));
        $sym1075$LINKAGE_GET_SUBJECT_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-SUBJECT-METHOD");
        $list1076 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; this linkage's direct-object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-DIRECT-OBJECT")))))));
        $sym1077$LINKAGE_GET_DIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-DIRECT-OBJECT-METHOD");
        $list1078 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return link-word-p; this linkage's indirect-object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-HEAD"))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FWHEN"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("HEAD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-INDIRECT-OBJECT")))))));
        $sym1079$LINKAGE_GET_INDIRECT_OBJECT_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-GET-INDIRECT-OBJECT-METHOD");
        $list1080 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return listp; the CycL representation of the meaning of this linkage"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("TREE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("CYCLIFY-INT")))));
        $sym1081$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1082$LINKAGE_CYCLIFY_INT_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-CYCLIFY-INT-METHOD");
        $list1083 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param LEXICON semtrans-lexicon-p; the lexicon to lexify with\n   @return linkage-p; this linkage destructively lexified with lexicon"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXICON"), (SubLObject)SubLObjectFactory.makeSymbol("SEMTRANS-LEXICON-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOVECTOR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("LEXIFY")), (SubLObject)SubLObjectFactory.makeSymbol("LEXICON"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)SubLObjectFactory.makeSymbol("SELF")));
        $sym1084$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1085$SEMTRANS_LEXICON_P = SubLObjectFactory.makeSymbol("SEMTRANS-LEXICON-P");
        $sym1086$LINKAGE_LEXIFY_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-LEXIFY-METHOD");
        $sym1087$CYCLIFIABLE_QUESTION_P = SubLObjectFactory.makeSymbol("CYCLIFIABLE-QUESTION-P");
        $list1088 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@return boolean; t if this linkage is a question, nil otherwise"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("SEARCH")), (SubLObject)SubLObjectFactory.makeString("?")))));
        $sym1089$SEARCH = SubLObjectFactory.makeSymbol("SEARCH");
        $str1090$_ = SubLObjectFactory.makeString("?");
        $sym1091$LINKAGE_CYCLIFIABLE_QUESTION_P_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-CYCLIFIABLE-QUESTION-P-METHOD");
        $list1092 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("N"), (SubLObject)linkage.ONE_INTEGER));
        $list1093 = ConsesLow.list((SubLObject)SubLObjectFactory.makeString("@param WORD stringp\n   @param N non-negative-integer-p\n   @return link-word-p; the Nth word with string WORD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("WORD"), (SubLObject)SubLObjectFactory.makeSymbol("STRINGP")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("N"), (SubLObject)SubLObjectFactory.makeSymbol("NON-NEGATIVE-INTEGER-P")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLET"), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COUNTER"), (SubLObject)linkage.ZERO_INTEGER)), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDOTIMES"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("I"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeSymbol("WORDS"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)linkage.EQUALP, (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-WORD")), (SubLObject)SubLObjectFactory.makeSymbol("I")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-STRING"))), (SubLObject)SubLObjectFactory.makeSymbol("WORD")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CINC"), (SubLObject)SubLObjectFactory.makeSymbol("COUNTER")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PWHEN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("="), (SubLObject)SubLObjectFactory.makeSymbol("COUNTER"), (SubLObject)SubLObjectFactory.makeSymbol("N")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIM"), (SubLObject)SubLObjectFactory.makeSymbol("SELF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("QUOTE"), (SubLObject)SubLObjectFactory.makeSymbol("GET-WORD")), (SubLObject)SubLObjectFactory.makeSymbol("I")))))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RET"), (SubLObject)linkage.NIL)));
        $sym1094$OUTER_CATCH_FOR_LINKAGE_METHOD = SubLObjectFactory.makeUninternedSymbol("OUTER-CATCH-FOR-LINKAGE-METHOD");
        $sym1095$LINKAGE_SEARCH_METHOD = SubLObjectFactory.makeSymbol("LINKAGE-SEARCH-METHOD");
        $str1096$No_regex_pattern_for__a = SubLObjectFactory.makeString("No regex pattern for ~a");
        $sym1097$UPPER_CASE_P = SubLObjectFactory.makeSymbol("UPPER-CASE-P");
        $list1098 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LINK-WORD")));
        $str1099$Inconsistent_class_evidence_from_ = SubLObjectFactory.makeString("Inconsistent class evidence from link parser: ~a for ~s (pos ~a, llinks ~a, rlinks ~a");
        $str1100$Couldn_t_strengthen_link_required = SubLObjectFactory.makeString("Couldn't strengthen link required class ~a for ~a~%");
        $str1101$Disjunctive_class_evidence__a_for = SubLObjectFactory.makeString("Disjunctive class evidence ~a for ~s (pos ~a, llinks ~a, rlinks ~a, penn-pos ~a");
        $int1102$45 = SubLObjectFactory.makeInteger(45);
        $str1103$data_pos_tagging_index_to_state_t = SubLObjectFactory.makeString("data/pos-tagging/index-to-state.txt");
        $kw1104$INPUT = SubLObjectFactory.makeKeyword("INPUT");
        $str1105$Unable_to_open__S = SubLObjectFactory.makeString("Unable to open ~S");
        $list1106 = ConsesLow.list((SubLObject)Characters.CHAR_caret);
        $kw1107$UNINITIALIZED = SubLObjectFactory.makeKeyword("UNINITIALIZED");
        $sym1108$SYMBOLP = SubLObjectFactory.makeSymbol("SYMBOLP");
        $kw1109$AUX = SubLObjectFactory.makeKeyword("AUX");
        $sym1110$_ = SubLObjectFactory.makeSymbol(">");
        $list1111 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("CATEGORY"), (SubLObject)SubLObjectFactory.makeKeyword("AUX"));
        $str1112$linkage = SubLObjectFactory.makeString("linkage");
        $str1113$_a_is_not_a_linkage_xml_string = SubLObjectFactory.makeString("~a is not a linkage xml string");
        $str1114$links = SubLObjectFactory.makeString("links");
        $str1115$tree = SubLObjectFactory.makeString("tree");
        $str1116$LEFT_WALL = SubLObjectFactory.makeString("LEFT-WALL");
        $str1117$RIGHT_WALL = SubLObjectFactory.makeString("RIGHT-WALL");
        $str1118$name = SubLObjectFactory.makeString("name");
        $str1119$left = SubLObjectFactory.makeString("left");
        $str1120$right = SubLObjectFactory.makeString("right");
        $str1121$phrase = SubLObjectFactory.makeString("phrase");
        $str1122$_a_is_not_a_valid_xml_sexpr_tree_ = SubLObjectFactory.makeString("~a is not a valid xml sexpr tree specification");
        $str1123$cat = SubLObjectFactory.makeString("cat");
        $str1124$class = SubLObjectFactory.makeString("class");
        $kw1125$CYC = SubLObjectFactory.makeKeyword("CYC");
        $str1126$word = SubLObjectFactory.makeString("word");
        $str1127$__ = SubLObjectFactory.makeString("(:");
        $str1128$__W__ = SubLObjectFactory.makeString("(:W \"");
        $str1129$__ = SubLObjectFactory.makeString("\")");
        $list1130 = ConsesLow.list((SubLObject)Characters.CHAR_rparen);
        $list1131 = ConsesLow.list((SubLObject)Characters.CHAR_space, (SubLObject)Characters.CHAR_newline);
        $sym1132$TEST_LINKAGE_WITH_RETOKENIZATION = SubLObjectFactory.makeSymbol("TEST-LINKAGE-WITH-RETOKENIZATION");
        $kw1133$TEST = SubLObjectFactory.makeKeyword("TEST");
        $sym1134$SOME_LINKAGE_RESULTS = SubLObjectFactory.makeSymbol("SOME-LINKAGE-RESULTS");
        $kw1135$OWNER = SubLObjectFactory.makeKeyword("OWNER");
        $kw1136$CLASSES = SubLObjectFactory.makeKeyword("CLASSES");
        $kw1137$KB = SubLObjectFactory.makeKeyword("KB");
        $kw1138$FULL = SubLObjectFactory.makeKeyword("FULL");
        $kw1139$WORKING_ = SubLObjectFactory.makeKeyword("WORKING?");
        $list1140 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Bush didn't realize that Austin, TX is a banana-boat in December, 2003")), (SubLObject)linkage.T), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Bush didn't realize blarge that is a banana-boat in December, 2003")), (SubLObject)linkage.T), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("Bush didn't realize that Afghanistan is land-locked")), (SubLObject)linkage.T), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("The cat sat on the mat")), (SubLObject)linkage.T), (SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("template from test query fn test query fn #$CST-ISSomeoneWithCerebralPalsyCapableOfCoordinatedBodyMovement is a formula template")), (SubLObject)linkage.T));
        $sym1141$LINKS_HAVE_NAMES_ = SubLObjectFactory.makeSymbol("LINKS-HAVE-NAMES?");
        $list1142 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeString("The Hazaras even boasted a prime minister, Sultan Ali Keshtmand, in the mid-1980s.")), (SubLObject)linkage.T));
    }
    
    public static final class $link_native extends SubLStructNative
    {
        public SubLObject $name;
        public SubLObject $left_word;
        public SubLObject $right_word;
        private static final SubLStructDeclNative structDecl;
        
        public $link_native() {
            this.$name = (SubLObject)CommonSymbols.NIL;
            this.$left_word = (SubLObject)CommonSymbols.NIL;
            this.$right_word = (SubLObject)CommonSymbols.NIL;
        }
        
        public SubLStructDecl getStructDecl() {
            return (SubLStructDecl)$link_native.structDecl;
        }
        
        public SubLObject getField2() {
            return this.$name;
        }
        
        public SubLObject getField3() {
            return this.$left_word;
        }
        
        public SubLObject getField4() {
            return this.$right_word;
        }
        
        public SubLObject setField2(final SubLObject value) {
            return this.$name = value;
        }
        
        public SubLObject setField3(final SubLObject value) {
            return this.$left_word = value;
        }
        
        public SubLObject setField4(final SubLObject value) {
            return this.$right_word = value;
        }
        
        static {
            structDecl = Structures.makeStructDeclNative((Class)$link_native.class, linkage.$sym69$LINK, linkage.$sym70$LINK_P, linkage.$list71, linkage.$list72, new String[] { "$name", "$left_word", "$right_word" }, linkage.$list73, linkage.$list74, linkage.$sym75$PRINT_LINKAGE_LINK);
        }
    }
    
    public static final class $link_p$UnaryFunction extends UnaryFunction
    {
        public $link_p$UnaryFunction() {
            super(SubLTranslatedFile.extractFunctionNamed("LINK-P"));
        }
        
        public SubLObject processItem(final SubLObject arg1) {
            return linkage.link_p(arg1);
        }
    }
}

/*

	Total time: 10692 ms
	 synthetic 
*/