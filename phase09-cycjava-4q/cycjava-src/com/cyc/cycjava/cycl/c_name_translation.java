package com.cyc.cycjava.cycl;

import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.cdestructuring_bind;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class c_name_translation extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.c_name_translation";
    public static final String myFingerPrint = "6c995291f6918fef663112a5980012678570328a91ebe0ccf6ea39bd73a01cbb";
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 1114L)
    private static SubLSymbol $c_backend_defined_function_name_data$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 23589L)
    private static SubLSymbol $c_backend_undefined_function_name_data$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 43809L)
    private static SubLSymbol $c_backend_function_arity_version_table$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 44578L)
    private static SubLSymbol $c_backend_undefined_arity_function_name_data$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 46392L)
    private static SubLSymbol $c_backend_function_boolean_version_table$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 48923L)
    private static SubLSymbol $c_backend_function_boolean_hash$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 49559L)
    private static SubLSymbol $c_backend_undefined_boolean_function_name_data$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 53188L)
    private static SubLSymbol $c_backend_function_name_table$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 54467L)
    private static SubLSymbol $c_backend_function_arglist_table$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 55871L)
    private static SubLSymbol $c_backend_predefined_constant_table$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 59331L)
    private static SubLSymbol $c_backend_defined_global_name_data$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 63118L)
    private static SubLSymbol $c_backend_undefined_global_name_data$;
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 64742L)
    private static SubLSymbol $c_backend_global_name_table$;
    private static final SubLObject $list0;
    private static final SubLObject $list1;
    private static final SubLList $list2;
    private static final SubLList $list3;
    private static final SubLList $list4;
    private static final SubLSymbol $sym5$_DTB;
    private static final SubLSymbol $sym6$_BTD;
    private static final SubLList $list7;
    private static final SubLSymbol $kw8$UNINITIALIZED;
    private static final SubLList $list9;
    private static final SubLObject $list10;
    private static final SubLList $list11;
    private static final SubLSymbol $kw12$UNSPECIFIED;
    private static final SubLInteger $int13$500;
    private static final SubLList $list14;
    private static final SubLObject $list15;
    private static final SubLList $list16;
    private static final SubLList $list17;
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 23407L)
    public static SubLObject c_backend_defined_function_p(final SubLObject function) {
        SubLObject cdolist_list_var = c_name_translation.$c_backend_defined_function_name_data$.getGlobalValue();
        SubLObject datum = (SubLObject)c_name_translation.NIL;
        datum = cdolist_list_var.first();
        while (c_name_translation.NIL != cdolist_list_var) {
            if (function.eql(datum.first())) {
                return (SubLObject)c_name_translation.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            datum = cdolist_list_var.first();
        }
        return (SubLObject)c_name_translation.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 43188L)
    public static SubLObject c_backend_function_call_arity_transform(final SubLObject function_call_form) {
        if (function_call_form.isCons()) {
            SubLObject operator = (SubLObject)c_name_translation.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(function_call_form, function_call_form, (SubLObject)c_name_translation.$list2);
            operator = function_call_form.first();
            final SubLObject args;
            final SubLObject current = args = function_call_form.rest();
            final SubLObject call_arity = Sequences.length(args);
            final SubLObject call_arity_operator = c_backend_function_call_arity_lookup(operator, call_arity);
            if (c_name_translation.NIL != call_arity_operator) {
                return reader.bq_cons(call_arity_operator, ConsesLow.append(args, (SubLObject)c_name_translation.NIL));
            }
        }
        return function_call_form;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 45384L)
    public static SubLObject c_backend_function_call_arity_lookup(final SubLObject operator, final SubLObject call_arity) {
        final SubLObject operator_arity_versions = list_utilities.alist_lookup_without_values(c_name_translation.$c_backend_function_arity_version_table$.getGlobalValue(), operator, Symbols.symbol_function((SubLObject)c_name_translation.EQ), (SubLObject)c_name_translation.UNPROVIDED);
        if (c_name_translation.NIL != operator_arity_versions) {
            return list_utilities.alist_lookup_without_values(operator_arity_versions, call_arity, (SubLObject)c_name_translation.UNPROVIDED, (SubLObject)c_name_translation.UNPROVIDED);
        }
        return (SubLObject)c_name_translation.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 45718L)
    public static SubLObject c_backend_simplify_Xdtb_transform(final SubLObject dtb_form) {
        if (dtb_form.isCons() && c_name_translation.$sym5$_DTB == dtb_form.first()) {
            final SubLObject subform = conses_high.second(dtb_form);
            if (subform.isCons()) {
                SubLObject current;
                final SubLObject datum = current = subform;
                SubLObject operator = (SubLObject)c_name_translation.NIL;
                cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list2);
                operator = current.first();
                final SubLObject args;
                current = (args = current.rest());
                if (operator == c_name_translation.$sym6$_BTD) {
                    return args.first();
                }
                final SubLObject boolean_version = c_backend_boolean_function_call_lookup(operator);
                if (c_name_translation.NIL != boolean_version) {
                    return reader.bq_cons(boolean_version, ConsesLow.append(args, (SubLObject)c_name_translation.NIL));
                }
            }
        }
        return dtb_form;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 49002L)
    public static SubLObject initialize_c_backend_function_boolean_hash() {
        final SubLObject table = Hashtables.make_hash_table(Sequences.length(c_name_translation.$c_backend_function_boolean_version_table$.getGlobalValue()), Symbols.symbol_function((SubLObject)c_name_translation.EQ), (SubLObject)c_name_translation.UNPROVIDED);
        SubLObject cdolist_list_var = c_name_translation.$c_backend_function_boolean_version_table$.getGlobalValue();
        SubLObject cons = (SubLObject)c_name_translation.NIL;
        cons = cdolist_list_var.first();
        while (c_name_translation.NIL != cdolist_list_var) {
            SubLObject current;
            final SubLObject datum = current = cons;
            SubLObject function = (SubLObject)c_name_translation.NIL;
            SubLObject boolean_version = (SubLObject)c_name_translation.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list9);
            function = current.first();
            current = (boolean_version = current.rest());
            Hashtables.sethash(function, table, boolean_version);
            cdolist_list_var = cdolist_list_var.rest();
            cons = cdolist_list_var.first();
        }
        c_name_translation.$c_backend_function_boolean_hash$.setGlobalValue(table);
        return table;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 49411L)
    public static SubLObject c_backend_boolean_function_call_lookup(final SubLObject operator) {
        return Hashtables.gethash_without_values(operator, c_name_translation.$c_backend_function_boolean_hash$.getGlobalValue(), (SubLObject)c_name_translation.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 53462L)
    public static SubLObject c_backend_function_name_lookup(final SubLObject function) {
        return Hashtables.gethash_without_values(function, c_name_translation.$c_backend_function_name_table$.getGlobalValue(), (SubLObject)c_name_translation.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 53599L)
    public static SubLObject c_backend_predefined_function_p(final SubLObject function) {
        return list_utilities.sublisp_boolean(Hashtables.gethash_without_values(function, c_name_translation.$c_backend_function_name_table$.getGlobalValue(), (SubLObject)c_name_translation.NIL));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 53816L)
    public static SubLObject initialize_c_backend_function_name_table() {
        final SubLObject data = ConsesLow.nconc(new SubLObject[] { conses_high.copy_list(c_name_translation.$c_backend_defined_function_name_data$.getGlobalValue()), conses_high.copy_list(c_name_translation.$c_backend_undefined_function_name_data$.getGlobalValue()), conses_high.copy_list(c_name_translation.$c_backend_undefined_arity_function_name_data$.getGlobalValue()), conses_high.copy_list(c_name_translation.$c_backend_undefined_boolean_function_name_data$.getGlobalValue()) });
        final SubLObject table = Hashtables.make_hash_table(Sequences.length(data), Symbols.symbol_function((SubLObject)c_name_translation.EQ), (SubLObject)c_name_translation.UNPROVIDED);
        SubLObject cdolist_list_var = data;
        SubLObject item = (SubLObject)c_name_translation.NIL;
        item = cdolist_list_var.first();
        while (c_name_translation.NIL != cdolist_list_var) {
            SubLObject current;
            final SubLObject datum = current = item;
            SubLObject symbol = (SubLObject)c_name_translation.NIL;
            SubLObject c_backend_name = (SubLObject)c_name_translation.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list11);
            symbol = current.first();
            current = current.rest();
            cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list11);
            c_backend_name = current.first();
            current = current.rest();
            final SubLObject arglist = (SubLObject)(current.isCons() ? current.first() : c_name_translation.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(current, datum, (SubLObject)c_name_translation.$list11);
            current = current.rest();
            if (c_name_translation.NIL == current) {
                Hashtables.sethash(symbol, table, c_backend_name);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)c_name_translation.$list11);
            }
            cdolist_list_var = cdolist_list_var.rest();
            item = cdolist_list_var.first();
        }
        c_name_translation.$c_backend_function_name_table$.setGlobalValue(table);
        return table;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 54747L)
    public static SubLObject c_backend_function_arglist_lookup(final SubLObject function) {
        return Hashtables.gethash_without_values(function, c_name_translation.$c_backend_function_arglist_table$.getGlobalValue(), (SubLObject)c_name_translation.$kw12$UNSPECIFIED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 54899L)
    public static SubLObject initialize_c_backend_function_arglist_table() {
        final SubLObject table = Hashtables.make_hash_table((SubLObject)c_name_translation.$int13$500, Symbols.symbol_function((SubLObject)c_name_translation.EQ), (SubLObject)c_name_translation.UNPROVIDED);
        SubLObject cdolist_list_var = c_name_translation.$c_backend_defined_function_name_data$.getGlobalValue();
        SubLObject item = (SubLObject)c_name_translation.NIL;
        item = cdolist_list_var.first();
        while (c_name_translation.NIL != cdolist_list_var) {
            SubLObject current;
            final SubLObject datum = current = item;
            SubLObject symbol = (SubLObject)c_name_translation.NIL;
            SubLObject c_backend_name = (SubLObject)c_name_translation.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list14);
            symbol = current.first();
            current = current.rest();
            cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list14);
            c_backend_name = current.first();
            current = current.rest();
            if (c_name_translation.NIL == current) {
                if (c_name_translation.NIL != subl_promotions.function_symbol_p(symbol)) {
                    final SubLObject arglist = subl_promotions.function_symbol_arglist(symbol);
                    Hashtables.sethash(symbol, table, arglist);
                }
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)c_name_translation.$list14);
            }
            cdolist_list_var = cdolist_list_var.rest();
            item = cdolist_list_var.first();
        }
        SubLObject cdolist_list_var2;
        final SubLObject data = cdolist_list_var2 = ConsesLow.nconc(conses_high.copy_list(c_name_translation.$c_backend_undefined_function_name_data$.getGlobalValue()), conses_high.copy_list(c_name_translation.$c_backend_undefined_arity_function_name_data$.getGlobalValue()), conses_high.copy_list(c_name_translation.$c_backend_undefined_boolean_function_name_data$.getGlobalValue()));
        SubLObject item2 = (SubLObject)c_name_translation.NIL;
        item2 = cdolist_list_var2.first();
        while (c_name_translation.NIL != cdolist_list_var2) {
            SubLObject current2;
            final SubLObject datum2 = current2 = item2;
            SubLObject symbol2 = (SubLObject)c_name_translation.NIL;
            SubLObject c_backend_name2 = (SubLObject)c_name_translation.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(current2, datum2, (SubLObject)c_name_translation.$list11);
            symbol2 = current2.first();
            current2 = current2.rest();
            cdestructuring_bind.destructuring_bind_must_consp(current2, datum2, (SubLObject)c_name_translation.$list11);
            c_backend_name2 = current2.first();
            current2 = current2.rest();
            final SubLObject arglist2 = (SubLObject)(current2.isCons() ? current2.first() : c_name_translation.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(current2, datum2, (SubLObject)c_name_translation.$list11);
            current2 = current2.rest();
            if (c_name_translation.NIL == current2) {
                Hashtables.sethash(symbol2, table, arglist2);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(datum2, (SubLObject)c_name_translation.$list11);
            }
            cdolist_list_var2 = cdolist_list_var2.rest();
            item2 = cdolist_list_var2.first();
        }
        c_name_translation.$c_backend_function_arglist_table$.setGlobalValue(table);
        return table;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 59174L)
    public static SubLObject c_backend_predefined_constant_name(final SubLObject constant) {
        return list_utilities.alist_lookup_without_values(c_name_translation.$c_backend_predefined_constant_table$.getGlobalValue(), constant, Symbols.symbol_function((SubLObject)c_name_translation.EQL), (SubLObject)c_name_translation.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 64588L)
    public static SubLObject c_backend_undefined_variable_binding_type_lookup(final SubLObject variable) {
        return conses_high.third(conses_high.assoc(variable, c_name_translation.$c_backend_undefined_global_name_data$.getGlobalValue(), Symbols.symbol_function((SubLObject)c_name_translation.EQ), (SubLObject)c_name_translation.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 65012L)
    public static SubLObject c_backend_global_name_lookup(final SubLObject global) {
        return Hashtables.gethash_without_values(global, c_name_translation.$c_backend_global_name_table$.getGlobalValue(), (SubLObject)c_name_translation.NIL);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 65141L)
    public static SubLObject c_backend_predefined_global_p(final SubLObject global) {
        return list_utilities.sublisp_boolean(Hashtables.gethash_without_values(global, c_name_translation.$c_backend_global_name_table$.getGlobalValue(), (SubLObject)c_name_translation.NIL));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/c-name-translation.lisp", position = 65346L)
    public static SubLObject initialize_c_backend_global_name_table() {
        final SubLObject data = ConsesLow.nconc(conses_high.copy_list(c_name_translation.$c_backend_defined_global_name_data$.getGlobalValue()), conses_high.copy_list(c_name_translation.$c_backend_undefined_global_name_data$.getGlobalValue()));
        final SubLObject table = Hashtables.make_hash_table(Sequences.length(data), Symbols.symbol_function((SubLObject)c_name_translation.EQ), (SubLObject)c_name_translation.UNPROVIDED);
        SubLObject cdolist_list_var = data;
        SubLObject item = (SubLObject)c_name_translation.NIL;
        item = cdolist_list_var.first();
        while (c_name_translation.NIL != cdolist_list_var) {
            SubLObject current;
            final SubLObject datum = current = item;
            SubLObject symbol = (SubLObject)c_name_translation.NIL;
            SubLObject c_backend_name = (SubLObject)c_name_translation.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list11);
            symbol = current.first();
            current = current.rest();
            cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)c_name_translation.$list11);
            c_backend_name = current.first();
            current = current.rest();
            final SubLObject arglist = (SubLObject)(current.isCons() ? current.first() : c_name_translation.NIL);
            cdestructuring_bind.destructuring_bind_must_listp(current, datum, (SubLObject)c_name_translation.$list11);
            current = current.rest();
            if (c_name_translation.NIL == current) {
                Hashtables.sethash(symbol, table, c_backend_name);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(datum, (SubLObject)c_name_translation.$list11);
            }
            cdolist_list_var = cdolist_list_var.rest();
            item = cdolist_list_var.first();
        }
        c_name_translation.$c_backend_global_name_table$.setGlobalValue(table);
        return table;
    }
    
    public static SubLObject declare_c_name_translation_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_defined_function_p", "C-BACKEND-DEFINED-FUNCTION-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_function_call_arity_transform", "C-BACKEND-FUNCTION-CALL-ARITY-TRANSFORM", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_function_call_arity_lookup", "C-BACKEND-FUNCTION-CALL-ARITY-LOOKUP", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_simplify_Xdtb_transform", "C-BACKEND-SIMPLIFY-%DTB-TRANSFORM", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "initialize_c_backend_function_boolean_hash", "INITIALIZE-C-BACKEND-FUNCTION-BOOLEAN-HASH", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_boolean_function_call_lookup", "C-BACKEND-BOOLEAN-FUNCTION-CALL-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_function_name_lookup", "C-BACKEND-FUNCTION-NAME-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_predefined_function_p", "C-BACKEND-PREDEFINED-FUNCTION-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "initialize_c_backend_function_name_table", "INITIALIZE-C-BACKEND-FUNCTION-NAME-TABLE", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_function_arglist_lookup", "C-BACKEND-FUNCTION-ARGLIST-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "initialize_c_backend_function_arglist_table", "INITIALIZE-C-BACKEND-FUNCTION-ARGLIST-TABLE", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_predefined_constant_name", "C-BACKEND-PREDEFINED-CONSTANT-NAME", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_undefined_variable_binding_type_lookup", "C-BACKEND-UNDEFINED-VARIABLE-BINDING-TYPE-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_global_name_lookup", "C-BACKEND-GLOBAL-NAME-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "c_backend_predefined_global_p", "C-BACKEND-PREDEFINED-GLOBAL-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.c_name_translation", "initialize_c_backend_global_name_table", "INITIALIZE-C-BACKEND-GLOBAL-NAME-TABLE", 0, 0, false);
        return (SubLObject)c_name_translation.NIL;
    }
    
    public static SubLObject init_c_name_translation_file() {
        c_name_translation.$c_backend_defined_function_name_data$ = SubLFiles.deflexical("*C-BACKEND-DEFINED-FUNCTION-NAME-DATA*", c_name_translation.$list0);
        c_name_translation.$c_backend_undefined_function_name_data$ = SubLFiles.deflexical("*C-BACKEND-UNDEFINED-FUNCTION-NAME-DATA*", c_name_translation.$list1);
        c_name_translation.$c_backend_function_arity_version_table$ = SubLFiles.deflexical("*C-BACKEND-FUNCTION-ARITY-VERSION-TABLE*", (SubLObject)c_name_translation.$list3);
        c_name_translation.$c_backend_undefined_arity_function_name_data$ = SubLFiles.deflexical("*C-BACKEND-UNDEFINED-ARITY-FUNCTION-NAME-DATA*", (SubLObject)c_name_translation.$list4);
        c_name_translation.$c_backend_function_boolean_version_table$ = SubLFiles.deflexical("*C-BACKEND-FUNCTION-BOOLEAN-VERSION-TABLE*", (SubLObject)c_name_translation.$list7);
        c_name_translation.$c_backend_function_boolean_hash$ = SubLFiles.deflexical("*C-BACKEND-FUNCTION-BOOLEAN-HASH*", (SubLObject)c_name_translation.$kw8$UNINITIALIZED);
        c_name_translation.$c_backend_undefined_boolean_function_name_data$ = SubLFiles.deflexical("*C-BACKEND-UNDEFINED-BOOLEAN-FUNCTION-NAME-DATA*", c_name_translation.$list10);
        c_name_translation.$c_backend_function_name_table$ = SubLFiles.deflexical("*C-BACKEND-FUNCTION-NAME-TABLE*", (SubLObject)c_name_translation.$kw8$UNINITIALIZED);
        c_name_translation.$c_backend_function_arglist_table$ = SubLFiles.deflexical("*C-BACKEND-FUNCTION-ARGLIST-TABLE*", (SubLObject)c_name_translation.$kw8$UNINITIALIZED);
        c_name_translation.$c_backend_predefined_constant_table$ = SubLFiles.deflexical("*C-BACKEND-PREDEFINED-CONSTANT-TABLE*", c_name_translation.$list15);
        c_name_translation.$c_backend_defined_global_name_data$ = SubLFiles.deflexical("*C-BACKEND-DEFINED-GLOBAL-NAME-DATA*", (SubLObject)c_name_translation.$list16);
        c_name_translation.$c_backend_undefined_global_name_data$ = SubLFiles.deflexical("*C-BACKEND-UNDEFINED-GLOBAL-NAME-DATA*", (SubLObject)c_name_translation.$list17);
        c_name_translation.$c_backend_global_name_table$ = SubLFiles.deflexical("*C-BACKEND-GLOBAL-NAME-TABLE*", (SubLObject)c_name_translation.$kw8$UNINITIALIZED);
        return (SubLObject)c_name_translation.NIL;
    }
    
    public static SubLObject setup_c_name_translation_file() {
        initialize_c_backend_function_boolean_hash();
        initialize_c_backend_function_name_table();
        initialize_c_backend_function_arglist_table();
        initialize_c_backend_global_name_table();
        return (SubLObject)c_name_translation.NIL;
    }
    
    private static SubLObject _constant_0_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*"), (SubLObject)SubLObjectFactory.makeString("mult")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)SubLObjectFactory.makeString("add")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("-"), (SubLObject)SubLObjectFactory.makeString("sub")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("/"), (SubLObject)SubLObjectFactory.makeString("divide")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("/="), (SubLObject)SubLObjectFactory.makeString("dp_numNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("<"), (SubLObject)SubLObjectFactory.makeString("dp_numL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("<="), (SubLObject)SubLObjectFactory.makeString("dp_numLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("="), (SubLObject)SubLObjectFactory.makeString("dp_numE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">"), (SubLObject)SubLObjectFactory.makeString("dp_numG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol(">="), (SubLObject)SubLObjectFactory.makeString("dp_numGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ABS"), (SubLObject)SubLObjectFactory.makeString("sublisp_abs")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ACONS"), (SubLObject)SubLObjectFactory.makeString("acons")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ACOS"), (SubLObject)SubLObjectFactory.makeString("sublisp_acos")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ADJOIN"), (SubLObject)SubLObjectFactory.makeString("adjoin")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALERT-USER"), (SubLObject)SubLObjectFactory.makeString("alert_user")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALL-PROCESSES"), (SubLObject)SubLObjectFactory.makeString("all_processes")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALPHA-CHAR-P"), (SubLObject)SubLObjectFactory.makeString("dp_alpha_char_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALPHANUMERICP"), (SubLObject)SubLObjectFactory.makeString("dp_alphanumericp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPEND"), (SubLObject)SubLObjectFactory.makeString("append")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APPLY"), (SubLObject)SubLObjectFactory.makeString("apply")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("APROPOS"), (SubLObject)SubLObjectFactory.makeString("apropos")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("AREF"), (SubLObject)SubLObjectFactory.makeString("aref")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ASH"), (SubLObject)SubLObjectFactory.makeString("ash")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ASIN"), (SubLObject)SubLObjectFactory.makeString("sublisp_asin")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ASSEMBLE-FIXNUMS-TO-GUID"), (SubLObject)SubLObjectFactory.makeString("assemble_fixnums_to_guid")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ASSEMBLE-FIXNUMS-TO-INTEGER"), (SubLObject)SubLObjectFactory.makeString("assemble_fixnums_to_integer")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ASSOC"), (SubLObject)SubLObjectFactory.makeString("assoc")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ASSOC-IF"), (SubLObject)SubLObjectFactory.makeString("assoc_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ATAN"), (SubLObject)SubLObjectFactory.makeString("sublisp_atan")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ATOM"), (SubLObject)SubLObjectFactory.makeString("dp_atom")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE"), (SubLObject)SubLObjectFactory.makeString("boole")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOTH-CASE-P"), (SubLObject)SubLObjectFactory.makeString("dp_both_case_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOUNDP"), (SubLObject)SubLObjectFactory.makeString("dp_boundp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BREAK"), (SubLObject)SubLObjectFactory.makeString("sublisp_break")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BROADCAST-STREAM-STREAMS"), (SubLObject)SubLObjectFactory.makeString("broadcast_stream_streams")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BUTLAST"), (SubLObject)SubLObjectFactory.makeString("butlast")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BYTE"), (SubLObject)SubLObjectFactory.makeString("f_byte")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAAR"), (SubLObject)SubLObjectFactory.makeString("caar")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CADR"), (SubLObject)SubLObjectFactory.makeString("cadr")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CAR"), (SubLObject)SubLObjectFactory.makeString("car")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CCONCATENATE"), (SubLObject)SubLObjectFactory.makeString("cconcatenate")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDAR"), (SubLObject)SubLObjectFactory.makeString("cdar")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDDR"), (SubLObject)SubLObjectFactory.makeString("cddr")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDR"), (SubLObject)SubLObjectFactory.makeString("cdr")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CEILING"), (SubLObject)SubLObjectFactory.makeString("sublisp_ceiling")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CERROR"), (SubLObject)SubLObjectFactory.makeString("sublisp_cerror")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR"), (SubLObject)SubLObjectFactory.makeString("sublisp_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-CODE"), (SubLObject)SubLObjectFactory.makeString("char_code")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-DOWNCASE"), (SubLObject)SubLObjectFactory.makeString("char_downcase")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-EQUAL"), (SubLObject)SubLObjectFactory.makeString("dp_char_equal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-GREATERP"), (SubLObject)SubLObjectFactory.makeString("dp_char_greaterp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-LESSP"), (SubLObject)SubLObjectFactory.makeString("dp_char_lessp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-NOT-EQUAL"), (SubLObject)SubLObjectFactory.makeString("dp_char_not_equal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-NOT-GREATERP"), (SubLObject)SubLObjectFactory.makeString("dp_char_not_greaterp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-NOT-LESSP"), (SubLObject)SubLObjectFactory.makeString("dp_char_not_lessp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR-UPCASE"), (SubLObject)SubLObjectFactory.makeString("char_upcase")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR/="), (SubLObject)SubLObjectFactory.makeString("dp_charNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR<"), (SubLObject)SubLObjectFactory.makeString("dp_charL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR<="), (SubLObject)SubLObjectFactory.makeString("dp_charLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR="), (SubLObject)SubLObjectFactory.makeString("dp_charE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR>"), (SubLObject)SubLObjectFactory.makeString("dp_charG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR>="), (SubLObject)SubLObjectFactory.makeString("dp_charGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHARACTERP"), (SubLObject)SubLObjectFactory.makeString("dp_characterp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CIRCULAR-LIST-P"), (SubLObject)SubLObjectFactory.makeString("dp_circular_list_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLEAR-INPUT"), (SubLObject)SubLObjectFactory.makeString("clear_input")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLEAR-OUTPUT"), (SubLObject)SubLObjectFactory.makeString("clear_output")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLOSE"), (SubLObject)SubLObjectFactory.makeString("sublisp_close")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CLRHASH"), (SubLObject)SubLObjectFactory.makeString("clrhash")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CMERGE"), (SubLObject)SubLObjectFactory.makeString("cmerge")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CODE-CHAR"), (SubLObject)SubLObjectFactory.makeString("code_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONCATENATED-STREAM-STREAMS"), (SubLObject)SubLObjectFactory.makeString("concatenated_stream_streams")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeString("cons")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONSP"), (SubLObject)SubLObjectFactory.makeString("dp_consp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONSTANTP"), (SubLObject)SubLObjectFactory.makeString("dp_constantp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONSTRUCT-FILENAME"), (SubLObject)SubLObjectFactory.makeString("construct_filename")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COPY-ALIST"), (SubLObject)SubLObjectFactory.makeString("copy_alist")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COPY-LIST"), (SubLObject)SubLObjectFactory.makeString("copy_list")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COPY-READTABLE"), (SubLObject)SubLObjectFactory.makeString("copy_readtable")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COPY-SEQ"), (SubLObject)SubLObjectFactory.makeString("copy_seq")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COPY-TREE"), (SubLObject)SubLObjectFactory.makeString("copy_tree")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COS"), (SubLObject)SubLObjectFactory.makeString("sublisp_cos")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COUNT"), (SubLObject)SubLObjectFactory.makeString("count")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("COUNT-IF"), (SubLObject)SubLObjectFactory.makeString("count_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CRACK-DATE-RELATIVE-GUID"), (SubLObject)SubLObjectFactory.makeString("crack_date_relative_guid")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CREDUCE"), (SubLObject)SubLObjectFactory.makeString("creduce")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CURRENT-PROCESS"), (SubLObject)SubLObjectFactory.makeString("current_process")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DATE-RELATIVE-GUID-P"), (SubLObject)SubLObjectFactory.makeString("date_relative_guid_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEBUG"), (SubLObject)SubLObjectFactory.makeString("debug")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEBUG-PROCESS"), (SubLObject)SubLObjectFactory.makeString("debug_process")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DECODE-FLOAT"), (SubLObject)SubLObjectFactory.makeString("decode_float")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DECODE-UNIVERSAL-TIME"), (SubLObject)SubLObjectFactory.makeString("decode_universal_time")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEFAULT-STRUCT-PRINT-FUNCTION"), (SubLObject)SubLObjectFactory.makeString("default_struct_print_function")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DELETE"), (SubLObject)SubLObjectFactory.makeString("delete")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DELETE-DIRECTORY"), (SubLObject)SubLObjectFactory.makeString("delete_directory")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DELETE-DUPLICATES"), (SubLObject)SubLObjectFactory.makeString("delete_duplicates")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DELETE-FILE"), (SubLObject)SubLObjectFactory.makeString("delete_file")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DELETE-IF"), (SubLObject)SubLObjectFactory.makeString("delete_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESTROY-HASH-TABLE-ITERATOR"), (SubLObject)SubLObjectFactory.makeString("destroy_hash_table_iterator")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DIGIT-CHAR"), (SubLObject)SubLObjectFactory.makeString("digit_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DIGIT-CHAR-P"), (SubLObject)SubLObjectFactory.makeString("dp_digit_char_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DIRECTORY"), (SubLObject)SubLObjectFactory.makeString("directory")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DIRECTORY-P"), (SubLObject)SubLObjectFactory.makeString("directory_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISASSEMBLE-GUID-TO-FIXNUMS"), (SubLObject)SubLObjectFactory.makeString("disassemble_guid_to_fixnums")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DISASSEMBLE-INTEGER-TO-FIXNUMS"), (SubLObject)SubLObjectFactory.makeString("disassemble_integer_to_fixnums")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DPB"), (SubLObject)SubLObjectFactory.makeString("f_dpb")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ECHO-STREAM-INPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("echo_stream_input_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ECHO-STREAM-OUTPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("echo_stream_output_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EIGHTH"), (SubLObject)SubLObjectFactory.makeString("eighth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ELT"), (SubLObject)SubLObjectFactory.makeString("elt")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENCODE-UNIVERSAL-TIME"), (SubLObject)SubLObjectFactory.makeString("encode_universal_time")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENDP"), (SubLObject)SubLObjectFactory.makeString("dp_endp")), ConsesLow.list((SubLObject)c_name_translation.EQ, (SubLObject)SubLObjectFactory.makeString("dp_eq")), ConsesLow.list((SubLObject)c_name_translation.EQL, (SubLObject)SubLObjectFactory.makeString("dp_eql")), ConsesLow.list((SubLObject)c_name_translation.EQUAL, (SubLObject)SubLObjectFactory.makeString("dp_equal")), ConsesLow.list((SubLObject)c_name_translation.EQUALP, (SubLObject)SubLObjectFactory.makeString("dp_equalp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ERROR"), (SubLObject)SubLObjectFactory.makeString("sublisp_error")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EVAL"), (SubLObject)SubLObjectFactory.makeString("eval")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EVENP"), (SubLObject)SubLObjectFactory.makeString("dp_evenp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXIT"), (SubLObject)SubLObjectFactory.makeString("sublisp_exit")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXP"), (SubLObject)SubLObjectFactory.makeString("sublisp_exp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXPORT"), (SubLObject)SubLObjectFactory.makeString("export")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXPT"), (SubLObject)SubLObjectFactory.makeString("expt")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FALSE"), (SubLObject)SubLObjectFactory.makeString("sublisp_false")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FBOUNDP"), (SubLObject)SubLObjectFactory.makeString("dp_fboundp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIFTH"), (SubLObject)SubLObjectFactory.makeString("fifth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-AUTHOR"), (SubLObject)SubLObjectFactory.makeString("file_author")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-LENGTH"), (SubLObject)SubLObjectFactory.makeString("file_length")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-LENGTH"), (SubLObject)SubLObjectFactory.makeString("file_length")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POSITION"), (SubLObject)SubLObjectFactory.makeString("file_position")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-STRING-LENGTH"), (SubLObject)SubLObjectFactory.makeString("file_string_length")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-WRITE-DATE"), (SubLObject)SubLObjectFactory.makeString("file_write_date")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILL"), (SubLObject)SubLObjectFactory.makeString("fill")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIND"), (SubLObject)SubLObjectFactory.makeString("find")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIND-IF"), (SubLObject)SubLObjectFactory.makeString("find_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIND-PACKAGE"), (SubLObject)SubLObjectFactory.makeString("find_package")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIND-SYMBOL"), (SubLObject)SubLObjectFactory.makeString("find_symbol")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FINISH-OUTPUT"), (SubLObject)SubLObjectFactory.makeString("finish_output")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIRST"), (SubLObject)SubLObjectFactory.makeString("first")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("fixnum_mult")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIXNUMP"), (SubLObject)SubLObjectFactory.makeString("dp_fixnump")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOAT"), (SubLObject)SubLObjectFactory.makeString("sublisp_float")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOAT-DIGITS"), (SubLObject)SubLObjectFactory.makeString("float_digits")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOAT-RADIX"), (SubLObject)SubLObjectFactory.makeString("float_radix")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOAT-SIGN"), (SubLObject)SubLObjectFactory.makeString("float_sign")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOATP"), (SubLObject)SubLObjectFactory.makeString("dp_floatp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOOR"), (SubLObject)SubLObjectFactory.makeString("sublisp_floor")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FMAKUNBOUND"), (SubLObject)SubLObjectFactory.makeString("fmakunbound")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORCE-OUTPUT"), (SubLObject)SubLObjectFactory.makeString("force_output")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORK-PROCESS"), (SubLObject)SubLObjectFactory.makeString("fork_process")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT"), (SubLObject)SubLObjectFactory.makeString("format_g")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FOURTH"), (SubLObject)SubLObjectFactory.makeString("fourth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FRESH-LINE"), (SubLObject)SubLObjectFactory.makeString("fresh_line")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCALL"), (SubLObject)SubLObjectFactory.makeString("funcall")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION-INFORMATION"), (SubLObject)SubLObjectFactory.makeString("function_information")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION-SPEC-P"), (SubLObject)SubLObjectFactory.makeString("dp_function_spec_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTIONP"), (SubLObject)SubLObjectFactory.makeString("dp_functionp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GC"), (SubLObject)SubLObjectFactory.makeString("gc")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GC-DYNAMIC"), (SubLObject)SubLObjectFactory.makeString("gc_dynamic")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GC-EPHEMERAL"), (SubLObject)SubLObjectFactory.makeString("gc_ephemeral")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GC-FULL"), (SubLObject)SubLObjectFactory.makeString("gc_full")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GENSYM"), (SubLObject)SubLObjectFactory.makeString("gensym")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GENTEMP"), (SubLObject)SubLObjectFactory.makeString("gentemp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET"), (SubLObject)SubLObjectFactory.makeString("get")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-DECODED-TIME"), (SubLObject)SubLObjectFactory.makeString("get_decoded_time")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-DISPATCH-MACRO-CHARACTER"), (SubLObject)SubLObjectFactory.makeString("get_dispatch_macro_character")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-FILE-POSITION"), (SubLObject)SubLObjectFactory.makeString("get_file_position")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-FILE-POSITION"), (SubLObject)SubLObjectFactory.makeString("get_file_position")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-INTERNAL-REAL-TIME"), (SubLObject)SubLObjectFactory.makeString("get_internal_real_time")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-INTERNAL-RUN-TIME"), (SubLObject)SubLObjectFactory.makeString("get_internal_run_time")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-MACHINE-NAME"), (SubLObject)SubLObjectFactory.makeString("get_machine_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-MACRO-CHARACTER"), (SubLObject)SubLObjectFactory.makeString("get_macro_character")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-NETWORK-NAME"), (SubLObject)SubLObjectFactory.makeString("get_network_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-OUTPUT-STREAM-STRING"), (SubLObject)SubLObjectFactory.makeString("get_output_stream_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-PROCESS-ID"), (SubLObject)SubLObjectFactory.makeString("get_process_id")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STRING-FROM-USER"), (SubLObject)SubLObjectFactory.makeString("get_string_from_user")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-UNIVERSAL-TIME"), (SubLObject)SubLObjectFactory.makeString("get_universal_time")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-USER-NAME"), (SubLObject)SubLObjectFactory.makeString("get_user_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GETF"), (SubLObject)SubLObjectFactory.makeString("getf")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GETHASH"), (SubLObject)SubLObjectFactory.makeString("gethash")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GETHASH-WITHOUT-VALUES"), (SubLObject)SubLObjectFactory.makeString("gethash_without_values")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID-P"), (SubLObject)SubLObjectFactory.makeString("dp_guid_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID-STRING-P"), (SubLObject)SubLObjectFactory.makeString("guid_string_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID-TO-STRING"), (SubLObject)SubLObjectFactory.makeString("guid_to_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID/="), (SubLObject)SubLObjectFactory.makeString("dp_guidNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID<"), (SubLObject)SubLObjectFactory.makeString("dp_guidL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID<="), (SubLObject)SubLObjectFactory.makeString("dp_guidLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID="), (SubLObject)SubLObjectFactory.makeString("dp_guidE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID>"), (SubLObject)SubLObjectFactory.makeString("dp_guidG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GUID>="), (SubLObject)SubLObjectFactory.makeString("dp_guidGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-COUNT"), (SubLObject)SubLObjectFactory.makeString("hash_table_count")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-DONE-P"), (SubLObject)SubLObjectFactory.makeString("hash_table_iterator_done_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-HASH-TABLE"), (SubLObject)SubLObjectFactory.makeString("hash_table_iterator_hash_table")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-KEY"), (SubLObject)SubLObjectFactory.makeString("hash_table_iterator_key")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-NEXT"), (SubLObject)SubLObjectFactory.makeString("hash_table_iterator_next")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-P"), (SubLObject)SubLObjectFactory.makeString("hash_table_iterator_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-ITERATOR-VALUE"), (SubLObject)SubLObjectFactory.makeString("hash_table_iterator_value")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-P"), (SubLObject)SubLObjectFactory.makeString("dp_hash_table_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-SIZE"), (SubLObject)SubLObjectFactory.makeString("hash_table_size")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-TEST"), (SubLObject)SubLObjectFactory.makeString("hash_table_test")), ConsesLow.list((SubLObject)c_name_translation.IDENTITY, (SubLObject)SubLObjectFactory.makeString("identity")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IGNORE"), (SubLObject)SubLObjectFactory.makeString("ignore")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IMPORT"), (SubLObject)SubLObjectFactory.makeString("import")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INFINITY-P"), (SubLObject)SubLObjectFactory.makeString("dp_infinity_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INPUT-STREAM-P"), (SubLObject)SubLObjectFactory.makeString("input_stream_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INT/"), (SubLObject)SubLObjectFactory.makeString("int_div")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGER-DECODE-FLOAT"), (SubLObject)SubLObjectFactory.makeString("integer_decode_float")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGER-LENGTH"), (SubLObject)SubLObjectFactory.makeString("integer_length")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGERP"), (SubLObject)SubLObjectFactory.makeString("dp_integerp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTERACTIVE-STREAM-P"), (SubLObject)SubLObjectFactory.makeString("interactive_stream_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTERN"), (SubLObject)SubLObjectFactory.makeString("intern")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTERNAL-REAL-TIME-HAS-ARRIVED?"), (SubLObject)SubLObjectFactory.makeString("internal_real_time_has_arrived_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTERRUPT-PROCESS"), (SubLObject)SubLObjectFactory.makeString("interrupt_process")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTERSECTION"), (SubLObject)SubLObjectFactory.makeString("intersection")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ISQRT"), (SubLObject)SubLObjectFactory.makeString("isqrt")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDP"), (SubLObject)SubLObjectFactory.makeString("dp_keywordp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KILL-PROCESS"), (SubLObject)SubLObjectFactory.makeString("kill_process")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LAST"), (SubLObject)SubLObjectFactory.makeString("last")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LDB"), (SubLObject)SubLObjectFactory.makeString("f_ldb")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LDIFF"), (SubLObject)SubLObjectFactory.makeString("ldiff")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LENGTH"), (SubLObject)SubLObjectFactory.makeString("length")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LISP-IMPLEMENTATION-TYPE"), (SubLObject)SubLObjectFactory.makeString("lisp_implementation_type")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LISP-IMPLEMENTATION-VERSION"), (SubLObject)SubLObjectFactory.makeString("lisp_implementation_version")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST"), (SubLObject)SubLObjectFactory.makeString("list")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST*"), (SubLObject)SubLObjectFactory.makeString("listS")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST-ALL-PACKAGES"), (SubLObject)SubLObjectFactory.makeString("list_all_packages")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LIST-LENGTH"), (SubLObject)SubLObjectFactory.makeString("list_length")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LISTEN"), (SubLObject)SubLObjectFactory.makeString("sublisp_listen")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LISTP"), (SubLObject)SubLObjectFactory.makeString("dp_listp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOAD"), (SubLObject)SubLObjectFactory.makeString("load")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK-IDLE-P"), (SubLObject)SubLObjectFactory.makeString("lock_idle_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK-LOCKER"), (SubLObject)SubLObjectFactory.makeString("lock_locker")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK-NAME"), (SubLObject)SubLObjectFactory.makeString("lock_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK-P"), (SubLObject)SubLObjectFactory.makeString("dp_lockp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK-PACKAGE"), (SubLObject)SubLObjectFactory.makeString("lock_package")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOG"), (SubLObject)SubLObjectFactory.makeString("sublisp_log")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOG-MESSAGE"), (SubLObject)SubLObjectFactory.makeString("log_message")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGAND"), (SubLObject)SubLObjectFactory.makeString("logand")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGANDC1"), (SubLObject)SubLObjectFactory.makeString("logandc1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGANDC2"), (SubLObject)SubLObjectFactory.makeString("logandc2")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGBITP"), (SubLObject)SubLObjectFactory.makeString("logbitp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGCOUNT"), (SubLObject)SubLObjectFactory.makeString("logcount")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGEQV"), (SubLObject)SubLObjectFactory.makeString("logeqv")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGIOR"), (SubLObject)SubLObjectFactory.makeString("logior")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGNAND"), (SubLObject)SubLObjectFactory.makeString("lognand")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGNOR"), (SubLObject)SubLObjectFactory.makeString("lognor")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGNOT"), (SubLObject)SubLObjectFactory.makeString("lognot")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGORC1"), (SubLObject)SubLObjectFactory.makeString("logorc1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGORC2"), (SubLObject)SubLObjectFactory.makeString("logorc2")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGTEST"), (SubLObject)SubLObjectFactory.makeString("logtest")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOGXOR"), (SubLObject)SubLObjectFactory.makeString("logxor")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LONG-SITE-NAME"), (SubLObject)SubLObjectFactory.makeString("long_site_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOWER-CASE-P"), (SubLObject)SubLObjectFactory.makeString("dp_lower_case_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MACHINE-INSTANCE"), (SubLObject)SubLObjectFactory.makeString("machine_instance")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MACHINE-TYPE"), (SubLObject)SubLObjectFactory.makeString("machine_type")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MACHINE-VERSION"), (SubLObject)SubLObjectFactory.makeString("machine_version")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MACRO-OPERATOR-P"), (SubLObject)SubLObjectFactory.makeString("dp_macro_operator_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MACROEXPAND"), (SubLObject)SubLObjectFactory.makeString("sublisp_macroexpand")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MACROEXPAND-1"), (SubLObject)SubLObjectFactory.makeString("sublisp_macroexpand_one")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-BROADCAST-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_broadcast_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-CONCATENATED-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_concatenated_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-DATE-RELATIVE-GUID"), (SubLObject)SubLObjectFactory.makeString("make_date_relative_guid")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-DIRECTORY"), (SubLObject)SubLObjectFactory.makeString("make_directory")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-DISPATCH-MACRO-CHARACTER"), (SubLObject)SubLObjectFactory.makeString("make_dispatch_macro_character")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-ECHO-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_echo_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-HASH-TABLE"), (SubLObject)SubLObjectFactory.makeString("make_hash_table")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-HASH-TABLE-ITERATOR"), (SubLObject)SubLObjectFactory.makeString("make_hash_table_iterator")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-KEYWORD"), (SubLObject)SubLObjectFactory.makeString("make_keyword")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-LIST"), (SubLObject)SubLObjectFactory.makeString("make_list")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-LOCK"), (SubLObject)SubLObjectFactory.makeString("make_lock")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PACKAGE"), (SubLObject)SubLObjectFactory.makeString("make_package")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-BROADCAST-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_private_broadcast_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-CONCATENATED-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_private_concatenated_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-ECHO-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_private_echo_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-STRING-INPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_private_string_input_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-STRING-OUTPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_private_string_output_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-SYNONYM-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_private_synonym_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-TWO-WAY-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_private_two_way_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PROCESS"), (SubLObject)SubLObjectFactory.makeString("make_process")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-STRING"), (SubLObject)SubLObjectFactory.makeString("make_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-STRING-INPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_string_input_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-STRING-OUTPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_string_output_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-SYMBOL"), (SubLObject)SubLObjectFactory.makeString("make_symbol")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-SYNONYM-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_synonym_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-TWO-WAY-STREAM"), (SubLObject)SubLObjectFactory.makeString("make_two_way_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-VECTOR"), (SubLObject)SubLObjectFactory.makeString("make_vector")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKUNBOUND"), (SubLObject)SubLObjectFactory.makeString("makunbound")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPC"), (SubLObject)SubLObjectFactory.makeString("mapc")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAN"), (SubLObject)SubLObjectFactory.makeString("mapcan")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCAR"), (SubLObject)SubLObjectFactory.makeString("mapcar")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPCON"), (SubLObject)SubLObjectFactory.makeString("mapcon")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPHASH"), (SubLObject)SubLObjectFactory.makeString("maphash")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPL"), (SubLObject)SubLObjectFactory.makeString("mapl")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAPLIST"), (SubLObject)SubLObjectFactory.makeString("maplist")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAX"), (SubLObject)SubLObjectFactory.makeString("max")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER"), (SubLObject)SubLObjectFactory.makeString("member")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MEMBER-IF"), (SubLObject)SubLObjectFactory.makeString("member_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MIN"), (SubLObject)SubLObjectFactory.makeString("min")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MINUSP"), (SubLObject)SubLObjectFactory.makeString("dp_minusp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MISMATCH"), (SubLObject)SubLObjectFactory.makeString("mismatch")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MOD"), (SubLObject)SubLObjectFactory.makeString("mod")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NBUTLAST"), (SubLObject)SubLObjectFactory.makeString("nbutlast")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NCONC"), (SubLObject)SubLObjectFactory.makeString("nconc")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NEW-GUID"), (SubLObject)SubLObjectFactory.makeString("new_guid")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NINTERSECTION"), (SubLObject)SubLObjectFactory.makeString("nintersection")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NINTH"), (SubLObject)SubLObjectFactory.makeString("ninth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NON-CIRCULAR-LIST-P"), (SubLObject)SubLObjectFactory.makeString("dp_non_circular_list_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOT-A-NUMBER-P"), (SubLObject)SubLObjectFactory.makeString("dp_not_a_number_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOTIFY"), (SubLObject)SubLObjectFactory.makeString("notify")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOTIFY-USER"), (SubLObject)SubLObjectFactory.makeString("notify_user")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NRECONC"), (SubLObject)SubLObjectFactory.makeString("nreconc")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NREVERSE"), (SubLObject)SubLObjectFactory.makeString("nreverse")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSET-DIFFERENCE"), (SubLObject)SubLObjectFactory.makeString("nset_difference")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSET-EXCLUSIVE-OR"), (SubLObject)SubLObjectFactory.makeString("nset_exclusive_or")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSTRING-CAPITALIZE"), (SubLObject)SubLObjectFactory.makeString("nstring_capitalize")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSTRING-DOWNCASE"), (SubLObject)SubLObjectFactory.makeString("nstring_downcase")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSTRING-UPCASE"), (SubLObject)SubLObjectFactory.makeString("nstring_upcase")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSUBLIS"), (SubLObject)SubLObjectFactory.makeString("nsublis")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSUBST"), (SubLObject)SubLObjectFactory.makeString("nsubst")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSUBST-IF"), (SubLObject)SubLObjectFactory.makeString("nsubst_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSUBSTITUTE"), (SubLObject)SubLObjectFactory.makeString("nsubstitute")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NSUBSTITUTE-IF"), (SubLObject)SubLObjectFactory.makeString("nsubstitute_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NTH"), (SubLObject)SubLObjectFactory.makeString("nth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NTHCDR"), (SubLObject)SubLObjectFactory.makeString("nthcdr")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NULL"), (SubLObject)SubLObjectFactory.makeString("dp_null")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUMBERP"), (SubLObject)SubLObjectFactory.makeString("dp_numberp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUNION"), (SubLObject)SubLObjectFactory.makeString("sublisp_nunion")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ODDP"), (SubLObject)SubLObjectFactory.makeString("dp_oddp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN-BINARY"), (SubLObject)SubLObjectFactory.makeString("open_binary")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN-STREAM-P"), (SubLObject)SubLObjectFactory.makeString("open_stream_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN-TCP-STREAM"), (SubLObject)SubLObjectFactory.makeString("open_tcp_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN-TEXT"), (SubLObject)SubLObjectFactory.makeString("open_text")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OUTPUT-STREAM-P"), (SubLObject)SubLObjectFactory.makeString("output_stream_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-LOCKED-P"), (SubLObject)SubLObjectFactory.makeString("dp_package_locked_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-NAME"), (SubLObject)SubLObjectFactory.makeString("package_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-NICKNAMES"), (SubLObject)SubLObjectFactory.makeString("package_nicknames")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-SHADOWING-SYMBOLS"), (SubLObject)SubLObjectFactory.makeString("package_shadowing_symbols")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-USE-LIST"), (SubLObject)SubLObjectFactory.makeString("package_use_list")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-USED-BY-LIST"), (SubLObject)SubLObjectFactory.makeString("package_used_by_list")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PACKAGEP"), (SubLObject)SubLObjectFactory.makeString("dp_packagep")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PAIRLIS"), (SubLObject)SubLObjectFactory.makeString("pairlis")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PARSE-INTEGER"), (SubLObject)SubLObjectFactory.makeString("parse_integer")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PEEK-CHAR"), (SubLObject)SubLObjectFactory.makeString("peek_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PLUSP"), (SubLObject)SubLObjectFactory.makeString("dp_plusp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSITION"), (SubLObject)SubLObjectFactory.makeString("position")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSITION-IF"), (SubLObject)SubLObjectFactory.makeString("position_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRIN1"), (SubLObject)SubLObjectFactory.makeString("prin1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRIN1-TO-STRING"), (SubLObject)SubLObjectFactory.makeString("prin1_to_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINC"), (SubLObject)SubLObjectFactory.makeString("princ")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINC-TO-STRING"), (SubLObject)SubLObjectFactory.makeString("princ_to_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT"), (SubLObject)SubLObjectFactory.makeString("print")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-OBJECT"), (SubLObject)SubLObjectFactory.makeString("print_object")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROBE-FILE"), (SubLObject)SubLObjectFactory.makeString("dp_probe_file")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-ACTIVE-P"), (SubLObject)SubLObjectFactory.makeString("process_active_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-BLOCK"), (SubLObject)SubLObjectFactory.makeString("process_block")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-NAME"), (SubLObject)SubLObjectFactory.makeString("process_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-PRIORITY"), (SubLObject)SubLObjectFactory.makeString("process_priority")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-STATE"), (SubLObject)SubLObjectFactory.makeString("process_state")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-UNBLOCK"), (SubLObject)SubLObjectFactory.makeString("process_unblock")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-WAIT"), (SubLObject)SubLObjectFactory.makeString("process_wait")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-WAIT-WITH-TIMEOUT"), (SubLObject)SubLObjectFactory.makeString("process_wait_with_timeout")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-WHOSTATE"), (SubLObject)SubLObjectFactory.makeString("process_whostate")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESSP"), (SubLObject)SubLObjectFactory.makeString("dp_processp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUT"), (SubLObject)SubLObjectFactory.makeString("put")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PUTF"), (SubLObject)SubLObjectFactory.makeString("putf")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RANDOM"), (SubLObject)SubLObjectFactory.makeString("sublisp_random")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RASSOC"), (SubLObject)SubLObjectFactory.makeString("rassoc")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RASSOC-IF"), (SubLObject)SubLObjectFactory.makeString("rassoc_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ"), (SubLObject)SubLObjectFactory.makeString("sublisp_read")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-BYTE"), (SubLObject)SubLObjectFactory.makeString("read_byte")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-CHAR"), (SubLObject)SubLObjectFactory.makeString("read_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-CHAR-NO-HANG"), (SubLObject)SubLObjectFactory.makeString("read_char_no_hang")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-DELIMITED-LIST"), (SubLObject)SubLObjectFactory.makeString("read_delimited_list")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-FROM-STRING"), (SubLObject)SubLObjectFactory.makeString("read_from_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-FROM-STRING-IGNORING-ERRORS"), (SubLObject)SubLObjectFactory.makeString("f_read_from_string_ignoring_errors")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-IGNORING-ERRORS"), (SubLObject)SubLObjectFactory.makeString("read_ignoring_errors")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-LINE"), (SubLObject)SubLObjectFactory.makeString("read_line")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-PRESERVING-WHITESPACE"), (SubLObject)SubLObjectFactory.makeString("read_preserving_whitespace")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-SEQUENCE"), (SubLObject)SubLObjectFactory.makeString("read_sequence")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READTABLE-CASE"), (SubLObject)SubLObjectFactory.makeString("readtable_case")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READTABLEP"), (SubLObject)SubLObjectFactory.makeString("readtablep")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REGISTER-LOW-MEMORY-CALLBACK"), (SubLObject)SubLObjectFactory.makeString("register_low_memory_callback")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEREGISTER-LOW-MEMORY-CALLBACK"), (SubLObject)SubLObjectFactory.makeString("deregister_low_memory_callback")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOW-MEMORY-CALLBACKS"), (SubLObject)SubLObjectFactory.makeString("register_low_memory_callback")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REM"), (SubLObject)SubLObjectFactory.makeString("rem")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMF"), (SubLObject)SubLObjectFactory.makeString("remf")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMHASH"), (SubLObject)SubLObjectFactory.makeString("remhash")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMOVE"), (SubLObject)SubLObjectFactory.makeString("sublisp_remove")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMOVE-DUPLICATES"), (SubLObject)SubLObjectFactory.makeString("remove_duplicates")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMOVE-IF"), (SubLObject)SubLObjectFactory.makeString("sublisp_remove_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMPROP"), (SubLObject)SubLObjectFactory.makeString("remprop")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RENAME-FILE"), (SubLObject)SubLObjectFactory.makeString("rename_file")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REPLACE"), (SubLObject)SubLObjectFactory.makeString("replace")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REST"), (SubLObject)SubLObjectFactory.makeString("rest")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RESTART-PROCESS"), (SubLObject)SubLObjectFactory.makeString("restart_process")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REVAPPEND"), (SubLObject)SubLObjectFactory.makeString("revappend")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REVERSE"), (SubLObject)SubLObjectFactory.makeString("reverse")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ROOM"), (SubLObject)SubLObjectFactory.makeString("room")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ROUND"), (SubLObject)SubLObjectFactory.makeString("sublisp_round")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RPLACA"), (SubLObject)SubLObjectFactory.makeString("rplaca")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RPLACD"), (SubLObject)SubLObjectFactory.makeString("rplacd")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SCALE-FLOAT"), (SubLObject)SubLObjectFactory.makeString("scale_float")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEARCH"), (SubLObject)SubLObjectFactory.makeString("search")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SECOND"), (SubLObject)SubLObjectFactory.makeString("second")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEED-RANDOM"), (SubLObject)SubLObjectFactory.makeString("seed_random")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEQUENCEP"), (SubLObject)SubLObjectFactory.makeString("dp_sequencep")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET"), (SubLObject)SubLObjectFactory.makeString("set")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-AREF"), (SubLObject)SubLObjectFactory.makeString("set_aref")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-CHAR"), (SubLObject)SubLObjectFactory.makeString("sublisp_set_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-DIFFERENCE"), (SubLObject)SubLObjectFactory.makeString("set_difference")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-DISPATCH-MACRO-CHARACTER"), (SubLObject)SubLObjectFactory.makeString("set_dispatch_macro_character")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-EXCLUSIVE-OR"), (SubLObject)SubLObjectFactory.makeString("set_exclusive_or")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-FILE-POSITION"), (SubLObject)SubLObjectFactory.makeString("set_file_position")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-MACRO-CHARACTER"), (SubLObject)SubLObjectFactory.makeString("set_macro_character")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-NTH"), (SubLObject)SubLObjectFactory.makeString("set_nth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-PROCESS-PRIORITY"), (SubLObject)SubLObjectFactory.makeString("set_process_priority")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-SYNTAX-FROM-CHAR"), (SubLObject)SubLObjectFactory.makeString("set_syntax_from_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SETHASH"), (SubLObject)SubLObjectFactory.makeString("sethash")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEVENTH"), (SubLObject)SubLObjectFactory.makeString("seventh")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SHORT-SITE-NAME"), (SubLObject)SubLObjectFactory.makeString("short_site_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SHOW-PROCESSES"), (SubLObject)SubLObjectFactory.makeString("show_processes")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SIMPLE-READER-ERROR"), (SubLObject)SubLObjectFactory.makeString("simple_reader_error")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SIN"), (SubLObject)SubLObjectFactory.makeString("sublisp_sin")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SIXTH"), (SubLObject)SubLObjectFactory.makeString("sixth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SLEEP"), (SubLObject)SubLObjectFactory.makeString("sublisp_sleep")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SOFTWARE-TYPE"), (SubLObject)SubLObjectFactory.makeString("software_type")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SOFTWARE-VERSION"), (SubLObject)SubLObjectFactory.makeString("software_version")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SORT"), (SubLObject)SubLObjectFactory.makeString("sort")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SQRT"), (SubLObject)SubLObjectFactory.makeString("sublisp_sqrt")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STABLE-SORT"), (SubLObject)SubLObjectFactory.makeString("stable_sort")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-ELEMENT-TYPE"), (SubLObject)SubLObjectFactory.makeString("stream_element_type")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAMP"), (SubLObject)SubLObjectFactory.makeString("dp_streamp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeString("sublisp_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-CAPITALIZE"), (SubLObject)SubLObjectFactory.makeString("string_capitalize")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-DOWNCASE"), (SubLObject)SubLObjectFactory.makeString("string_downcase")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-EQUAL"), (SubLObject)SubLObjectFactory.makeString("dp_string_equal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-GREATERP"), (SubLObject)SubLObjectFactory.makeString("dp_string_greaterp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-LEFT-TRIM"), (SubLObject)SubLObjectFactory.makeString("string_left_trim")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-LESSP"), (SubLObject)SubLObjectFactory.makeString("dp_string_lessp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-NOT-EQUAL"), (SubLObject)SubLObjectFactory.makeString("dp_string_not_equal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-NOT-GREATERP"), (SubLObject)SubLObjectFactory.makeString("dp_string_not_greaterp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-NOT-LESSP"), (SubLObject)SubLObjectFactory.makeString("dp_string_not_lessp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-RIGHT-TRIM"), (SubLObject)SubLObjectFactory.makeString("string_right_trim")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-TO-GUID"), (SubLObject)SubLObjectFactory.makeString("string_to_guid")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-TRIM"), (SubLObject)SubLObjectFactory.makeString("string_trim")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING-UPCASE"), (SubLObject)SubLObjectFactory.makeString("string_upcase")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING/="), (SubLObject)SubLObjectFactory.makeString("dp_stringNE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING<"), (SubLObject)SubLObjectFactory.makeString("dp_stringL")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING<="), (SubLObject)SubLObjectFactory.makeString("dp_stringLE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING="), (SubLObject)SubLObjectFactory.makeString("dp_stringE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING>"), (SubLObject)SubLObjectFactory.makeString("dp_stringG")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING>="), (SubLObject)SubLObjectFactory.makeString("dp_stringGE")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRINGP"), (SubLObject)SubLObjectFactory.makeString("dp_stringp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBLIS"), (SubLObject)SubLObjectFactory.makeString("sublis")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-NULL-PTR?", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("alien_null_ptr_P")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("dp_alienp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("alien_type")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BACKUP-ARGS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("backup_args")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BAD-FORMAT-DIRECTIVE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("bad_format_directive")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CALL-FORMAT-DIRECTIVE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("call_format_directive")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHECK-FLAGS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("check_flags")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DECLARATION-INFORMATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("declaration_information")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("END-OF-FILE-ERROR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("end_of_file_error")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIND-DIRECTIVE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("find_directive")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-CARDINAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_cardinal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-CARDINAL-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_cardinal_internal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-DIRECTIVE-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_directive_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-INTEGER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_integer")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-INTEGER-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_integer_internal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_internal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-ITERATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_iteration")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-ORDINAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_ordinal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-PADDED", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_padded")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-REPEAT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_repeat")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-SUBLIST-ITERATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_sublist_iteration")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-TYPEP", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("format_typep")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GETHASH-BUCKET", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gethash_bucket")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ILLEGAL-DIRECTIVE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("illegal_directive")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MATCHING-BRACKET", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("matching_bracket")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MATCHING-BRACKET-NOT-FOUND", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("matching_bracket_not_found")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOT-A-FORMAT-CONTROL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("not_a_format_control")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOT-A-LIST-ARGUMENT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("not_a_list_argument")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NOT-ENOUGH-FORMAT-ARGUMENTS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("not_enough_format_arguments")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PARSE-FORMAT-COMMAND", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("parse_format_command")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POSSIBLY-NOTE-FUNCTION-ENTRY", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_possibly_note_function_entry")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REALLY-FORMAT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("really_format")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REPITITION-DESIGNATOR-VALUE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("repitition_designator_value")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ROUND-DIGITS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("round_digits")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SPLIT-FLONUM-DIGITS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("split_flonum_digits")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-LINE-COLUMN", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_line_column")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-LINE-COLUMN", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_line_column")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SXHASH-ROT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sxhash_rot")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNIMPLEMENTED-FORMAT-DIRECTIVE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("unimplemented_format_directive")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBSEQ"), (SubLObject)SubLObjectFactory.makeString("subseq")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBSETP"), (SubLObject)SubLObjectFactory.makeString("dp_subsetp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBST"), (SubLObject)SubLObjectFactory.makeString("subst")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBST-IF"), (SubLObject)SubLObjectFactory.makeString("subst_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBSTITUTE"), (SubLObject)SubLObjectFactory.makeString("substitute")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SUBSTITUTE-IF"), (SubLObject)SubLObjectFactory.makeString("substitute_if")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SXHASH"), (SubLObject)SubLObjectFactory.makeString("sxhash")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL-FUNCTION"), (SubLObject)SubLObjectFactory.makeString("symbol_function")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL-NAME"), (SubLObject)SubLObjectFactory.makeString("symbol_name")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL-PACKAGE"), (SubLObject)SubLObjectFactory.makeString("symbol_package")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL-PLIST"), (SubLObject)SubLObjectFactory.makeString("symbol_plist")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL-VALUE"), (SubLObject)SubLObjectFactory.makeString("symbol_value")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOLP"), (SubLObject)SubLObjectFactory.makeString("dp_symbolp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYNONYM-STREAM-SYMBOL"), (SubLObject)SubLObjectFactory.makeString("synonym_stream_symbol")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TAILP"), (SubLObject)SubLObjectFactory.makeString("dp_tailp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TAN"), (SubLObject)SubLObjectFactory.makeString("sublisp_tan")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TENTH"), (SubLObject)SubLObjectFactory.makeString("tenth")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TERPRI"), (SubLObject)SubLObjectFactory.makeString("terpri")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("THIRD"), (SubLObject)SubLObjectFactory.makeString("third")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("THROW"), (SubLObject)SubLObjectFactory.makeString("sublisp_throw")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TIME-HAS-ARRIVED?"), (SubLObject)SubLObjectFactory.makeString("time_has_arrived_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TREE-EQUAL"), (SubLObject)SubLObjectFactory.makeString("dp_tree_equal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TRUE"), (SubLObject)SubLObjectFactory.makeString("sublisp_true")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TRUNCATE"), (SubLObject)SubLObjectFactory.makeString("sublisp_truncate")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TWO-WAY-STREAM-INPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("two_way_stream_input_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TWO-WAY-STREAM-OUTPUT-STREAM"), (SubLObject)SubLObjectFactory.makeString("two_way_stream_output_stream")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TYPE-OF"), (SubLObject)SubLObjectFactory.makeString("sublisp_type_of")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNINTERN"), (SubLObject)SubLObjectFactory.makeString("unintern")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNION"), (SubLObject)SubLObjectFactory.makeString("sublisp_union")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNREAD-CHAR"), (SubLObject)SubLObjectFactory.makeString("unread_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UPPER-CASE-P"), (SubLObject)SubLObjectFactory.makeString("dp_upper_case_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("USER-CONFIRM"), (SubLObject)SubLObjectFactory.makeString("user_confirm")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VALID-PROCESS-P"), (SubLObject)SubLObjectFactory.makeString("valid_process_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VALUES"), (SubLObject)SubLObjectFactory.makeString("values")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VARIABLE-INFORMATION"), (SubLObject)SubLObjectFactory.makeString("variable_information")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VECTOR"), (SubLObject)SubLObjectFactory.makeString("sublisp_vector")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VECTORP"), (SubLObject)SubLObjectFactory.makeString("dp_vectorp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VISIT-DEFSTRUCT"), (SubLObject)SubLObjectFactory.makeString("f_visit_defstruct")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WARN"), (SubLObject)SubLObjectFactory.makeString("sublisp_warn")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE"), (SubLObject)SubLObjectFactory.makeString("write_g")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-BYTE"), (SubLObject)SubLObjectFactory.makeString("write_byte")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-CHAR"), (SubLObject)SubLObjectFactory.makeString("write_char")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-IMAGE"), (SubLObject)SubLObjectFactory.makeString("write_image")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-LINE"), (SubLObject)SubLObjectFactory.makeString("write_line")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-SEQUENCE"), (SubLObject)SubLObjectFactory.makeString("write_sequence")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-STRING"), (SubLObject)SubLObjectFactory.makeString("write_string")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WRITE-TO-STRING"), (SubLObject)SubLObjectFactory.makeString("write_to_string_g")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ZEROP"), (SubLObject)SubLObjectFactory.makeString("dp_zerop")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DECLARE-FOREIGN-SHARED-LIBRARY", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_declare_foreign_shared_library")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEFINE-FOREIGN-FUNCTION-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_define_foreign_function_internal")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FOREIGN-SHARED-LIBRARY-INSTALLED?", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_foreign_shared_library_installedP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENSURE-FOREIGN-SHARED-LIBRARY-LOADED", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_ensure_foreign_shared_library_loaded")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VECTOR-FOR-MARSHALLING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_vector_for_marshalling")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CDESTRUCTURING-BIND-ERROR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_cdestructuring_bind_error")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESTRUCTURING-BIND-MUST-CONSP", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_destructuring_bind_must_consp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESTRUCTURING-BIND-MUST-LISTP", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_destructuring_bind_must_listp")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROPERTY-LIST-MEMBER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_property_list_member")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-UNREADABLE-OBJECT-PREAMBLE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_print_unreadable_object_preamble")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-UNREADABLE-OBJECT-POSTAMBLE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_print_unreadable_object_postamble")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BQ-CONS"), (SubLObject)SubLObjectFactory.makeString("f_bq_cons")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BQ-VECTOR"), (SubLObject)SubLObjectFactory.makeString("f_bq_vector")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEFSTRUCT-ANALYZE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_defstruct_analyze")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-CALL"), (SubLObject)SubLObjectFactory.makeString("java_call")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-CLASS"), (SubLObject)SubLObjectFactory.makeString("java_class")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-CONSTRUCTOR"), (SubLObject)SubLObjectFactory.makeString("java_constructor")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-METHOD"), (SubLObject)SubLObjectFactory.makeString("java_method")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-NEW"), (SubLObject)SubLObjectFactory.makeString("java_new")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-OBJECT-P"), (SubLObject)SubLObjectFactory.makeString("java_object_p")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JAVA-STATIC"), (SubLObject)SubLObjectFactory.makeString("java_static")) });
    }
    
    private static SubLObject _constant_1_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN"), (SubLObject)SubLObjectFactory.makeString("open_g"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILESPEC"), (SubLObject)SubLObjectFactory.makeSymbol("&REST"), (SubLObject)SubLObjectFactory.makeSymbol("KEYS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeString("CHECK_TYPE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-ENFORCE-TYPE"), (SubLObject)SubLObjectFactory.makeString("ENFORCE_TYPE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%BEGIN-WITH-PROCESS-RESOURCE-TRACKING"), (SubLObject)SubLObjectFactory.makeString("BEGIN_WITH_PROCESS_RESOURCE_TRACKING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENV"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%BIND"), (SubLObject)SubLObjectFactory.makeString("BIND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"), (SubLObject)SubLObjectFactory.makeSymbol("VAL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%BIND-SPECIAL-VARS"), (SubLObject)SubLObjectFactory.makeString("BIND_SPECIAL_VARS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SPECIAL-VARS"), (SubLObject)SubLObjectFactory.makeSymbol("BINDINGS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%BTD"), (SubLObject)SubLObjectFactory.makeString("BTD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJ"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CATCH-VALUE"), (SubLObject)SubLObjectFactory.makeString("CATCH_VALUE"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CBIG"), (SubLObject)SubLObjectFactory.makeString("CBIG"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CCHAR"), (SubLObject)SubLObjectFactory.makeString("CCHAR"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CODE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CFIX"), (SubLObject)SubLObjectFactory.makeString("CFIX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FIXNUM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CFLOAT"), (SubLObject)SubLObjectFactory.makeString("CFLOAT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLOAT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CGUID"), (SubLObject)SubLObjectFactory.makeString("CGUID"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CINTERN"), (SubLObject)SubLObjectFactory.makeString("CINTERN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CKEYWORD"), (SubLObject)SubLObjectFactory.makeString("CKEYWORD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CMAKE-SYMBOL"), (SubLObject)SubLObjectFactory.makeString("CMAKE_SYMBOL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CPACKAGE"), (SubLObject)SubLObjectFactory.makeString("CPACKAGE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CSTRING"), (SubLObject)SubLObjectFactory.makeString("CSTRING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CSYMBOL"), (SubLObject)SubLObjectFactory.makeString("CSYMBOL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("PACKAGE-NAME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDO-SYMBOLS-END"), (SubLObject)SubLObjectFactory.makeString("CDO_SYMBOLS_DONE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PKG-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("ITERATOR-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDO-SYMBOLS-LOOP"), (SubLObject)SubLObjectFactory.makeString("CDO_SYMBOLS_LOOP_DEFAULT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYM-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("ITERATOR-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDO-SYMBOLS-SETUP"), (SubLObject)SubLObjectFactory.makeString("CDO_SYMBOLS_SETUP"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PKG-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("ITERATOR-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDOHASH-BEGIN"), (SubLObject)SubLObjectFactory.makeString("CDOHASH_BEGIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEY-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("OBJ-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("TABLE-FORM"), (SubLObject)SubLObjectFactory.makeSymbol("TABLE-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDOHASH-END"), (SubLObject)SubLObjectFactory.makeString("CDOHASH_END"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KEY-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("OBJ-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("TABLE-VAR"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDOLIST-BEGIN"), (SubLObject)SubLObjectFactory.makeString("CDOLIST_BEGIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"), (SubLObject)SubLObjectFactory.makeSymbol("INIT-FORM"), (SubLObject)SubLObjectFactory.makeSymbol("CDOLIST-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDOLIST-END"), (SubLObject)SubLObjectFactory.makeString("CDOLIST_END"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDOTIMES-BEGIN"), (SubLObject)SubLObjectFactory.makeString("CDOTIMES_BEGIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"), (SubLObject)SubLObjectFactory.makeSymbol("INIT-FORM"), (SubLObject)SubLObjectFactory.makeSymbol("CDOTIMES-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CDOTIMES-END"), (SubLObject)SubLObjectFactory.makeString("CDOTIMES_END"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CSOME-BEGIN"), (SubLObject)SubLObjectFactory.makeString("CSOME_BEGIN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"), (SubLObject)SubLObjectFactory.makeSymbol("INIT-FORM"), (SubLObject)SubLObjectFactory.makeSymbol("DONE-FORM"), (SubLObject)SubLObjectFactory.makeSymbol("CSOME-VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CSOME-END"), (SubLObject)SubLObjectFactory.makeString("CSOME_END"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%DP-CHECK-TYPE"), (SubLObject)SubLObjectFactory.makeString("DP_CHECK_TYPE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%DP-ENFORCE-TYPE"), (SubLObject)SubLObjectFactory.makeString("DP_ENFORCE_TYPE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%DTB"), (SubLObject)SubLObjectFactory.makeString("DTB"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJ"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%DYN"), (SubLObject)SubLObjectFactory.makeString("DYN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%END-PRINTING-OBJECT"), (SubLObject)SubLObjectFactory.makeString("END_PRINTING_OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%END-WITH-PROCESS-RESOURCE-TRACKING"), (SubLObject)SubLObjectFactory.makeString("END_WITH_PROCESS_RESOURCE_TRACKING"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENV"), (SubLObject)SubLObjectFactory.makeSymbol("RESULT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FINISH-CATCH"), (SubLObject)SubLObjectFactory.makeString("FINISH_CATCH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TAG"), (SubLObject)SubLObjectFactory.makeSymbol("ENV"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FINISH-UNWIND"), (SubLObject)SubLObjectFactory.makeString("FINISH_UNWIND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENV"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-0A-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_0a_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-24-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_24_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-25-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_25_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-26-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_26_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-28-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_28_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-29-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_29_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-2A-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_2a_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-2F-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_2f_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-3B-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_3b_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-3C-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_3c_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-3E-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_3e_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-3F-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_3f_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-5B-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_5b_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-5D-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_5d_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-5E-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_5e_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-5F-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_5f_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-7B-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_7b_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-7C-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_7c_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-7D-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_7d_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-7E-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_7e_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-A-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_a_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-B-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_b_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-C-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_c_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-D-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_d_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-E-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_e_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-F-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_f_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-G-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_g_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-I-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_i_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-O-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_o_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-P-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_p_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-R-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_r_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-S-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_s_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-T-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_t_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-W-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_w_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FORMAT-X-DIRECTIVE"), (SubLObject)SubLObjectFactory.makeString("format_x_directive"), (SubLObject)ConsesLow.list(new SubLObject[] { SubLObjectFactory.makeSymbol("STREAM"), SubLObjectFactory.makeSymbol("STRING"), SubLObjectFactory.makeSymbol("START"), SubLObjectFactory.makeSymbol("END"), SubLObjectFactory.makeSymbol("ARGS"), SubLObjectFactory.makeSymbol("ALL-ARGS"), SubLObjectFactory.makeSymbol("PARAMETERS"), SubLObjectFactory.makeSymbol("AT-SIGN-P"), SubLObjectFactory.makeSymbol("COLONP") })), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-STATIC-AREA"), (SubLObject)SubLObjectFactory.makeString("get_static_area")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-THREAD-PRIVATE-AREA"), (SubLObject)SubLObjectFactory.makeString("get_thread-private_area")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-WORKING-AREA"), (SubLObject)SubLObjectFactory.makeString("get_working_area")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%HASH-INDEX-KEY", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("HASH_INDEX_KEY"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TABLE"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%HASH-INDEX-OBJ", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("HASH_INDEX_OBJ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TABLE"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%INIT-OPT-ARG"), (SubLObject)SubLObjectFactory.makeString("INIT_OPT_ARG"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ARG"), (SubLObject)SubLObjectFactory.makeSymbol("VAL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%LEX"), (SubLObject)SubLObjectFactory.makeString("LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%MULTIPLE-VALUE-LIST"), (SubLObject)SubLObjectFactory.makeString("MULTIPLE_VALUE_LIST"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXPRESSION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%MVAL"), (SubLObject)SubLObjectFactory.makeString("MVAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("N"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%MVAL-COUNT"), (SubLObject)SubLObjectFactory.makeString("MVAL_COUNT"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%NEXT-HASH-INDEX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("NEXT_HASH_INDEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TABLE"), (SubLObject)SubLObjectFactory.makeSymbol("INDEX"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%NOTE-SUPPLIED"), (SubLObject)SubLObjectFactory.makeString("NOTE_SUPPLIED"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%NTH-VALUE"), (SubLObject)SubLObjectFactory.makeString("NTH_VALUE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("N"), (SubLObject)SubLObjectFactory.makeSymbol("FORM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-NOT-READABLE"), (SubLObject)SubLObjectFactory.makeString("print_not_readable"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%PROCLAIM"), (SubLObject)SubLObjectFactory.makeString("PROCLAIM"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DECL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%REBIND"), (SubLObject)SubLObjectFactory.makeString("REBIND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%REBIND-SPECIAL-VARS"), (SubLObject)SubLObjectFactory.makeString("REBIND_SPECIAL_VARS"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SPECIAL-VARS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%RESET-MVAL"), (SubLObject)SubLObjectFactory.makeString("RESET_MVAL"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%SET-CATCH"), (SubLObject)SubLObjectFactory.makeString("SET_CATCH"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TAG"), (SubLObject)SubLObjectFactory.makeSymbol("ENV"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%SET-DYN"), (SubLObject)SubLObjectFactory.makeString("SET_DYN"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"), (SubLObject)SubLObjectFactory.makeSymbol("VAL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%SET-LEX"), (SubLObject)SubLObjectFactory.makeString("SET_LEX"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VAR"), (SubLObject)SubLObjectFactory.makeSymbol("VAL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%SET-UNWIND"), (SubLObject)SubLObjectFactory.makeString("SET_UNWIND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENV"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%START-PRINTING-OBJECT"), (SubLObject)SubLObjectFactory.makeString("START_PRINTING_OBJECT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%START-UNWIND"), (SubLObject)SubLObjectFactory.makeString("START_UNWIND"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENV"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%THROWN-TO"), (SubLObject)SubLObjectFactory.makeString("DP_THROWN_TO"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENV"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("IN-PACKAGE"), (SubLObject)SubLObjectFactory.makeString("in_package"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NAME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CLEAR-GC-RESOURCE-ACCUMULATOR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sublisp_clear_gc_resource_accumulator"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%CURRENT-GC-RESOURCE-ACCUMULATOR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sublisp_current_gc_resource_accumulator"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%GET-INITIAL-CONTINUATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("_get_initial_continuation"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%GET-RED-OBJECT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("_get_red_object"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%INTERPRET-CSPACE-RESULTS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sublisp_interpret_cspace_results"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROBE"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%SET-INITIAL-CONTINUATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("_set_initial_continuation"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTIONSPEC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ADD-SPACE-PROBE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("add_space_probe"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-AS-STRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("alien_as_string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CANONICAL-NULL-FILE-STREAM-PATH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("canonical_null_file_stream_path")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CIRCULAR-REFERENCE-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("circular_reference_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DEF-FOREIGN-FUNCTION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sublisp_def_foreign_function"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FOREIGN-SHARED-LIBRARY"), (SubLObject)SubLObjectFactory.makeSymbol("FOREIGN-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("ARG-CONVERSION"), (SubLObject)SubLObjectFactory.makeSymbol("RET-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("CALLING-CONVENTION"), (SubLObject)SubLObjectFactory.makeSymbol("NULL-DEFAULT-RETURN"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-CLOSE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_close"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("ABORT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-FILE-LENGTH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_file_length"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-NEXT-INPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_next_input_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("WAITP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-SEND-OUTPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_send_output_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR-STREAM-SET-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("descriptor_stream_set_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("POSITION-SPEC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENCODE-UNIVERSAL-TIME-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("encode_universal_time_internal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SECOND"), (SubLObject)SubLObjectFactory.makeSymbol("MINUTE"), (SubLObject)SubLObjectFactory.makeSymbol("HOUR"), (SubLObject)SubLObjectFactory.makeSymbol("DATE"), (SubLObject)SubLObjectFactory.makeSymbol("MONTH"), (SubLObject)SubLObjectFactory.makeSymbol("YEAR"), (SubLObject)SubLObjectFactory.makeSymbol("TIME-ZONE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("EXTERNAL-PROCESSES-SUPPORTED?", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("external_processes_supportedP"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-CLOSE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_close"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("ABORT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-FILE-LENGTH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_file_length"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-NEXT-INPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_next_input_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("WAITP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-SEND-OUTPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_send_output_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILE-POINTER-STREAM-SET-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("file_pointer_stream_set_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("POSITION-SPEC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FOLLOW-SYNONYM-STREAM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("follow_synonym_stream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-EXTERNAL-PROCESS-STATUS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("get_external_process_status"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-ID"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("WAIT-UNTIL-DONE?"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-TIME", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("get_time"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("GET-TIMEZONE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("get_timezone"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("UNIVERSAL-TIME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HANDLE-CIRCULARITY", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("handle_circularity"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ILLEGAL-STREAM-OPERATION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("illegal_stream_operation"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("OPERATION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INHIBIT-PREEMPTION-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("inhibit_preemption_p"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INPUT-STREAM-DESIGNATOR-STREAM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("input_stream_designator_stream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTERNED-SYMBOLP", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("interned_symbolp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JVM-CALL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_jvm_call"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNC"), (SubLObject)SubLObjectFactory.makeSymbol("STACK-FRAME"), (SubLObject)SubLObjectFactory.makeSymbol("ARGSTART"), (SubLObject)SubLObjectFactory.makeSymbol("ARGCNT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JVMI-OPCODE-INTERPRETER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("jvmi_opcode_interpreter"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("JVMI"), (SubLObject)SubLObjectFactory.makeSymbol("CODE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("KILL-EXTERNAL-PROCESS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("kill_external_process"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-ID"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOAD-SHARED-OBJECT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sublisp_load_shared_object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MONIKER"), (SubLObject)SubLObjectFactory.makeSymbol("PATHNAME"), (SubLObject)SubLObjectFactory.makeSymbol("OPTIONS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-DESCRIPTOR-STREAM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("make_descriptor_stream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION"), (SubLObject)SubLObjectFactory.makeSymbol("ELEMENT-TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-GUID-BLOCK", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("make_block_of_guids")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-PRIVATE-DESCRIPTOR-STREAM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("make_private_descriptor_stream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("DESCRIPTOR"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION"), (SubLObject)SubLObjectFactory.makeSymbol("ELEMENT-TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAKE-STREAM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("make_stream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("ARGLIST"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MY-GETF", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("my_getf"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PLIST"), (SubLObject)SubLObjectFactory.makeSymbol("INDICATOR"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("DEFAULT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPEN-DESCRIPTOR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("open_descriptor"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILESPEC"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION"), (SubLObject)SubLObjectFactory.makeSymbol("ELEMENT-TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("IF-EXISTS"), (SubLObject)SubLObjectFactory.makeSymbol("IF-DOES-NOT-EXIST"), (SubLObject)SubLObjectFactory.makeSymbol("EXTERNAL-FORMAT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OUTPUT-STREAM-DESIGNATOR-STREAM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("output_stream_designator_stream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATHNAME-DESIGNATOR-PATHNAME", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("pathname_designator_pathname"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("POINTER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sublisp_pointer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-BIGNUM-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_bignum_internal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BIGNUM"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("RADIX"), (SubLObject)SubLObjectFactory.makeSymbol("DIVISOR"), (SubLObject)SubLObjectFactory.makeSymbol("POWER-LESS-ONE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-CHARACTER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_character"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHARACTER"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-CONS-CELLS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_cons_cells"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CONS"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-ERROR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_error"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-FLONUM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_flonum"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FLONUM"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-FUNCTION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_function"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-HASHTABLE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_hashtable"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-INTEGER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_integer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGER"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-INTEGER-INTERNAL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_integer_internal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INTEGER"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("PRINT-BASE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-OBJECT-WRAPPER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_object_wrapper"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-STREAM", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_stream"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("DEPTH"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-STRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-SYMBOL", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_symbol"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PRINT-VECTOR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("print_vector"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VECTOR"), (SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROCESS-YIELD", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("process_yield"), (SubLObject)c_name_translation.NIL), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("READ-PRINT-EQ", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("read_print_eq"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REALLY-OPEN", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("really_open"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILESPEC"), (SubLObject)SubLObjectFactory.makeSymbol("KEYS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REALLY-WRITE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("really_write"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REALLY-WRITE-TO-STRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("really_write_to_string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("KEYS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RELEASE-LOCK", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("release_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("REMOVE-SPACE-PROBE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("remove_space_probe"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROBE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RESTART-CYC", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("restart_cyc"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("WORLD"), (SubLObject)SubLObjectFactory.makeSymbol("INIT-FILE"), (SubLObject)SubLObjectFactory.makeSymbol("INIT-FORM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("RUN-EXTERNAL-PROCESS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("run_external_process"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PROGRAM"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("ARGS"), (SubLObject)SubLObjectFactory.makeSymbol("STDIN-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("STDOUT-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("STDERR-SPEC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SEIZE-LOCK", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("seize_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("LOCK"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-INHIBIT-PREEMPTION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_inhibit_preemption"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-COLUMN", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_column"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-COMPONENTS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_components"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-DIRECTION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_direction"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-ELEMENT-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_element_type"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-HANDLE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_handle"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-INPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_input_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-INPUT-INDEX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_input_index"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-INPUT-LIMIT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_input_limit"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-LAST-CHAR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_last_char"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-LOCK", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-OPEN-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_open_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-OUTPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_output_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-OUTPUT-INDEX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_output_index"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-OUTPUT-LIMIT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_output_limit"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-PATHNAME", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_pathname"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SET-STREAM-STREAM-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("set_stream_stream_type"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SIMPLE-STREAM-ERROR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("simple_stream_error"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORMAT-CONTROL"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("ARGS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-ADVANCE-TO-COLUMN", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_advance_to_column"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("COLUMN"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-CHECK-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_check_type"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-CLEAR-INPUT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_clear_input"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-CLEAR-OUTPUT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_clear_output"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-COLUMN", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_column"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-COMPONENTS", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_components"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-DIRECTION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_direction"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-FILE-LENGTH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_file_length"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-FILE-STRING-LENGTH", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_file_string_length"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-FINISH-OUTPUT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_finish_output"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-FORCE-OUTPUT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_force_output"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-FRESH-LINE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_fresh_line"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-HANDLE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_handle"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-INPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_input_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-INPUT-INDEX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_input_index"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-INPUT-LIMIT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_input_limit"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-LAST-CHAR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_last_char"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-LISTEN", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_listen"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-LOCK", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_lock"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-NEXT-INPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_next_input_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("WAITP"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-OPEN-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_open_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-OUTPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_output_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-OUTPUT-INDEX", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_output_index"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-OUTPUT-LIMIT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_output_limit"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-PATHNAME", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_pathname"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-PEEK-CHAR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_peek_char"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-READ-BYTE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_read_byte"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-READ-CHAR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_read_char"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-READ-CHAR-NO-HANG", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_read_char_no_hang"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-READ-LINE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_read_line"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-READ-SEQUENCE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_read_sequence"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("SEQUENCE"), (SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)SubLObjectFactory.makeSymbol("END"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-SEND-OUTPUT-BUFFER", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_send_output_buffer"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-SET-FILE-POSITION", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_set_file_position"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("POSITION-SPEC"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-START-LINE-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_start_line_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-STREAM-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_stream_type"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-TERPRI", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_terpri"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-UNREAD-CHAR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_unread_char"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("CHARACTER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-WRITE-BYTE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_write_byte"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("INTEGER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-WRITE-CHAR", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_write_char"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("CHARACTER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-WRITE-SEQUENCE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_write_sequence"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("SEQUENCE"), (SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)SubLObjectFactory.makeSymbol("END"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM-WRITE-STRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("stream_write_string"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"), (SubLObject)SubLObjectFactory.makeSymbol("STRING"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("START"), (SubLObject)c_name_translation.ZERO_INTEGER), (SubLObject)SubLObjectFactory.makeSymbol("END"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TIMESTRING", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f_timestring"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("UNIVERSAL-TIME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNKNOWN-STREAM-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("unknown_stream_type"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("UNLOAD-SHARED-OBJECT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("sublisp_unload_shared_object"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("PATHNAME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("WIDE-NEWLINE-STREAM-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("wide_newline_stream_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STREAM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CLEAR-STRUCTURE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("CLEAR_STRUCTURE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SIZE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CLEAR-SUB-STRUCTURE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("CLEAR_SUB_STRUCTURE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SIZE"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_CSETF-READTABLE-CASE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("f__csetf_readtable_case"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_DEF-CSETF", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("DEF_CSETF"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ACCESSOR"), (SubLObject)SubLObjectFactory.makeSymbol("SETTER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_METHOD", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("METHOD_FUNC"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("METHOD-TABLE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_NEW-STRUCTURE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("NEW_STRUCTURE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("SIZE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_REGISTER-DEFSTRUCT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("REGISTER_DEFSTRUCT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NAME"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("SIZE"), (SubLObject)SubLObjectFactory.makeSymbol("PRINT-FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("SLOTS"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_REGISTER-METHOD", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("REGISTER_METHOD"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("METHOD-TABLE"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"), (SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_SET-STRUCTURE-SLOT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("SET_STRUCTURE_SLOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SLOT"), (SubLObject)SubLObjectFactory.makeSymbol("VALUE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_STRUCTURE-SLOT", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("STRUCTURE_SLOT"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("SLOT"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_STRUCTURE-TYPE", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("STRUCTURE_TYPE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJECT"), (SubLObject)SubLObjectFactory.makeSymbol("TYPE"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("_STRUCTURES-BAG-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("dp_structures_bag_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))) });
    }
    
    private static SubLObject _constant_10_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-/="), (SubLObject)SubLObjectFactory.makeString("numNE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-<"), (SubLObject)SubLObjectFactory.makeString("numL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-<="), (SubLObject)SubLObjectFactory.makeString("numLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-="), (SubLObject)SubLObjectFactory.makeString("numE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B->"), (SubLObject)SubLObjectFactory.makeString("numG"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B->="), (SubLObject)SubLObjectFactory.makeString("numGE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-ALIEN-P"), (SubLObject)SubLObjectFactory.makeString("alienp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-ALPHA-CHARP"), (SubLObject)SubLObjectFactory.makeString("alpha_char_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-ALPHANUMERICP"), (SubLObject)SubLObjectFactory.makeString("alphanumericp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-ATOM"), (SubLObject)SubLObjectFactory.makeString("atom"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-BOTH-CASEP"), (SubLObject)SubLObjectFactory.makeString("both_case_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-BOUNDP"), (SubLObject)SubLObjectFactory.makeString("boundp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-EQUAL"), (SubLObject)SubLObjectFactory.makeString("char_equal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-GREATERP"), (SubLObject)SubLObjectFactory.makeString("char_greaterp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-LESSP"), (SubLObject)SubLObjectFactory.makeString("char_lessp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-NOT-EQUAL"), (SubLObject)SubLObjectFactory.makeString("char_not_equal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-NOT-GREATERP"), (SubLObject)SubLObjectFactory.makeString("char_not_greaterp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-NOT-LESSP"), (SubLObject)SubLObjectFactory.makeString("char_not_lessp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR/="), (SubLObject)SubLObjectFactory.makeString("charNE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR<"), (SubLObject)SubLObjectFactory.makeString("charL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR<="), (SubLObject)SubLObjectFactory.makeString("charLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR="), (SubLObject)SubLObjectFactory.makeString("charE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR>"), (SubLObject)SubLObjectFactory.makeString("charG"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR>="), (SubLObject)SubLObjectFactory.makeString("charGE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR1"), (SubLObject)SubLObjectFactory.makeSymbol("CHAR2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CHARACTERP"), (SubLObject)SubLObjectFactory.makeString("characterp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-CONSP"), (SubLObject)SubLObjectFactory.makeString("consp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-EQ"), (SubLObject)SubLObjectFactory.makeString("EQ"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"), (SubLObject)SubLObjectFactory.makeSymbol("Y"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-EQL"), (SubLObject)SubLObjectFactory.makeString("eql"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"), (SubLObject)SubLObjectFactory.makeSymbol("Y"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-EQUAL"), (SubLObject)SubLObjectFactory.makeString("equal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"), (SubLObject)SubLObjectFactory.makeSymbol("Y"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-EQUALP"), (SubLObject)SubLObjectFactory.makeString("equalp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"), (SubLObject)SubLObjectFactory.makeSymbol("Y"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-EVENP"), (SubLObject)SubLObjectFactory.makeString("evenp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUMBER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-FBOUNDP"), (SubLObject)SubLObjectFactory.makeString("fboundp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-FIXNUMP"), (SubLObject)SubLObjectFactory.makeString("fixnump"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-FLOATP"), (SubLObject)SubLObjectFactory.makeString("floatp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-FUNCTION-SPEC-P"), (SubLObject)SubLObjectFactory.makeString("function_spec_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-FUNCTIONP"), (SubLObject)SubLObjectFactory.makeString("functionp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-GUID-P"), (SubLObject)SubLObjectFactory.makeString("guid_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OBJ"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-HASH-TABLE-P"), (SubLObject)SubLObjectFactory.makeString("hash_table_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-INTEGERP"), (SubLObject)SubLObjectFactory.makeString("integerp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-KEYWORDP"), (SubLObject)SubLObjectFactory.makeString("keywordp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-LISTP"), (SubLObject)SubLObjectFactory.makeString("listp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-LOCK-P"), (SubLObject)SubLObjectFactory.makeString("lockp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-LOWER-CASEP"), (SubLObject)SubLObjectFactory.makeString("lower_case_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-MACRO-OPERATOR-P"), (SubLObject)SubLObjectFactory.makeString("macro_operator_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-MINUSP"), (SubLObject)SubLObjectFactory.makeString("minusp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUMBER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-NULL"), (SubLObject)SubLObjectFactory.makeString("SUBLISP_NULL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-NUMBERP"), (SubLObject)SubLObjectFactory.makeString("numberp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-ODDP"), (SubLObject)SubLObjectFactory.makeString("oddp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUMBER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-PACKAGEP"), (SubLObject)SubLObjectFactory.makeString("packagep"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-PLUSP"), (SubLObject)SubLObjectFactory.makeString("plusp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUMBER"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-PROBE-FILE"), (SubLObject)SubLObjectFactory.makeString("probe_file"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FILENAME"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-PROCESSP"), (SubLObject)SubLObjectFactory.makeString("processp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-SEQUENCEP"), (SubLObject)SubLObjectFactory.makeString("sequencep"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STREAMP"), (SubLObject)SubLObjectFactory.makeString("streamp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-EQUAL"), (SubLObject)SubLObjectFactory.makeString("string_equal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-GREATERP"), (SubLObject)SubLObjectFactory.makeString("string_greaterp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-LESSP"), (SubLObject)SubLObjectFactory.makeString("string_lessp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-NOT-EQUAL"), (SubLObject)SubLObjectFactory.makeString("string_not_equal"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-NOT-GREATERP"), (SubLObject)SubLObjectFactory.makeString("string_not_greaterp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-NOT-LESSP"), (SubLObject)SubLObjectFactory.makeString("string_not_lessp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING/="), (SubLObject)SubLObjectFactory.makeString("stringNE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING<"), (SubLObject)SubLObjectFactory.makeString("stringL"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING<="), (SubLObject)SubLObjectFactory.makeString("stringLE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING="), (SubLObject)SubLObjectFactory.makeString("stringE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING>"), (SubLObject)SubLObjectFactory.makeString("stringG"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRING>="), (SubLObject)SubLObjectFactory.makeString("stringGE"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("STRING1"), (SubLObject)SubLObjectFactory.makeSymbol("STRING2"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("START1"), (SubLObject)SubLObjectFactory.makeSymbol("END1"), (SubLObject)SubLObjectFactory.makeSymbol("START2"), (SubLObject)SubLObjectFactory.makeSymbol("END2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRINGP"), (SubLObject)SubLObjectFactory.makeString("stringp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-STRUCTURES-BAG-P"), (SubLObject)SubLObjectFactory.makeString("structures_bag_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-SYMBOLP"), (SubLObject)SubLObjectFactory.makeString("symbolp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-THROWN-TO"), (SubLObject)SubLObjectFactory.makeString("THROWN_TO"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("ENV"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-UPPER-CASEP"), (SubLObject)SubLObjectFactory.makeString("upper_case_p"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("CHAR"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-VECTORP"), (SubLObject)SubLObjectFactory.makeString("vectorp"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("X"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%B-ZEROP"), (SubLObject)SubLObjectFactory.makeString("zerop"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUMBER"))) });
    }
    
    private static SubLObject _constant_15_initializer() {
        return (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.cons((SubLObject)c_name_translation.T, (SubLObject)SubLObjectFactory.makeString("T")), ConsesLow.cons((SubLObject)c_name_translation.NIL, (SubLObject)SubLObjectFactory.makeString("NIL")), ConsesLow.cons((SubLObject)c_name_translation.EQ, (SubLObject)SubLObjectFactory.makeString("eq_sym")), ConsesLow.cons((SubLObject)c_name_translation.EQL, (SubLObject)SubLObjectFactory.makeString("eql_sym")), ConsesLow.cons((SubLObject)c_name_translation.EQUAL, (SubLObject)SubLObjectFactory.makeString("equal_sym")), ConsesLow.cons((SubLObject)c_name_translation.EQUALP, (SubLObject)SubLObjectFactory.makeString("equalp_sym")), ConsesLow.cons((SubLObject)c_name_translation.IDENTITY, (SubLObject)SubLObjectFactory.makeString("identity_sym")), ConsesLow.cons((SubLObject)c_name_translation.MINUS_ONE_INTEGER, (SubLObject)SubLObjectFactory.makeString("minus_one")), ConsesLow.cons((SubLObject)c_name_translation.ZERO_INTEGER, (SubLObject)SubLObjectFactory.makeString("zero")), ConsesLow.cons((SubLObject)c_name_translation.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeString("one")), ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeString("two")), ConsesLow.cons((SubLObject)c_name_translation.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeString("three")), ConsesLow.cons((SubLObject)c_name_translation.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeString("four")), ConsesLow.cons((SubLObject)c_name_translation.FIVE_INTEGER, (SubLObject)SubLObjectFactory.makeString("five")), ConsesLow.cons((SubLObject)c_name_translation.SIX_INTEGER, (SubLObject)SubLObjectFactory.makeString("six")), ConsesLow.cons((SubLObject)c_name_translation.SEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("seven")), ConsesLow.cons((SubLObject)c_name_translation.EIGHT_INTEGER, (SubLObject)SubLObjectFactory.makeString("eight")), ConsesLow.cons((SubLObject)c_name_translation.NINE_INTEGER, (SubLObject)SubLObjectFactory.makeString("nine")), ConsesLow.cons((SubLObject)c_name_translation.TEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("ten")), ConsesLow.cons((SubLObject)c_name_translation.ELEVEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("eleven")), ConsesLow.cons((SubLObject)c_name_translation.TWELVE_INTEGER, (SubLObject)SubLObjectFactory.makeString("twelve")), ConsesLow.cons((SubLObject)c_name_translation.THIRTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("thirteen")), ConsesLow.cons((SubLObject)c_name_translation.FOURTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("fourteen")), ConsesLow.cons((SubLObject)c_name_translation.FIFTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("fifteen")), ConsesLow.cons((SubLObject)c_name_translation.SIXTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("sixteen")), ConsesLow.cons((SubLObject)c_name_translation.SEVENTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("seventeen")), ConsesLow.cons((SubLObject)c_name_translation.EIGHTEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("eighteen")), ConsesLow.cons((SubLObject)c_name_translation.NINETEEN_INTEGER, (SubLObject)SubLObjectFactory.makeString("nineteen")), ConsesLow.cons((SubLObject)c_name_translation.TWENTY_INTEGER, (SubLObject)SubLObjectFactory.makeString("twenty")), ConsesLow.cons((SubLObject)Characters.CHAR_null, (SubLObject)SubLObjectFactory.makeString("c_null")), ConsesLow.cons((SubLObject)Characters.CHAR_backspace, (SubLObject)SubLObjectFactory.makeString("c_backspace")), ConsesLow.cons((SubLObject)Characters.CHAR_tab, (SubLObject)SubLObjectFactory.makeString("c_tab")), ConsesLow.cons((SubLObject)Characters.CHAR_newline, (SubLObject)SubLObjectFactory.makeString("c_newline")), ConsesLow.cons((SubLObject)Characters.CHAR_return, (SubLObject)SubLObjectFactory.makeString("c_return")), ConsesLow.cons((SubLObject)Characters.CHAR_page, (SubLObject)SubLObjectFactory.makeString("c_page")), ConsesLow.cons((SubLObject)Characters.CHAR_escape, (SubLObject)SubLObjectFactory.makeString("c_esc")), ConsesLow.cons((SubLObject)Characters.CHAR_space, (SubLObject)SubLObjectFactory.makeString("c_space")), ConsesLow.cons((SubLObject)Characters.CHAR_exclamation, (SubLObject)SubLObjectFactory.makeString("c_exclamation")), ConsesLow.cons((SubLObject)Characters.CHAR_quotation, (SubLObject)SubLObjectFactory.makeString("c_quotation")), ConsesLow.cons((SubLObject)Characters.CHAR_hash, (SubLObject)SubLObjectFactory.makeString("c_hash")), ConsesLow.cons((SubLObject)Characters.CHAR_dollar, (SubLObject)SubLObjectFactory.makeString("c_dollar")), ConsesLow.cons((SubLObject)Characters.CHAR_percent, (SubLObject)SubLObjectFactory.makeString("c_percent")), ConsesLow.cons((SubLObject)Characters.CHAR_ampersand, (SubLObject)SubLObjectFactory.makeString("c_ampersand")), ConsesLow.cons((SubLObject)Characters.CHAR_quote, (SubLObject)SubLObjectFactory.makeString("c_quote")), ConsesLow.cons((SubLObject)Characters.CHAR_lparen, (SubLObject)SubLObjectFactory.makeString("c_lparen")), ConsesLow.cons((SubLObject)Characters.CHAR_rparen, (SubLObject)SubLObjectFactory.makeString("c_rparen")), ConsesLow.cons((SubLObject)Characters.CHAR_asterisk, (SubLObject)SubLObjectFactory.makeString("c_asterisk")), ConsesLow.cons((SubLObject)Characters.CHAR_plus, (SubLObject)SubLObjectFactory.makeString("c_plus")), ConsesLow.cons((SubLObject)Characters.CHAR_comma, (SubLObject)SubLObjectFactory.makeString("c_comma")), ConsesLow.cons((SubLObject)Characters.CHAR_hyphen, (SubLObject)SubLObjectFactory.makeString("c_hyphen")), ConsesLow.cons((SubLObject)Characters.CHAR_period, (SubLObject)SubLObjectFactory.makeString("c_period")), ConsesLow.cons((SubLObject)Characters.CHAR_slash, (SubLObject)SubLObjectFactory.makeString("c_slash")), ConsesLow.cons((SubLObject)Characters.CHAR_0, (SubLObject)SubLObjectFactory.makeString("c_0")), ConsesLow.cons((SubLObject)Characters.CHAR_1, (SubLObject)SubLObjectFactory.makeString("c_1")), ConsesLow.cons((SubLObject)Characters.CHAR_2, (SubLObject)SubLObjectFactory.makeString("c_2")), ConsesLow.cons((SubLObject)Characters.CHAR_3, (SubLObject)SubLObjectFactory.makeString("c_3")), ConsesLow.cons((SubLObject)Characters.CHAR_4, (SubLObject)SubLObjectFactory.makeString("c_4")), ConsesLow.cons((SubLObject)Characters.CHAR_5, (SubLObject)SubLObjectFactory.makeString("c_5")), ConsesLow.cons((SubLObject)Characters.CHAR_6, (SubLObject)SubLObjectFactory.makeString("c_6")), ConsesLow.cons((SubLObject)Characters.CHAR_7, (SubLObject)SubLObjectFactory.makeString("c_7")), ConsesLow.cons((SubLObject)Characters.CHAR_8, (SubLObject)SubLObjectFactory.makeString("c_8")), ConsesLow.cons((SubLObject)Characters.CHAR_9, (SubLObject)SubLObjectFactory.makeString("c_9")), ConsesLow.cons((SubLObject)Characters.CHAR_colon, (SubLObject)SubLObjectFactory.makeString("c_colon")), ConsesLow.cons((SubLObject)Characters.CHAR_semicolon, (SubLObject)SubLObjectFactory.makeString("c_semicolon")), ConsesLow.cons((SubLObject)Characters.CHAR_less, (SubLObject)SubLObjectFactory.makeString("c_less")), ConsesLow.cons((SubLObject)Characters.CHAR_equal, (SubLObject)SubLObjectFactory.makeString("c_equal")), ConsesLow.cons((SubLObject)Characters.CHAR_greater, (SubLObject)SubLObjectFactory.makeString("c_greater")), ConsesLow.cons((SubLObject)Characters.CHAR_question, (SubLObject)SubLObjectFactory.makeString("c_question")), ConsesLow.cons((SubLObject)Characters.CHAR_at, (SubLObject)SubLObjectFactory.makeString("c_at")), ConsesLow.cons((SubLObject)Characters.CHAR_A, (SubLObject)SubLObjectFactory.makeString("c_A")), ConsesLow.cons((SubLObject)Characters.CHAR_B, (SubLObject)SubLObjectFactory.makeString("c_B")), ConsesLow.cons((SubLObject)Characters.CHAR_C, (SubLObject)SubLObjectFactory.makeString("c_C")), ConsesLow.cons((SubLObject)Characters.CHAR_D, (SubLObject)SubLObjectFactory.makeString("c_D")), ConsesLow.cons((SubLObject)Characters.CHAR_E, (SubLObject)SubLObjectFactory.makeString("c_E")), ConsesLow.cons((SubLObject)Characters.CHAR_F, (SubLObject)SubLObjectFactory.makeString("c_F")), ConsesLow.cons((SubLObject)Characters.CHAR_G, (SubLObject)SubLObjectFactory.makeString("c_G")), ConsesLow.cons((SubLObject)Characters.CHAR_H, (SubLObject)SubLObjectFactory.makeString("c_H")), ConsesLow.cons((SubLObject)Characters.CHAR_I, (SubLObject)SubLObjectFactory.makeString("c_I")), ConsesLow.cons((SubLObject)Characters.CHAR_J, (SubLObject)SubLObjectFactory.makeString("c_J")), ConsesLow.cons((SubLObject)Characters.CHAR_K, (SubLObject)SubLObjectFactory.makeString("c_K")), ConsesLow.cons((SubLObject)Characters.CHAR_L, (SubLObject)SubLObjectFactory.makeString("c_L")), ConsesLow.cons((SubLObject)Characters.CHAR_M, (SubLObject)SubLObjectFactory.makeString("c_M")), ConsesLow.cons((SubLObject)Characters.CHAR_N, (SubLObject)SubLObjectFactory.makeString("c_N")), ConsesLow.cons((SubLObject)Characters.CHAR_O, (SubLObject)SubLObjectFactory.makeString("c_O")), ConsesLow.cons((SubLObject)Characters.CHAR_P, (SubLObject)SubLObjectFactory.makeString("c_P")), ConsesLow.cons((SubLObject)Characters.CHAR_Q, (SubLObject)SubLObjectFactory.makeString("c_Q")), ConsesLow.cons((SubLObject)Characters.CHAR_R, (SubLObject)SubLObjectFactory.makeString("c_R")), ConsesLow.cons((SubLObject)Characters.CHAR_S, (SubLObject)SubLObjectFactory.makeString("c_S")), ConsesLow.cons((SubLObject)Characters.CHAR_T, (SubLObject)SubLObjectFactory.makeString("c_T")), ConsesLow.cons((SubLObject)Characters.CHAR_U, (SubLObject)SubLObjectFactory.makeString("c_U")), ConsesLow.cons((SubLObject)Characters.CHAR_V, (SubLObject)SubLObjectFactory.makeString("c_V")), ConsesLow.cons((SubLObject)Characters.CHAR_W, (SubLObject)SubLObjectFactory.makeString("c_W")), ConsesLow.cons((SubLObject)Characters.CHAR_X, (SubLObject)SubLObjectFactory.makeString("c_X")), ConsesLow.cons((SubLObject)Characters.CHAR_Y, (SubLObject)SubLObjectFactory.makeString("c_Y")), ConsesLow.cons((SubLObject)Characters.CHAR_Z, (SubLObject)SubLObjectFactory.makeString("c_Z")), ConsesLow.cons((SubLObject)Characters.CHAR_lbracket, (SubLObject)SubLObjectFactory.makeString("c_lbracket")), ConsesLow.cons((SubLObject)Characters.CHAR_backslash, (SubLObject)SubLObjectFactory.makeString("c_backslash")), ConsesLow.cons((SubLObject)Characters.CHAR_rbracket, (SubLObject)SubLObjectFactory.makeString("c_rbracket")), ConsesLow.cons((SubLObject)Characters.CHAR_caret, (SubLObject)SubLObjectFactory.makeString("c_caret")), ConsesLow.cons((SubLObject)Characters.CHAR_underbar, (SubLObject)SubLObjectFactory.makeString("c_underbar")), ConsesLow.cons((SubLObject)Characters.CHAR_backquote, (SubLObject)SubLObjectFactory.makeString("c_backquote")), ConsesLow.cons((SubLObject)Characters.CHAR_a, (SubLObject)SubLObjectFactory.makeString("c_a")), ConsesLow.cons((SubLObject)Characters.CHAR_b, (SubLObject)SubLObjectFactory.makeString("c_b")), ConsesLow.cons((SubLObject)Characters.CHAR_c, (SubLObject)SubLObjectFactory.makeString("c_c")), ConsesLow.cons((SubLObject)Characters.CHAR_d, (SubLObject)SubLObjectFactory.makeString("c_d")), ConsesLow.cons((SubLObject)Characters.CHAR_e, (SubLObject)SubLObjectFactory.makeString("c_e")), ConsesLow.cons((SubLObject)Characters.CHAR_f, (SubLObject)SubLObjectFactory.makeString("c_f")), ConsesLow.cons((SubLObject)Characters.CHAR_g, (SubLObject)SubLObjectFactory.makeString("c_g")), ConsesLow.cons((SubLObject)Characters.CHAR_h, (SubLObject)SubLObjectFactory.makeString("c_h")), ConsesLow.cons((SubLObject)Characters.CHAR_i, (SubLObject)SubLObjectFactory.makeString("c_i")), ConsesLow.cons((SubLObject)Characters.CHAR_j, (SubLObject)SubLObjectFactory.makeString("c_j")), ConsesLow.cons((SubLObject)Characters.CHAR_k, (SubLObject)SubLObjectFactory.makeString("c_k")), ConsesLow.cons((SubLObject)Characters.CHAR_l, (SubLObject)SubLObjectFactory.makeString("c_l")), ConsesLow.cons((SubLObject)Characters.CHAR_m, (SubLObject)SubLObjectFactory.makeString("c_m")), ConsesLow.cons((SubLObject)Characters.CHAR_n, (SubLObject)SubLObjectFactory.makeString("c_n")), ConsesLow.cons((SubLObject)Characters.CHAR_o, (SubLObject)SubLObjectFactory.makeString("c_o")), ConsesLow.cons((SubLObject)Characters.CHAR_p, (SubLObject)SubLObjectFactory.makeString("c_p")), ConsesLow.cons((SubLObject)Characters.CHAR_q, (SubLObject)SubLObjectFactory.makeString("c_q")), ConsesLow.cons((SubLObject)Characters.CHAR_r, (SubLObject)SubLObjectFactory.makeString("c_r")), ConsesLow.cons((SubLObject)Characters.CHAR_s, (SubLObject)SubLObjectFactory.makeString("c_s")), ConsesLow.cons((SubLObject)Characters.CHAR_t, (SubLObject)SubLObjectFactory.makeString("c_t")), ConsesLow.cons((SubLObject)Characters.CHAR_u, (SubLObject)SubLObjectFactory.makeString("c_u")), ConsesLow.cons((SubLObject)Characters.CHAR_v, (SubLObject)SubLObjectFactory.makeString("c_v")), ConsesLow.cons((SubLObject)Characters.CHAR_w, (SubLObject)SubLObjectFactory.makeString("c_w")), ConsesLow.cons((SubLObject)Characters.CHAR_x, (SubLObject)SubLObjectFactory.makeString("c_x")), ConsesLow.cons((SubLObject)Characters.CHAR_y, (SubLObject)SubLObjectFactory.makeString("c_y")), ConsesLow.cons((SubLObject)Characters.CHAR_z, (SubLObject)SubLObjectFactory.makeString("c_z")), ConsesLow.cons((SubLObject)Characters.CHAR_lbrace, (SubLObject)SubLObjectFactory.makeString("c_lbrace")), ConsesLow.cons((SubLObject)Characters.CHAR_vertical, (SubLObject)SubLObjectFactory.makeString("c_vertical")), ConsesLow.cons((SubLObject)Characters.CHAR_rbrace, (SubLObject)SubLObjectFactory.makeString("c_rbrace")), ConsesLow.cons((SubLObject)Characters.CHAR_tilde, (SubLObject)SubLObjectFactory.makeString("c_tilde")), ConsesLow.cons((SubLObject)Characters.CHAR_rubout, (SubLObject)SubLObjectFactory.makeString("c_rubout")) });
    }
    
    public void declareFunctions() {
        declare_c_name_translation_file();
    }
    
    public void initializeVariables() {
        init_c_name_translation_file();
    }
    
    public void runTopLevelForms() {
        setup_c_name_translation_file();
    }
    
    static {
        me = (SubLFile)new c_name_translation();
        c_name_translation.$c_backend_defined_function_name_data$ = null;
        c_name_translation.$c_backend_undefined_function_name_data$ = null;
        c_name_translation.$c_backend_function_arity_version_table$ = null;
        c_name_translation.$c_backend_undefined_arity_function_name_data$ = null;
        c_name_translation.$c_backend_function_boolean_version_table$ = null;
        c_name_translation.$c_backend_function_boolean_hash$ = null;
        c_name_translation.$c_backend_undefined_boolean_function_name_data$ = null;
        c_name_translation.$c_backend_function_name_table$ = null;
        c_name_translation.$c_backend_function_arglist_table$ = null;
        c_name_translation.$c_backend_predefined_constant_table$ = null;
        c_name_translation.$c_backend_defined_global_name_data$ = null;
        c_name_translation.$c_backend_undefined_global_name_data$ = null;
        c_name_translation.$c_backend_global_name_table$ = null;
        $list0 = _constant_0_initializer();
        $list1 = _constant_1_initializer();
        $list2 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("OPERATOR"), (SubLObject)SubLObjectFactory.makeSymbol("&REST"), (SubLObject)SubLObjectFactory.makeSymbol("ARGS"));
        $list3 = ConsesLow.list((SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*"), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%MULT2"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("+"), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%ADD2"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("-"), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%MINUS")), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%SUB2"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("/"), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%INVERT")), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%DIV2"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCALL"), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.ONE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL0")), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL1")), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.THREE_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL2")), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.FOUR_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL3"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MAX"), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%MAX2"))), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("MIN"), (SubLObject)ConsesLow.cons((SubLObject)c_name_translation.TWO_INTEGER, (SubLObject)SubLObjectFactory.makeSymbol("%MIN2"))));
        $list4 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%ADD2"), (SubLObject)SubLObjectFactory.makeString("add2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%DIV2"), (SubLObject)SubLObjectFactory.makeString("div2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL0"), (SubLObject)SubLObjectFactory.makeString("funcall0"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL1"), (SubLObject)SubLObjectFactory.makeString("funcall1"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("ARG1"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL2"), (SubLObject)SubLObjectFactory.makeString("funcall2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("ARG1"), (SubLObject)SubLObjectFactory.makeSymbol("ARG2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%FUNCALL3"), (SubLObject)SubLObjectFactory.makeString("funcall3"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("ARG1"), (SubLObject)SubLObjectFactory.makeSymbol("ARG2"), (SubLObject)SubLObjectFactory.makeSymbol("ARG3"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%INVERT"), (SubLObject)SubLObjectFactory.makeString("invert"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%MAX2"), (SubLObject)SubLObjectFactory.makeString("max2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%MIN2"), (SubLObject)SubLObjectFactory.makeString("min2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%MINUS"), (SubLObject)SubLObjectFactory.makeString("minus"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%MULT2"), (SubLObject)SubLObjectFactory.makeString("mult2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("%SUB2"), (SubLObject)SubLObjectFactory.makeString("sub2"), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("NUM1"), (SubLObject)SubLObjectFactory.makeSymbol("NUM2"))) });
        $sym5$_DTB = SubLObjectFactory.makeSymbol("%DTB");
        $sym6$_BTD = SubLObjectFactory.makeSymbol("%BTD");
        $list7 = ConsesLow.list(new SubLObject[] { ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("%THROWN-TO"), (SubLObject)SubLObjectFactory.makeSymbol("%B-THROWN-TO")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("/="), (SubLObject)SubLObjectFactory.makeSymbol("%B-/=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("<"), (SubLObject)SubLObjectFactory.makeSymbol("%B-<")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("<="), (SubLObject)SubLObjectFactory.makeSymbol("%B-<=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("="), (SubLObject)SubLObjectFactory.makeSymbol("%B-=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol(">"), (SubLObject)SubLObjectFactory.makeSymbol("%B->")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol(">="), (SubLObject)SubLObjectFactory.makeSymbol("%B->=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("ALPHA-CHAR-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-ALPHA-CHARP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("ALPHANUMERICP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-ALPHANUMERICP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("ATOM"), (SubLObject)SubLObjectFactory.makeSymbol("%B-ATOM")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("BOTH-CASE-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-BOTH-CASEP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("BOUNDP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-BOUNDP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR-EQUAL"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-EQUAL")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR-GREATERP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-GREATERP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR-LESSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-LESSP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR-NOT-EQUAL"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-NOT-EQUAL")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR-NOT-GREATERP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-NOT-GREATERP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR-NOT-LESSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR-NOT-LESSP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR/="), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR/=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR<"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR<")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR<="), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR<=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR="), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR>"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR>")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHAR>="), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHAR>=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CHARACTERP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CHARACTERP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("CONSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-CONSP")), ConsesLow.cons((SubLObject)c_name_translation.EQ, (SubLObject)SubLObjectFactory.makeSymbol("%B-EQ")), ConsesLow.cons((SubLObject)c_name_translation.EQL, (SubLObject)SubLObjectFactory.makeSymbol("%B-EQL")), ConsesLow.cons((SubLObject)c_name_translation.EQUAL, (SubLObject)SubLObjectFactory.makeSymbol("%B-EQUAL")), ConsesLow.cons((SubLObject)c_name_translation.EQUALP, (SubLObject)SubLObjectFactory.makeSymbol("%B-EQUALP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("EVENP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-EVENP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("FBOUNDP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-FBOUNDP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("FIXNUMP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-FIXNUMP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("FLOATP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-FLOATP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION-SPEC-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-FUNCTION-SPEC-P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("FUNCTIONP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-FUNCTIONP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("GUID-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-GUID-P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("HASH-TABLE-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-HASH-TABLE-P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("INTEGERP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-INTEGERP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("KEYWORDP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-KEYWORDP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("LISTP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-LISTP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("LOCK-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-LOCK-P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("LOWER-CASE-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-LOWER-CASEP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("MACRO-OPERATOR-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-MACRO-OPERATOR-P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("MINUSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-MINUSP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("NULL"), (SubLObject)SubLObjectFactory.makeSymbol("%B-NULL")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("NUMBERP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-NUMBERP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("ODDP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-ODDP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("PACKAGEP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-PACKAGEP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("PLUSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-PLUSP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("PROBE-FILE"), (SubLObject)SubLObjectFactory.makeSymbol("%B-PROBE-FILE")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("PROCESSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-PROCESSP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("SEQUENCEP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-SEQUENCEP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STREAMP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STREAMP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING-EQUAL"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-EQUAL")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING-GREATERP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-GREATERP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING-LESSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-LESSP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING-NOT-EQUAL"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-NOT-EQUAL")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING-NOT-GREATERP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-NOT-GREATERP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING-NOT-LESSP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING-NOT-LESSP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING/="), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING/=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING<"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING<")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING<="), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING<=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING="), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING>"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING>")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRING>="), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRING>=")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("STRINGP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRINGP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("ALIEN-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-ALIEN-P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("_STRUCTURES-BAG-P", "SUBLISP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-STRUCTURES-BAG-P")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("SYMBOLP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-SYMBOLP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("UPPER-CASE-P"), (SubLObject)SubLObjectFactory.makeSymbol("%B-UPPER-CASEP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("VECTORP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-VECTORP")), ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("ZEROP"), (SubLObject)SubLObjectFactory.makeSymbol("%B-ZEROP")) });
        $kw8$UNINITIALIZED = SubLObjectFactory.makeKeyword("UNINITIALIZED");
        $list9 = (SubLList)ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("FUNCTION"), (SubLObject)SubLObjectFactory.makeSymbol("BOOLEAN-VERSION"));
        $list10 = _constant_10_initializer();
        $list11 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("C-BACKEND-NAME"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("ARGLIST"));
        $kw12$UNSPECIFIED = SubLObjectFactory.makeKeyword("UNSPECIFIED");
        $int13$500 = SubLObjectFactory.makeInteger(500);
        $list14 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("SYMBOL"), (SubLObject)SubLObjectFactory.makeSymbol("C-BACKEND-NAME"));
        $list15 = _constant_15_initializer();
        $list16 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*"), (SubLObject)SubLObjectFactory.makeString("gv_S")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("**"), (SubLObject)SubLObjectFactory.makeString("gv_SS")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("***"), (SubLObject)SubLObjectFactory.makeString("gv_SSS")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*BREAK-ON-ERROR?*"), (SubLObject)SubLObjectFactory.makeString("gv_break_on_errorP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*BREAK-ON-WARN?*"), (SubLObject)SubLObjectFactory.makeString("gv_break_on_warnP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CONTINUE-CERROR?*"), (SubLObject)SubLObjectFactory.makeString("gv_continue_cerrorP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CURRENT-AREA*"), (SubLObject)SubLObjectFactory.makeString("gv_current_area")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DEBUG-IO*"), (SubLObject)SubLObjectFactory.makeString("gv_debug_io")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DEFAULT-PATHNAME-DEFAULTS*"), (SubLObject)SubLObjectFactory.makeString("gv_default_pathname_defaults")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-ABORT-HANDLER*"), (SubLObject)SubLObjectFactory.makeString("gv_error_abort_handler")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-HANDLER*"), (SubLObject)SubLObjectFactory.makeString("gv_error_handler")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-MESSAGE*"), (SubLObject)SubLObjectFactory.makeString("gv_error_message")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*ERROR-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("gv_error_output")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*EXP1*"), (SubLObject)SubLObjectFactory.makeString("gv_exp1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*FEATURES*"), (SubLObject)SubLObjectFactory.makeString("gv_features")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*GENSYM-COUNTER*"), (SubLObject)SubLObjectFactory.makeString("gv_gensym_counter")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*IGNORE-BREAKS?*"), (SubLObject)SubLObjectFactory.makeString("gv_ignore_breaksP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*IGNORE-MUSTS?*"), (SubLObject)SubLObjectFactory.makeString("gv_ignore_mustsP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*IGNORE-WARNS?*"), (SubLObject)SubLObjectFactory.makeString("gv_ignore_warnsP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*INTERNAL-TIME-UNITS-PER-SECOND*"), (SubLObject)SubLObjectFactory.makeString("gv_internal_time_units_per_second")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*MOST-NEGATIVE-FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("gv_most_negative_fixnum")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*MOST-POSITIVE-FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("gv_most_positive_fixnum")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*NULL-INPUT*"), (SubLObject)SubLObjectFactory.makeString("gv_null_input")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*NULL-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("gv_null_output")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PACKAGE*"), (SubLObject)SubLObjectFactory.makeString("gv_current_package")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-BASE*"), (SubLObject)SubLObjectFactory.makeString("gv_print_base")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-CASE*"), (SubLObject)SubLObjectFactory.makeString("gv_print_case")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-ESCAPE*"), (SubLObject)SubLObjectFactory.makeString("gv_print_escape")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-LENGTH*"), (SubLObject)SubLObjectFactory.makeString("gv_print_length")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-LEVEL*"), (SubLObject)SubLObjectFactory.makeString("gv_print_level")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-PRETTY*"), (SubLObject)SubLObjectFactory.makeString("gv_print_pretty")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-READABLY*"), (SubLObject)SubLObjectFactory.makeString("gv_print_readably")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-BACKGROUND-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("gv_process_background_priority")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-MAX-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("gv_process_max_priority")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-MIN-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("gv_process_min_priority")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PROCESS-NORMAL-PRIORITY*"), (SubLObject)SubLObjectFactory.makeString("gv_process_normal_priority")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*RAND-MAX*"), (SubLObject)SubLObjectFactory.makeString("gv_rand_max")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READ-DEFAULT-FLOAT-FORMAT*"), (SubLObject)SubLObjectFactory.makeString("gv_read_default_float_format")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READ-EVAL*"), (SubLObject)SubLObjectFactory.makeString("gv_read_eval")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READ-SUPPRESS*"), (SubLObject)SubLObjectFactory.makeString("gv_read_suppress")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*READTABLE*"), (SubLObject)SubLObjectFactory.makeString("gv_readtable")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*RETAIN-CLIENT-SOCKET?*"), (SubLObject)SubLObjectFactory.makeString("gv_retain_client_socketP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STANDARD-INPUT*"), (SubLObject)SubLObjectFactory.makeString("gv_standard_input")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STANDARD-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("gv_standard_output")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STREAM-INITIAL-INPUT-BUFFER-SIZE*"), (SubLObject)SubLObjectFactory.makeString("gv_stream_initial_input_buffer_size")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STREAM-INITIAL-OUTPUT-BUFFER-SIZE*"), (SubLObject)SubLObjectFactory.makeString("gv_stream_initial_output_buffer_size")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*SUSPEND-TYPE-CHECKING?*"), (SubLObject)SubLObjectFactory.makeString("gv_suspend_type_checkingP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*TERMINAL-IO*"), (SubLObject)SubLObjectFactory.makeString("gv_terminal_io")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*TCP-LOCALHOST-ONLY?*"), (SubLObject)SubLObjectFactory.makeString("gv_tcp_localhost_onlyP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*TRACE-OUTPUT*"), (SubLObject)SubLObjectFactory.makeString("gv_trace_output")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-1"), (SubLObject)SubLObjectFactory.makeString("gv_boole_1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-2"), (SubLObject)SubLObjectFactory.makeString("gv_boole_2")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-AND"), (SubLObject)SubLObjectFactory.makeString("gv_boole_and")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ANDC1"), (SubLObject)SubLObjectFactory.makeString("gv_boole_andc1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ANDC2"), (SubLObject)SubLObjectFactory.makeString("gv_boole_andc2")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-C1"), (SubLObject)SubLObjectFactory.makeString("gv_boole_c1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-C2"), (SubLObject)SubLObjectFactory.makeString("gv_boole_c2")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-CLR"), (SubLObject)SubLObjectFactory.makeString("gv_boole_clr")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-EQV"), (SubLObject)SubLObjectFactory.makeString("gv_boole_eqv")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-IOR"), (SubLObject)SubLObjectFactory.makeString("gv_boole_ior")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-NAND"), (SubLObject)SubLObjectFactory.makeString("gv_boole_nand")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-NOR"), (SubLObject)SubLObjectFactory.makeString("gv_boole_nor")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ORC1"), (SubLObject)SubLObjectFactory.makeString("gv_boole_orc1")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-ORC2"), (SubLObject)SubLObjectFactory.makeString("gv_boole_orc2")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-SET"), (SubLObject)SubLObjectFactory.makeString("gv_boole_set")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("BOOLE-XOR"), (SubLObject)SubLObjectFactory.makeString("gv_boole_xor")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*PRINT-OBJECT-METHOD-TABLE*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_print_object_method_table")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*RESTARTS*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_restarts")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*STREAM-REQUIRES-LOCKING*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_stream_requires_locking")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*SXHASH-METHOD-TABLE*"), (SubLObject)SubLObjectFactory.makeString("gv_sxhash_method_table")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*VISIT-DEFSTRUCT-OBJECT-METHOD-TABLE*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_visit_defstruct_object_method_table")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CALL-PROFILING-ENABLED?*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_call_profiling_enabledP")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*CALL-PROFILING-TABLE*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_call_profiling_table")) });
        $list17 = ConsesLow.list(new SubLObject[] { ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-SYMBOL*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_symbol"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-CONS*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_cons"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-FIXNUM*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_fixnum"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-FLOAT*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_float"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-CHARACTER*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_character"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-STRING*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_string"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-VECTOR*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_vector"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-FUNCTION*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_function"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-HASH-TABLE*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_hash_table"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-PACKAGE*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_package"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-STREAM*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_stream"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-BIGNUM*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_bignum"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-GUID*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_guid"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-LOCK*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_lock"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-PROCESS*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_process"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*DTP-STRUCTURES-BAG*"), (SubLObject)SubLObjectFactory.makeString("gv_dtp_structures_bag"), (SubLObject)SubLObjectFactory.makeKeyword("CONSTANT")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*%EVALUATOR-METHOD*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_evaluator_method"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*REMOTE-ADDRESS*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_remote_address"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")), ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("*REMOTE-HOSTNAME*", "SUBLISP"), (SubLObject)SubLObjectFactory.makeString("gv_remote_hostname"), (SubLObject)SubLObjectFactory.makeKeyword("DYNAMIC")) });
    }
}

/*

	Total time: 1160 ms
	
*/