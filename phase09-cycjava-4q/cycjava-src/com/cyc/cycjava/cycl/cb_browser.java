package com.cyc.cycjava.cycl;

import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.cycjava.cycl.inference.browser.cb_query;
import com.cyc.cycjava.cycl.inference.harness.inference_parameters;
import com.cyc.cycjava.cycl.inference.ask_utilities;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.random;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Time;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Types;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapping;
import com.cyc.cycjava.cycl.inference.modules.preference_modules;
import com.cyc.cycjava.cycl.inference.harness.inference_modules;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Guids;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Threads;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sort;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers;
import com.cyc.cycjava.cycl.inference.harness.inference_kernel;
import com.cyc.cycjava.cycl.inference.kb_query;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Functions;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Strings;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.cdestructuring_bind;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Equality;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.cycjava.cycl.sksi.sks_indexing.sksi_sks_mt_indexing;
import com.cyc.cycjava.cycl.sksi.sks_indexing.sksi_sks_predicate_indexing;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.PrintLow;
import com.cyc.cycjava.cycl.sksi.sks_browser.sksi_external_gaf_argument_browser;
import com.cyc.cycjava.cycl.sksi.sks_indexing.sksi_sks_gaf_arg_indexing;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class cb_browser extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.cb_browser";
    public static final String myFingerPrint = "80ea9914098b136b303715ac29dd4a6b2c86e88a08846827953e1ddd46348959";
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 4823L)
    private static SubLSymbol $cb_term_page_adornments$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 37970L)
    private static SubLSymbol $cb_documentation_predicate_p_caching_state$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 38241L)
    private static SubLSymbol $semantic_web_uri_data$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 72298L)
    private static SubLSymbol $cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 72921L)
    private static SubLSymbol $cb_c_gaf_arg_rec_arg_pred_mt_binary$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 73628L)
    private static SubLSymbol $cb_c_gaf_arg_rec_arg_pred_mt_binary_el$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 82763L)
    private static SubLSymbol $cb_c_nart_arg_rec_arg_func_binary$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 83068L)
    private static SubLSymbol $cb_c_nart_arg_rec_arg_func_binary_el$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 89028L)
    public static SubLSymbol $bookmarked_term_caption$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 89175L)
    public static SubLSymbol $unbookmarked_term_caption$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 90527L)
    public static SubLSymbol $cb_c_gaf_arg_show_arg_headerP$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 90982L)
    public static SubLSymbol $cb_c_gaf_arg_show_mt_headerP$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 140050L)
    private static SubLSymbol $cb_alpha_before$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 140132L)
    private static SubLSymbol $cb_alpha_after$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 140175L)
    private static SubLSymbol $cb_alpha_total$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 141662L)
    private static SubLSymbol $cb_before_alpha_top$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 142454L)
    private static SubLSymbol $cb_after_alpha_bottom$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 145286L)
    private static SubLSymbol $cb_alpha_upper_char_order$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 145367L)
    private static SubLSymbol $cb_alpha_lower_char_order$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 149693L)
    private static SubLSymbol $cb_alpha_around_total$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 149745L)
    private static SubLSymbol $cb_alpha_around_sofar$;
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 149796L)
    private static SubLSymbol $cb_alpha_around_gather$;
    private static final SubLString $str0$__DOCTYPE_html_PUBLIC_____W3C__DT;
    private static final SubLString $str1$_meta_http_equiv__X_UA_Compatible;
    private static final SubLSymbol $kw2$UNINITIALIZED;
    private static final SubLSymbol $kw3$CB_CYC;
    private static final SubLSymbol $kw4$CB_C_INDEX;
    private static final SubLString $str5$cb_c_index_html;
    private static final SubLSymbol $kw6$AUXILIARY_INDEX;
    private static final SubLSymbol $kw7$MAIN;
    private static final SubLSymbol $sym8$INDEX_BROWSER;
    private static final SubLSymbol $kw9$CYCL;
    private static final SubLSymbol $kw10$AUXILIARY_INDICES;
    private static final SubLSymbol $kw11$DOCUMENTATION;
    private static final SubLSymbol $kw12$DEFINITIONAL;
    private static final SubLSymbol $kw13$GRAPH;
    private static final SubLSymbol $kw14$DESCRIBE_NART;
    private static final SubLSymbol $kw15$DESCRIBE_CONSTANT;
    private static final SubLInteger $int16$200;
    private static final SubLSymbol $kw17$LEXICAL;
    private static final SubLSymbol $kw18$CHRONOLOGICAL_ORDER;
    private static final SubLSymbol $kw19$HANDLER;
    private static final SubLSymbol $sym20$CB_C_PERTINENT_QUERY_LINKS;
    private static final SubLSymbol $kw21$ARGS;
    private static final SubLString $str22$term;
    private static final SubLSymbol $kw23$MESSAGE;
    private static final SubLString $str24$Checking_for_Pertinent_Queries___;
    private static final SubLSymbol $kw25$TAG;
    private static final SubLString $str26$div;
    private static final SubLSymbol $kw27$DELAY;
    private static final SubLInteger $int28$50;
    private static final SubLSymbol $kw29$ALL_ASSERTED_KNOWLEDGE;
    private static final SubLSymbol $kw30$INFERRED_INDEX;
    private static final SubLString $str31$Inferred_Index;
    private static final SubLSymbol $kw32$SELF;
    private static final SubLSymbol $sym33$HIERARCHY_DEFAULT;
    private static final SubLSymbol $sym34$VFACETS;
    private static final SubLSymbol $sym35$VCLUMPS;
    private static final SubLSymbol $sym36$ALPHABETICAL_SEARCH;
    private static final SubLSymbol $kw37$LEFT;
    private static final SubLSymbol $kw38$TOP;
    private static final SubLString $str39$lightyellow;
    private static final SubLSymbol $kw40$NBSP;
    private static final SubLString $str41$Viewpoint_Filters;
    private static final SubLSymbol $kw42$BOOKKEEPING_ASSERTIONS;
    private static final SubLSymbol $kw43$CONSTANT_TOTAL;
    private static final SubLString $str44$Unknown_auxiliary_index__a;
    private static final SubLSymbol $kw45$GAF_ARG;
    private static final SubLSymbol $kw46$SKSI_EXTERNAL_GAF_ARGUMENT;
    private static final SubLString $str47$;
    private static final SubLSymbol $kw48$VISIBLE;
    private static final SubLSymbol $kw49$TEXT;
    private static final SubLSymbol $kw50$GAF_ARG_PREDICATE;
    private static final SubLSymbol $kw51$GAF_ARG_PREDICATE_CONTENT;
    private static final SubLSymbol $kw52$CONTENT;
    private static final SubLSymbol $kw53$INVISIBLE;
    private static final SubLString $str54$_arg_;
    private static final SubLString $str55$arg_;
    private static final SubLSymbol $kw56$NART_ARG;
    private static final SubLString $str57$nart_arg__A;
    private static final SubLSymbol $kw58$NART_ARG_FUNCTION;
    private static final SubLSymbol $kw59$NART_ARG_FUNCTION_CONTENT;
    private static final SubLString $str60$pred_extent;
    private static final SubLSymbol $kw61$PREDICATE_EXTENT;
    private static final SubLInteger $int62$12000000;
    private static final SubLSymbol $kw63$SKSI_EXTERNAL_PREDICATE_EXTENT;
    private static final SubLSymbol $kw64$FUNCTION_EXTENT;
    private static final SubLSymbol $kw65$PREDICATE_RULE;
    private static final SubLSymbol $kw66$NEG;
    private static final SubLSymbol $kw67$POS;
    private static final SubLString $str68$pred_rule__A;
    private static final SubLString $str69$rule__A__A__A;
    private static final SubLSymbol $kw70$DECONTEXTUALIZED_IST_PREDICATE_RULE;
    private static final SubLString $str71$decontextualized_ist_pred_rule__A;
    private static final SubLSymbol $kw72$ISA_RULE;
    private static final SubLString $str73$isa_rule__A;
    private static final SubLSymbol $kw74$QUOTED_ISA_RULE;
    private static final SubLString $str75$quoted_isa_rule__A;
    private static final SubLSymbol $kw76$GENLS_RULE;
    private static final SubLString $str77$genl_rule__A;
    private static final SubLSymbol $kw78$GENL_MT_RULE;
    private static final SubLString $str79$genl_mt_rule__A;
    private static final SubLSymbol $kw80$FUNCTION_RULE;
    private static final SubLSymbol $kw81$UNBOUND_RULE;
    private static final SubLSymbol $kw82$OTHER;
    private static final SubLSymbol $kw83$IST_BROAD;
    private static final SubLSymbol $kw84$IST;
    private static final SubLSymbol $kw85$MT_GAFS;
    private static final SubLSymbol $kw86$MT_RULES;
    private static final SubLSymbol $kw87$SKSI_EXTERNAL_MT_CONTENTS;
    private static final SubLSymbol $kw88$HL_FORMULAS_FOR_INDEX_HOOK;
    private static final SubLSymbol $kw89$EL_FORMULAS_FOR_INDEX_HOOK;
    private static final SubLSymbol $kw90$HL_FORMULAS;
    private static final SubLSymbol $kw91$EL_FORMULAS;
    private static final SubLSymbol $kw92$EL_FORMULAS_EXCEPT_WHEN_BROWSING_SKOLEMS;
    private static final SubLSymbol $kw93$HISTORY;
    private static final SubLList $list94;
    private static final SubLString $str95$Could_not_determine_an_index_hook;
    private static final SubLString $str96$_;
    private static final SubLSymbol $sym97$CB_C_EL;
    private static final SubLSymbol $kw98$HTML_HANDLER;
    private static final SubLString $str99$_EL_Formulas_;
    private static final SubLString $str100$cb_c_el__A;
    private static final SubLSymbol $sym101$CB_LINK_EL_FORMULAS_FOR_INDEX_HOOK;
    private static final SubLSymbol $sym102$CB_C_HL;
    private static final SubLString $str103$_HL_Formulas_;
    private static final SubLString $str104$cb_c_hl__A;
    private static final SubLSymbol $sym105$CB_LINK_HL_FORMULAS_FOR_INDEX_HOOK;
    private static final SubLList $list106;
    private static final SubLString $str107$Could_not_determine_a_term_from__;
    private static final SubLSymbol $sym108$CB_C_DOCUMENTATION;
    private static final SubLString $str109$Documentation;
    private static final SubLString $str110$cb_c_documentation__A;
    private static final SubLSymbol $sym111$CB_LINK_DOCUMENTATION;
    private static final SubLSymbol $sym112$CB_DOCUMENTATION_PREDICATE_P;
    private static final SubLSymbol $sym113$_CB_DOCUMENTATION_PREDICATE_P_CACHING_STATE_;
    private static final SubLInteger $int114$64;
    private static final SubLList $list115;
    private static final SubLSymbol $sym116$FORT_P;
    private static final SubLString $str117$_documentation__;
    private static final SubLSymbol $kw118$RED;
    private static final SubLString $str119$_is_mentioned_in_code_;
    private static final SubLSymbol $sym120$CB_SUMMARY_SENTENCE;
    private static final SubLString $str121$Getting_summary_sentence___;
    private static final SubLString $str122$span;
    private static final SubLString $str123$semantic_web_uris;
    private static final SubLString $str124$Semantic_Web_URIs;
    private static final SubLList $list125;
    private static final SubLSymbol $kw126$RIGHT;
    private static final SubLSymbol $kw127$CENTER;
    private static final SubLString $str128$___;
    private static final SubLObject $const129$GetPredsAndMetaDataForExternalDoc;
    private static final SubLSymbol $sym130$_MT;
    private static final SubLSymbol $sym131$_PRED;
    private static final SubLSymbol $sym132$_DISPLAY_STRING;
    private static final SubLObject $const133$GetURLsFromExternalURLPred;
    private static final SubLList $list134;
    private static final SubLList $list135;
    private static final SubLList $list136;
    private static final SubLString $str137$external_links;
    private static final SubLString $str138$External_Links;
    private static final SubLSymbol $sym139$_;
    private static final SubLSymbol $sym140$QUOTED_INSTANCE_CARDINALITY;
    private static final SubLString $str141$kb_subsets;
    private static final SubLString $str142$Relevant_KB_Subsets;
    private static final SubLObject $const143$quotedIsa;
    private static final SubLString $str144$Summary_of_;
    private static final SubLSymbol $sym145$CB_CF;
    private static final SubLSymbol $sym146$RELEVANT_MT_IS_EVERYTHING;
    private static final SubLObject $const147$EverythingPSC;
    private static final SubLObject $const148$CycKBSubsetCollection;
    private static final SubLSymbol $sym149$GENERALITY_ESTIMATE_;
    private static final SubLString $str150$Created;
    private static final SubLString $str151$_by_;
    private static final SubLString $str152$_on_;
    private static final SubLString $str153$_at_;
    private static final SubLString $str154$_for_;
    private static final SubLObject $const155$myCreator;
    private static final SubLObject $const156$myCreationPurpose;
    private static final SubLObject $const157$myCreationTime;
    private static final SubLObject $const158$myCreationSecond;
    private static final SubLObject $const159$BookkeepingMt;
    private static final SubLString $str160$___;
    private static final SubLString $str161$Bookkeeping_Assertions___;
    private static final SubLString $str162$Documentation_for__S;
    private static final SubLString $str163$yui_skin_sam;
    private static final SubLString $str164$reloadFrameButton;
    private static final SubLString $str165$button;
    private static final SubLString $str166$reload;
    private static final SubLString $str167$Refresh;
    private static final SubLString $str168$reloadCurrentFrame__reloadFrameBu;
    private static final SubLSymbol $kw169$HTML;
    private static final SubLString $str170$Bad_type_of_term__A__;
    private static final SubLSymbol $kw171$NEW;
    private static final SubLObject $const172$sharedNotes;
    private static final SubLString $str173$No_documentation_assertions_for_;
    private static final SubLSymbol $sym174$ASSERTION_P;
    private static final SubLString $str175$In_Mt___;
    private static final SubLString $str176$Mt___;
    private static final SubLString $str177$__;
    private static final SubLList $list178;
    private static final SubLSymbol $sym179$CB_C_DEFINITIONAL;
    private static final SubLString $str180$Definitional_Info;
    private static final SubLString $str181$cb_c_definitional__A;
    private static final SubLSymbol $sym182$CB_LINK_DEFINITIONAL;
    private static final SubLSymbol $kw183$INFERRED;
    private static final SubLString $str184$Definitional_info_for__S;
    private static final SubLString $str185$Refresh_Frames;
    private static final SubLObject $const186$salientAssertions;
    private static final SubLSymbol $kw187$CB_DESCRIBE_CONSTANT;
    private static final SubLString $str188$cb_describe_constant_html;
    private static final SubLString $str189$the_Constant_Internal_Data_page;
    private static final SubLString $str190$_a_does_not_specify_a_Cyc_constan;
    private static final SubLString $str191$Constant_Internal_Data;
    private static final SubLSymbol $kw192$SAM_AUTOCOMPLETE_CSS;
    private static final SubLSymbol $kw193$SHA1;
    private static final SubLString $str194$Internal_data_for_constant__;
    private static final SubLString $str195$Name__;
    private static final SubLString $str196$_ephemeral__internal__;
    private static final SubLString $str197$SUID__;
    private static final SubLString $str198$_permanent__external__;
    private static final SubLString $str199$GUID__;
    private static final SubLString $str200$_compact_external__;
    private static final SubLString $str201$HL_ID__;
    private static final SubLString $str202$To_use_in_Java_OpenCYC_API_;
    private static final SubLString $str203$new_CycConstant__S__new_Guid__S__;
    private static final SubLSymbol $sym204$CB_DESCRIBE_CONSTANT;
    private static final SubLString $str205$cb_describe_constant__A;
    private static final SubLString $str206$Internal_Data;
    private static final SubLSymbol $sym207$CB_LINK_DESCRIBE_CONSTANT;
    private static final SubLSymbol $kw208$CB_DESCRIBE_NAT;
    private static final SubLString $str209$cb_describe_nat_html;
    private static final SubLString $str210$the_Reified_NAT_Internal_Data_pag;
    private static final SubLString $str211$_a_does_not_specify_a_Cyc_reified;
    private static final SubLString $str212$Reified_NAT_Internal_Data;
    private static final SubLString $str213$Internal_data_for_Reified_NAT__;
    private static final SubLString $str214$ID_Number__;
    private static final SubLString $str215$HL_Formula__;
    private static final SubLString $str216$_compact__external__;
    private static final SubLString $str217$HL_ID_String___;
    private static final SubLSymbol $sym218$CB_DESCRIBE_NART;
    private static final SubLString $str219$cb_describe_nart__A;
    private static final SubLSymbol $sym220$CB_LINK_DESCRIBE_NART;
    private static final SubLString $str221$Inference_Data;
    private static final SubLSymbol $kw222$PREDICATE_SPECIFIC_REMOVAL_MODULES;
    private static final SubLString $str223$_Removal_Modules_;
    private static final SubLSymbol $kw224$PREDICATE_SPECIFIC_PREFERENCE_MODULES;
    private static final SubLString $str225$_Preference_Modules_;
    private static final SubLSymbol $kw226$PREDICATE_SPECIFIC_HL_STORAGE_MODULES;
    private static final SubLString $str227$_Storage_Modules_;
    private static final SubLSymbol $sym228$CB_C_ALL_ASSERTED_KNOWLEDGE;
    private static final SubLString $str229$All_assertions_for__S;
    private static final SubLString $str230$cb_c_all_asserted_knowledge__A;
    private static final SubLString $str231$All_Asserted_Knowledge;
    private static final SubLString $str232$___a_;
    private static final SubLSymbol $sym233$CB_LINK_ALL_ASSERTED_KNOWLEDGE;
    private static final SubLString $str234$All_bookeeping_assertions_for__S;
    private static final SubLSymbol $sym235$CB_C_BOOKKEEPING_ASSERTIONS;
    private static final SubLString $str236$cb_c_bookkeeping_assertions__A;
    private static final SubLString $str237$Bookkeeping_Info;
    private static final SubLSymbol $sym238$CB_LINK_BOOKKEEPING_ASSERTIONS;
    private static final SubLSymbol $sym239$CB_C_TOTAL;
    private static final SubLString $str240$cb_c_total__A;
    private static final SubLString $str241$All_KB_Assertions;
    private static final SubLSymbol $sym242$CB_LINK_CONSTANT_TOTAL;
    private static final SubLString $str243$cb_assertion_chronology__A;
    private static final SubLString $str244$Assertions_History;
    private static final SubLSymbol $sym245$CB_LINK_CHRONOLOGICAL_ORDER;
    private static final SubLString $str246$Assertion_History;
    private static final SubLSymbol $sym247$CB_ASSERTION_CHRONOLOGY;
    private static final SubLString $str248$unknown;
    private static final SubLString $str249$cb_assertions_id_order__A;
    private static final SubLString $str250$Assertions_by_ID;
    private static final SubLSymbol $kw251$ASSERTIONS_ID_ORDER;
    private static final SubLSymbol $sym252$CB_LINK_ASSERTIONS_ID_ORDER;
    private static final SubLSymbol $sym253$CB_ASSERTIONS_ID_ORDER;
    private static final SubLList $list254;
    private static final SubLString $str255$Could_not_determine_an_arg_from__;
    private static final SubLString $str256$Could_not_determine_a_microtheory;
    private static final SubLSymbol $sym257$CB_C_GAF_ARG;
    private static final SubLString $str258$GAF_index_for__S;
    private static final SubLString $str259$cb_c_gaf_arg__A;
    private static final SubLString $str260$__a;
    private static final SubLString $str261$Arg__a;
    private static final SubLString $str262$All_GAFs;
    private static final SubLSymbol $sym263$CB_LINK_GAF_ARG;
    private static final SubLSymbol $sym264$LITERAL_QUERY_INDEX_DISPLAY;
    private static final SubLSymbol $kw265$NL;
    private static final SubLSymbol $kw266$SILK;
    private static final SubLSymbol $kw267$FALSE;
    private static final SubLSymbol $sym268$FAST_FI_NOT_EL_TERM_;
    private static final SubLSymbol $sym269$CB_C_GAF_ARG_REC_ARG_PRED_MT_BINARY_NOTE_EL;
    private static final SubLSymbol $sym270$CB_C_GAF_ARG_REC_ARG_PRED_MT_BINARY_NOTE;
    private static final SubLSymbol $sym271$CB_EL_ASSERTION_LINK_BINARY_CHECKING_REDUNDANCY;
    private static final SubLSymbol $sym272$CB_ASSERTION_LINK_BINARY;
    private static final SubLSymbol $sym273$ASSERTION_CONS;
    private static final SubLSymbol $sym274$CB_EL_ASSERTION_LINK_WITH_MT_CHECKING_REDUNDANCY;
    private static final SubLSymbol $sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY;
    private static final SubLSymbol $sym276$CB_ASSERTION_LINK_WITH_MT;
    private static final SubLSymbol $sym277$CB_ASSERTION_LINK;
    private static final SubLString $str278$__;
    private static final SubLString $str279$_arg_S___S_;
    private static final SubLSymbol $sym280$RELEVANT_MT_IS_GENL_MT;
    private static final SubLSymbol $sym281$INDEXED_TERM_P;
    private static final SubLList $list282;
    private static final SubLString $str283$NART_index_for__S;
    private static final SubLSymbol $sym284$CB_C_NART_ARG;
    private static final SubLString $str285$cb_c_nart_arg__A;
    private static final SubLString $str286$All_NARTs;
    private static final SubLSymbol $sym287$CB_LINK_NART_ARG;
    private static final SubLSymbol $sym288$CB_C_NART_ARG_REC_ARG_FUNC_BINARY_NOTE_EL;
    private static final SubLSymbol $sym289$CB_C_NART_ARG_REC_ARG_FUNC_BINARY_NOTE;
    private static final SubLSymbol $sym290$CB_TERM_OF_UNIT_LINK;
    private static final SubLString $str291$Individual;
    private static final SubLString $str292$Index;
    private static final SubLString $str293$NAUT;
    private static final SubLObject $const294$Function_Denotational;
    private static final SubLString $str295$Function;
    private static final SubLSymbol $kw296$IMPLEMENTATION_CONSTANTS;
    private static final SubLString $str297$implementation_constants_html;
    private static final SubLObject $const298$ImplementationConstant;
    private static final SubLString $str299$_is_not_used_to_represent_common_;
    private static final SubLString $str300$_1;
    private static final SubLSymbol $kw301$DOC;
    private static final SubLString $str302$_Explain_;
    private static final SubLString $str303$Open_the_CURE_on_;
    private static final SubLString $str304$_to_add_more_facts_;
    private static final SubLString $str305$This_term_is_bookmarked___Click_t;
    private static final SubLString $str306$Bookmark_this_term___It_will_be_v;
    private static final SubLString $str307$bookmarked;
    private static final SubLString $str308$_bookmarkButton_;
    private static final SubLString $str309$width_21px;
    private static final SubLSymbol $kw310$HTML_INTERESTING_IMG;
    private static final SubLString $str311$bookmarkOn;
    private static final SubLSymbol $kw312$HTML_NOT_INTERESTING_IMG;
    private static final SubLString $str313$bookmarkOff;
    private static final SubLSymbol $kw314$HTML_INTERESTING_WORKING_IMG;
    private static final SubLString $str315$bookmarkWorking;
    private static final SubLString $str316$cb_yellow_star_21x21_png;
    private static final SubLString $str317$_Bookmark_Term_;
    private static final SubLSymbol $kw318$HTML_INTERESTING_ARMED_IMG;
    private static final SubLString $str319$cb_yellow_star_armed_21x21_png;
    private static final SubLString $str320$cb_yellow_star_off_21x21_png;
    private static final SubLString $str321$_Remove_Bookmark_;
    private static final SubLString $str322$cb_yellow_star_armed_rotating_21x;
    private static final SubLString $str323$GAF_Arg____A;
    private static final SubLString $str324$NART_Arg____A;
    private static final SubLString $str325$mt_header;
    private static final SubLList $list326;
    private static final SubLString $str327$throughout_some_time_before;
    private static final SubLList $list328;
    private static final SubLString $str329$since;
    private static final SubLList $list330;
    private static final SubLList $list331;
    private static final SubLSymbol $sym332$END;
    private static final SubLSymbol $sym333$START;
    private static final SubLString $str334$throughout;
    private static final SubLString $str335$until;
    private static final SubLString $str336$during_some_time_before;
    private static final SubLString $str337$from;
    private static final SubLString $str338$until_now;
    private static final SubLString $str339$in;
    private static final SubLString $str340$Monadic_;
    private static final SubLString $str341$Time_Interval___;
    private static final SubLString $str342$Time_Parameter___;
    private static final SubLObject $const343$DateFromStringFn;
    private static final SubLString $str344$Predicate___;
    private static final SubLString $str345$neg;
    private static final SubLString $str346$not;
    private static final SubLString $str347$Predicate_extent_index_for__S;
    private static final SubLList $list348;
    private static final SubLSymbol $sym349$CB_C_PREDICATE_EXTENT;
    private static final SubLString $str350$cb_c_predicate_extent__A;
    private static final SubLString $str351$Predicate_Extent;
    private static final SubLSymbol $sym352$CB_LINK_PREDICATE_EXTENT;
    private static final SubLString $str353$_Extent__;
    private static final SubLString $str354$Function_extent_index_for__S;
    private static final SubLSymbol $sym355$CB_C_FUNCTION_EXTENT;
    private static final SubLString $str356$cb_c_function_extent__A;
    private static final SubLString $str357$Function_Extent;
    private static final SubLSymbol $sym358$CB_LINK_FUNCTION_EXTENT;
    private static final SubLList $list359;
    private static final SubLString $str360$Could_not_determine_a_literal_sen;
    private static final SubLString $str361$Could_not_determine_a_direction_f;
    private static final SubLString $str362$Predicate_rule_index_for__S;
    private static final SubLSymbol $sym363$CB_C_PREDICATE_RULE;
    private static final SubLString $str364$cb_c_predicate_rule__A;
    private static final SubLString $str365$__s;
    private static final SubLString $str366$Antecedent;
    private static final SubLString $str367$Consequent;
    private static final SubLString $str368$All_Rules;
    private static final SubLSymbol $sym369$CB_LINK_PREDICATE_RULE;
    private static final SubLList $list370;
    private static final SubLList $list371;
    private static final SubLString $str372$ist_Predicate_rule_index_for__S;
    private static final SubLSymbol $sym373$CB_C_DECONTEXTUALIZED_IST_PREDICATE_RULE;
    private static final SubLString $str374$cb_c_decontextualized_ist_predica;
    private static final SubLString $str375$All_Lifting_Rules;
    private static final SubLSymbol $sym376$CB_LINK_DECONTEXTUALIZED_IST_PREDICATE_RULE;
    private static final SubLString $str377$isa_rule_index_for__S;
    private static final SubLSymbol $sym378$CB_C_ISA_RULE;
    private static final SubLString $str379$cb_c_isa_rule__A;
    private static final SubLString $str380$All_isa_Rules;
    private static final SubLSymbol $sym381$CB_LINK_ISA_RULE;
    private static final SubLString $str382$isa;
    private static final SubLString $str383$quoted_isa_rule_index_for__S;
    private static final SubLSymbol $sym384$CB_C_QUOTED_ISA_RULE;
    private static final SubLString $str385$cb_c_quoted_isa_rule__A;
    private static final SubLString $str386$All_quoted_isa_Rules;
    private static final SubLSymbol $sym387$CB_LINK_QUOTED_ISA_RULE;
    private static final SubLString $str388$quoted_isa;
    private static final SubLString $str389$genls_rule_index_for__S;
    private static final SubLSymbol $sym390$CB_C_GENLS_RULE;
    private static final SubLString $str391$cb_c_genls_rule__A;
    private static final SubLString $str392$All_genls_Rules;
    private static final SubLSymbol $sym393$CB_LINK_GENLS_RULE;
    private static final SubLString $str394$genls;
    private static final SubLString $str395$genlMt_rule_index_for__S;
    private static final SubLSymbol $sym396$CB_C_GENL_MT_RULE;
    private static final SubLString $str397$cb_c_genl_mt_rule__A;
    private static final SubLString $str398$All_genlMt_Rules;
    private static final SubLSymbol $sym399$CB_LINK_GENL_MT_RULE;
    private static final SubLString $str400$genlMt;
    private static final SubLList $list401;
    private static final SubLString $str402$Function_rule_index_for__S;
    private static final SubLSymbol $sym403$CB_C_FUNCTION_RULE;
    private static final SubLString $str404$cb_c_function_rule__A;
    private static final SubLString $str405$Function_Rules;
    private static final SubLSymbol $sym406$CB_LINK_FUNCTION_RULE;
    private static final SubLString $str407$_Rules__;
    private static final SubLList $list408;
    private static final SubLString $str409$Could_not_determine_an_index_hook;
    private static final SubLString $str410$Unbound_rule_index;
    private static final SubLSymbol $sym411$CB_C_UNBOUND_RULE;
    private static final SubLString $str412$cb_c_unbound_rule;
    private static final SubLSymbol $sym413$CB_LINK_UNBOUND_RULE;
    private static final SubLString $str414$_;
    private static final SubLString $str415$Antecedent_Rules;
    private static final SubLString $str416$Consequent_Rules;
    private static final SubLString $str417$Direction___;
    private static final SubLString $str418$MT_index_for__S;
    private static final SubLSymbol $sym419$CB_C_IST;
    private static final SubLString $str420$cb_c_ist__A;
    private static final SubLString $str421$Microtheory_Contents;
    private static final SubLSymbol $sym422$CB_LINK_IST;
    private static final SubLString $str423$__expensive__;
    private static final SubLSymbol $sym424$CB_LINK_IST_BROAD;
    private static final SubLString $str425$Microtheory_Contents__;
    private static final SubLString $str426$MT_GAFs_for__S;
    private static final SubLSymbol $sym427$CB_C_MT_GAFS;
    private static final SubLString $str428$cb_c_mt_gafs__A;
    private static final SubLString $str429$Microtheory_GAFs;
    private static final SubLString $str430$____;
    private static final SubLSymbol $sym431$CB_LINK_MT_GAFS;
    private static final SubLString $str432$Microtheory_GAFs__;
    private static final SubLSymbol $kw433$MT;
    private static final SubLSymbol $kw434$GAF;
    private static final SubLSymbol $kw435$BROAD_MT;
    private static final SubLString $str436$do_broad_mt_index;
    private static final SubLSymbol $sym437$STRINGP;
    private static final SubLSymbol $kw438$SKIP;
    private static final SubLInteger $int439$1000;
    private static final SubLSymbol $sym440$CB_TERM__;
    private static final SubLSymbol $sym441$CB_PREDICATE__;
    private static final SubLString $str442$MT_Rules_for__S;
    private static final SubLSymbol $sym443$CB_C_MT_RULES;
    private static final SubLString $str444$cb_c_mt_rules__A;
    private static final SubLString $str445$Microtheory_Rules;
    private static final SubLSymbol $sym446$CB_LINK_MT_RULES;
    private static final SubLString $str447$Microtheory_Rules__;
    private static final SubLSymbol $kw448$RULE;
    private static final SubLString $str449$OTHER_index_for__S;
    private static final SubLSymbol $sym450$CB_C_OTHER;
    private static final SubLString $str451$cb_c_other__A;
    private static final SubLString $str452$Miscellaneous;
    private static final SubLSymbol $sym453$CB_LINK_OTHER;
    private static final SubLString $str454$Miscellaneous_References__;
    private static final SubLSymbol $sym455$MTS;
    private static final SubLSymbol $sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER;
    private static final SubLSymbol $sym457$RELEVANT_MT_IS_IN_LIST;
    private static final SubLSymbol $kw458$CB_AUXILIARY_INDICES;
    private static final SubLString $str459$cb_auxiliary_indices_html;
    private static final SubLString $str460$Auxiliary_Indices;
    private static final SubLSymbol $sym461$STRING_LESSP;
    private static final SubLSymbol $sym462$AUXILIARY_INDEX_NAME;
    private static final SubLString $str463$Choose_an_auxiliary_index___;
    private static final SubLString $str464$No_auxiliary_indexes_exist_;
    private static final SubLSymbol $sym465$CB_AUXILIARY_INDICES;
    private static final SubLString $str466$Auxiliary_Index_List;
    private static final SubLString $str467$cb_auxiliary_indices;
    private static final SubLSymbol $sym468$CB_LINK_AUXILIARY_INDICES;
    private static final SubLString $str469$_S_did_not_specify_an_auxiliary_i;
    private static final SubLString $str470$The_auxiliary_index__S_is_current;
    private static final SubLString $str471$Cannot_have_a_FRAMESET_tag_inside;
    private static final SubLString $str472$30___;
    private static final SubLSymbol $kw473$INDEX;
    private static final SubLSymbol $sym474$CB_AUXILIARY_INDEX;
    private static final SubLString $str475$cb_auxiliary_index__A;
    private static final SubLSymbol $sym476$CB_LINK_AUXILIARY_INDEX;
    private static final SubLInteger $int477$25;
    private static final SubLString $str478$Alphabetical_search_for___A_;
    private static final SubLSymbol $kw479$ALPHA_TERM;
    private static final SubLSymbol $kw480$MISSING;
    private static final SubLSymbol $sym481$CB_ALPHA;
    private static final SubLSymbol $sym482$CB_AD;
    private static final SubLSymbol $kw483$ALPHA;
    private static final SubLString $str484$alpha_gif;
    private static final SubLString $str485$_Alpha_;
    private static final SubLString $str486$_A;
    private static final SubLString $str487$cb_ad__A;
    private static final SubLSymbol $kw488$ALPHABETICAL;
    private static final SubLSymbol $sym489$CB_LINK_ALPHABETICAL;
    private static final SubLSymbol $kw490$ALPHA_TOP;
    private static final SubLString $str491$Alph;
    private static final SubLString $str492$The_Alphabetical_Browser;
    private static final SubLString $str493$Top_of_Alphabetical_Index;
    private static final SubLSymbol $sym494$CB_ALPHA_TOP;
    private static final SubLString $str495$Top;
    private static final SubLString $str496$cb_alpha_top;
    private static final SubLSymbol $sym497$CB_LINK_ALPHA_TOP;
    private static final SubLInteger $int498$127;
    private static final SubLString $str499$Bottom_of_Alphabetical_Index;
    private static final SubLSymbol $kw500$BOTTOM;
    private static final SubLSymbol $sym501$CB_ALPHA_BOTTOM;
    private static final SubLString $str502$Bottom;
    private static final SubLString $str503$cb_alpha_bottom;
    private static final SubLSymbol $kw504$ALPHA_BOTTOM;
    private static final SubLSymbol $sym505$CB_LINK_ALPHA_BOTTOM;
    private static final SubLSymbol $kw506$PAGEUP;
    private static final SubLSymbol $sym507$CB_ALPHA_PAGEUP;
    private static final SubLString $str508$Page_Up;
    private static final SubLString $str509$cb_alpha_pageup__A;
    private static final SubLSymbol $kw510$ALPHA_PAGEUP;
    private static final SubLSymbol $sym511$CB_LINK_ALPHA_PAGEUP;
    private static final SubLSymbol $kw512$PAGEDN;
    private static final SubLSymbol $sym513$CB_ALPHA_PAGEDN;
    private static final SubLString $str514$Page_Down;
    private static final SubLString $str515$cb_alpha_pagedn__A;
    private static final SubLSymbol $kw516$ALPHA_PAGEDN;
    private static final SubLSymbol $sym517$CB_LINK_ALPHA_PAGEDN;
    private static final SubLString $str518$Alphabetical_index_scroll;
    private static final SubLString $str519$ABCDEFGHIJKLMNOPQRSTUVWXYZ;
    private static final SubLString $str520$abcdefghijklmnopqrstuvwxyz;
    private static final SubLSymbol $kw521$CB_ALPHA_INDEX;
    private static final SubLString $str522$cb_alpha_index_html;
    private static final SubLString $str523$_;
    private static final SubLSymbol $kw524$MIDDLE;
    private static final SubLString $str525$_____;
    private static final SubLString $str526$__A_;
    private static final SubLString $str527$would_be_here_;
    private static final SubLSymbol $sym528$FIXNUMP;
    private static final SubLString $str529$cb_c_graph__A;
    private static final SubLSymbol $sym530$CB_LINK_GRAPH;
    private static final SubLSymbol $sym531$CB_C_GRAPH;
    private static final SubLString $str532$Assertion_Graph_for__S;
    private static final SubLString $str533$_assertion_graph;
    private static final SubLString $str534$Script_Graph;
    private static final SubLString $str535$Unknown_Graph;
    private static final SubLObject $const536$Situation;
    private static final SubLString $str537$_a;
    private static final SubLInteger $int538$30;
    private static final SubLString $str539$Graphical_editing_of_this_script_;
    private static final SubLObject $const540$definingMt;
    private static final SubLString $str541$_assertion_;
    private static final SubLString $str542$candidateProperSubSituationTypes;
    private static final SubLSymbol $sym543$_ARG2;
    private static final SubLObject $const544$candidateProperSubSituationTypes;
    private static final SubLString $str545$Note_that_since_no_scenes_were_fo;
    private static final SubLString $str546$com_cyc_framework_ui_scriptEditor;
    private static final SubLSymbol $kw547$BUILDER_FN;
    private static final SubLSymbol $sym548$BBF_SCRIPT;
    private static final SubLSymbol $kw549$PREDS;
    private static final SubLSymbol $kw550$FORTS;
    private static final SubLSymbol $kw551$DEPTH;
    private static final SubLSymbol $kw552$CLASS_FILE;
    private static final SubLString $str553$com_cyc_framework_ui_scriptEditor;
    private static final SubLSymbol $kw554$WIDTH;
    private static final SubLString $str555$100_;
    private static final SubLSymbol $kw556$HEIGHT;
    private static final SubLString $str557$90_;
    private static final SubLSymbol $kw558$SIGNATURE;
    private static final SubLString $str559$pertinent_queries;
    private static final SubLString $str560$Troubleshooting;
    private static final SubLString $str561$Java_Profile;
    private static final SubLString $str562$In_order_for_the_Grapher_applet_t;
    private static final SubLString $str563$_grant_codeBase__http___localhost;
    private static final SubLString $str564$On_Linux_systems_this_file_should;
    private static final SubLString $str565$_HOME__java_policy;
    private static final SubLString $str566$____See_;
    private static final SubLString $str567$http___download_oracle_com_javase;
    private static final SubLString $str568$the_Oracle_documentation;
    private static final SubLString $str569$_for_other_OS_s_;
    private static final SubLString $str570$It_worked_once_but_then_stopped_w;
    private static final SubLString $str571$In_your_Java_console__clear_the_c;
    private static final SubLString $str572$Pertinent_Queries___S_;
    private static final SubLSymbol $sym573$_EXIT;
    private static final SubLSymbol $sym574$_QUERY;
    private static final SubLObject $const575$queryHasVeryHighPertinenceForThin;
    private static final SubLObject $const576$InferencePSC;
    private static final SubLList $list577;
    private static final SubLSymbol $kw578$PERTINENT_QUERY;
    private static final SubLString $str579$cb_c_pertinent_query_term__A_quer;
    private static final SubLSymbol $sym580$CB_LINK_PERTINENT_QUERY;
    private static final SubLString $str581$query;
    private static final SubLSymbol $sym582$CB_C_PERTINENT_QUERY;
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 663L)
    public static SubLObject cb_c_index(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
        if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
        }
        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
        try {
            cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
            html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
            final SubLObject _prev_bind_0_$1 = dhtml_macros.$html_element_id$.currentBinding(thread);
            try {
                dhtml_macros.$html_element_id$.bind((SubLObject)cb_browser.ZERO_INTEGER, thread);
                dhtml_macros.basic_ajax_scripts();
                html_utilities.html_markup(dhtml_macros.$js_load_later$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                dhtml_macros.dhtml_creation_scripts();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                dhtml_macros.$html_element_id$.rebind(_prev_bind_0_$1, thread);
            }
            final SubLObject _prev_bind_0_$2 = html_macros.$html_inside_bodyP$.currentBinding(thread);
            try {
                html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$3 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    cb_c_index_guts(index_hook);
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$3, thread);
                }
                html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$2, thread);
            }
            html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
        }
        finally {
            cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 1004L)
    public static SubLObject cb_c_content_page_no_frames_index(final SubLObject index_hook) {
        if (cb_browser.NIL != index_hook) {
            return cb_c_index_guts(index_hook);
        }
        return cb_frames.cb_empty_index_frame();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 1286L)
    public static SubLObject cb_c_index_guts(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(index_hook)) {
            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw6$AUXILIARY_INDEX, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_utilities.cb_help_preamble((SubLObject)cb_browser.$kw4$CB_C_INDEX, (SubLObject)cb_browser.$kw7$MAIN, (SubLObject)cb_browser.UNPROVIDED);
        }
        else if (cb_browser.NIL != forts.fort_p(index_hook)) {
            cb_term_page_heading(index_hook, (SubLObject)cb_browser.$sym8$INDEX_BROWSER);
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_utilities.cb_help_preamble((SubLObject)cb_browser.$kw4$CB_C_INDEX, (SubLObject)cb_browser.$kw7$MAIN, (SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(index_hook)) {
            if (cb_relevant_num_all_assertions(index_hook).numG((SubLObject)cb_browser.ZERO_INTEGER) && cb_browser.$kw9$CYCL == control_vars.$cb_major_presentation_language$.getDynamicValue(thread)) {
                cb_c_el_hl_formulas_link(index_hook);
                html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw10$AUXILIARY_INDICES, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        else if (cb_browser.NIL != forts.fort_p(index_hook)) {
            cb_editor.cb_term_toolbar(index_hook);
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw11$DOCUMENTATION, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw12$DEFINITIONAL, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw13$GRAPH, index_hook, (SubLObject)cb_browser.T, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            if (cb_browser.NIL != nart_handles.nart_p(index_hook)) {
                cb_utilities.cb_link((SubLObject)cb_browser.$kw14$DESCRIBE_NART, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            else if (cb_browser.NIL != constant_handles.constant_p(index_hook)) {
                cb_utilities.cb_link((SubLObject)cb_browser.$kw15$DESCRIBE_CONSTANT, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            thread.resetMultipleValues();
            final SubLObject lexical_assertions = (SubLObject)((cb_browser.NIL != cb_tools.cb_fastP()) ? cb_browser.NIL : cb_lexical_info.cb_lexical_information(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$int16$200));
            final SubLObject incompleteP = thread.secondMultipleValue();
            thread.resetMultipleValues();
            final SubLObject num_lexical = Sequences.length(lexical_assertions);
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw17$LEXICAL, index_hook, num_lexical, (SubLObject)cb_browser.NIL, incompleteP, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw18$CHRONOLOGICAL_ORDER, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_c_index_views(index_hook, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            if (cb_browser.NIL == cb_tools.cb_fastP()) {
                dhtml_macros.js_delayed_load_int((SubLObject)ConsesLow.list(new SubLObject[] { cb_browser.$kw19$HANDLER, cb_browser.$sym20$CB_C_PERTINENT_QUERY_LINKS, cb_browser.$kw21$ARGS, ConsesLow.list(reader.bq_cons((SubLObject)cb_browser.$str22$term, index_hook)), cb_browser.$kw23$MESSAGE, cb_browser.$str24$Checking_for_Pertinent_Queries___, cb_browser.$kw25$TAG, cb_browser.$str26$div, cb_browser.$kw27$DELAY, cb_browser.$int28$50 }));
            }
        }
        html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL == auxiliary_indexing.auxiliary_index_p(index_hook)) {
            final SubLObject total_num = bookkeeping_store.total_num_assertions_on_term(index_hook);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw29$ALL_ASSERTED_KNOWLEDGE, index_hook, total_num, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            cb_c_index_other_assertions_guts(index_hook);
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw30$INFERRED_INDEX, index_hook, (SubLObject)cb_browser.$str31$Inferred_Index, (SubLObject)cb_browser.$kw32$SELF, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        cb_c_index_kb_assertions_guts(index_hook);
        html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 5168L)
    public static SubLObject cb_term_page_heading(final SubLObject v_term, SubLObject current_page) {
        if (current_page == cb_browser.UNPROVIDED) {
            current_page = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
        html_utilities.html_simple_attribute(html_macros.$html_table_noflow$.getGlobalValue());
        html_utilities.html_simple_attribute(html_macros.$html_table_nowrap$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$kw37$LEFT);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$4 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$5 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    if (cb_browser.NIL != constant_handles.constant_p(v_term)) {
                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                        cb_utilities.cb_show_term(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                    }
                    else {
                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                        cb_utilities.cb_show_term(v_term, (SubLObject)cb_browser.ZERO_INTEGER, (SubLObject)cb_browser.T);
                        html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                    }
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$5, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$4, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$kw37$LEFT);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$6 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$7 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$7, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$6, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$kw37$LEFT);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$8 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$9 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$10 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$11 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            SubLObject cdolist_list_var = cb_browser.$cb_term_page_adornments$.getGlobalValue();
                            SubLObject adornment_symbol = (SubLObject)cb_browser.NIL;
                            adornment_symbol = cdolist_list_var.first();
                            while (cb_browser.NIL != cdolist_list_var) {
                                final SubLObject adornment = cb_adornments.find_adornment(adornment_symbol);
                                if (cb_browser.NIL != cb_adornments.adornment_p(adornment)) {
                                    if (adornment_symbol.eql(current_page)) {
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                        final SubLObject _prev_bind_0_$12 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                                            html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                            html_utilities.html_markup((SubLObject)cb_browser.ONE_INTEGER);
                                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                            html_utilities.html_markup((SubLObject)cb_browser.ONE_INTEGER);
                                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                            html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                            html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                            final SubLObject _prev_bind_0_$13 = html_macros.$html_safe_print$.currentBinding(thread);
                                            try {
                                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                                final SubLObject _prev_bind_0_$14 = html_macros.$html_safe_print$.currentBinding(thread);
                                                try {
                                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                                    html_utilities.html_markup(html_macros.$html_table_data_bgcolor$.getGlobalValue());
                                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                                    html_utilities.html_markup((SubLObject)cb_browser.$str39$lightyellow);
                                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                                    final SubLObject _prev_bind_0_$15 = html_macros.$html_safe_print$.currentBinding(thread);
                                                    try {
                                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                                        cb_adornments.display_adornment(adornment, (SubLObject)cb_browser.$kw7$MAIN, v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                                    }
                                                    finally {
                                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$15, thread);
                                                    }
                                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                                }
                                                finally {
                                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$14, thread);
                                                }
                                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                                            }
                                            finally {
                                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$13, thread);
                                            }
                                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                                        }
                                        finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$12, thread);
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    }
                                    else if (cb_browser.NIL != cb_adornments.adorn_thingo_p(adornment, v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED)) {
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                        final SubLObject _prev_bind_0_$16 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                            cb_adornments.display_adornment(adornment, (SubLObject)cb_browser.$kw7$MAIN, v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                        }
                                        finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$16, thread);
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    }
                                    else {
                                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                        final SubLObject _prev_bind_0_$17 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                            cb_adornments.display_adornment_disabled(adornment, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                        }
                                        finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$17, thread);
                                        }
                                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$18 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_glyph((SubLObject)cb_browser.$kw40$NBSP, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$18, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                cdolist_list_var = cdolist_list_var.rest();
                                adornment_symbol = cdolist_list_var.first();
                            }
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$11, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$10, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$9, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$8, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 6575L)
    public static SubLObject cb_c_index_views(final SubLObject index_hook, SubLObject link_text) {
        if (link_text == cb_browser.UNPROVIDED) {
            link_text = (SubLObject)cb_browser.$str41$Viewpoint_Filters;
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 6958L)
    public static SubLObject cb_c_index_other_assertions_guts(final SubLObject index_hook) {
        cb_c_index_bookkeeping_assertions_guts(index_hook);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 7209L)
    public static SubLObject cb_c_index_bookkeeping_assertions_guts(final SubLObject index_hook) {
        final SubLObject count = bookkeeping_store.num_bookkeeping_binary_gafs_on_term(index_hook);
        if (count.isPositive()) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw42$BOOKKEEPING_ASSERTIONS, index_hook, count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 7468L)
    public static SubLObject cb_c_index_kb_assertions_guts(final SubLObject index_hook) {
        cb_utilities.cb_link((SubLObject)cb_browser.$kw43$CONSTANT_TOTAL, index_hook, cb_relevant_num_all_assertions(index_hook), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(index_hook)) {
            cb_c_index_auxiliary_index(index_hook);
        }
        else if (cb_browser.NIL != forts.fort_p(index_hook)) {
            cb_c_index_fort_index(index_hook);
        }
        else if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
            cb_naut_utilities.cb_c_index_naut_index(index_hook);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 8363L)
    public static SubLObject cb_c_index_auxiliary_index(final SubLObject index_hook) {
        if (index_hook.eql(auxiliary_indexing.unbound_rule_index())) {
            cb_c_index_unbound_rules();
        }
        else {
            cb_utilities.cb_error((SubLObject)cb_browser.$str44$Unknown_auxiliary_index__a, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 8583L)
    public static SubLObject cb_c_index_fort_index(final SubLObject fort) {
        cb_c_index_gaf_args(fort);
        cb_show_term_index_besides_gaf_arg(fort);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 8715L)
    public static SubLObject cb_show_term_index_besides_gaf_arg(final SubLObject v_term) {
        cb_c_index_nart_args(v_term);
        if (cb_browser.NIL != fort_types_interface.predicate_in_any_mtP(v_term)) {
            cb_c_index_predicate_extent(v_term);
            cb_c_index_predicate_rules(v_term);
            cb_c_index_decontextualized_ist_predicate_rules(v_term);
        }
        else if (cb_browser.NIL != fort_types_interface.function_in_any_mtP(v_term)) {
            cb_c_index_function_extent(v_term);
            cb_c_index_function_rules(v_term);
        }
        else if (cb_browser.NIL != fort_types_interface.collection_in_any_mtP(v_term)) {
            cb_c_index_isa_rules(v_term);
            cb_c_index_quoted_isa_rules(v_term);
            cb_c_index_genls_rules(v_term);
        }
        else if (cb_browser.NIL != fort_types_interface.mt_in_any_mtP(v_term)) {
            cb_c_index_genl_mt_rules(v_term);
        }
        cb_c_index_other(v_term);
        if (cb_browser.NIL != fort_types_interface.mt_in_any_mtP(v_term)) {
            cb_c_index_mt(v_term);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 9373L)
    public static SubLObject cb_c_index_gaf_args(final SubLObject index_hook) {
        final SubLObject gaf_count = cb_relevant_num_gaf_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (gaf_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw45$GAF_ARG, index_hook, gaf_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            SubLObject cdolist_list_var;
            final SubLObject arg_list = cdolist_list_var = cb_relevant_key_gaf_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject arg = (SubLObject)cb_browser.NIL;
            arg = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                cb_gaf_arg_index(index_hook, arg);
                cdolist_list_var = cdolist_list_var.rest();
                arg = cdolist_list_var.first();
            }
        }
        if (cb_browser.NIL != sksi_sks_gaf_arg_indexing.sksi_supported_gaf_argumentP(index_hook)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw46$SKSI_EXTERNAL_GAF_ARGUMENT, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            sksi_external_gaf_argument_browser.display_sksi_supported_gaf_argument_positions_for_term(index_hook);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 10211L)
    public static SubLObject cb_gaf_arg_index(final SubLObject index_hook, final SubLObject arg) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_gaf_arg_index(index_hook, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = cb_make_gaf_arg_pred_object_id(arg, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw45$GAF_ARG, index_hook, count, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject preds = cb_relevant_key_gaf_arg_index(index_hook, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw48$VISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = preds;
                SubLObject pred = (SubLObject)cb_browser.NIL;
                pred = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_gaf_arg_pred_index(index_hook, arg, pred);
                    cdolist_list_var = cdolist_list_var.rest();
                    pred = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 11365L)
    public static SubLObject cb_gaf_arg_pred_index(final SubLObject index_hook, final SubLObject arg, final SubLObject pred) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_gaf_arg_index(index_hook, arg, pred, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject mts = cb_relevant_key_gaf_arg_index(index_hook, arg, pred, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject dhtml_object_id = cb_make_gaf_arg_pred_object_id(arg, pred);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
            if (Sequences.length(mts).numLE((SubLObject)cb_browser.ONE_INTEGER)) {
                dhtml_macros.dhtml_switch_visibility_no_arrow();
            }
            else {
                dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            }
            cb_utilities.cb_link((SubLObject)cb_browser.$kw45$GAF_ARG, index_hook, count, arg, pred, (SubLObject)cb_browser.UNPROVIDED);
            cb_adornments.handle_adornments((SubLObject)cb_browser.$kw50$GAF_ARG_PREDICATE, (SubLObject)cb_browser.$kw7$MAIN, index_hook, arg, pred, (SubLObject)cb_browser.NIL);
            cb_adornments.handle_adornments((SubLObject)cb_browser.$kw51$GAF_ARG_PREDICATE_CONTENT, (SubLObject)cb_browser.$kw52$CONTENT, index_hook, arg, pred, (SubLObject)cb_browser.NIL);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            if (!Sequences.length(mts).numLE((SubLObject)cb_browser.ONE_INTEGER)) {
                dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
                html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                if (cb_browser.NIL != dhtml_object_id) {
                    html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(dhtml_object_id);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                }
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    SubLObject cdolist_list_var = mts;
                    SubLObject mt = (SubLObject)cb_browser.NIL;
                    mt = cdolist_list_var.first();
                    while (cb_browser.NIL != cdolist_list_var) {
                        cb_gaf_arg_pred_mt_index(index_hook, arg, pred, mt);
                        cdolist_list_var = cdolist_list_var.rest();
                        mt = cdolist_list_var.first();
                    }
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
                html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 13121L)
    public static SubLObject cb_make_gaf_arg_pred_object_id(final SubLObject arg, SubLObject pred) {
        if (pred == cb_browser.UNPROVIDED) {
            pred = (SubLObject)cb_browser.NIL;
        }
        if (cb_browser.NIL != pred) {
            return Sequences.cconcatenate(format_nil.format_nil_a_no_copy(cb_utilities.cb_fort_identifier(pred)), new SubLObject[] { cb_browser.$str54$_arg_, format_nil.format_nil_a_no_copy(arg) });
        }
        return Sequences.cconcatenate((SubLObject)cb_browser.$str55$arg_, format_nil.format_nil_a_no_copy(arg));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 13312L)
    public static SubLObject cb_gaf_arg_pred_mt_index(final SubLObject index_hook, final SubLObject arg, final SubLObject pred, final SubLObject mt) {
        final SubLObject count = cb_relevant_num_gaf_arg_index(index_hook, arg, pred, mt);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.SIX_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw45$GAF_ARG, index_hook, count, arg, pred, mt);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            cb_adornments.handle_adornments((SubLObject)cb_browser.$kw50$GAF_ARG_PREDICATE, (SubLObject)cb_browser.$kw7$MAIN, index_hook, arg, pred, mt);
            cb_adornments.handle_adornments((SubLObject)cb_browser.$kw51$GAF_ARG_PREDICATE_CONTENT, (SubLObject)cb_browser.$kw52$CONTENT, index_hook, arg, pred, mt);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 13778L)
    public static SubLObject cb_c_index_nart_args(final SubLObject index_hook) {
        final SubLObject nart_count = cb_relevant_num_nart_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (nart_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw56$NART_ARG, index_hook, nart_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            SubLObject cdolist_list_var;
            final SubLObject arg_list = cdolist_list_var = cb_relevant_key_nart_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject arg = (SubLObject)cb_browser.NIL;
            arg = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                cb_nart_arg_index(index_hook, arg);
                cdolist_list_var = cdolist_list_var.rest();
                arg = cdolist_list_var.first();
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 14383L)
    public static SubLObject cb_nart_arg_index(final SubLObject index_hook, final SubLObject arg) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_nart_arg_index(index_hook, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = cb_make_nart_arg_object_id(arg);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw56$NART_ARG, index_hook, count, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject funcs = cb_relevant_key_nart_arg_index(index_hook, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = funcs;
                SubLObject func = (SubLObject)cb_browser.NIL;
                func = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_nart_arg_func_index(index_hook, arg, func);
                    cdolist_list_var = cdolist_list_var.rest();
                    func = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 15064L)
    public static SubLObject cb_make_nart_arg_object_id(final SubLObject arg) {
        return PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str57$nart_arg__A, arg);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 15154L)
    public static SubLObject cb_nart_arg_func_index(final SubLObject index_hook, final SubLObject arg, final SubLObject func) {
        final SubLObject count = cb_relevant_num_nart_arg_index(index_hook, arg, func, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.FOUR_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw56$NART_ARG, index_hook, count, arg, func, (SubLObject)cb_browser.UNPROVIDED);
            cb_adornments.handle_adornments((SubLObject)cb_browser.$kw58$NART_ARG_FUNCTION, (SubLObject)cb_browser.$kw7$MAIN, index_hook, arg, func, mt_vars.$tou_mt$.getGlobalValue());
            cb_adornments.handle_adornments((SubLObject)cb_browser.$kw59$NART_ARG_FUNCTION_CONTENT, (SubLObject)cb_browser.$kw52$CONTENT, index_hook, arg, func, mt_vars.$tou_mt$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 15787L)
    public static SubLObject cb_c_index_predicate_extent(final SubLObject predicate) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_predicate_extent_index(predicate, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject dhtml_object_id = (SubLObject)cb_browser.$str60$pred_extent;
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw61$PREDICATE_EXTENT, predicate, count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject mts = cb_relevant_key_predicate_extent_index(predicate);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                if (cb_browser.NIL != mts.rest()) {
                    SubLObject cdolist_list_var = mts;
                    SubLObject mt = (SubLObject)cb_browser.NIL;
                    mt = cdolist_list_var.first();
                    while (cb_browser.NIL != cdolist_list_var) {
                        cb_predicate_extent_mt_index(predicate, mt, (SubLObject)(count.numLE((SubLObject)cb_browser.$int62$12000000) ? cb_browser.NIL : cb_browser.T));
                        cdolist_list_var = cdolist_list_var.rest();
                        mt = cdolist_list_var.first();
                    }
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL != sksi_sks_predicate_indexing.sksi_supported_predicateP(predicate)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw63$SKSI_EXTERNAL_PREDICATE_EXTENT, predicate, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 16688L)
    public static SubLObject cb_predicate_extent_mt_index(final SubLObject predicate, final SubLObject mt, SubLObject should_bypass_countsP) {
        if (should_bypass_countsP == cb_browser.UNPROVIDED) {
            should_bypass_countsP = (SubLObject)cb_browser.NIL;
        }
        final SubLObject count = (SubLObject)((cb_browser.NIL != should_bypass_countsP) ? cb_browser.ONE_INTEGER : kb_indexing.num_predicate_extent_index(predicate, mt));
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.FOUR_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw61$PREDICATE_EXTENT, predicate, count, mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 16996L)
    public static SubLObject cb_c_index_function_extent(final SubLObject function) {
        final SubLObject count = cb_relevant_num_function_extent_index(function, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw64$FUNCTION_EXTENT, function, count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 17276L)
    public static SubLObject cb_c_index_predicate_rules(final SubLObject predicate) {
        final SubLObject rule_count = cb_relevant_num_predicate_rule_index(predicate, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw65$PREDICATE_RULE, predicate, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            cb_predicate_rule_index(predicate, (SubLObject)cb_browser.$kw66$NEG);
            cb_predicate_rule_index(predicate, (SubLObject)cb_browser.$kw67$POS);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 17669L)
    public static SubLObject cb_predicate_rule_index(final SubLObject predicate, final SubLObject sense) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_predicate_rule_index(predicate, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str68$pred_rule__A, sense);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw65$PREDICATE_RULE, predicate, count, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject mts = cb_relevant_key_predicate_rule_index(predicate, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject mts_count = Sequences.length(mts);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = mts;
                SubLObject mt = (SubLObject)cb_browser.NIL;
                mt = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_predicate_rule_mt_index(predicate, sense, mt, (SubLObject)(mts_count.numLE((SubLObject)cb_browser.$int62$12000000) ? cb_browser.NIL : cb_browser.T));
                    cdolist_list_var = cdolist_list_var.rest();
                    mt = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 18398L)
    public static SubLObject cb_predicate_rule_mt_index(final SubLObject predicate, final SubLObject sense, final SubLObject mt, SubLObject should_bypass_countsP) {
        if (should_bypass_countsP == cb_browser.UNPROVIDED) {
            should_bypass_countsP = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = (SubLObject)((cb_browser.NIL != should_bypass_countsP) ? cb_browser.ONE_INTEGER : cb_relevant_num_predicate_rule_index(predicate, sense, mt, (SubLObject)cb_browser.UNPROVIDED));
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject directions = cb_relevant_key_predicate_rule_index(predicate, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject dhtml_object_id = cb_make_predicate_rule_mt_id(predicate, sense, mt);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
            if (Sequences.length(directions).numLE((SubLObject)cb_browser.ONE_INTEGER)) {
                dhtml_macros.dhtml_switch_visibility_no_arrow();
            }
            else {
                dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            }
            cb_utilities.cb_link((SubLObject)cb_browser.$kw65$PREDICATE_RULE, predicate, count, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != directions.rest()) {
                dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
                html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                if (cb_browser.NIL != dhtml_object_id) {
                    html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(dhtml_object_id);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                }
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    SubLObject cdolist_list_var = directions;
                    SubLObject direction = (SubLObject)cb_browser.NIL;
                    direction = cdolist_list_var.first();
                    while (cb_browser.NIL != cdolist_list_var) {
                        cb_predicate_rule_mt_direction_index(predicate, sense, mt, direction, should_bypass_countsP);
                        cdolist_list_var = cdolist_list_var.rest();
                        direction = cdolist_list_var.first();
                    }
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
                }
                html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 19280L)
    public static SubLObject cb_make_predicate_rule_mt_id(final SubLObject predicate, final SubLObject sense, final SubLObject mt) {
        return PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str69$rule__A__A__A, new SubLObject[] { cb_utilities.cb_fort_identifier(predicate), sense, cb_utilities.cb_fort_identifier(mt) });
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 19446L)
    public static SubLObject cb_predicate_rule_mt_direction_index(final SubLObject predicate, final SubLObject sense, final SubLObject mt, final SubLObject direction, SubLObject should_bypass_countsP) {
        if (should_bypass_countsP == cb_browser.UNPROVIDED) {
            should_bypass_countsP = (SubLObject)cb_browser.NIL;
        }
        final SubLObject count = (SubLObject)((cb_browser.NIL != should_bypass_countsP) ? cb_browser.ONE_INTEGER : cb_relevant_num_predicate_rule_index(predicate, sense, mt, direction));
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.SIX_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw65$PREDICATE_RULE, predicate, count, sense, mt, direction);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 19834L)
    public static SubLObject cb_c_index_decontextualized_ist_predicate_rules(final SubLObject predicate) {
        final SubLObject rule_count = cb_relevant_num_decontextualized_ist_predicate_rule_index(predicate, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw70$DECONTEXTUALIZED_IST_PREDICATE_RULE, predicate, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            cb_decontextualized_ist_predicate_rule_index(predicate, (SubLObject)cb_browser.$kw66$NEG);
            cb_decontextualized_ist_predicate_rule_index(predicate, (SubLObject)cb_browser.$kw67$POS);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 20353L)
    public static SubLObject cb_decontextualized_ist_predicate_rule_index(final SubLObject predicate, final SubLObject sense) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_decontextualized_ist_predicate_rule_index(predicate, sense, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str71$decontextualized_ist_pred_rule__A, sense);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw70$DECONTEXTUALIZED_IST_PREDICATE_RULE, predicate, count, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject directions = cb_relevant_key_decontextualized_ist_predicate_rule_index(predicate, sense, (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = directions;
                SubLObject direction = (SubLObject)cb_browser.NIL;
                direction = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_decontextualized_ist_predicate_rule_direction_index(predicate, sense, direction);
                    cdolist_list_var = cdolist_list_var.rest();
                    direction = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 21133L)
    public static SubLObject cb_decontextualized_ist_predicate_rule_direction_index(final SubLObject predicate, final SubLObject sense, final SubLObject direction) {
        final SubLObject count = cb_relevant_num_decontextualized_ist_predicate_rule_index(predicate, sense, direction);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.SIX_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw70$DECONTEXTUALIZED_IST_PREDICATE_RULE, predicate, count, sense, direction, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 21510L)
    public static SubLObject cb_c_index_isa_rules(final SubLObject collection) {
        final SubLObject rule_count = cb_relevant_num_isa_rule_index(collection, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw72$ISA_RULE, collection, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            cb_isa_rule_index(collection, (SubLObject)cb_browser.$kw66$NEG);
            cb_isa_rule_index(collection, (SubLObject)cb_browser.$kw67$POS);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 21872L)
    public static SubLObject cb_isa_rule_index(final SubLObject collection, final SubLObject sense) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_isa_rule_index(collection, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str73$isa_rule__A, sense);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw72$ISA_RULE, collection, count, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject mts = cb_relevant_key_isa_rule_index(collection, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = mts;
                SubLObject mt = (SubLObject)cb_browser.NIL;
                mt = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_isa_rule_mt_index(collection, sense, mt);
                    cdolist_list_var = cdolist_list_var.rest();
                    mt = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 22465L)
    public static SubLObject cb_isa_rule_mt_index(final SubLObject collection, final SubLObject sense, final SubLObject mt) {
        final SubLObject count = cb_relevant_num_isa_rule_index(collection, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.FOUR_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw72$ISA_RULE, collection, count, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject directions = cb_relevant_key_isa_rule_index(collection, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != directions.rest()) {
                SubLObject cdolist_list_var = directions;
                SubLObject direction = (SubLObject)cb_browser.NIL;
                direction = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_isa_rule_mt_direction_index(collection, sense, mt, direction);
                    cdolist_list_var = cdolist_list_var.rest();
                    direction = cdolist_list_var.first();
                }
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 22931L)
    public static SubLObject cb_isa_rule_mt_direction_index(final SubLObject collection, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLObject count = cb_relevant_num_isa_rule_index(collection, sense, mt, direction);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.SIX_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw72$ISA_RULE, collection, count, sense, mt, direction);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 23242L)
    public static SubLObject cb_c_index_quoted_isa_rules(final SubLObject collection) {
        final SubLObject rule_count = cb_relevant_num_quoted_isa_rule_index(collection, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw74$QUOTED_ISA_RULE, collection, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            cb_quoted_isa_rule_index(collection, (SubLObject)cb_browser.$kw66$NEG);
            cb_quoted_isa_rule_index(collection, (SubLObject)cb_browser.$kw67$POS);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 23646L)
    public static SubLObject cb_quoted_isa_rule_index(final SubLObject collection, final SubLObject sense) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_quoted_isa_rule_index(collection, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str75$quoted_isa_rule__A, sense);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw74$QUOTED_ISA_RULE, collection, count, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject mts = cb_relevant_key_quoted_isa_rule_index(collection, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = mts;
                SubLObject mt = (SubLObject)cb_browser.NIL;
                mt = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_quoted_isa_rule_mt_index(collection, sense, mt);
                    cdolist_list_var = cdolist_list_var.rest();
                    mt = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 24281L)
    public static SubLObject cb_quoted_isa_rule_mt_index(final SubLObject collection, final SubLObject sense, final SubLObject mt) {
        final SubLObject count = cb_relevant_num_quoted_isa_rule_index(collection, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.FOUR_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw74$QUOTED_ISA_RULE, collection, count, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject directions = cb_relevant_key_quoted_isa_rule_index(collection, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != directions.rest()) {
                SubLObject cdolist_list_var = directions;
                SubLObject direction = (SubLObject)cb_browser.NIL;
                direction = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_quoted_isa_rule_mt_direction_index(collection, sense, mt, direction);
                    cdolist_list_var = cdolist_list_var.rest();
                    direction = cdolist_list_var.first();
                }
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 24782L)
    public static SubLObject cb_quoted_isa_rule_mt_direction_index(final SubLObject collection, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLObject count = cb_relevant_num_quoted_isa_rule_index(collection, sense, mt, direction);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.SIX_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw74$QUOTED_ISA_RULE, collection, count, sense, mt, direction);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 25114L)
    public static SubLObject cb_c_index_genls_rules(final SubLObject collection) {
        final SubLObject rule_count = cb_relevant_num_genls_rule_index(collection, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw76$GENLS_RULE, collection, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            cb_genls_rule_index(collection, (SubLObject)cb_browser.$kw66$NEG);
            cb_genls_rule_index(collection, (SubLObject)cb_browser.$kw67$POS);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 25488L)
    public static SubLObject cb_genls_rule_index(final SubLObject collection, final SubLObject sense) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_genls_rule_index(collection, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str77$genl_rule__A, sense);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw76$GENLS_RULE, collection, count, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject mts = cb_relevant_key_genls_rule_index(collection, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = mts;
                SubLObject mt = (SubLObject)cb_browser.NIL;
                mt = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_genls_rule_mt_index(collection, sense, mt);
                    cdolist_list_var = cdolist_list_var.rest();
                    mt = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 26092L)
    public static SubLObject cb_genls_rule_mt_index(final SubLObject collection, final SubLObject sense, final SubLObject mt) {
        final SubLObject count = cb_relevant_num_genls_rule_index(collection, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.FOUR_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw76$GENLS_RULE, collection, count, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject directions = cb_relevant_key_genls_rule_index(collection, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != directions.rest()) {
                SubLObject cdolist_list_var = directions;
                SubLObject direction = (SubLObject)cb_browser.NIL;
                direction = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_genls_rule_mt_direction_index(collection, sense, mt, direction);
                    cdolist_list_var = cdolist_list_var.rest();
                    direction = cdolist_list_var.first();
                }
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 26568L)
    public static SubLObject cb_genls_rule_mt_direction_index(final SubLObject collection, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLObject count = cb_relevant_num_genls_rule_index(collection, sense, mt, direction);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.SIX_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw76$GENLS_RULE, collection, count, sense, mt, direction);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 26885L)
    public static SubLObject cb_c_index_genl_mt_rules(final SubLObject genl_mt) {
        final SubLObject rule_count = cb_relevant_num_genl_mt_rule_index(genl_mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw78$GENL_MT_RULE, genl_mt, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            cb_genl_mt_rule_index(genl_mt, (SubLObject)cb_browser.$kw66$NEG);
            cb_genl_mt_rule_index(genl_mt, (SubLObject)cb_browser.$kw67$POS);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 27256L)
    public static SubLObject cb_genl_mt_rule_index(final SubLObject genl_mt, final SubLObject sense) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = cb_relevant_num_genl_mt_rule_index(genl_mt, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject dhtml_object_id = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str79$genl_mt_rule__A, sense);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw78$GENL_MT_RULE, genl_mt, count, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject mts = cb_relevant_key_genl_mt_rule_index(genl_mt, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = mts;
                SubLObject mt = (SubLObject)cb_browser.NIL;
                mt = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_genl_mt_rule_mt_index(genl_mt, sense, mt);
                    cdolist_list_var = cdolist_list_var.rest();
                    mt = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 27858L)
    public static SubLObject cb_genl_mt_rule_mt_index(final SubLObject genl_mt, final SubLObject sense, final SubLObject rule_mt) {
        final SubLObject count = cb_relevant_num_genl_mt_rule_index(genl_mt, sense, rule_mt, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.FOUR_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw78$GENL_MT_RULE, genl_mt, count, sense, rule_mt, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject directions = cb_relevant_key_genl_mt_rule_index(genl_mt, sense, rule_mt, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != directions.rest()) {
                SubLObject cdolist_list_var = directions;
                SubLObject direction = (SubLObject)cb_browser.NIL;
                direction = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_genl_mt_rule_mt_direction_index(genl_mt, sense, rule_mt, direction);
                    cdolist_list_var = cdolist_list_var.rest();
                    direction = cdolist_list_var.first();
                }
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 28354L)
    public static SubLObject cb_genl_mt_rule_mt_direction_index(final SubLObject genl_mt, final SubLObject sense, final SubLObject rule_mt, final SubLObject direction) {
        final SubLObject count = cb_relevant_num_genl_mt_rule_index(genl_mt, sense, rule_mt, direction);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.SIX_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw78$GENL_MT_RULE, genl_mt, count, sense, rule_mt, direction);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 28683L)
    public static SubLObject cb_c_index_function_rules(final SubLObject function) {
        final SubLObject rule_count = cb_relevant_num_function_rule_index(function, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw80$FUNCTION_RULE, function, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            SubLObject cdolist_list_var;
            final SubLObject mts = cdolist_list_var = cb_relevant_key_function_rule_index(function, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject mt = (SubLObject)cb_browser.NIL;
            mt = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                cb_function_rule_mt_index(function, mt);
                cdolist_list_var = cdolist_list_var.rest();
                mt = cdolist_list_var.first();
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 29102L)
    public static SubLObject cb_function_rule_mt_index(final SubLObject function, final SubLObject mt) {
        final SubLObject count = cb_relevant_num_function_rule_index(function, mt, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw80$FUNCTION_RULE, function, count, mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            final SubLObject directions = cb_relevant_key_function_rule_index(function, mt, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != directions.rest()) {
                SubLObject cdolist_list_var = directions;
                SubLObject direction = (SubLObject)cb_browser.NIL;
                direction = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_function_rule_mt_direction_index(function, mt, direction);
                    cdolist_list_var = cdolist_list_var.rest();
                    direction = cdolist_list_var.first();
                }
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 29545L)
    public static SubLObject cb_function_rule_mt_direction_index(final SubLObject function, final SubLObject mt, final SubLObject direction) {
        final SubLObject count = cb_relevant_num_function_rule_index(function, mt, direction);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.THREE_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw80$FUNCTION_RULE, function, count, mt, direction, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 29839L)
    public static SubLObject cb_c_index_unbound_rules() {
        final SubLObject rule_count = cb_relevant_num_unbound_rule_index((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (rule_count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw81$UNBOUND_RULE, rule_count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            cb_unbound_rule_index((SubLObject)cb_browser.$kw66$NEG);
            cb_unbound_rule_index((SubLObject)cb_browser.$kw67$POS);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 30167L)
    public static SubLObject cb_unbound_rule_index(final SubLObject sense) {
        final SubLObject count = cb_relevant_num_unbound_rule_index(sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw81$UNBOUND_RULE, count, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            SubLObject cdolist_list_var;
            final SubLObject mts = cdolist_list_var = cb_relevant_key_unbound_rule_index(sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject mt = (SubLObject)cb_browser.NIL;
            mt = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                cb_unbound_rule_mt_index(sense, mt);
                cdolist_list_var = cdolist_list_var.rest();
                mt = cdolist_list_var.first();
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 30504L)
    public static SubLObject cb_unbound_rule_mt_index(final SubLObject sense, final SubLObject mt) {
        final SubLObject count = cb_relevant_num_unbound_rule_index(sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.THREE_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw81$UNBOUND_RULE, count, sense, mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            final SubLObject directions = cb_relevant_key_unbound_rule_index(sense, mt, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != directions.rest()) {
                SubLObject cdolist_list_var = directions;
                SubLObject direction = (SubLObject)cb_browser.NIL;
                direction = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_unbound_rule_mt_direction_index(sense, mt, direction);
                    cdolist_list_var = cdolist_list_var.rest();
                    direction = cdolist_list_var.first();
                }
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 30927L)
    public static SubLObject cb_unbound_rule_mt_direction_index(final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLObject count = cb_relevant_num_unbound_rule_index(sense, mt, direction);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.FOUR_INTEGER);
            html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
            cb_utilities.cb_link((SubLObject)cb_browser.$kw81$UNBOUND_RULE, count, sense, mt, direction, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 31209L)
    public static SubLObject cb_c_index_other(final SubLObject index_hook) {
        final SubLObject count = cb_relevant_num_other_index(index_hook);
        if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw82$OTHER, index_hook, count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 31455L)
    public static SubLObject cb_c_index_mt(final SubLObject index_hook) {
        if (cb_browser.NIL != forts.fort_p(index_hook) && cb_browser.NIL != kb_indexing.broad_mtP(index_hook)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            cb_utilities.cb_link((SubLObject)cb_browser.$kw83$IST_BROAD, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        }
        else {
            final SubLObject count = (cb_browser.NIL != hlmt.monad_mtP(index_hook)) ? cb_relevant_num_mt_index(index_hook) : cb_relevant_num_hlmt_index(index_hook);
            if (count.numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
                cb_utilities.cb_link((SubLObject)cb_browser.$kw84$IST, index_hook, count, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
                cb_utilities.cb_link((SubLObject)cb_browser.$kw85$MT_GAFS, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
                cb_utilities.cb_link((SubLObject)cb_browser.$kw86$MT_RULES, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            }
            if (cb_browser.NIL != sksi_sks_mt_indexing.sksi_supported_mtP(index_hook)) {
                html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
                cb_utilities.cb_link((SubLObject)cb_browser.$kw87$SKSI_EXTERNAL_MT_CONTENTS, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 32238L)
    public static SubLObject cb_c_el_hl_formulas_link(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (!cb_parameters.$cb_c_formula_display_exception_index_hook$.getDynamicValue(thread).eql(index_hook)) {
            cb_parameters.$cb_c_formula_display_exception_index_hook$.setDynamicValue((SubLObject)cb_browser.NIL, thread);
        }
        html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
        if (cb_browser.NIL != cb_c_show_el_formulas_for_index_hookP(index_hook)) {
            cb_utilities.cb_link((SubLObject)cb_browser.$kw88$HL_FORMULAS_FOR_INDEX_HOOK, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            cb_utilities.cb_link((SubLObject)cb_browser.$kw89$EL_FORMULAS_FOR_INDEX_HOOK, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 32793L)
    public static SubLObject cb_c_show_el_formulas_for_index_hookP(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != assertion_handles.assertion_p(index_hook)) {
            return (SubLObject)cb_browser.NIL;
        }
        final SubLObject pcase_var = cb_parameters.$cb_c_assertion_formulas_display$.getDynamicValue(thread);
        if (pcase_var.eql((SubLObject)cb_browser.$kw90$HL_FORMULAS)) {
            return cb_c_assertion_formula_display_exceptionP(index_hook);
        }
        if (pcase_var.eql((SubLObject)cb_browser.$kw91$EL_FORMULAS)) {
            return (SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL == cb_c_assertion_formula_display_exceptionP(index_hook));
        }
        if (pcase_var.eql((SubLObject)cb_browser.$kw92$EL_FORMULAS_EXCEPT_WHEN_BROWSING_SKOLEMS)) {
            return (SubLObject)((cb_browser.NIL != term.fast_reified_skolemP(index_hook)) ? cb_c_assertion_formula_display_exceptionP(index_hook) : SubLObjectFactory.makeBoolean(cb_browser.NIL == cb_c_assertion_formula_display_exceptionP(index_hook)));
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 33490L)
    public static SubLObject cb_c_assertion_formula_display_exceptionP(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return Equality.eql(cb_parameters.$cb_c_formula_display_exception_index_hook$.getDynamicValue(thread), index_hook);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 33818L)
    public static SubLObject cb_show_el_formulas_for_hookP(final SubLObject hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != cb_utilities.cb_index_hook_p(hook)) {
            return cb_c_show_el_formulas_for_index_hookP(hook);
        }
        if (cb_browser.NIL != term.closed_nautP(hook, (SubLObject)cb_browser.UNPROVIDED)) {
            return cb_c_show_el_formulas_for_index_hookP(hook);
        }
        if (hook == cb_browser.$kw93$HISTORY) {
            return cb_parameters.$cb_history_show_el_formulasP$.getDynamicValue(thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 34226L)
    public static SubLObject cb_c_el(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                index_hook = cb_utilities.cb_guess_naut_spec(index_spec);
            }
            if (cb_browser.NIL == index_hook) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject pcase_var = cb_parameters.$cb_c_assertion_formulas_display$.getDynamicValue(thread);
            if (pcase_var.eql((SubLObject)cb_browser.$kw90$HL_FORMULAS)) {
                cb_parameters.$cb_c_formula_display_exception_index_hook$.setDynamicValue(index_hook, thread);
            }
            else if (pcase_var.eql((SubLObject)cb_browser.$kw91$EL_FORMULAS)) {
                cb_parameters.$cb_c_formula_display_exception_index_hook$.setDynamicValue((SubLObject)cb_browser.NIL, thread);
            }
            else if (pcase_var.eql((SubLObject)cb_browser.$kw92$EL_FORMULAS_EXCEPT_WHEN_BROWSING_SKOLEMS)) {
                cb_parameters.$cb_c_formula_display_exception_index_hook$.setDynamicValue((SubLObject)((cb_browser.NIL != term.fast_reified_skolemP(index_hook)) ? index_hook : cb_browser.NIL), thread);
            }
            if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(index_hook)) {
                cb_auxiliary_index((SubLObject)ConsesLow.list(Sequences.cconcatenate((SubLObject)cb_browser.$str96$_, Strings.string(index_hook))));
            }
            else if (cb_browser.NIL != forts.fort_p(index_hook)) {
                cb_frames.cb_term_frame_internal(index_hook);
            }
            else if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
                cb_frames.cb_term_frame_internal(index_hook);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 35430L)
    public static SubLObject cb_link_el_formulas_for_index_hook(final SubLObject index_hook, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str99$_EL_Formulas_;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        if (cb_browser.NIL != cb_utilities.cb_index_hook_p(index_hook)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str100$cb_c_el__A, cb_utilities.cb_index_identifier(index_hook));
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 35746L)
    public static SubLObject cb_c_hl(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                index_hook = cb_utilities.cb_guess_naut_spec(index_spec);
            }
            if (cb_browser.NIL == index_hook) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject pcase_var = cb_parameters.$cb_c_assertion_formulas_display$.getDynamicValue(thread);
            if (pcase_var.eql((SubLObject)cb_browser.$kw90$HL_FORMULAS)) {
                cb_parameters.$cb_c_formula_display_exception_index_hook$.setDynamicValue((SubLObject)cb_browser.NIL, thread);
            }
            else if (pcase_var.eql((SubLObject)cb_browser.$kw91$EL_FORMULAS)) {
                cb_parameters.$cb_c_formula_display_exception_index_hook$.setDynamicValue(index_hook, thread);
            }
            else if (pcase_var.eql((SubLObject)cb_browser.$kw92$EL_FORMULAS_EXCEPT_WHEN_BROWSING_SKOLEMS)) {
                cb_parameters.$cb_c_formula_display_exception_index_hook$.setDynamicValue((SubLObject)((cb_browser.NIL != term.fast_reified_skolemP(index_hook)) ? cb_browser.NIL : index_hook), thread);
            }
            if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(index_hook)) {
                cb_auxiliary_index((SubLObject)ConsesLow.list(Sequences.cconcatenate((SubLObject)cb_browser.$str96$_, Strings.string(index_hook))));
            }
            else if (cb_browser.NIL != forts.fort_p(index_hook)) {
                cb_frames.cb_term_frame_internal(index_hook);
            }
            else if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
                cb_frames.cb_term_frame_internal(index_hook);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 36959L)
    public static SubLObject cb_link_hl_formulas_for_index_hook(final SubLObject index_hook, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str103$_HL_Formulas_;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        if (cb_browser.NIL != cb_utilities.cb_index_hook_p(index_hook)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str104$cb_c_hl__A, cb_utilities.cb_index_identifier(index_hook));
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 37276L)
    public static SubLObject cb_c_documentation(final SubLObject args) {
        if (cb_browser.NIL != forts.fort_p(args)) {
            SubLObject fort_spec = (SubLObject)cb_browser.NIL;
            cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list106);
            fort_spec = args.first();
            final SubLObject current = args.rest();
            if (cb_browser.NIL == current) {
                final SubLObject fort = cb_utilities.cb_guess_fort(fort_spec, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == forts.fort_p(fort)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, fort_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_documentation_internal(fort);
            }
            else {
                cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list106);
            }
        }
        else {
            cb_c_documentation_internal(cb_utilities.cb_guess_term(args, (SubLObject)cb_browser.UNPROVIDED));
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 37714L)
    public static SubLObject cb_link_documentation(final SubLObject v_term, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str109$Documentation;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str110$cb_c_documentation__A, cb_utilities.cb_term_identifier(v_term));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return v_term;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 37970L)
    public static SubLObject clear_cb_documentation_predicate_p() {
        final SubLObject cs = cb_browser.$cb_documentation_predicate_p_caching_state$.getGlobalValue();
        if (cb_browser.NIL != cs) {
            memoization_state.caching_state_clear(cs);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 37970L)
    public static SubLObject remove_cb_documentation_predicate_p(final SubLObject obj) {
        return memoization_state.caching_state_remove_function_results_with_args(cb_browser.$cb_documentation_predicate_p_caching_state$.getGlobalValue(), (SubLObject)ConsesLow.list(obj), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 37970L)
    public static SubLObject cb_documentation_predicate_p_internal(final SubLObject obj) {
        return kb_accessors.documentation_predicate_in_any_mt_p(obj);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 37970L)
    public static SubLObject cb_documentation_predicate_p(final SubLObject obj) {
        SubLObject caching_state = cb_browser.$cb_documentation_predicate_p_caching_state$.getGlobalValue();
        if (cb_browser.NIL == caching_state) {
            caching_state = memoization_state.create_global_caching_state_for_name((SubLObject)cb_browser.$sym112$CB_DOCUMENTATION_PREDICATE_P, (SubLObject)cb_browser.$sym113$_CB_DOCUMENTATION_PREDICATE_P_CACHING_STATE_, (SubLObject)cb_browser.$int114$64, (SubLObject)cb_browser.EQL, (SubLObject)cb_browser.ONE_INTEGER, (SubLObject)cb_browser.TWENTY_INTEGER);
        }
        SubLObject results = memoization_state.caching_state_lookup(caching_state, obj, memoization_state.$memoized_item_not_found$.getGlobalValue());
        if (results.eql(memoization_state.$memoized_item_not_found$.getGlobalValue())) {
            results = Values.arg2(Values.resetMultipleValues(), (SubLObject)Values.multiple_value_list(cb_documentation_predicate_p_internal(obj)));
            memoization_state.caching_state_put(caching_state, obj, results, (SubLObject)cb_browser.UNPROVIDED);
        }
        return memoization_state.caching_results(results);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 38672L)
    public static SubLObject cb_print_documentation_information(final SubLObject fort, SubLObject terse) {
        if (terse == cb_browser.UNPROVIDED) {
            terse = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        assert cb_browser.NIL != forts.fort_p(fort) : fort;
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.FIVE_INTEGER);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            cb_utilities.cb_show_term(fort, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_princ((SubLObject)cb_browser.$str117$_documentation__);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
        if (cb_browser.NIL == terse) {
            if (cb_browser.NIL != cb_c_bookkeeping_info(fort)) {
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != constant_completion.constant_mentioned_in_codeP(fort)) {
                final SubLObject color_val = (SubLObject)cb_browser.$kw118$RED;
                html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                if (cb_browser.NIL != color_val) {
                    html_utilities.html_markup(html_macros.$html_font_color$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_color(color_val));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                }
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_2 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    cb_utilities.cb_show_term(fort, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_princ((SubLObject)cb_browser.$str119$_is_mentioned_in_code_);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_2, thread);
                }
                html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            }
            display_semantic_web_uris(fort);
            display_external_links(fort);
            display_kb_subsets(fort);
        }
        cb_c_documentation_internal_guts(fort);
        if (cb_browser.NIL == cb_tools.cb_fastP()) {
            dhtml_macros.js_delayed_load_int((SubLObject)ConsesLow.list(new SubLObject[] { cb_browser.$kw19$HANDLER, cb_browser.$sym120$CB_SUMMARY_SENTENCE, cb_browser.$kw21$ARGS, ConsesLow.list(reader.bq_cons((SubLObject)cb_browser.$str22$term, fort)), cb_browser.$kw23$MESSAGE, cb_browser.$str121$Getting_summary_sentence___, cb_browser.$kw25$TAG, cb_browser.$str122$span, cb_browser.$kw27$DELAY, cb_browser.$int28$50 }));
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 39583L)
    public static SubLObject display_semantic_web_uris(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject dhtml_object_id = (SubLObject)cb_browser.$str123$semantic_web_uris;
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
        html_utilities.html_princ_strong((SubLObject)cb_browser.$str124$Semantic_Web_URIs);
        dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
        if (cb_browser.NIL != dhtml_object_id) {
            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(dhtml_object_id);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$19 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = cb_browser.$semantic_web_uri_data$.getGlobalValue();
                SubLObject cons = (SubLObject)cb_browser.NIL;
                cons = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    SubLObject current;
                    final SubLObject datum = current = cons;
                    SubLObject label = (SubLObject)cb_browser.NIL;
                    SubLObject method = (SubLObject)cb_browser.NIL;
                    cdestructuring_bind.destructuring_bind_must_consp(current, datum, (SubLObject)cb_browser.$list125);
                    label = current.first();
                    current = (method = current.rest());
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$20 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$21 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_princ(label);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$21, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw127$CENTER));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$22 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_princ((SubLObject)cb_browser.$str128$___);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$22, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        final SubLObject owl_uri = Functions.funcall(method, fort);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$23 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(owl_uri);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$24 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_princ(owl_uri);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$24, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$23, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$20, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    cdolist_list_var = cdolist_list_var.rest();
                    cons = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$19, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        return fort;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 40326L)
    public static SubLObject display_external_links(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject data = dictionary.new_dictionary(Symbols.symbol_function((SubLObject)cb_browser.EQUAL), (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != constant_handles.valid_constantP(cb_browser.$const129$GetPredsAndMetaDataForExternalDoc, (SubLObject)cb_browser.UNPROVIDED)) {
            SubLObject cdolist_list_var = kb_query.new_cyc_query_from_kbq(cb_browser.$const129$GetPredsAndMetaDataForExternalDoc, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject v_bindings = (SubLObject)cb_browser.NIL;
            v_bindings = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                final SubLObject docs_mt = bindings.variable_lookup((SubLObject)cb_browser.$sym130$_MT, v_bindings);
                final SubLObject docs_pred = bindings.variable_lookup((SubLObject)cb_browser.$sym131$_PRED, v_bindings);
                final SubLObject display_string = bindings.variable_lookup((SubLObject)cb_browser.$sym132$_DISPLAY_STRING, v_bindings);
                final SubLObject query_spec = cb_browser.$const133$GetURLsFromExternalURLPred;
                final SubLObject raw_sentence = kb_query.kbq_sentence(cb_browser.$const133$GetURLsFromExternalURLPred);
                final SubLObject sentence = cycl_utilities.expression_subst(fort, (SubLObject)cb_browser.$list134, cycl_utilities.expression_subst(docs_pred, (SubLObject)cb_browser.$list135, cycl_utilities.expression_subst(docs_mt, (SubLObject)cb_browser.$list136, raw_sentence, Symbols.symbol_function((SubLObject)cb_browser.EQUAL), (SubLObject)cb_browser.UNPROVIDED), Symbols.symbol_function((SubLObject)cb_browser.EQUAL), (SubLObject)cb_browser.UNPROVIDED), Symbols.symbol_function((SubLObject)cb_browser.EQUAL), (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject query_mt = kb_query.kbq_mt(query_spec);
                SubLObject cdolist_list_var_$25 = inference_kernel.new_cyc_query(sentence, query_mt, kb_query.kbq_query_properties(query_spec));
                SubLObject url_bindings = (SubLObject)cb_browser.NIL;
                url_bindings = cdolist_list_var_$25.first();
                while (cb_browser.NIL != cdolist_list_var_$25) {
                    if (cb_browser.NIL != list_utilities.singletonP(url_bindings)) {
                        dictionary_utilities.dictionary_pushnew(data, display_string, bindings.variable_binding_value(list_utilities.only_one(url_bindings)), Symbols.symbol_function((SubLObject)cb_browser.EQUAL), (SubLObject)cb_browser.UNPROVIDED);
                    }
                    cdolist_list_var_$25 = cdolist_list_var_$25.rest();
                    url_bindings = cdolist_list_var_$25.first();
                }
                cdolist_list_var = cdolist_list_var.rest();
                v_bindings = cdolist_list_var.first();
            }
        }
        if (cb_browser.NIL == dictionary.dictionary_empty_p(data)) {
            final SubLObject dhtml_object_id = (SubLObject)cb_browser.$str137$external_links;
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            html_utilities.html_princ_strong((SubLObject)cb_browser.$str138$External_Links);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$26 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    SubLObject iteration_state;
                    for (iteration_state = dictionary_contents.do_dictionary_contents_state(dictionary.dictionary_contents(data)); cb_browser.NIL == dictionary_contents.do_dictionary_contents_doneP(iteration_state); iteration_state = dictionary_contents.do_dictionary_contents_next(iteration_state)) {
                        thread.resetMultipleValues();
                        final SubLObject display_string = dictionary_contents.do_dictionary_contents_key_value(iteration_state);
                        final SubLObject urls = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$27 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$28 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_indent((SubLObject)cb_browser.THREE_INTEGER);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$28, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$29 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_princ(display_string);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$29, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw127$CENTER));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$30 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_princ((SubLObject)cb_browser.$str128$___);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$30, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$31 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                SubLObject list_var = (SubLObject)cb_browser.NIL;
                                SubLObject url = (SubLObject)cb_browser.NIL;
                                SubLObject i = (SubLObject)cb_browser.NIL;
                                list_var = urls;
                                url = list_var.first();
                                for (i = (SubLObject)cb_browser.ZERO_INTEGER; cb_browser.NIL != list_var; list_var = list_var.rest(), url = list_var.first(), i = Numbers.add((SubLObject)cb_browser.ONE_INTEGER, i)) {
                                    if (!i.eql((SubLObject)cb_browser.ZERO_INTEGER)) {
                                        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(url);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$32 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_princ(web_utilities.html_url_decode(url));
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$32, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                                }
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$31, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$27, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    dictionary_contents.do_dictionary_contents_finalize(iteration_state);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$26, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return fort;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 42224L)
    public static SubLObject display_kb_subsets(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject kb_subset_cols = all_kb_subset_collections(fort);
        if (cb_browser.NIL != kb_subset_cols) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            kb_subset_cols = Sort.sort(kb_subset_cols, Symbols.symbol_function((SubLObject)cb_browser.$sym139$_), Symbols.symbol_function((SubLObject)cb_browser.$sym140$QUOTED_INSTANCE_CARDINALITY));
            final SubLObject dhtml_object_id = (SubLObject)cb_browser.$str141$kb_subsets;
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            html_utilities.html_princ_strong((SubLObject)cb_browser.$str142$Relevant_KB_Subsets);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = kb_subset_cols;
                SubLObject kb_subset_col = (SubLObject)cb_browser.NIL;
                kb_subset_col = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    final SubLObject assertions = kb_indexing.find_all_gafs((SubLObject)ConsesLow.list(cb_browser.$const143$quotedIsa, fort, kb_subset_col));
                    html_utilities.html_indent((SubLObject)cb_browser.ONE_INTEGER);
                    if (cb_browser.NIL != assertions) {
                        SubLObject cdolist_list_var_$33 = assertions;
                        SubLObject assertion = (SubLObject)cb_browser.NIL;
                        assertion = cdolist_list_var_$33.first();
                        while (cb_browser.NIL != cdolist_list_var_$33) {
                            cb_utilities.cb_assertion_link_binary(assertion, (SubLObject)cb_browser.T);
                            cdolist_list_var_$33 = cdolist_list_var_$33.rest();
                            assertion = cdolist_list_var_$33.first();
                        }
                    }
                    else {
                        cb_utilities.cb_show_term(kb_subset_col, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    kb_subset_col = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return fort;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 42995L)
    public static SubLObject cb_summary_sentence(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject fort = cb_utilities.cb_guess_term(html_utilities.html_extract_input((SubLObject)cb_browser.$str22$term, args), (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject summary_sentences = rkf_concept_clarifier.rkf_clarifying_sentences(fort, pph_vars.$pph_domain_mt$.getDynamicValue(thread), (SubLObject)cb_browser.TWENTY_INTEGER, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != summary_sentences) {
            html_utilities.html_newline((SubLObject)cb_browser.ONE_INTEGER);
            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str144$Summary_of_);
            cb_utilities.cb_show_term(fort, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_princ((SubLObject)cb_browser.$str96$_);
            html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
            final SubLObject _prev_bind_0 = pph_vars.$constant_link_function$.currentBinding(thread);
            final SubLObject _prev_bind_2 = pph_vars.$html_generation_target$.currentBinding(thread);
            final SubLObject _prev_bind_3 = pph_vars.$pph_use_bulleted_listsP$.currentBinding(thread);
            final SubLObject _prev_bind_4 = pph_vars.$pph_use_bulleted_lists_min_level$.currentBinding(thread);
            try {
                pph_vars.$constant_link_function$.bind((SubLObject)cb_browser.$sym145$CB_CF, thread);
                pph_vars.$html_generation_target$.bind((cb_browser.NIL != html_macros.$html_parent_target$.getGlobalValue()) ? html_macros.$html_parent_target$.getGlobalValue() : pph_vars.$html_generation_target$.getDynamicValue(thread), thread);
                pph_vars.$pph_use_bulleted_listsP$.bind((SubLObject)cb_browser.T, thread);
                pph_vars.$pph_use_bulleted_lists_min_level$.bind((SubLObject)cb_browser.ZERO_INTEGER, thread);
                html_utilities.html_markup(rkf_concept_communicator.rkf_html_summary_sentence(fort, summary_sentences, pph_vars.$pph_language_mt$.getDynamicValue(thread), pph_vars.$pph_domain_mt$.getDynamicValue(thread)));
            }
            finally {
                pph_vars.$pph_use_bulleted_lists_min_level$.rebind(_prev_bind_4, thread);
                pph_vars.$pph_use_bulleted_listsP$.rebind(_prev_bind_3, thread);
                pph_vars.$html_generation_target$.rebind(_prev_bind_2, thread);
                pph_vars.$constant_link_function$.rebind(_prev_bind_0, thread);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 43666L)
    public static SubLObject all_kb_subset_collections(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject collections = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
        final SubLObject _prev_bind_2 = mt_relevance_macros.$mt$.currentBinding(thread);
        try {
            mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
            mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
            collections = isa.all_quoted_isas_wrt(fort, cb_browser.$const148$CycKBSubsetCollection, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            mt_relevance_macros.$mt$.rebind(_prev_bind_2, thread);
            mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0, thread);
        }
        collections = Sort.sort(collections, Symbols.symbol_function((SubLObject)cb_browser.$sym149$GENERALITY_ESTIMATE_), (SubLObject)cb_browser.UNPROVIDED);
        return collections;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 43964L)
    public static SubLObject cb_c_bookkeeping_info(final SubLObject fort) {
        if (cb_browser.NIL != forts.fort_p(fort)) {
            final SubLObject creator = bookkeeping_store.creator(fort, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject creation_time = bookkeeping_store.creation_time(fort, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject creation_purpose = bookkeeping_store.creation_purpose(fort, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject creation_second = bookkeeping_store.creation_second(fort, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != creator || cb_browser.NIL != creation_time || cb_browser.NIL != creation_second || cb_browser.NIL != creation_purpose) {
                html_utilities.html_princ((SubLObject)cb_browser.$str150$Created);
                if (cb_browser.NIL != creator) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str151$_by_);
                    cb_utilities.cb_show_cyclist(creator);
                }
                if (cb_browser.NIL != creation_time) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str152$_on_);
                    cb_utilities.cb_show_date(creation_time);
                }
                if (cb_browser.NIL != creation_second) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str153$_at_);
                    cb_utilities.cb_show_second(creation_second);
                }
                if (cb_browser.NIL != creation_purpose) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str154$_for_);
                    cb_utilities.cb_show_term(creation_purpose, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                return (SubLObject)cb_browser.T;
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 44764L)
    public static SubLObject cb_c_bookkeeping_gafs(final SubLObject fort) {
        if (cb_browser.NIL != forts.fort_p(fort)) {
            final SubLObject creator = bookkeeping_store.creator(fort, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject creation_time = bookkeeping_store.creation_time(fort, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject creation_purpose = bookkeeping_store.creation_purpose(fort, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject creation_second = bookkeeping_store.creation_second(fort, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != creator || cb_browser.NIL != creation_time || cb_browser.NIL != creation_second || cb_browser.NIL != creation_purpose) {
                cb_c_bookkeeping_header();
                if (cb_browser.NIL != creator) {
                    cb_display_bookkeeping_gaf(cb_browser.$const155$myCreator, fort, creator);
                    html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != creation_purpose) {
                    cb_display_bookkeeping_gaf(cb_browser.$const156$myCreationPurpose, fort, creation_purpose);
                    html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != creation_time) {
                    cb_display_bookkeeping_gaf(cb_browser.$const157$myCreationTime, fort, creation_time);
                    html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != creation_second) {
                    cb_display_bookkeeping_gaf(cb_browser.$const158$myCreationSecond, fort, creation_second);
                    html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                }
                return (SubLObject)cb_browser.T;
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 45871L)
    public static SubLObject cb_display_bookkeeping_gaf(final SubLObject pred, final SubLObject arg1, final SubLObject arg2) {
        final SubLObject asent = el_utilities.make_binary_formula(pred, arg1, arg2);
        cb_sentence_browser.cb_show_sentence_readably(asent, cb_browser.$const159$BookkeepingMt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 46055L)
    public static SubLObject cb_c_bookkeeping_header() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str160$___);
        }
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str161$Bookkeeping_Assertions___);
        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 46227L)
    public static SubLObject cb_c_documentation_internal(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject title_var;
        final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str162$Documentation_for__S, v_term);
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$34 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                dhtml_macros.html_basic_cb_scripts();
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$35 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$36 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$37 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$37, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        final SubLObject _prev_bind_0_$38 = dhtml_macros.$html_element_id$.currentBinding(thread);
                        try {
                            dhtml_macros.$html_element_id$.bind((SubLObject)cb_browser.ZERO_INTEGER, thread);
                            dhtml_macros.basic_ajax_scripts();
                            html_utilities.html_markup(dhtml_macros.$js_load_later$.getGlobalValue());
                            final SubLObject _prev_bind_0_$39 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
                            try {
                                pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
                                thread.resetMultipleValues();
                                final SubLObject _prev_bind_0_$40 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
                                try {
                                    pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                                    final SubLObject reuseP = thread.secondMultipleValue();
                                    thread.resetMultipleValues();
                                    try {
                                        thread.resetMultipleValues();
                                        final SubLObject _prev_bind_0_$41 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                                        try {
                                            pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                                            final SubLObject new_or_reused = thread.secondMultipleValue();
                                            thread.resetMultipleValues();
                                            final SubLObject _prev_bind_0_$42 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                                            try {
                                                pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                                                final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                                                final SubLObject _prev_bind_0_$43 = memoization_state.$memoization_state$.currentBinding(thread);
                                                try {
                                                    memoization_state.$memoization_state$.bind(local_state, thread);
                                                    final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                                    try {
                                                        final SubLObject _prev_bind_0_$44 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                                        final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                                        try {
                                                            pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                                            pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                                            if (cb_browser.NIL != forts.fort_p(v_term)) {
                                                                cb_print_documentation_information(v_term, (SubLObject)cb_browser.UNPROVIDED);
                                                            }
                                                            else if (cb_browser.NIL != term.closed_nautP(v_term, (SubLObject)cb_browser.UNPROVIDED)) {
                                                                cb_naut_utilities.cb_print_documentation_information_naut(v_term);
                                                            }
                                                            else {
                                                                Errors.warn((SubLObject)cb_browser.$str170$Bad_type_of_term__A__, v_term);
                                                            }
                                                        }
                                                        finally {
                                                            pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                                            pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$44, thread);
                                                        }
                                                    }
                                                    finally {
                                                        final SubLObject _prev_bind_0_$45 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                                        try {
                                                            Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                                            final SubLObject _values = Values.getValuesAsVector();
                                                            memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                                            Values.restoreValuesFromVector(_values);
                                                        }
                                                        finally {
                                                            Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$45, thread);
                                                        }
                                                    }
                                                }
                                                finally {
                                                    memoization_state.$memoization_state$.rebind(_prev_bind_0_$43, thread);
                                                }
                                            }
                                            finally {
                                                pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$42, thread);
                                            }
                                            if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                                                memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                                            }
                                        }
                                        finally {
                                            pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$41, thread);
                                        }
                                    }
                                    finally {
                                        final SubLObject _prev_bind_0_$46 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                        try {
                                            Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                            final SubLObject _values2 = Values.getValuesAsVector();
                                            if (cb_browser.NIL == reuseP) {
                                                pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                                            }
                                            Values.restoreValuesFromVector(_values2);
                                        }
                                        finally {
                                            Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$46, thread);
                                        }
                                    }
                                }
                                finally {
                                    pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$40, thread);
                                }
                            }
                            finally {
                                pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0_$39, thread);
                            }
                        }
                        finally {
                            dhtml_macros.$html_element_id$.rebind(_prev_bind_0_$38, thread);
                        }
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$36, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$35, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$34, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 46833L)
    public static SubLObject cb_c_documentation_internal_guts(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_parameters.$cb_c_gaf_arg_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_c_gaf_arg_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            SubLObject current_mt = (SubLObject)cb_browser.NIL;
            SubLObject relevant_doc_preds = (SubLObject)cb_browser.NIL;
            SubLObject cdolist_list_var = kb_indexing.key_gaf_arg_index(fort, (SubLObject)cb_browser.ONE_INTEGER, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject pred = (SubLObject)cb_browser.NIL;
            pred = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                if (cb_browser.NIL != cb_documentation_predicate_p(pred)) {
                    relevant_doc_preds = (SubLObject)ConsesLow.cons(pred, relevant_doc_preds);
                }
                cdolist_list_var = cdolist_list_var.rest();
                pred = cdolist_list_var.first();
            }
            relevant_doc_preds = cb_utilities.cb_sort_preds_for_display(fort, relevant_doc_preds, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
            if (cb_browser.NIL != relevant_doc_preds) {
                cdolist_list_var = relevant_doc_preds;
                pred = (SubLObject)cb_browser.NIL;
                pred = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    SubLObject documentation_assertions = (SubLObject)cb_browser.NIL;
                    final SubLObject _prev_bind_0_$47 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$mt$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
                        mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
                        documentation_assertions = kb_mapping.gather_gaf_arg_index(fort, (SubLObject)cb_browser.ONE_INTEGER, pred, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        mt_relevance_macros.$mt$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$47, thread);
                    }
                    if (cb_browser.NIL != documentation_assertions) {
                        SubLObject cdolist_list_var_$48 = documentation_assertions;
                        SubLObject documentation_assertion = (SubLObject)cb_browser.NIL;
                        documentation_assertion = cdolist_list_var_$48.first();
                        while (cb_browser.NIL != cdolist_list_var_$48) {
                            current_mt = cb_c_documentation_assertion(documentation_assertion, current_mt, (SubLObject)cb_browser.UNPROVIDED);
                            if (pred.eql(cb_browser.$const172$sharedNotes)) {
                                final SubLObject note_fort = assertions_high.gaf_arg2(documentation_assertion);
                                SubLObject shared_comments = (SubLObject)cb_browser.NIL;
                                SubLObject cdolist_list_var_$49 = kb_indexing.key_gaf_arg_index(note_fort, (SubLObject)cb_browser.ONE_INTEGER, (SubLObject)cb_browser.UNPROVIDED);
                                SubLObject pred2 = (SubLObject)cb_browser.NIL;
                                pred2 = cdolist_list_var_$49.first();
                                while (cb_browser.NIL != cdolist_list_var_$49) {
                                    if (cb_browser.NIL != cb_documentation_predicate_p(pred2)) {
                                        final SubLObject _prev_bind_0_$48 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                                        final SubLObject _prev_bind_3 = mt_relevance_macros.$mt$.currentBinding(thread);
                                        try {
                                            mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
                                            mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
                                            shared_comments = kb_mapping.gather_gaf_arg_index(note_fort, (SubLObject)cb_browser.ONE_INTEGER, pred2, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                        }
                                        finally {
                                            mt_relevance_macros.$mt$.rebind(_prev_bind_3, thread);
                                            mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$48, thread);
                                        }
                                        if (cb_browser.NIL != shared_comments) {
                                            SubLObject cdolist_list_var_$50 = shared_comments;
                                            SubLObject shared_comment = (SubLObject)cb_browser.NIL;
                                            shared_comment = cdolist_list_var_$50.first();
                                            while (cb_browser.NIL != cdolist_list_var_$50) {
                                                current_mt = cb_c_documentation_assertion(shared_comment, current_mt, (SubLObject)cb_browser.NIL);
                                                cdolist_list_var_$50 = cdolist_list_var_$50.rest();
                                                shared_comment = cdolist_list_var_$50.first();
                                            }
                                        }
                                    }
                                    cdolist_list_var_$49 = cdolist_list_var_$49.rest();
                                    pred2 = cdolist_list_var_$49.first();
                                }
                            }
                            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                            cdolist_list_var_$48 = cdolist_list_var_$48.rest();
                            documentation_assertion = cdolist_list_var_$48.first();
                        }
                    }
                    cdolist_list_var = cdolist_list_var.rest();
                    pred = cdolist_list_var.first();
                }
            }
            else {
                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                html_utilities.html_princ((SubLObject)cb_browser.$str173$No_documentation_assertions_for_);
                cb_utilities.cb_show_term(fort, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
            }
        }
        finally {
            cb_parameters.$cb_c_gaf_arg_last_mt$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 48485L)
    public static SubLObject cb_c_documentation_assertion(final SubLObject assertion, SubLObject current_mt, SubLObject abbreviateP) {
        if (current_mt == cb_browser.UNPROVIDED) {
            current_mt = (SubLObject)cb_browser.NIL;
        }
        if (abbreviateP == cb_browser.UNPROVIDED) {
            abbreviateP = (SubLObject)cb_browser.T;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        assert cb_browser.NIL != assertion_handles.assertion_p(assertion) : assertion;
        final SubLObject assertion_mt = assertions_high.assertion_mt(assertion);
        if (cb_browser.NIL == hlmt.hlmt_equal(assertion_mt, current_mt)) {
            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
            if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
                html_utilities.html_princ((SubLObject)cb_browser.$str175$In_Mt___);
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str176$Mt___);
            }
            cb_utilities.cb_show_term(assertion_mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
                html_utilities.html_princ((SubLObject)cb_browser.$str177$__);
            }
            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL != abbreviateP && cb_browser.NIL != kb_accessors.binary_predicateP(assertions_high.gaf_arg0(assertion))) {
            cb_utilities.cb_show_term(assertions_high.gaf_arg0(assertion), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_princ((SubLObject)cb_browser.$str128$___);
            cb_utilities.cb_assertion_link_binary(assertion, (SubLObject)cb_browser.T);
        }
        else {
            cb_utilities.cb_form(assertion, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        return assertion_mt;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 49346L)
    public static SubLObject cb_c_documentation_string(final SubLObject string) {
        cb_utilities.cb_show_term(string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 49447L)
    public static SubLObject cb_c_definitional(final SubLObject args) {
        SubLObject term_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list178);
        term_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject v_term = cb_utilities.cb_guess_term(term_spec, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != forts.fort_p(v_term)) {
                cb_c_definitional_internal(v_term);
            }
            else {
                if (cb_browser.NIL == term.closed_nautP(v_term, (SubLObject)cb_browser.UNPROVIDED)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, term_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_naut_utilities.cb_c_definitional_internal_naut(v_term);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list178);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 49877L)
    public static SubLObject cb_link_definitional(final SubLObject v_term, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str180$Definitional_Info;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str181$cb_c_definitional__A, cb_utilities.cb_term_identifier(v_term));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return v_term;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 50135L)
    public static SubLObject cb_c_definitional_internal(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.$kw183$INFERRED == cb_frames.$cb_default_index_view$.getDynamicValue(thread)) {
            return cb_inferred_index.cb_inferred_index_definitional_information(fort);
        }
        cb_possibly_show_followup_widget(fort);
        final SubLObject title_var;
        final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str184$Definitional_info_for__S, fort);
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$52 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                dhtml_macros.html_basic_cb_scripts();
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$53 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$54 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$55 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$55, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        cb_print_definitional_information(fort);
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$54, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$53, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$52, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 50521L)
    public static SubLObject cb_possibly_show_followup_widget(final SubLObject fort) {
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 50823L)
    public static SubLObject cb_print_definitional_information(final SubLObject fort) {
        cb_c_term_header(fort);
        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
        cb_c_definitional_internal_guts_fort(fort);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 51063L)
    public static SubLObject cb_c_definitional_internal_guts_fort(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_princ((SubLObject)cb_browser.$str185$Refresh_Frames);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
        _prev_bind_0 = cb_viewpoint.$cb_use_mts_filter$.currentBinding(thread);
        try {
            cb_viewpoint.$cb_use_mts_filter$.bind((SubLObject)cb_browser.NIL, thread);
            cb_c_gaf_arg_header((SubLObject)cb_browser.ONE_INTEGER);
            final SubLObject _prev_bind_0_$56 = cb_parameters.$cb_c_gaf_arg_last_mt$.currentBinding(thread);
            try {
                cb_parameters.$cb_c_gaf_arg_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
                SubLObject cdolist_list_var;
                final SubLObject preds = cdolist_list_var = cb_utilities.cb_definitional_preds_for_fort(fort);
                SubLObject pred = (SubLObject)cb_browser.NIL;
                pred = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_c_gaf_arg_rec_arg_pred(fort, (SubLObject)cb_browser.ONE_INTEGER, pred);
                    cdolist_list_var = cdolist_list_var.rest();
                    pred = cdolist_list_var.first();
                }
                cb_c_gaf_arg_rec_arg_pred(fort, (SubLObject)cb_browser.ONE_INTEGER, cb_browser.$const186$salientAssertions);
            }
            finally {
                cb_parameters.$cb_c_gaf_arg_last_mt$.rebind(_prev_bind_0_$56, thread);
            }
        }
        finally {
            cb_viewpoint.$cb_use_mts_filter$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 51713L)
    public static SubLObject cb_describe_constant(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != ke.cyclist_is_guest()) {
            cyc_navigator_internals.guest_warn((SubLObject)cb_browser.$str189$the_Constant_Internal_Data_page);
            return (SubLObject)cb_browser.NIL;
        }
        final SubLObject constant = cb_utilities.cb_guess_constant(args);
        if (cb_browser.NIL == constant_handles.constant_p(constant)) {
            cb_utilities.cb_error((SubLObject)cb_browser.$str190$_a_does_not_specify_a_Cyc_constan, args, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            return (SubLObject)cb_browser.NIL;
        }
        final SubLObject title_var = (SubLObject)cb_browser.$str191$Constant_Internal_Data;
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$57 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                dhtml_macros.html_basic_cb_scripts();
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$58 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$59 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$60 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str185$Refresh_Frames);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$60, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        if (cb_browser.NIL != title_var) {
                            html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                            html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ(title_var);
                            html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                            html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$61 = html_macros.$html_safe_print$.currentBinding(thread);
                        final SubLObject _prev_bind_2 = html_macros.$within_html_form$.currentBinding(thread);
                        final SubLObject _prev_bind_3 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_macros.$within_html_form$.bind((SubLObject)cb_browser.T, thread);
                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                            cb_utilities.cb_help_preamble((SubLObject)cb_browser.$kw187$CB_DESCRIBE_CONSTANT, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)cb_browser.$str194$Internal_data_for_constant__);
                            html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                            cb_utilities.cb_show_term(constant, (SubLObject)cb_browser.ZERO_INTEGER, (SubLObject)cb_browser.T);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$62 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$63 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$64 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str195$Name__);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$64, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$65 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.cb_form(constants_high.constant_name(constant), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$65, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$63, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$66 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$67 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_italic_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str196$_ephemeral__internal__);
                                        html_utilities.html_markup(html_macros.$html_italic_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str197$SUID__);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$67, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$68 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.cb_form(constant_handles.constant_suid(constant), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$68, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$66, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$69 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$70 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_italic_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str198$_permanent__external__);
                                        html_utilities.html_markup(html_macros.$html_italic_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str199$GUID__);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$70, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$71 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.cb_form(Guids.guid_to_string(constants_high.constant_guid(constant)), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$71, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$69, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$72 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$73 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_italic_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str200$_compact_external__);
                                        html_utilities.html_markup(html_macros.$html_italic_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str201$HL_ID__);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$73, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$74 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.cb_form(kb_utilities.compact_hl_external_id_string(constant), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$74, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$72, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$62, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                            cb_describe_inference_modules(constant);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)cb_browser.$str202$To_use_in_Java_OpenCYC_API_);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_blockquote_head$.getGlobalValue());
                            html_macros.verify_not_within_html_pre();
                            html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
                            final SubLObject _prev_bind_0_$75 = html_macros.$within_html_pre$.currentBinding(thread);
                            try {
                                html_macros.$within_html_pre$.bind((SubLObject)cb_browser.T, thread);
                                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str203$new_CycConstant__S__new_Guid__S__, constants_high.constant_name(constant), Guids.guid_to_string(constants_high.constant_guid(constant)));
                            }
                            finally {
                                html_macros.$within_html_pre$.rebind(_prev_bind_0_$75, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_blockquote_tail$.getGlobalValue());
                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                        }
                        finally {
                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_3, thread);
                            html_macros.$within_html_form$.rebind(_prev_bind_2, thread);
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$61, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$59, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$58, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$57, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 54586L)
    public static SubLObject cb_link_describe_constant(final SubLObject constant) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str205$cb_describe_constant__A, cb_utilities.cb_fort_identifier(constant));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str206$Internal_Data);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return constant;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 54904L)
    public static SubLObject cb_describe_nart(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != ke.cyclist_is_guest()) {
            cyc_navigator_internals.guest_warn((SubLObject)cb_browser.$str210$the_Reified_NAT_Internal_Data_pag);
            return (SubLObject)cb_browser.NIL;
        }
        final SubLObject nart = cb_utilities.cb_guess_fort(args, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL == nart_handles.nart_p(nart)) {
            cb_utilities.cb_error((SubLObject)cb_browser.$str211$_a_does_not_specify_a_Cyc_reified, args, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            return (SubLObject)cb_browser.NIL;
        }
        final SubLObject title_var = (SubLObject)cb_browser.$str212$Reified_NAT_Internal_Data;
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$76 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                dhtml_macros.html_basic_cb_scripts();
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$77 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$78 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$79 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str185$Refresh_Frames);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$79, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        if (cb_browser.NIL != title_var) {
                            html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                            html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ(title_var);
                            html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                            html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$80 = html_macros.$html_safe_print$.currentBinding(thread);
                        final SubLObject _prev_bind_2 = html_macros.$within_html_form$.currentBinding(thread);
                        final SubLObject _prev_bind_3 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_macros.$within_html_form$.bind((SubLObject)cb_browser.T, thread);
                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                            cb_utilities.cb_help_preamble((SubLObject)cb_browser.$kw208$CB_DESCRIBE_NAT, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)cb_browser.$str213$Internal_data_for_Reified_NAT__);
                            html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                            cb_utilities.cb_show_term(nart, (SubLObject)cb_browser.ZERO_INTEGER, (SubLObject)cb_browser.T);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$81 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$82 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$83 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_princ((SubLObject)cb_browser.$str196$_ephemeral__internal__);
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str214$ID_Number__);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$83, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$84 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.cb_form(nart_handles.nart_id(nart), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$84, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$82, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$85 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$86 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                        html_utilities.html_princ((SubLObject)cb_browser.$str215$HL_Formula__);
                                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$86, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$87 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.cb_show_term(narts_high.nart_hl_formula(nart), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$87, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$85, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$81, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)cb_browser.$str216$_compact__external__);
                            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)cb_browser.$str217$HL_ID_String___);
                            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                            html_utilities.html_princ(kb_utilities.compact_hl_external_id_string(nart));
                            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                            cb_describe_inference_modules(nart);
                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                        }
                        finally {
                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_3, thread);
                            html_macros.$within_html_form$.rebind(_prev_bind_2, thread);
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$80, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$78, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$77, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$76, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 56779L)
    public static SubLObject cb_link_describe_nart(final SubLObject nart) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str219$cb_describe_nart__A, cb_utilities.cb_fort_identifier(nart));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str206$Internal_Data);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return nart;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 57021L)
    public static SubLObject cb_describe_index(final SubLObject index) {
        if (cb_browser.NIL == kb_indexing_datastructures.simple_index_p(index)) {
            return cb_utilities.cb_form(index, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        SubLObject cdolist_list_var = index;
        SubLObject assertion = (SubLObject)cb_browser.NIL;
        assertion = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (!assertion.eql(index.first())) {
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            }
            cb_utilities.cb_show_assertion_readably(assertion, (SubLObject)cb_browser.T, (SubLObject)cb_browser.UNPROVIDED);
            cdolist_list_var = cdolist_list_var.rest();
            assertion = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 57292L)
    public static SubLObject cb_describe_inference_modules(final SubLObject fort) {
        final SubLObject predicate_has_specific_removal_modulesP = inference_modules.predicate_has_specific_removal_modulesP(fort);
        final SubLObject predicate_has_specific_hl_storage_modulesP = hl_storage_modules.predicate_has_specific_hl_storage_modulesP(fort);
        if (cb_browser.NIL != predicate_has_specific_removal_modulesP || cb_browser.NIL != predicate_has_specific_hl_storage_modulesP || cb_browser.NIL != fort) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_center_head$.getGlobalValue());
            html_utilities.html_princ_strong((SubLObject)cb_browser.$str221$Inference_Data);
            html_utilities.html_markup(html_macros.$html_center_tail$.getGlobalValue());
            if (cb_browser.NIL != predicate_has_specific_removal_modulesP) {
                cb_utilities.cb_link((SubLObject)cb_browser.$kw222$PREDICATE_SPECIFIC_REMOVAL_MODULES, fort, (SubLObject)cb_browser.$str223$_Removal_Modules_, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != preference_modules.predicate_has_specific_preference_modulesP(fort)) {
                cb_utilities.cb_link((SubLObject)cb_browser.$kw224$PREDICATE_SPECIFIC_PREFERENCE_MODULES, fort, (SubLObject)cb_browser.$str225$_Preference_Modules_, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != hl_storage_modules.predicate_has_specific_hl_storage_modulesP(fort)) {
                cb_utilities.cb_link((SubLObject)cb_browser.$kw226$PREDICATE_SPECIFIC_HL_STORAGE_MODULES, fort, (SubLObject)cb_browser.$str227$_Storage_Modules_, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 58950L)
    public static SubLObject cb_c_all_asserted_knowledge(final SubLObject args) {
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL != current) {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
            return (SubLObject)cb_browser.NIL;
        }
        final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
        if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
            return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        return cb_c_all_asserted_knowledge_guts(index_hook);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 59375L)
    public static SubLObject cb_c_all_asserted_knowledge_guts(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != forts.fort_p(index_hook) && cb_browser.$kw183$INFERRED == cb_frames.$cb_default_index_view$.getDynamicValue(thread)) {
            return cb_inferred_index.cb_inferred_gaf_arg_assertions_guts(index_hook, index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        final SubLObject title_var;
        final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str229$All_assertions_for__S, index_hook);
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$88 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                dhtml_macros.html_basic_cb_scripts();
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$89 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$90 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$91 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$91, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        cb_possibly_show_followup_widget(index_hook);
                        cb_c_term_header(index_hook);
                        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                        if (cb_browser.NIL != cb_c_bookkeeping_gafs(index_hook)) {
                            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                        }
                        cb_c_total_internal(index_hook);
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$90, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$89, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$88, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 59959L)
    public static SubLObject cb_link_all_asserted_knowledge(final SubLObject index_hook, final SubLObject count, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str230$cb_c_all_asserted_knowledge__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != linktext) {
                html_utilities.html_princ(linktext);
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str231$All_Asserted_Knowledge);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.isPositive()) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 60319L)
    public static SubLObject cb_c_bookkeeping_assertions(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str234$All_bookeeping_assertions_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$92 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$93 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$94 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$95 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$95, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_bookkeeping_gafs(index_hook);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$94, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$93, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$92, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 61033L)
    public static SubLObject cb_link_bookkeeping_assertions(final SubLObject index_hook, final SubLObject count, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str236$cb_c_bookkeeping_assertions__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != linktext) {
                html_utilities.html_princ(linktext);
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str237$Bookkeeping_Info);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.isPositive()) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 61384L)
    public static SubLObject cb_c_total(final SubLObject args) {
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL != current) {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
            return (SubLObject)cb_browser.NIL;
        }
        SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
        if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
            index_hook = cb_utilities.cb_guess_naut(index_spec, (SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL == index_hook) {
            return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        return cb_c_total_guts(index_hook);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 61797L)
    public static SubLObject cb_c_total_guts(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != forts.fort_p(index_hook) && cb_browser.$kw183$INFERRED == cb_frames.$cb_default_index_view$.getDynamicValue(thread)) {
            return cb_inferred_index.cb_inferred_gaf_arg_assertions_guts(index_hook, index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        final SubLObject title_var;
        final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str229$All_assertions_for__S, index_hook);
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$96 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                dhtml_macros.html_basic_cb_scripts();
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$97 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$98 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$99 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$99, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        cb_possibly_show_followup_widget(index_hook);
                        cb_c_term_header(index_hook);
                        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL != cb_utilities.cb_index_hook_p(index_hook)) {
                            cb_c_total_internal(index_hook);
                        }
                        else if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
                            cb_naut_utilities.cb_c_total_internal_naut(index_hook);
                        }
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$98, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$97, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$96, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 62439L)
    public static SubLObject cb_link_constant_total(final SubLObject index_hook, final SubLObject count, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str240$cb_c_total__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != linktext) {
                html_utilities.html_princ(linktext);
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str241$All_KB_Assertions);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 62764L)
    public static SubLObject cb_c_total_internal(final SubLObject index_hook) {
        if (kb_indexing.num_gaf_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            cb_c_gaf_arg_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_nart_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_nart_arg_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_predicate_extent_index(index_hook, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_predicate_extent_internal(index_hook, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_function_extent_index(index_hook).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_function_extent_internal(index_hook);
        }
        if (kb_indexing.num_predicate_rule_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_predicate_rule_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_decontextualized_ist_predicate_rule_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_decontextualized_ist_predicate_rule_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_isa_rule_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_isa_rule_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_genls_rule_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_genls_rule_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_genl_mt_rule_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_genl_mt_rule_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_function_rule_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_function_rule_internal(index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        }
        if (kb_indexing.num_other_index(index_hook).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_other_internal(index_hook);
        }
        if (cb_browser.NIL != forts.fort_p(index_hook) && cb_browser.NIL == kb_indexing.broad_mtP(index_hook) && kb_indexing.num_mt_index(index_hook).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_ist_internal(index_hook);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 64313L)
    public static SubLObject cb_link_chronological_order(final SubLObject index_hook, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str243$cb_assertion_chronology__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != linktext) {
                html_utilities.html_princ(linktext);
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str244$Assertions_History);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 64713L)
    public static SubLObject cb_assertion_chronology(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject fort = cb_utilities.cb_guess_fort(args, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != forts.fort_p(fort)) {
            final SubLObject title_var = (SubLObject)cb_browser.$str246$Assertion_History;
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$100 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$101 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$102 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$103 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$103, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_assertions_in_chronological_order(fort);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$102, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$101, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$100, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 64960L)
    public static SubLObject cb_assertions_in_chronological_order(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject assertions = kb_utilities.term_assertions_in_chronological_order(fort);
        SubLObject last_date = (SubLObject)cb_browser.NIL;
        html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            SubLObject cdolist_list_var = assertions;
            SubLObject assertion = (SubLObject)cb_browser.NIL;
            assertion = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                final SubLObject when = assertions_high.asserted_when(assertion);
                final SubLObject second = assertions_high.asserted_second(assertion);
                final SubLObject asserted_by = assertions_high.asserted_by(assertion);
                final SubLObject new_dateP = (SubLObject)SubLObjectFactory.makeBoolean(!last_date.equal(when));
                if (cb_browser.NIL != new_dateP) {
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$104 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$105 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            last_date = when;
                            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)((cb_browser.NIL != when) ? numeric_date_utilities.datestring(when) : cb_browser.$str248$unknown));
                            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$105, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$106 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$106, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$104, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$107 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$108 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        if (cb_browser.NIL != second) {
                            html_utilities.html_princ(numeric_date_utilities.secondstring(second));
                        }
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$108, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$109 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        cb_utilities.cb_show_assertion_readably(assertion, (SubLObject)cb_browser.T, (SubLObject)cb_browser.NIL);
                        if (cb_browser.NIL != asserted_by) {
                            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)cb_browser.$str151$_by_);
                            cb_utilities.cb_show_term(asserted_by, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                        }
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$109, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$107, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                cdolist_list_var = cdolist_list_var.rest();
                assertion = cdolist_list_var.first();
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
        return fort;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 66025L)
    public static SubLObject cb_link_assertions_id_order(final SubLObject index_hook, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str249$cb_assertions_id_order__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != linktext) {
                html_utilities.html_princ(linktext);
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str250$Assertions_by_ID);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 66411L)
    public static SubLObject cb_assertions_id_order(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject fort = cb_utilities.cb_guess_fort(args, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != forts.fort_p(fort)) {
            final SubLObject title_var = (SubLObject)cb_browser.$str250$Assertions_by_ID;
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$110 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$111 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$112 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$113 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$113, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_assertions_in_id_order(fort);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$112, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$111, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$110, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 66645L)
    public static SubLObject cb_assertions_in_id_order(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject assertions = kb_utilities.term_assertions_in_id_order(fort);
        SubLObject last_date = (SubLObject)cb_browser.NIL;
        html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            SubLObject cdolist_list_var = assertions;
            SubLObject assertion = (SubLObject)cb_browser.NIL;
            assertion = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                final SubLObject when = assertions_high.asserted_when(assertion);
                final SubLObject second = assertions_high.asserted_second(assertion);
                final SubLObject asserted_by = assertions_high.asserted_by(assertion);
                final SubLObject new_dateP = (SubLObject)SubLObjectFactory.makeBoolean(!last_date.equal(when));
                if (cb_browser.NIL != new_dateP) {
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$114 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$115 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            last_date = when;
                            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)((cb_browser.NIL != when) ? numeric_date_utilities.datestring(when) : cb_browser.$str248$unknown));
                            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$115, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$116 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$116, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$114, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$117 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$118 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        if (cb_browser.NIL != second) {
                            html_utilities.html_princ(numeric_date_utilities.secondstring(second));
                        }
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$118, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$119 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        cb_utilities.cb_show_assertion_readably(assertion, (SubLObject)cb_browser.T, (SubLObject)cb_browser.NIL);
                        if (cb_browser.NIL != asserted_by) {
                            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                            html_utilities.html_princ((SubLObject)cb_browser.$str151$_by_);
                            cb_utilities.cb_show_term(asserted_by, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                        }
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$119, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$117, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                cdolist_list_var = cdolist_list_var.rest();
                assertion = cdolist_list_var.first();
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
        return fort;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 67688L)
    public static SubLObject cb_c_gaf_arg(final SubLObject args) {
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list254);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject arg_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list254);
        current = current.rest();
        final SubLObject pred_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list254);
        current = current.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list254);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject arg = (SubLObject)cb_browser.NIL;
            SubLObject predicate = (SubLObject)cb_browser.NIL;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != arg_string) {
                arg = reader.read_from_string_ignoring_errors(arg_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (!arg.isFixnum()) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str255$Could_not_determine_an_arg_from__, arg_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != pred_spec) {
                    predicate = cb_utilities.cb_guess_fort(pred_spec, (SubLObject)cb_browser.UNPROVIDED);
                    if (cb_browser.NIL == forts.fort_p(predicate)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, pred_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    if (cb_browser.NIL != mt_spec) {
                        mt = cb_utilities.cb_guess_hlmt(mt_spec);
                        if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                            return cb_utilities.cb_error((SubLObject)cb_browser.$str256$Could_not_determine_a_microtheory, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        }
                    }
                }
            }
            cb_c_gaf_arg_guts(index_hook, arg, predicate, mt);
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list254);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 68635L)
    public static SubLObject cb_c_gaf_arg_guts(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == mt && cb_browser.NIL != forts.fort_p(index_hook) && cb_browser.$kw183$INFERRED == cb_frames.$cb_default_index_view$.getDynamicValue(thread)) {
            return cb_inferred_index.cb_inferred_gaf_arg_assertions_guts(index_hook, index_hook, arg, predicate);
        }
        final SubLObject title_var;
        final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str258$GAF_index_for__S, index_hook);
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$120 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                dhtml_macros.html_basic_cb_scripts();
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$121 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$122 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$123 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$123, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        cb_possibly_show_followup_widget(index_hook);
                        cb_c_term_header(index_hook);
                        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                        cb_c_gaf_arg_internal(index_hook, arg, predicate, mt);
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$122, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$121, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$120, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 69196L)
    public static SubLObject cb_link_gaf_arg(final SubLObject index_hook, final SubLObject count, SubLObject arg, SubLObject predicate, SubLObject mt) {
        if (arg == cb_browser.UNPROVIDED) {
            arg = (SubLObject)cb_browser.NIL;
        }
        if (predicate == cb_browser.UNPROVIDED) {
            predicate = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str259$cb_c_gaf_arg__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != arg) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, arg);
            if (cb_browser.NIL != predicate) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_fort_identifier(predicate));
                if (cb_browser.NIL != mt) {
                    PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
                }
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else if (cb_browser.NIL != predicate) {
                html_utilities.html_princ(cb_utilities.cb_fort_display_string(predicate));
            }
            else if (cb_browser.NIL != arg) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str261$Arg__a, arg);
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str262$All_GAFs);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 69855L)
    public static SubLObject cb_c_gaf_arg_internal(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate, SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_parameters.$cb_c_gaf_arg_last_mt$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        final SubLObject _prev_bind_3 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            cb_parameters.$cb_c_gaf_arg_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$124 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$125 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$126 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$127 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$128 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_1_$129 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        if (cb_browser.NIL == arg) {
                                            cb_c_gaf_arg_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == predicate) {
                                            cb_c_gaf_arg_rec_arg(index_hook, arg);
                                        }
                                        else {
                                            cb_c_gaf_arg_header(arg);
                                            if (cb_browser.NIL == mt) {
                                                final SubLObject mts = kb_indexing.key_gaf_arg_index(index_hook, arg, predicate);
                                                if (cb_browser.NIL != list_utilities.singletonP(mts)) {
                                                    mt = mts.first();
                                                }
                                            }
                                            if (cb_browser.NIL == mt) {
                                                cb_c_gaf_arg_rec_arg_pred(index_hook, arg, predicate);
                                            }
                                            else {
                                                final SubLObject _prev_bind_0_$129 = cb_parameters.$cb_c_gaf_arg_use_binary$.currentBinding(thread);
                                                try {
                                                    cb_parameters.$cb_c_gaf_arg_use_binary$.bind((SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL != cb_parameters.$cb_c_gaf_arg_use_binary$.getDynamicValue(thread) && cb_browser.NIL == auxiliary_indexing.auxiliary_index_p(index_hook) && arg.eql((SubLObject)cb_browser.ONE_INTEGER)), thread);
                                                    if (cb_browser.NIL != cb_parameters.$cb_c_gaf_arg_use_binary$.getDynamicValue(thread)) {
                                                        final SubLObject _prev_bind_0_$130 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                                                        final SubLObject _prev_bind_1_$130 = mt_relevance_macros.$mt$.currentBinding(thread);
                                                        try {
                                                            mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
                                                            mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
                                                            cb_parameters.$cb_c_gaf_arg_use_binary$.setDynamicValue(arity.binaryP(predicate), thread);
                                                        }
                                                        finally {
                                                            mt_relevance_macros.$mt$.rebind(_prev_bind_1_$130, thread);
                                                            mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$130, thread);
                                                        }
                                                    }
                                                    cb_c_gaf_arg_rec_arg_pred_mt(index_hook, arg, predicate, mt);
                                                    cb_adornments.handle_specific_adornment((SubLObject)cb_browser.$kw50$GAF_ARG_PREDICATE, (SubLObject)cb_browser.$sym264$LITERAL_QUERY_INDEX_DISPLAY, (SubLObject)cb_browser.$kw7$MAIN, index_hook, arg, predicate, mt);
                                                }
                                                finally {
                                                    cb_parameters.$cb_c_gaf_arg_use_binary$.rebind(_prev_bind_0_$129, thread);
                                                }
                                            }
                                        }
                                    }
                                    finally {
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_1_$129, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$128, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$131 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$131, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$127, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$126, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$125, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$132 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$132, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$124, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_3, thread);
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_c_gaf_arg_last_mt$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 70885L)
    public static SubLObject cb_c_gaf_arg_rec(final SubLObject index_hook) {
        SubLObject some_arg_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var;
        final SubLObject args = cdolist_list_var = cb_relevant_key_gaf_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject arg = (SubLObject)cb_browser.NIL;
        arg = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_browser.NIL != some_arg_done) {
                html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            cb_c_gaf_arg_rec_arg(index_hook, arg);
            some_arg_done = (SubLObject)cb_browser.T;
            cdolist_list_var = cdolist_list_var.rest();
            arg = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 71160L)
    public static SubLObject cb_c_gaf_arg_rec_arg(final SubLObject index_hook, final SubLObject arg) {
        cb_c_gaf_arg_header(arg);
        final SubLObject predicates = cb_relevant_key_gaf_arg_index(index_hook, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.$cb_c_gaf_arg_last_mt$.setDynamicValue((SubLObject)cb_browser.NIL);
        SubLObject cdolist_list_var = predicates;
        SubLObject predicate = (SubLObject)cb_browser.NIL;
        predicate = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_gaf_arg_rec_arg_pred(index_hook, arg, predicate);
            cdolist_list_var = cdolist_list_var.rest();
            predicate = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 71462L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_parameters.$cb_c_gaf_arg_use_binary$.currentBinding(thread);
        try {
            cb_parameters.$cb_c_gaf_arg_use_binary$.bind((SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL != cb_parameters.$cb_c_gaf_arg_use_binary$.getDynamicValue(thread) && cb_browser.NIL == auxiliary_indexing.auxiliary_index_p(index_hook) && arg.eql((SubLObject)cb_browser.ONE_INTEGER)), thread);
            final SubLObject mts = cb_relevant_key_gaf_arg_index(index_hook, arg, predicate, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != cb_parameters.$cb_c_gaf_arg_use_binary$.getDynamicValue(thread)) {
                final SubLObject _prev_bind_0_$135 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                final SubLObject _prev_bind_2 = mt_relevance_macros.$mt$.currentBinding(thread);
                try {
                    mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
                    mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
                    cb_parameters.$cb_c_gaf_arg_use_binary$.setDynamicValue(arity.binaryP(predicate), thread);
                }
                finally {
                    mt_relevance_macros.$mt$.rebind(_prev_bind_2, thread);
                    mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$135, thread);
                }
            }
            SubLObject cdolist_list_var = mts;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            mt = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                cb_c_gaf_arg_rec_arg_pred_mt(index_hook, arg, predicate, mt);
                cdolist_list_var = cdolist_list_var.rest();
                mt = cdolist_list_var.first();
            }
        }
        finally {
            cb_parameters.$cb_c_gaf_arg_use_binary$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 71941L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred_mt(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_mt_header(mt, cb_parameters.$cb_c_gaf_arg_last_mt$.getDynamicValue(thread), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.$cb_c_gaf_arg_last_mt$.setDynamicValue(mt, thread);
        if (cb_browser.NIL != cb_c_gaf_arg_use_binaryP()) {
            cb_c_gaf_arg_rec_arg_pred_mt_binary(index_hook, arg, predicate, mt);
        }
        else {
            cb_c_gaf_arg_rec_arg_pred_mt_non_binary(index_hook, arg, predicate, mt);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 72386L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred_mt_binary_note_negated(final SubLObject assertion) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$.setDynamicValue((SubLObject)ConsesLow.cons(assertion, cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$.getDynamicValue(thread)), thread);
        return assertion;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 72551L)
    public static SubLObject cb_c_gaf_arg_use_binaryP() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return (SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL != cb_parameters.$cb_c_gaf_arg_use_binary$.getDynamicValue(thread) && cb_browser.NIL != cb_use_binary_for_major_presentation_languageP((SubLObject)cb_browser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 72700L)
    public static SubLObject cb_use_binary_for_major_presentation_languageP(SubLObject lang) {
        if (lang == cb_browser.UNPROVIDED) {
            lang = control_vars.$cb_major_presentation_language$.getDynamicValue();
        }
        final SubLObject pcase_var = lang;
        if (pcase_var.eql((SubLObject)cb_browser.$kw265$NL)) {
            return (SubLObject)cb_browser.NIL;
        }
        if (pcase_var.eql((SubLObject)cb_browser.$kw266$SILK) || pcase_var.eql((SubLObject)cb_browser.$kw9$CYCL)) {
            return (SubLObject)cb_browser.T;
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 72987L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred_mt_binary_note(final SubLObject assertion, SubLObject showing_negatedP) {
        if (showing_negatedP == cb_browser.UNPROVIDED) {
            showing_negatedP = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == cb_utilities.$assertion_filter_hook$.getDynamicValue(thread) || cb_browser.NIL != Functions.funcall(cb_utilities.$assertion_filter_hook$.getDynamicValue(thread), assertion)) {
            if (cb_browser.NIL == showing_negatedP && cb_browser.$kw267$FALSE == assertions_high.assertion_truth(assertion)) {
                if (cb_browser.NIL == cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
                    return cb_c_gaf_arg_rec_arg_pred_mt_binary_note_negated(assertion);
                }
                cb_utilities.cb_show_assertion_readably(assertion, (SubLObject)cb_browser.T, (SubLObject)cb_browser.NIL);
            }
            else {
                cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.setDynamicValue((SubLObject)ConsesLow.cons(assertion, cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.getDynamicValue(thread)), thread);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 73981L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred_mt_binary_note_el(final SubLObject assertion, SubLObject showing_negatedP) {
        if (showing_negatedP == cb_browser.UNPROVIDED) {
            showing_negatedP = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == cb_utilities.$assertion_filter_hook$.getDynamicValue(thread) || cb_browser.NIL != Functions.funcall(cb_utilities.$assertion_filter_hook$.getDynamicValue(thread), assertion)) {
            if (cb_browser.NIL == showing_negatedP && cb_browser.$kw267$FALSE == assertions_high.assertion_truth(assertion)) {
                return cb_c_gaf_arg_rec_arg_pred_mt_binary_note_negated(assertion);
            }
            final SubLObject hl_formula = fi.assertion_hl_formula(assertion, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject arg2 = cycl_utilities.formula_arg2(hl_formula, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject el_formula = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == assertion_handles.assertion_p(arg2) || cb_browser.NIL != list_utilities.tree_find_if(Symbols.symbol_function((SubLObject)cb_browser.$sym268$FAST_FI_NOT_EL_TERM_), narts_high.nart_expand(Sequences.remove(arg2, hl_formula, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED)), (SubLObject)cb_browser.UNPROVIDED)) {
                el_formula = cb_utilities.cb_assertion_el_formula(assertion, hl_formula);
            }
            if (cb_browser.NIL == el_formula || fi.assertion_expand(narts_high.nart_expand(el_formula)).equal(fi.assertion_expand(narts_high.nart_expand(hl_formula)))) {
                cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.setDynamicValue((SubLObject)ConsesLow.cons(assertion, cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.getDynamicValue(thread)), thread);
            }
            else {
                cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.setDynamicValue((SubLObject)ConsesLow.cons(assertion, cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.getDynamicValue(thread)), thread);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 75733L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred_mt_binary(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.currentBinding(thread);
        final SubLObject _prev_bind_3 = cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.currentBinding(thread);
        try {
            cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$.bind((SubLObject)cb_browser.NIL, thread);
            cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.bind((SubLObject)cb_browser.NIL, thread);
            cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.bind((SubLObject)cb_browser.NIL, thread);
            final SubLObject noting_fn = (cb_browser.NIL != cb_c_show_el_formulas_for_index_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym269$CB_C_GAF_ARG_REC_ARG_PRED_MT_BINARY_NOTE_EL) : Symbols.symbol_function((SubLObject)cb_browser.$sym270$CB_C_GAF_ARG_REC_ARG_PRED_MT_BINARY_NOTE);
            if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
                kb_utilities.map_gaf_arg_index_naut(noting_fn, index_hook, arg, predicate, (SubLObject)cb_browser.NIL, mt);
            }
            else {
                kb_mapping.map_gaf_arg_index(noting_fn, index_hook, arg, predicate, (SubLObject)cb_browser.NIL, mt);
            }
            if (cb_browser.NIL != cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.getDynamicValue(thread)) {
                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                html_utilities.html_simple_attribute(html_macros.$html_table_noflow$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$136 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$137 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$138 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            cb_c_binary_pred_header(predicate, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$138, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$139 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            final SubLObject assertion_link_binary_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym271$CB_EL_ASSERTION_LINK_BINARY_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym272$CB_ASSERTION_LINK_BINARY);
                            final SubLObject _prev_bind_0_$140 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
                            final SubLObject _prev_bind_1_$141 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
                            try {
                                cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
                                cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
                                Mapping.mapcar(assertion_link_binary_fn, kb_utilities.sort_terms(cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.getDynamicValue(thread), (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, Symbols.symbol_function((SubLObject)cb_browser.$sym273$ASSERTION_CONS), (SubLObject)cb_browser.UNPROVIDED));
                            }
                            finally {
                                cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_1_$141, thread);
                                cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0_$140, thread);
                            }
                            if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
                                html_utilities.html_princ((SubLObject)cb_browser.$str177$__);
                            }
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$139, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$137, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$136, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
            }
            if (cb_browser.NIL != cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.getDynamicValue(thread)) {
                final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
                final SubLObject _prev_bind_0_$141 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
                final SubLObject _prev_bind_1_$142 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
                try {
                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
                    Mapping.mapcar(assertion_link_fn, kb_utilities.sort_terms(cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.getDynamicValue(thread), (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, Symbols.symbol_function((SubLObject)cb_browser.$sym273$ASSERTION_CONS), (SubLObject)cb_browser.UNPROVIDED));
                }
                finally {
                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_1_$142, thread);
                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0_$141, thread);
                }
            }
            if (cb_browser.NIL != cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$.getDynamicValue(thread)) {
                cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.setDynamicValue((SubLObject)cb_browser.NIL, thread);
                cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.setDynamicValue((SubLObject)cb_browser.NIL, thread);
                SubLObject cdolist_list_var = cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$.getDynamicValue(thread);
                SubLObject assertion = (SubLObject)cb_browser.NIL;
                assertion = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    Functions.funcall(noting_fn, assertion, (SubLObject)cb_browser.T);
                    cdolist_list_var = cdolist_list_var.rest();
                    assertion = cdolist_list_var.first();
                }
                if (cb_browser.NIL != cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.getDynamicValue(thread)) {
                    html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                    html_utilities.html_simple_attribute(html_macros.$html_table_noflow$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$142 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$143 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$144 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                cb_c_binary_pred_header(predicate, (SubLObject)cb_browser.T);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$144, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$145 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                final SubLObject assertion_link_binary_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym271$CB_EL_ASSERTION_LINK_BINARY_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym272$CB_ASSERTION_LINK_BINARY);
                                final SubLObject _prev_bind_0_$146 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
                                final SubLObject _prev_bind_1_$143 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
                                try {
                                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
                                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
                                    SubLObject cdolist_list_var2 = kb_utilities.sort_terms(cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.getDynamicValue(thread), (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, Symbols.symbol_function((SubLObject)cb_browser.$sym273$ASSERTION_CONS), (SubLObject)cb_browser.UNPROVIDED);
                                    SubLObject assertion2 = (SubLObject)cb_browser.NIL;
                                    assertion2 = cdolist_list_var2.first();
                                    while (cb_browser.NIL != cdolist_list_var2) {
                                        Functions.funcall(assertion_link_binary_fn, assertion2, (SubLObject)cb_browser.T);
                                        cdolist_list_var2 = cdolist_list_var2.rest();
                                        assertion2 = cdolist_list_var2.first();
                                    }
                                }
                                finally {
                                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_1_$143, thread);
                                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0_$146, thread);
                                }
                                if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
                                    html_utilities.html_princ((SubLObject)cb_browser.$str177$__);
                                }
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$145, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$143, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$142, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                }
                if (cb_browser.NIL != cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.getDynamicValue(thread)) {
                    final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
                    final SubLObject _prev_bind_0_$147 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
                    final SubLObject _prev_bind_1_$144 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
                    try {
                        cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
                        cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
                        Mapping.mapcar(assertion_link_fn, kb_utilities.sort_terms(cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.getDynamicValue(thread), (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, Symbols.symbol_function((SubLObject)cb_browser.$sym273$ASSERTION_CONS), (SubLObject)cb_browser.UNPROVIDED));
                    }
                    finally {
                        cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_1_$144, thread);
                        cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0_$147, thread);
                    }
                }
            }
        }
        finally {
            cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$.rebind(_prev_bind_3, thread);
            cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$.rebind(_prev_bind_2, thread);
            cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 78262L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred_mt_non_binary(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject count = kb_indexing.num_gaf_arg_index(index_hook, arg, predicate, mt);
        if (cb_browser.NIL != number_utilities.potentially_infinite_number_G(count, cb_parameters.$cb_max_assertions_non_collapsed$.getDynamicValue(thread))) {
            final SubLObject id = string_utilities.string_subst((SubLObject)cb_browser.$str47$, (SubLObject)cb_browser.$str278$__, Sequences.cconcatenate(format_nil.format_nil_s_no_copy(index_hook), new SubLObject[] { format_nil.format_nil_s_no_copy(arg), format_nil.format_nil_s_no_copy(predicate), format_nil.format_nil_s_no_copy(mt) }), (SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_switch_visibility_links_arrows(id, (SubLObject)cb_browser.$str47$);
            cb_utilities.cb_form(predicate, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str279$_arg_S___S_, arg, count);
            dhtml_macros.dhtml_set_switched_visibility(id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                cb_c_gaf_arg_rec_arg_pred_mt_non_binary_int(index_hook, arg, predicate, mt);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
        }
        else {
            cb_c_gaf_arg_rec_arg_pred_mt_non_binary_int(index_hook, arg, predicate, mt);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 78962L)
    public static SubLObject cb_c_gaf_arg_rec_arg_pred_mt_non_binary_int(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
                SubLObject asserts = (SubLObject)cb_browser.NIL;
                final SubLObject _prev_bind_0_$152 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                final SubLObject _prev_bind_1_$153 = mt_relevance_macros.$mt$.currentBinding(thread);
                try {
                    mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym280$RELEVANT_MT_IS_GENL_MT, thread);
                    mt_relevance_macros.$mt$.bind(mt, thread);
                    SubLObject indexed_terms = cycl_utilities.expression_gather(index_hook, (SubLObject)cb_browser.$sym281$INDEXED_TERM_P, (SubLObject)cb_browser.NIL, Symbols.symbol_function((SubLObject)cb_browser.EQUAL), (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    if (cb_browser.NIL != kb_indexing_datastructures.indexed_term_p(predicate)) {
                        indexed_terms = (SubLObject)ConsesLow.cons(predicate, indexed_terms);
                    }
                    SubLObject cdolist_list_var = virtual_indexing.gather_overlap_index(indexed_terms, (SubLObject)cb_browser.UNPROVIDED);
                    SubLObject v_assert = (SubLObject)cb_browser.NIL;
                    v_assert = cdolist_list_var.first();
                    while (cb_browser.NIL != cdolist_list_var) {
                        if ((cb_browser.NIL == predicate || predicate.equal(cycl_utilities.formula_operator(assertions_high.assertion_formula(v_assert)))) && cb_browser.NIL != ((cb_browser.NIL != arg) ? Equality.equal(index_hook, cycl_utilities.formula_arg(assertions_high.assertion_formula(v_assert), arg, (SubLObject)cb_browser.UNPROVIDED)) : el_utilities.term_occurs_as_formula_argument(index_hook, assertions_high.assertion_formula(v_assert)))) {
                            asserts = (SubLObject)ConsesLow.cons(v_assert, asserts);
                        }
                        cdolist_list_var = cdolist_list_var.rest();
                        v_assert = cdolist_list_var.first();
                    }
                }
                finally {
                    mt_relevance_macros.$mt$.rebind(_prev_bind_1_$153, thread);
                    mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$152, thread);
                }
                SubLObject cdolist_list_var2 = kb_utilities.sort_terms(asserts, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, Symbols.symbol_function((SubLObject)cb_browser.$sym273$ASSERTION_CONS), (SubLObject)cb_browser.UNPROVIDED);
                SubLObject v_assert2 = (SubLObject)cb_browser.NIL;
                v_assert2 = cdolist_list_var2.first();
                while (cb_browser.NIL != cdolist_list_var2) {
                    Functions.funcall(assertion_link_fn, v_assert2);
                    cdolist_list_var2 = cdolist_list_var2.rest();
                    v_assert2 = cdolist_list_var2.first();
                }
            }
            else {
                SubLObject cdolist_list_var3 = kb_utilities.sort_terms(kb_mapping.gather_gaf_arg_index(index_hook, arg, predicate, mt, (SubLObject)cb_browser.NIL), (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, (SubLObject)cb_browser.T, Symbols.symbol_function((SubLObject)cb_browser.$sym273$ASSERTION_CONS), (SubLObject)cb_browser.UNPROVIDED);
                SubLObject v_assert3 = (SubLObject)cb_browser.NIL;
                v_assert3 = cdolist_list_var3.first();
                while (cb_browser.NIL != cdolist_list_var3) {
                    Functions.funcall(assertion_link_fn, v_assert3);
                    cdolist_list_var3 = cdolist_list_var3.rest();
                    v_assert3 = cdolist_list_var3.first();
                }
            }
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 79589L)
    public static SubLObject cb_c_nart_arg(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list282);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject arg_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list282);
        current = current.rest();
        final SubLObject func_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list282);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject arg = (SubLObject)cb_browser.NIL;
            SubLObject function = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != arg_string) {
                arg = reader.read_from_string_ignoring_errors(arg_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (!arg.isFixnum()) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str255$Could_not_determine_an_arg_from__, arg_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != func_spec) {
                    function = cb_utilities.cb_guess_fort(func_spec, (SubLObject)cb_browser.UNPROVIDED);
                    if (cb_browser.NIL == forts.fort_p(function)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, func_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str283$NART_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$154 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$155 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$156 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$157 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$157, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_nart_arg_internal(index_hook, arg, function);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$156, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$155, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$154, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list282);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 80533L)
    public static SubLObject cb_link_nart_arg(final SubLObject index_hook, final SubLObject count, SubLObject arg, SubLObject function) {
        if (arg == cb_browser.UNPROVIDED) {
            arg = (SubLObject)cb_browser.NIL;
        }
        if (function == cb_browser.UNPROVIDED) {
            function = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str285$cb_c_nart_arg__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != arg) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, arg);
            if (cb_browser.NIL != function) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_fort_identifier(function));
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != function) {
                html_utilities.html_princ(cb_utilities.cb_fort_display_string(function));
            }
            else if (cb_browser.NIL != arg) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str261$Arg__a, arg);
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str286$All_NARTs);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 81063L)
    public static SubLObject cb_c_nart_arg_internal(final SubLObject index_hook, final SubLObject arg, final SubLObject function) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        final SubLObject _prev_bind_2 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$158 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$159 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$160 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$161 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$162 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_1_$163 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        if (cb_browser.NIL == arg) {
                                            cb_c_nart_arg_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == function) {
                                            cb_c_nart_arg_rec_arg(index_hook, arg);
                                        }
                                        else {
                                            cb_c_nart_arg_header(arg);
                                            final SubLObject _prev_bind_0_$163 = cb_parameters.$cb_c_nart_arg_use_binary$.currentBinding(thread);
                                            try {
                                                cb_parameters.$cb_c_nart_arg_use_binary$.bind((SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL != cb_parameters.$cb_c_nart_arg_use_binary$.getDynamicValue(thread) && cb_browser.NIL == auxiliary_indexing.auxiliary_index_p(index_hook) && arg.eql((SubLObject)cb_browser.ONE_INTEGER)), thread);
                                                if (cb_browser.NIL != cb_parameters.$cb_c_nart_arg_use_binary$.getDynamicValue(thread)) {
                                                    final SubLObject _prev_bind_0_$164 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                                                    final SubLObject _prev_bind_1_$164 = mt_relevance_macros.$mt$.currentBinding(thread);
                                                    try {
                                                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
                                                        mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
                                                        cb_parameters.$cb_c_nart_arg_use_binary$.setDynamicValue(arity.binaryP(function), thread);
                                                    }
                                                    finally {
                                                        mt_relevance_macros.$mt$.rebind(_prev_bind_1_$164, thread);
                                                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$164, thread);
                                                    }
                                                }
                                                cb_c_nart_arg_rec_arg_func(index_hook, arg, function);
                                                cb_adornments.handle_specific_adornment((SubLObject)cb_browser.$kw58$NART_ARG_FUNCTION, (SubLObject)cb_browser.$sym264$LITERAL_QUERY_INDEX_DISPLAY, (SubLObject)cb_browser.$kw7$MAIN, index_hook, arg, function, (SubLObject)cb_browser.UNPROVIDED);
                                            }
                                            finally {
                                                cb_parameters.$cb_c_nart_arg_use_binary$.rebind(_prev_bind_0_$163, thread);
                                            }
                                        }
                                    }
                                    finally {
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_1_$163, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$162, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$165 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$165, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$161, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$160, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$159, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$166 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$166, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$158, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_2, thread);
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 81812L)
    public static SubLObject cb_c_nart_arg_rec(final SubLObject index_hook) {
        SubLObject some_arg_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var;
        final SubLObject args = cdolist_list_var = cb_relevant_key_nart_arg_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject arg = (SubLObject)cb_browser.NIL;
        arg = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_browser.NIL != some_arg_done) {
                html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            cb_c_nart_arg_rec_arg(index_hook, arg);
            some_arg_done = (SubLObject)cb_browser.T;
            cdolist_list_var = cdolist_list_var.rest();
            arg = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 82090L)
    public static SubLObject cb_c_nart_arg_rec_arg(final SubLObject index_hook, final SubLObject arg) {
        cb_c_nart_arg_header(arg);
        SubLObject cdolist_list_var;
        final SubLObject functions = cdolist_list_var = cb_relevant_key_nart_arg_index(index_hook, arg, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject function = (SubLObject)cb_browser.NIL;
        function = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_nart_arg_rec_arg_func(index_hook, arg, function);
            cdolist_list_var = cdolist_list_var.rest();
            function = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 82353L)
    public static SubLObject cb_c_nart_arg_rec_arg_func(final SubLObject index_hook, final SubLObject arg, final SubLObject function) {
        if (cb_browser.NIL != cb_c_nart_arg_use_binaryP()) {
            cb_c_nart_arg_rec_arg_func_binary(index_hook, arg, function);
        }
        else {
            cb_c_nart_arg_rec_arg_func_non_binary(index_hook, arg, function);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 82610L)
    public static SubLObject cb_c_nart_arg_use_binaryP() {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return (SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL != cb_parameters.$cb_c_nart_arg_use_binary$.getDynamicValue(thread) && cb_browser.$kw9$CYCL == control_vars.$cb_major_presentation_language$.getDynamicValue(thread));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 82827L)
    public static SubLObject cb_c_nart_arg_rec_arg_func_binary_note(final SubLObject assertion) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == cb_utilities.$assertion_filter_hook$.getDynamicValue(thread) || cb_browser.NIL != Functions.funcall(cb_utilities.$assertion_filter_hook$.getDynamicValue(thread), assertion)) {
            cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.setDynamicValue((SubLObject)ConsesLow.cons(assertion, cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.getDynamicValue(thread)), thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 83419L)
    public static SubLObject cb_c_nart_arg_rec_arg_func_binary_note_el(final SubLObject assertion) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == cb_utilities.$assertion_filter_hook$.getDynamicValue(thread) || cb_browser.NIL != Functions.funcall(cb_utilities.$assertion_filter_hook$.getDynamicValue(thread), assertion)) {
            final SubLObject hl_formula = fi.assertion_hl_formula(assertion, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject arg2 = cycl_utilities.formula_arg2(hl_formula, (SubLObject)cb_browser.UNPROVIDED);
            SubLObject el_formula = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == assertion_handles.assertion_p(arg2) || cb_browser.NIL != list_utilities.tree_find_if(Symbols.symbol_function((SubLObject)cb_browser.$sym268$FAST_FI_NOT_EL_TERM_), narts_high.nart_expand(Sequences.remove(arg2, hl_formula, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED)), (SubLObject)cb_browser.UNPROVIDED)) {
                el_formula = cb_utilities.cb_assertion_el_formula(assertion, hl_formula);
            }
            if (cb_browser.NIL == el_formula || fi.assertion_expand(narts_high.nart_expand(el_formula)).equal(fi.assertion_expand(narts_high.nart_expand(hl_formula)))) {
                cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.setDynamicValue((SubLObject)ConsesLow.cons(assertion, cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.getDynamicValue(thread)), thread);
            }
            else {
                cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$.setDynamicValue((SubLObject)ConsesLow.cons(assertion, cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$.getDynamicValue(thread)), thread);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 84897L)
    public static SubLObject cb_c_nart_arg_rec_arg_func_binary(final SubLObject index_hook, final SubLObject arg, final SubLObject function) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$.currentBinding(thread);
        try {
            cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.bind((SubLObject)cb_browser.NIL, thread);
            cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$.bind((SubLObject)cb_browser.NIL, thread);
            final SubLObject noting_fn = (cb_browser.NIL != cb_c_show_el_formulas_for_index_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym288$CB_C_NART_ARG_REC_ARG_FUNC_BINARY_NOTE_EL) : Symbols.symbol_function((SubLObject)cb_browser.$sym289$CB_C_NART_ARG_REC_ARG_FUNC_BINARY_NOTE);
            kb_mapping.map_nart_arg_index(noting_fn, index_hook, arg, function);
            if (cb_browser.NIL != cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.getDynamicValue(thread)) {
                html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                html_utilities.html_simple_attribute(html_macros.$html_table_noflow$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$169 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$170 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw38$TOP));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$171 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            Mapping.mapcar(Symbols.symbol_function((SubLObject)cb_browser.$sym290$CB_TERM_OF_UNIT_LINK), Sequences.nreverse(cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.getDynamicValue(thread)));
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$171, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$170, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$169, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
            }
            if (cb_browser.NIL != cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$.getDynamicValue(thread)) {
                final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
                final SubLObject _prev_bind_0_$172 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
                final SubLObject _prev_bind_1_$173 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
                try {
                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
                    Mapping.mapcar(assertion_link_fn, Sequences.nreverse(cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$.getDynamicValue(thread)));
                }
                finally {
                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_1_$173, thread);
                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0_$172, thread);
                }
            }
        }
        finally {
            cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$.rebind(_prev_bind_2, thread);
            cb_browser.$cb_c_nart_arg_rec_arg_func_binary$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 85825L)
    public static SubLObject cb_c_nart_arg_rec_arg_func_non_binary(final SubLObject index_hook, final SubLObject arg, final SubLObject function) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_nart_arg_index(assertion_link_fn, index_hook, arg, function);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 86047L)
    public static SubLObject cb_c_type(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != forts.fort_p(index_hook)) {
            SubLObject type = (SubLObject)cb_browser.NIL;
            final SubLObject _prev_bind_0 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
            final SubLObject _prev_bind_2 = mt_relevance_macros.$mt$.currentBinding(thread);
            try {
                mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
                mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
                type = fort_types_interface.definitional_fort_type(index_hook, (SubLObject)cb_browser.NIL);
            }
            finally {
                mt_relevance_macros.$mt$.rebind(_prev_bind_2, thread);
                mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0, thread);
            }
            if (cb_browser.NIL != type) {
                html_utilities.html_princ(cb_c_definitional_fort_type_name(type));
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str291$Individual);
            }
        }
        else if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(index_hook)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str292$Index);
        }
        else if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str293$NAUT);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 86511L)
    public static SubLObject cb_c_definitional_fort_type_name(final SubLObject type) {
        if (type.eql(cb_browser.$const294$Function_Denotational)) {
            return (SubLObject)cb_browser.$str295$Function;
        }
        return kb_paths.fort_name(type);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 86680L)
    public static SubLObject cb_c_term_header_possible_implementation_constant_note(final SubLObject fort) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != isa.quoted_isa_in_any_mtP(fort, cb_browser.$const298$ImplementationConstant)) {
            html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
            if (cb_browser.NIL != html_macros.$html_color_sat_red$.getGlobalValue()) {
                html_utilities.html_markup(html_macros.$html_font_color$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_utilities.html_color(html_macros.$html_color_sat_red$.getGlobalValue()));
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                cb_utilities.cb_show_term(fort, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str299$_is_not_used_to_represent_common_);
                html_utilities.html_glyph((SubLObject)cb_browser.$kw40$NBSP, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str300$_1);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$174 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    final SubLObject href = cyc_file_dependencies.cb_help_file_path((SubLObject)cb_browser.$kw296$IMPLEMENTATION_CONSTANTS);
                    final SubLObject frame_name = cb_utilities.cb_frame_name((SubLObject)((cb_browser.NIL != cb_parameters.$cb_separate_doc_frame$.getDynamicValue(thread)) ? cb_browser.$kw301$DOC : cb_browser.$kw7$MAIN));
                    html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(href);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    if (cb_browser.NIL != frame_name) {
                        html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(frame_name);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$175 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_princ((SubLObject)cb_browser.$str302$_Explain_);
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$175, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$174, thread);
                }
                html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 87427L)
    public static SubLObject cb_c_term_header(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != cb_tools.cb_bookmarks_supported_for_current_user()) {
            cb_add_bookmark_term_link(index_hook);
        }
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        SubLObject size_val = (SubLObject)cb_browser.FIVE_INTEGER;
        html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
        if (cb_browser.NIL != size_val) {
            html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(size_val);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            cb_c_type(index_hook);
            html_utilities.html_princ((SubLObject)cb_browser.$str128$___);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        if (cb_browser.NIL != forts.fort_p(index_hook)) {
            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
            if (cb_browser.NIL != nart_handles.nart_p(index_hook)) {
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                cb_utilities.cb_show_term(index_hook, (SubLObject)cb_browser.ZERO_INTEGER, (SubLObject)cb_browser.T);
                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
            }
            else {
                final SubLObject size_val2 = (SubLObject)cb_browser.FIVE_INTEGER;
                html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                if (cb_browser.NIL != size_val2) {
                    html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(size_val2);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                }
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_2 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    cb_utilities.cb_show_term(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_2, thread);
                }
                html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
            }
            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
            cb_c_term_header_possible_implementation_constant_note(index_hook);
        }
        else if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(index_hook)) {
            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
            size_val = (SubLObject)cb_browser.FIVE_INTEGER;
            html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
            if (cb_browser.NIL != size_val) {
                html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(size_val);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                cb_utilities.cb_link((SubLObject)cb_browser.$kw6$AUXILIARY_INDEX, index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        }
        else if (cb_browser.NIL != term.closed_nautP(index_hook, (SubLObject)cb_browser.UNPROVIDED)) {
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_3 = cb_utilities.$cb_inside_quoteP$.currentBinding(thread);
            try {
                cb_utilities.$cb_inside_quoteP$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_small_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                cb_utilities.cb_show_term(index_hook, (SubLObject)cb_browser.ZERO_INTEGER, (SubLObject)cb_browser.T);
                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_small_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
            }
            finally {
                cb_utilities.$cb_inside_quoteP$.rebind(_prev_bind_3, thread);
            }
        }
        else {
            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
            html_utilities.html_princ(index_hook);
            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        }
        if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str177$__);
        }
        if (cb_browser.NIL != cure_api.$cb_show_cure_link$.getGlobalValue()) {
            html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
            cure_api.cb_possibly_add_cure_link(index_hook, Sequences.cconcatenate((SubLObject)cb_browser.$str303$Open_the_CURE_on_, new SubLObject[] { format_nil.format_nil_a_no_copy(cycl_utilities.denotational_term_name(index_hook)), cb_browser.$str304$_to_add_more_facts_ }), (SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL != kb_indexing_datastructures.indexed_term_p(index_hook)) {
            final SubLObject browsing_mt = inferred_indexing.inferred_index_filters_extract_microtheory(cb_inferred_index.$cb_inferred_index_filters$.getDynamicValue(thread));
            final SubLObject mt_var = mt_relevance_macros.with_inference_mt_relevance_validate(browsing_mt);
            final SubLObject _prev_bind_2 = mt_relevance_macros.$mt$.currentBinding(thread);
            final SubLObject _prev_bind_4 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
            final SubLObject _prev_bind_5 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
            try {
                mt_relevance_macros.$mt$.bind(mt_relevance_macros.update_inference_mt_relevance_mt(mt_var), thread);
                mt_relevance_macros.$relevant_mt_function$.bind(mt_relevance_macros.update_inference_mt_relevance_function(mt_var), thread);
                mt_relevance_macros.$relevant_mts$.bind(mt_relevance_macros.update_inference_mt_relevance_mt_list(mt_var), thread);
                cb_inferred_index.cb_possibly_show_term_as_seen_from_mt_header(browsing_mt, (SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_5, thread);
                mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_4, thread);
                mt_relevance_macros.$mt$.rebind(_prev_bind_2, thread);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 89323L)
    public static SubLObject cb_add_bookmark_term_link(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject bookmarkedP = cb_web_services.currently_bookmarkedP(v_term, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject bookmarked_title = (cb_browser.NIL != bookmarkedP) ? cb_browser.$bookmarked_term_caption$.getDynamicValue(thread) : cb_browser.$unbookmarked_term_caption$.getDynamicValue(thread);
        final SubLObject bookmarked_class = (SubLObject)((cb_browser.NIL != bookmarkedP) ? cb_browser.$str307$bookmarked : cb_browser.$str47$);
        final SubLObject term_id = cb_utilities.cb_term_identifier(v_term);
        final SubLObject v_class = Sequences.cconcatenate((SubLObject)cb_browser.$str22$term, new SubLObject[] { format_nil.format_nil_a_no_copy(term_id), cb_browser.$str308$_bookmarkButton_, format_nil.format_nil_a_no_copy(bookmarked_class) });
        html_utilities.html_markup(html_macros.$html_span_head$.getGlobalValue());
        if (cb_browser.NIL != v_class) {
            html_utilities.html_markup(html_macros.$html_attribute_class$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(v_class);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL != bookmarked_title) {
            html_utilities.html_markup(html_macros.$html_attribute_title$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(bookmarked_title);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_markup(html_macros.$html_span_style$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.$str309$width_21px);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            SubLObject image_src = Sequences.cconcatenate(system_parameters.$html_image_directory$.getDynamicValue(thread), cyc_file_dependencies.html_icon_src((SubLObject)cb_browser.$kw310$HTML_INTERESTING_IMG));
            SubLObject align = (SubLObject)cb_browser.$kw38$TOP;
            SubLObject alt = cyc_file_dependencies.get_html_icon_alt_string((SubLObject)cb_browser.$kw310$HTML_INTERESTING_IMG);
            SubLObject border = (SubLObject)cb_browser.ZERO_INTEGER;
            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(image_src);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str311$bookmarkOn);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != alt) {
                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(alt);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != align) {
                html_utilities.html_markup(html_macros.$html_image_align$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_utilities.html_align(align));
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != border) {
                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(border);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$176 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$176, thread);
            }
            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
            image_src = Sequences.cconcatenate(system_parameters.$html_image_directory$.getDynamicValue(thread), cyc_file_dependencies.html_icon_src((SubLObject)cb_browser.$kw312$HTML_NOT_INTERESTING_IMG));
            align = (SubLObject)cb_browser.$kw38$TOP;
            alt = cyc_file_dependencies.get_html_icon_alt_string((SubLObject)cb_browser.$kw312$HTML_NOT_INTERESTING_IMG);
            border = (SubLObject)cb_browser.ZERO_INTEGER;
            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(image_src);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str313$bookmarkOff);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != alt) {
                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(alt);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != align) {
                html_utilities.html_markup(html_macros.$html_image_align$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_utilities.html_align(align));
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != border) {
                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(border);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$177 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$177, thread);
            }
            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
            image_src = Sequences.cconcatenate(system_parameters.$html_image_directory$.getDynamicValue(thread), cyc_file_dependencies.html_icon_src((SubLObject)cb_browser.$kw314$HTML_INTERESTING_WORKING_IMG));
            align = (SubLObject)cb_browser.$kw38$TOP;
            alt = cyc_file_dependencies.get_html_icon_alt_string((SubLObject)cb_browser.$kw314$HTML_INTERESTING_WORKING_IMG);
            border = (SubLObject)cb_browser.ZERO_INTEGER;
            html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(image_src);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str315$bookmarkWorking);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != alt) {
                html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(alt);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != align) {
                html_utilities.html_markup(html_macros.$html_image_align$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_utilities.html_align(align));
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != border) {
                html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(border);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$178 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$178, thread);
            }
            html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_span_tail$.getGlobalValue());
        html_utilities.html_indent((SubLObject)cb_browser.ONE_INTEGER);
        return v_term;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 90581L)
    public static SubLObject cb_c_gaf_arg_header(final SubLObject arg) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != cb_browser.$cb_c_gaf_arg_show_arg_headerP$.getDynamicValue(thread)) {
            if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
                html_utilities.html_princ((SubLObject)cb_browser.$str160$___);
            }
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str323$GAF_Arg____A, arg);
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 90783L)
    public static SubLObject cb_c_nart_arg_header(final SubLObject arg) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
        if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str160$___);
        }
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str324$NART_Arg____A, arg);
        html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 91099L)
    public static SubLObject cb_c_mt_header(final SubLObject mt, SubLObject last_mt, SubLObject strongP, SubLObject newline_at_endP) {
        if (last_mt == cb_browser.UNPROVIDED) {
            last_mt = (SubLObject)cb_browser.NIL;
        }
        if (strongP == cb_browser.UNPROVIDED) {
            strongP = (SubLObject)cb_browser.NIL;
        }
        if (newline_at_endP == cb_browser.UNPROVIDED) {
            newline_at_endP = (SubLObject)cb_browser.T;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != cb_browser.$cb_c_gaf_arg_show_mt_headerP$.getDynamicValue(thread)) {
            html_utilities.html_markup(html_macros.$html_span_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_attribute_class$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str325$mt_header);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                if (cb_browser.NIL == hlmt.hlmt_equal(mt, last_mt)) {
                    html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                    if (cb_browser.NIL != strongP) {
                        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                        cb_c_mt_header_int(mt, last_mt);
                        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                    }
                    else {
                        cb_c_mt_header_int(mt, last_mt);
                    }
                    if (cb_browser.NIL != newline_at_endP) {
                        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                    }
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_span_tail$.getGlobalValue());
            return (SubLObject)cb_browser.NIL;
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 91794L)
    public static SubLObject cb_c_mt_header_int(final SubLObject mt, final SubLObject last_mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != cb_parameters.$cb_ke_text_mode$.getDynamicValue(thread)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str175$In_Mt___);
            cb_utilities.cb_form(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_princ((SubLObject)cb_browser.$str177$__);
        }
        else if (cb_browser.NIL == hlmt.hlmts_supportedP()) {
            html_utilities.html_princ((SubLObject)cb_browser.$str176$Mt___);
            cb_utilities.cb_show_term(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            final SubLObject monad_mt = hlmt.hlmt_monad_mt(mt);
            SubLObject time_interval = (SubLObject)cb_browser.NIL;
            SubLObject time_parameter = (SubLObject)cb_browser.NIL;
            thread.resetMultipleValues();
            final SubLObject time_interval_$179 = hlmt.explode_hlmt_temporal_facets_with_defaults(mt);
            final SubLObject time_parameter_$180 = thread.secondMultipleValue();
            thread.resetMultipleValues();
            time_interval = time_interval_$179;
            time_parameter = time_parameter_$180;
            if (cb_browser.NIL != hlmt.default_mt_time_interval_p(time_interval) && cb_browser.NIL != hlmt.default_mt_time_parameter_p(time_parameter)) {
                cb_show_monadic_mt_header(monad_mt);
            }
            else {
                cb_show_naut_mt_header(monad_mt, time_interval, time_parameter);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 92463L)
    public static SubLObject cb_show_monadic_mt_header(final SubLObject monad_mt) {
        html_utilities.html_princ((SubLObject)cb_browser.$str176$Mt___);
        cb_utilities.cb_show_term(monad_mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 92579L)
    public static SubLObject cb_show_naut_mt_header(final SubLObject monad_mt, final SubLObject time_interval, final SubLObject time_parameter) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != hlmt.time_point_mt_time_parameter_p(time_parameter)) {
            if (cb_browser.NIL != formula_pattern_match.pattern_matches_formula_without_bindings((SubLObject)cb_browser.$list326, time_interval)) {
                final SubLObject end = cycl_utilities.formula_arg1(cycl_utilities.formula_arg1(time_interval, (SubLObject)cb_browser.UNPROVIDED), (SubLObject)cb_browser.UNPROVIDED);
                cb_show_monadic_mt_header(monad_mt);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str327$throughout_some_time_before);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                cb_show_time_interval_in_mt_header(end);
            }
            else if (cb_browser.NIL != formula_pattern_match.pattern_matches_formula_without_bindings((SubLObject)cb_browser.$list328, time_interval)) {
                final SubLObject start = cycl_utilities.formula_arg1(time_interval, (SubLObject)cb_browser.UNPROVIDED);
                cb_show_monadic_mt_header(monad_mt);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str329$since);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                cb_show_time_interval_in_mt_header(start);
            }
            else if (cb_browser.NIL != formula_pattern_match.pattern_matches_formula_without_bindings((SubLObject)cb_browser.$list330, time_interval)) {
                thread.resetMultipleValues();
                final SubLObject success = pattern_match.tree_matches_pattern(time_interval, (SubLObject)cb_browser.$list331);
                final SubLObject v_bindings = thread.secondMultipleValue();
                thread.resetMultipleValues();
                if (cb_browser.NIL != success) {
                    final SubLObject end2 = list_utilities.alist_lookup_without_values(v_bindings, (SubLObject)cb_browser.$sym332$END, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject start2 = list_utilities.alist_lookup_without_values(v_bindings, (SubLObject)cb_browser.$sym333$START, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    cb_show_monadic_mt_header(monad_mt);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_princ((SubLObject)cb_browser.$str334$throughout);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    cb_show_time_interval_in_mt_header(start2);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_princ((SubLObject)cb_browser.$str335$until);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    cb_show_time_interval_in_mt_header(end2);
                }
            }
            else {
                cb_show_monadic_mt_header(monad_mt);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str334$throughout);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                cb_show_time_interval_in_mt_header(time_interval);
            }
        }
        else {
            if (cb_browser.NIL == hlmt.default_mt_time_parameter_p(time_parameter)) {
                html_utilities.html_princ((SubLObject)cb_browser.$str340$Monadic_);
                cb_show_monadic_mt_header(monad_mt);
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str341$Time_Interval___);
                cb_utilities.cb_show_term(time_interval, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str342$Time_Parameter___);
                cb_utilities.cb_show_term(time_parameter, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                return (SubLObject)cb_browser.NIL;
            }
            if (cb_browser.NIL != formula_pattern_match.pattern_matches_formula_without_bindings((SubLObject)cb_browser.$list326, time_interval)) {
                final SubLObject end = cycl_utilities.formula_arg1(cycl_utilities.formula_arg1(time_interval, (SubLObject)cb_browser.UNPROVIDED), (SubLObject)cb_browser.UNPROVIDED);
                cb_show_monadic_mt_header(monad_mt);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str336$during_some_time_before);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                cb_show_time_interval_in_mt_header(end);
            }
            else if (cb_browser.NIL != formula_pattern_match.pattern_matches_formula_without_bindings((SubLObject)cb_browser.$list328, time_interval)) {
                final SubLObject start = cycl_utilities.formula_arg1(time_interval, (SubLObject)cb_browser.UNPROVIDED);
                cb_show_monadic_mt_header(monad_mt);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str337$from);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                cb_show_time_interval_in_mt_header(start);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str338$until_now);
            }
            else if (cb_browser.NIL != formula_pattern_match.pattern_matches_formula_without_bindings((SubLObject)cb_browser.$list330, time_interval)) {
                thread.resetMultipleValues();
                final SubLObject success = pattern_match.tree_matches_pattern(time_interval, (SubLObject)cb_browser.$list331);
                final SubLObject v_bindings = thread.secondMultipleValue();
                thread.resetMultipleValues();
                if (cb_browser.NIL != success) {
                    final SubLObject end2 = list_utilities.alist_lookup_without_values(v_bindings, (SubLObject)cb_browser.$sym332$END, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject start2 = list_utilities.alist_lookup_without_values(v_bindings, (SubLObject)cb_browser.$sym333$START, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    cb_show_monadic_mt_header(monad_mt);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_princ((SubLObject)cb_browser.$str337$from);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    cb_show_time_interval_in_mt_header(start2);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_princ((SubLObject)cb_browser.$str335$until);
                    html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                    cb_show_time_interval_in_mt_header(end2);
                }
            }
            else {
                cb_show_monadic_mt_header(monad_mt);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_princ((SubLObject)cb_browser.$str339$in);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
                cb_show_time_interval_in_mt_header(time_interval);
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 96701L)
    public static SubLObject cb_show_time_interval_in_mt_header(final SubLObject time_interval) {
        if (cb_browser.NIL != el_utilities.el_formula_with_operator_p(time_interval, cb_browser.$const343$DateFromStringFn) && cb_browser.NIL != el_utilities.el_unary_formula_p(time_interval)) {
            return html_utilities.html_princ(cycl_utilities.formula_arg1(time_interval, (SubLObject)cb_browser.UNPROVIDED));
        }
        if (cb_browser.NIL != date_utilities.el_date_year_p(time_interval)) {
            return html_utilities.html_princ(cycl_utilities.formula_arg1(time_interval, (SubLObject)cb_browser.UNPROVIDED));
        }
        if (cb_browser.NIL != date_utilities.simple_el_date_p(time_interval)) {
            final SubLObject optimized_time_interval = cb_utilities.cb_possibly_optimize_date_for_display(time_interval);
            if (!optimized_time_interval.equal(time_interval)) {
                return cb_show_time_interval_in_mt_header(optimized_time_interval);
            }
        }
        return cb_utilities.cb_show_term(time_interval, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 97340L)
    public static SubLObject cb_c_pred_header(final SubLObject pred) {
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str344$Predicate___);
        cb_utilities.cb_show_term(pred, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 97503L)
    public static SubLObject cb_c_binary_pred_header(final SubLObject predicate, SubLObject negatedP) {
        if (negatedP == cb_browser.UNPROVIDED) {
            negatedP = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        if (cb_browser.NIL != negatedP) {
            final SubLObject negation_phrase = (SubLObject)((cb_browser.$kw266$SILK == control_vars.$cb_major_presentation_language$.getDynamicValue(thread)) ? cb_browser.$str345$neg : cb_browser.$str346$not);
            final SubLObject color_val = (SubLObject)cb_browser.$kw118$RED;
            html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
            if (cb_browser.NIL != color_val) {
                html_utilities.html_markup(html_macros.$html_font_color$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_utilities.html_color(color_val));
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_princ(negation_phrase);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
        }
        cb_utilities.cb_show_term(predicate, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_princ((SubLObject)cb_browser.$str128$___);
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 97861L)
    public static SubLObject cb_c_gaf_arg_and_extent(final SubLObject args) {
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list254);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject arg_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list254);
        current = current.rest();
        final SubLObject pred_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list254);
        current = current.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list254);
        current = current.rest();
        if (cb_browser.NIL != current) {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list254);
            return (SubLObject)cb_browser.NIL;
        }
        final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
        SubLObject arg = (SubLObject)cb_browser.NIL;
        SubLObject predicate = (SubLObject)cb_browser.NIL;
        SubLObject mt = (SubLObject)cb_browser.NIL;
        if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
            return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL != arg_string) {
            arg = reader.read_from_string_ignoring_errors(arg_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            if (!arg.isFixnum()) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str255$Could_not_determine_an_arg_from__, arg_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != pred_spec) {
                predicate = cb_utilities.cb_guess_fort(pred_spec, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == forts.fort_p(predicate)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, pred_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != mt_spec) {
                    mt = cb_utilities.cb_guess_hlmt(mt_spec);
                    if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str256$Could_not_determine_a_microtheory, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                }
            }
        }
        return cb_c_gaf_arg_and_extent_guts(index_hook, arg, predicate, mt);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 98856L)
    public static SubLObject cb_c_gaf_arg_and_extent_guts(final SubLObject index_hook, final SubLObject arg, final SubLObject predicate, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != forts.fort_p(index_hook) && cb_browser.NIL == mt && cb_browser.$kw183$INFERRED == cb_frames.$cb_default_index_view$.getDynamicValue(thread)) {
            return cb_inferred_index.cb_inferred_gaf_arg_assertions_guts(index_hook, index_hook, arg, predicate);
        }
        final SubLObject title_var;
        final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str347$Predicate_extent_index_for__S, index_hook);
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$181 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                if (cb_browser.NIL != title_var) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title_var);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                dhtml_macros.html_basic_cb_scripts();
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$182 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$183 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$184 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$184, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        cb_possibly_show_followup_widget(index_hook);
                        cb_c_term_header(index_hook);
                        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                        cb_c_gaf_arg_internal(index_hook, arg, predicate, mt);
                        html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL != fort_types_interface.predicate_in_any_mtP(index_hook)) {
                            cb_c_predicate_extent_internal(index_hook, mt);
                        }
                        else if (cb_browser.NIL != fort_types_interface.function_in_any_mtP(index_hook)) {
                            cb_c_function_extent_internal(index_hook);
                        }
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$183, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$182, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$181, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 99678L)
    public static SubLObject cb_c_predicate_extent(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list348);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list348);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject mt = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != mt_spec) {
                mt = cb_utilities.cb_guess_hlmt(mt_spec);
                if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str347$Predicate_extent_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$185 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$186 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$187 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$188 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$188, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_predicate_extent_internal(index_hook, mt);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$187, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$186, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$185, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list348);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 100446L)
    public static SubLObject cb_link_predicate_extent(final SubLObject index_hook, final SubLObject count, SubLObject mt) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str350$cb_c_predicate_extent__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != mt) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else {
                html_utilities.html_princ((SubLObject)cb_browser.$str351$Predicate_Extent);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 100892L)
    public static SubLObject cb_c_predicate_extent_internal(final SubLObject index_hook, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
            cb_c_type(index_hook);
            html_utilities.html_princ((SubLObject)cb_browser.$str353$_Extent__);
            html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$189 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
            try {
                pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
                thread.resetMultipleValues();
                final SubLObject _prev_bind_0_$190 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
                try {
                    pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                    final SubLObject reuseP = thread.secondMultipleValue();
                    thread.resetMultipleValues();
                    try {
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$191 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                            final SubLObject new_or_reused = thread.secondMultipleValue();
                            thread.resetMultipleValues();
                            final SubLObject _prev_bind_0_$192 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                            try {
                                pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                                final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                                final SubLObject _prev_bind_0_$193 = memoization_state.$memoization_state$.currentBinding(thread);
                                try {
                                    memoization_state.$memoization_state$.bind(local_state, thread);
                                    final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                    try {
                                        final SubLObject _prev_bind_0_$194 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                        final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                        try {
                                            pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                            pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                            if (cb_browser.NIL != mt) {
                                                cb_c_predicate_extent_rec_mt(index_hook, mt);
                                            }
                                            else {
                                                cb_c_predicate_extent_rec(index_hook);
                                            }
                                        }
                                        finally {
                                            pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                            pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$194, thread);
                                        }
                                    }
                                    finally {
                                        final SubLObject _prev_bind_0_$195 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                        try {
                                            Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                            final SubLObject _values = Values.getValuesAsVector();
                                            memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                            Values.restoreValuesFromVector(_values);
                                        }
                                        finally {
                                            Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$195, thread);
                                        }
                                    }
                                }
                                finally {
                                    memoization_state.$memoization_state$.rebind(_prev_bind_0_$193, thread);
                                }
                            }
                            finally {
                                pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$192, thread);
                            }
                            if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                                memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                            }
                        }
                        finally {
                            pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$191, thread);
                        }
                    }
                    finally {
                        final SubLObject _prev_bind_0_$196 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                        try {
                            Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                            final SubLObject _values2 = Values.getValuesAsVector();
                            if (cb_browser.NIL == reuseP) {
                                pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                            }
                            Values.restoreValuesFromVector(_values2);
                        }
                        finally {
                            Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$196, thread);
                        }
                    }
                }
                finally {
                    pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$190, thread);
                }
            }
            finally {
                pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0_$189, thread);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 101251L)
    public static SubLObject cb_c_predicate_extent_rec(final SubLObject index_hook) {
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_predicate_extent_index(index_hook);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_predicate_extent_rec_mt(index_hook, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 101463L)
    public static SubLObject cb_c_predicate_extent_rec_mt(final SubLObject index_hook, final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_predicate_extent_index(assertion_link_fn, index_hook, (SubLObject)cb_browser.NIL, mt);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 101690L)
    public static SubLObject cb_c_function_extent(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str354$Function_extent_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$197 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$198 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$199 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$200 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$200, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_function_extent_internal(index_hook);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$199, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$198, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$197, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 102256L)
    public static SubLObject cb_link_function_extent(final SubLObject index_hook, final SubLObject count) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str356$cb_c_function_extent__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str357$Function_Extent);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 102544L)
    public static SubLObject cb_c_function_extent_internal(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
            cb_c_type(index_hook);
            html_utilities.html_princ((SubLObject)cb_browser.$str353$_Extent__);
            html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
            final SubLObject _prev_bind_0_$201 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
            try {
                pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
                thread.resetMultipleValues();
                final SubLObject _prev_bind_0_$202 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
                try {
                    pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                    final SubLObject reuseP = thread.secondMultipleValue();
                    thread.resetMultipleValues();
                    try {
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$203 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                            final SubLObject new_or_reused = thread.secondMultipleValue();
                            thread.resetMultipleValues();
                            final SubLObject _prev_bind_0_$204 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                            try {
                                pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                                final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                                final SubLObject _prev_bind_0_$205 = memoization_state.$memoization_state$.currentBinding(thread);
                                try {
                                    memoization_state.$memoization_state$.bind(local_state, thread);
                                    final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                    try {
                                        final SubLObject _prev_bind_0_$206 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                        final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                        try {
                                            pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                            pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                            cb_c_function_extent_rec(index_hook);
                                        }
                                        finally {
                                            pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                            pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$206, thread);
                                        }
                                    }
                                    finally {
                                        final SubLObject _prev_bind_0_$207 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                        try {
                                            Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                            final SubLObject _values = Values.getValuesAsVector();
                                            memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                            Values.restoreValuesFromVector(_values);
                                        }
                                        finally {
                                            Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$207, thread);
                                        }
                                    }
                                }
                                finally {
                                    memoization_state.$memoization_state$.rebind(_prev_bind_0_$205, thread);
                                }
                            }
                            finally {
                                pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$204, thread);
                            }
                            if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                                memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                            }
                        }
                        finally {
                            pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$203, thread);
                        }
                    }
                    finally {
                        final SubLObject _prev_bind_0_$208 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                        try {
                            Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                            final SubLObject _values2 = Values.getValuesAsVector();
                            if (cb_browser.NIL == reuseP) {
                                pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                            }
                            Values.restoreValuesFromVector(_values2);
                        }
                        finally {
                            Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$208, thread);
                        }
                    }
                }
                finally {
                    pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$202, thread);
                }
            }
            finally {
                pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0_$201, thread);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 102838L)
    public static SubLObject cb_c_function_extent_rec(final SubLObject index_hook) {
        kb_mapping.map_function_extent_index(Symbols.symbol_function((SubLObject)cb_browser.$sym290$CB_TERM_OF_UNIT_LINK), index_hook);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 102970L)
    public static SubLObject cb_c_predicate_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list359);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject sense_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject sense = (SubLObject)cb_browser.NIL;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != sense_string) {
                sense = reader.read_from_string_ignoring_errors(sense_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == enumeration_types.sense_p(sense)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str360$Could_not_determine_a_literal_sen, sense_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != mt_spec) {
                    mt = cb_utilities.cb_guess_hlmt(mt_spec);
                    if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    if (cb_browser.NIL != direction_string) {
                        direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                            return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        }
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str362$Predicate_rule_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$209 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$210 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$211 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$212 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$212, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_predicate_rule_internal(index_hook, sense, mt, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$211, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$210, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$209, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list359);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 104203L)
    public static SubLObject cb_link_predicate_rule(final SubLObject index_hook, final SubLObject count, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str364$cb_c_predicate_rule__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != sense) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, sense);
            if (cb_browser.NIL != mt) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
                if (cb_browser.NIL != direction) {
                    PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
                }
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else if (cb_browser.NIL != sense) {
                final SubLObject pcase_var = sense;
                if (pcase_var.eql((SubLObject)cb_browser.$kw66$NEG)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str366$Antecedent);
                }
                else if (pcase_var.eql((SubLObject)cb_browser.$kw67$POS)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str367$Consequent);
                }
                else {
                    html_utilities.html_princ(sense);
                }
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str368$All_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 104949L)
    public static SubLObject cb_c_predicate_rule_internal(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$213 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$214 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$215 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$216 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$217 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = pph_vars.$pph_use_bulleted_listsP$.currentBinding(thread);
                                    final SubLObject _prev_bind_4 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        pph_vars.$pph_use_bulleted_listsP$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == sense) {
                                            cb_c_predicate_rule_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == mt) {
                                            cb_c_predicate_rule_rec_sense(index_hook, sense);
                                        }
                                        else {
                                            cb_c_sense_header(sense, (SubLObject)cb_browser.UNPROVIDED);
                                            if (cb_browser.NIL == direction) {
                                                cb_c_predicate_rule_rec_sense_mt(index_hook, sense, mt);
                                            }
                                            else {
                                                cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                                cb_c_predicate_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
                                            }
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_4, thread);
                                        pph_vars.$pph_use_bulleted_listsP$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$217, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$218 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$218, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$216, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$215, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$214, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$219 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$219, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$213, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 105540L)
    public static SubLObject cb_c_predicate_rule_rec(final SubLObject index_hook) {
        SubLObject some_sense_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var = (SubLObject)cb_browser.$list370;
        SubLObject sense = (SubLObject)cb_browser.NIL;
        sense = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_relevant_num_predicate_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                if (cb_browser.NIL != some_sense_done) {
                    html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_predicate_rule_rec_sense(index_hook, sense);
                some_sense_done = (SubLObject)cb_browser.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            sense = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 105860L)
    public static SubLObject cb_c_predicate_rule_rec_sense(final SubLObject index_hook, final SubLObject sense) {
        cb_c_sense_header(sense, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_predicate_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_predicate_rule_rec_sense_mt(index_hook, sense, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 106124L)
    public static SubLObject cb_c_predicate_rule_rec_sense_mt(final SubLObject index_hook, final SubLObject sense, final SubLObject mt) {
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_predicate_rule_index(index_hook, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_predicate_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 106432L)
    public static SubLObject cb_c_predicate_rule_rec_sense_mt_direction(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_predicate_rule_index(assertion_link_fn, index_hook, sense, direction, mt);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 106713L)
    public static SubLObject cb_c_decontextualized_ist_predicate_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list371);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject sense_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list371);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list371);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject sense = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != sense_string) {
                sense = reader.read_from_string_ignoring_errors(sense_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == enumeration_types.sense_p(sense)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str360$Could_not_determine_a_literal_sen, sense_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != direction_string) {
                    direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str372$ist_Predicate_rule_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$220 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$221 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$222 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$223 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$223, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_decontextualized_ist_predicate_rule_internal(index_hook, sense, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$222, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$221, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$220, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list371);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 107844L)
    public static SubLObject cb_link_decontextualized_ist_predicate_rule(final SubLObject index_hook, final SubLObject count, SubLObject sense, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str374$cb_c_decontextualized_ist_predica, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != sense) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, sense);
            if (cb_browser.NIL != direction) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != sense) {
                final SubLObject pcase_var = sense;
                if (pcase_var.eql((SubLObject)cb_browser.$kw66$NEG)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str366$Antecedent);
                }
                else if (pcase_var.eql((SubLObject)cb_browser.$kw67$POS)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str367$Consequent);
                }
                else {
                    html_utilities.html_princ(sense);
                }
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str375$All_Lifting_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 108518L)
    public static SubLObject cb_c_decontextualized_ist_predicate_rule_internal(final SubLObject index_hook, final SubLObject sense, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$224 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$225 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$226 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$227 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$228 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = pph_vars.$pph_use_bulleted_listsP$.currentBinding(thread);
                                    final SubLObject _prev_bind_4 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        pph_vars.$pph_use_bulleted_listsP$.bind((SubLObject)cb_browser.T, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == sense) {
                                            cb_c_decontextualized_ist_predicate_rule_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == direction) {
                                            cb_c_decontextualized_ist_predicate_rule_rec_sense(index_hook, sense);
                                        }
                                        else {
                                            cb_c_decontextualized_ist_predicate_rule_rec_sense_direction(index_hook, sense, direction);
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_4, thread);
                                        pph_vars.$pph_use_bulleted_listsP$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$228, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$229 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$229, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$227, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$226, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$225, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$230 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$230, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$224, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 109058L)
    public static SubLObject cb_c_decontextualized_ist_predicate_rule_rec(final SubLObject index_hook) {
        SubLObject some_sense_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var = (SubLObject)cb_browser.$list370;
        SubLObject sense = (SubLObject)cb_browser.NIL;
        sense = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_relevant_num_decontextualized_ist_predicate_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                if (cb_browser.NIL != some_sense_done) {
                    html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_decontextualized_ist_predicate_rule_rec_sense(index_hook, sense);
                some_sense_done = (SubLObject)cb_browser.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            sense = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 109441L)
    public static SubLObject cb_c_decontextualized_ist_predicate_rule_rec_sense(final SubLObject index_hook, final SubLObject sense) {
        cb_c_sense_header(sense, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_decontextualized_ist_predicate_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_decontextualized_ist_predicate_rule_rec_sense_direction(index_hook, sense, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 109803L)
    public static SubLObject cb_c_decontextualized_ist_predicate_rule_rec_sense_direction(final SubLObject index_hook, final SubLObject sense, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym274$CB_EL_ASSERTION_LINK_WITH_MT_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym276$CB_ASSERTION_LINK_WITH_MT);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
        final SubLObject _prev_bind_4 = mt_relevance_macros.$mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
            mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
            kb_mapping.map_decontextualized_ist_predicate_rule_index(assertion_link_fn, index_hook, sense, direction);
        }
        finally {
            mt_relevance_macros.$mt$.rebind(_prev_bind_4, thread);
            mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_3, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 110140L)
    public static SubLObject cb_c_isa_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list359);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject sense_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject sense = (SubLObject)cb_browser.NIL;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != sense_string) {
                sense = reader.read_from_string_ignoring_errors(sense_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == enumeration_types.sense_p(sense)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str360$Could_not_determine_a_literal_sen, sense_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != mt_spec) {
                    mt = cb_utilities.cb_guess_hlmt(mt_spec);
                    if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    if (cb_browser.NIL != direction_string) {
                        direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                            return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        }
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str377$isa_rule_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$231 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$232 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$233 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$234 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$234, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_isa_rule_internal(index_hook, sense, mt, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$233, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$232, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$231, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list359);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 111349L)
    public static SubLObject cb_link_isa_rule(final SubLObject index_hook, final SubLObject count, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str379$cb_c_isa_rule__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != sense) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, sense);
            if (cb_browser.NIL != mt) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
                if (cb_browser.NIL != direction) {
                    PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
                }
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else if (cb_browser.NIL != sense) {
                final SubLObject pcase_var = sense;
                if (pcase_var.eql((SubLObject)cb_browser.$kw66$NEG)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str366$Antecedent);
                }
                else if (pcase_var.eql((SubLObject)cb_browser.$kw67$POS)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str367$Consequent);
                }
                else {
                    html_utilities.html_princ(sense);
                }
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str380$All_isa_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 112080L)
    public static SubLObject cb_c_isa_rule_internal(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$235 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$236 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$237 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$238 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$239 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == sense) {
                                            cb_c_isa_rule_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == mt) {
                                            cb_c_isa_rule_rec_sense(index_hook, sense);
                                        }
                                        else {
                                            cb_c_sense_header(sense, (SubLObject)cb_browser.$str382$isa);
                                            if (cb_browser.NIL == direction) {
                                                cb_c_isa_rule_rec_sense_mt(index_hook, sense, mt);
                                            }
                                            else {
                                                cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                                cb_c_isa_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
                                            }
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$239, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$240 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$240, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$238, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$237, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$236, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$241 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$241, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$235, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 112594L)
    public static SubLObject cb_c_isa_rule_rec(final SubLObject index_hook) {
        SubLObject some_sense_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var = (SubLObject)cb_browser.$list370;
        SubLObject sense = (SubLObject)cb_browser.NIL;
        sense = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_relevant_num_isa_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                if (cb_browser.NIL != some_sense_done) {
                    html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_isa_rule_rec_sense(index_hook, sense);
                some_sense_done = (SubLObject)cb_browser.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            sense = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 112896L)
    public static SubLObject cb_c_isa_rule_rec_sense(final SubLObject index_hook, final SubLObject sense) {
        cb_c_sense_header(sense, (SubLObject)cb_browser.$str382$isa);
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_isa_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_isa_rule_rec_sense_mt(index_hook, sense, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 113148L)
    public static SubLObject cb_c_isa_rule_rec_sense_mt(final SubLObject index_hook, final SubLObject sense, final SubLObject mt) {
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_isa_rule_index(index_hook, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_isa_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 113438L)
    public static SubLObject cb_c_isa_rule_rec_sense_mt_direction(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_isa_rule_index(assertion_link_fn, index_hook, sense, direction, mt);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 113707L)
    public static SubLObject cb_c_quoted_isa_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list359);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject sense_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject sense = (SubLObject)cb_browser.NIL;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != sense_string) {
                sense = reader.read_from_string_ignoring_errors(sense_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == enumeration_types.sense_p(sense)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str360$Could_not_determine_a_literal_sen, sense_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != mt_spec) {
                    mt = cb_utilities.cb_guess_hlmt(mt_spec);
                    if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    if (cb_browser.NIL != direction_string) {
                        direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                            return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        }
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str383$quoted_isa_rule_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$242 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$243 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$244 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$245 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$245, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_quoted_isa_rule_internal(index_hook, sense, mt, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$244, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$243, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$242, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list359);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 114944L)
    public static SubLObject cb_link_quoted_isa_rule(final SubLObject index_hook, final SubLObject count, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str385$cb_c_quoted_isa_rule__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != sense) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, sense);
            if (cb_browser.NIL != mt) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
                if (cb_browser.NIL != direction) {
                    PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
                }
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else if (cb_browser.NIL != sense) {
                final SubLObject pcase_var = sense;
                if (pcase_var.eql((SubLObject)cb_browser.$kw66$NEG)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str366$Antecedent);
                }
                else if (pcase_var.eql((SubLObject)cb_browser.$kw67$POS)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str367$Consequent);
                }
                else {
                    html_utilities.html_princ(sense);
                }
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str386$All_quoted_isa_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 115696L)
    public static SubLObject cb_c_quoted_isa_rule_internal(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$246 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$247 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$248 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$249 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$250 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == sense) {
                                            cb_c_quoted_isa_rule_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == mt) {
                                            cb_c_quoted_isa_rule_rec_sense(index_hook, sense);
                                        }
                                        else {
                                            cb_c_sense_header(sense, (SubLObject)cb_browser.$str388$quoted_isa);
                                            if (cb_browser.NIL == direction) {
                                                cb_c_quoted_isa_rule_rec_sense_mt(index_hook, sense, mt);
                                            }
                                            else {
                                                cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                                cb_c_quoted_isa_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
                                            }
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$250, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$251 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$251, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$249, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$248, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$247, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$252 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$252, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$246, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 116252L)
    public static SubLObject cb_c_quoted_isa_rule_rec(final SubLObject index_hook) {
        SubLObject some_sense_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var = (SubLObject)cb_browser.$list370;
        SubLObject sense = (SubLObject)cb_browser.NIL;
        sense = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_relevant_num_quoted_isa_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                if (cb_browser.NIL != some_sense_done) {
                    html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_quoted_isa_rule_rec_sense(index_hook, sense);
                some_sense_done = (SubLObject)cb_browser.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            sense = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 116575L)
    public static SubLObject cb_c_quoted_isa_rule_rec_sense(final SubLObject index_hook, final SubLObject sense) {
        cb_c_sense_header(sense, (SubLObject)cb_browser.$str388$quoted_isa);
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_quoted_isa_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_quoted_isa_rule_rec_sense_mt(index_hook, sense, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 116855L)
    public static SubLObject cb_c_quoted_isa_rule_rec_sense_mt(final SubLObject index_hook, final SubLObject sense, final SubLObject mt) {
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_quoted_isa_rule_index(index_hook, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_quoted_isa_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 117166L)
    public static SubLObject cb_c_quoted_isa_rule_rec_sense_mt_direction(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_quoted_isa_rule_index(assertion_link_fn, index_hook, sense, direction, mt);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 117449L)
    public static SubLObject cb_c_genls_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list359);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject sense_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject sense = (SubLObject)cb_browser.NIL;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != sense_string) {
                sense = reader.read_from_string_ignoring_errors(sense_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == enumeration_types.sense_p(sense)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str360$Could_not_determine_a_literal_sen, sense_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != mt_spec) {
                    mt = cb_utilities.cb_guess_hlmt(mt_spec);
                    if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    if (cb_browser.NIL != direction_string) {
                        direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                            return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        }
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str389$genls_rule_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$253 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$254 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$255 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$256 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$256, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_genls_rule_internal(index_hook, sense, mt, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$255, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$254, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$253, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list359);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 118666L)
    public static SubLObject cb_link_genls_rule(final SubLObject index_hook, final SubLObject count, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str391$cb_c_genls_rule__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != sense) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, sense);
            if (cb_browser.NIL != mt) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
                if (cb_browser.NIL != direction) {
                    PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
                }
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else if (cb_browser.NIL != sense) {
                final SubLObject pcase_var = sense;
                if (pcase_var.eql((SubLObject)cb_browser.$kw66$NEG)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str366$Antecedent);
                }
                else if (pcase_var.eql((SubLObject)cb_browser.$kw67$POS)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str367$Consequent);
                }
                else {
                    html_utilities.html_princ(sense);
                }
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str392$All_genls_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 119403L)
    public static SubLObject cb_c_genls_rule_internal(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$257 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$258 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$259 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$260 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$261 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == sense) {
                                            cb_c_genls_rule_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == mt) {
                                            cb_c_genls_rule_rec_sense(index_hook, sense);
                                        }
                                        else {
                                            cb_c_sense_header(sense, (SubLObject)cb_browser.$str394$genls);
                                            if (cb_browser.NIL == direction) {
                                                cb_c_genls_rule_rec_sense_mt(index_hook, sense, mt);
                                            }
                                            else {
                                                cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                                cb_c_genls_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
                                            }
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$261, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$262 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$262, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$260, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$259, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$258, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$263 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$263, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$257, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 119929L)
    public static SubLObject cb_c_genls_rule_rec(final SubLObject index_hook) {
        SubLObject some_sense_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var = (SubLObject)cb_browser.$list370;
        SubLObject sense = (SubLObject)cb_browser.NIL;
        sense = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_relevant_num_genls_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                if (cb_browser.NIL != some_sense_done) {
                    html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_genls_rule_rec_sense(index_hook, sense);
                some_sense_done = (SubLObject)cb_browser.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            sense = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 120237L)
    public static SubLObject cb_c_genls_rule_rec_sense(final SubLObject index_hook, final SubLObject sense) {
        cb_c_sense_header(sense, (SubLObject)cb_browser.$str394$genls);
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_genls_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_genls_rule_rec_sense_mt(index_hook, sense, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 120497L)
    public static SubLObject cb_c_genls_rule_rec_sense_mt(final SubLObject index_hook, final SubLObject sense, final SubLObject mt) {
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_genls_rule_index(index_hook, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_genls_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 120793L)
    public static SubLObject cb_c_genls_rule_rec_sense_mt_direction(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_genls_rule_index(assertion_link_fn, index_hook, sense, direction, mt);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 121066L)
    public static SubLObject cb_c_genl_mt_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list359);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject sense_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list359);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject sense = (SubLObject)cb_browser.NIL;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != sense_string) {
                sense = reader.read_from_string_ignoring_errors(sense_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == enumeration_types.sense_p(sense)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str360$Could_not_determine_a_literal_sen, sense_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != mt_spec) {
                    mt = cb_utilities.cb_guess_hlmt(mt_spec);
                    if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    if (cb_browser.NIL != direction_string) {
                        direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                            return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        }
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str395$genlMt_rule_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$264 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$265 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$266 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$267 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$267, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_genl_mt_rule_internal(index_hook, sense, mt, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$266, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$265, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$264, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list359);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 122281L)
    public static SubLObject cb_link_genl_mt_rule(final SubLObject index_hook, final SubLObject count, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str397$cb_c_genl_mt_rule__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != sense) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, sense);
            if (cb_browser.NIL != mt) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
                if (cb_browser.NIL != direction) {
                    PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
                }
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else if (cb_browser.NIL != sense) {
                final SubLObject pcase_var = sense;
                if (pcase_var.eql((SubLObject)cb_browser.$kw66$NEG)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str366$Antecedent);
                }
                else if (pcase_var.eql((SubLObject)cb_browser.$kw67$POS)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str367$Consequent);
                }
                else {
                    html_utilities.html_princ(sense);
                }
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str398$All_genlMt_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 123023L)
    public static SubLObject cb_c_genl_mt_rule_internal(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$268 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$269 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$270 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$271 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$272 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == sense) {
                                            cb_c_genl_mt_rule_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == mt) {
                                            cb_c_genl_mt_rule_rec_sense(index_hook, sense);
                                        }
                                        else {
                                            cb_c_sense_header(sense, (SubLObject)cb_browser.$str400$genlMt);
                                            if (cb_browser.NIL == direction) {
                                                cb_c_genl_mt_rule_rec_sense_mt(index_hook, sense, mt);
                                            }
                                            else {
                                                cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                                cb_c_genl_mt_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
                                            }
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$272, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$273 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$273, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$271, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$270, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$269, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$274 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$274, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$268, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 123560L)
    public static SubLObject cb_c_genl_mt_rule_rec(final SubLObject index_hook) {
        SubLObject some_sense_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var = (SubLObject)cb_browser.$list370;
        SubLObject sense = (SubLObject)cb_browser.NIL;
        sense = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_relevant_num_genl_mt_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                if (cb_browser.NIL != some_sense_done) {
                    html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_genl_mt_rule_rec_sense(index_hook, sense);
                some_sense_done = (SubLObject)cb_browser.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            sense = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 123874L)
    public static SubLObject cb_c_genl_mt_rule_rec_sense(final SubLObject index_hook, final SubLObject sense) {
        cb_c_sense_header(sense, (SubLObject)cb_browser.$str400$genlMt);
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_genl_mt_rule_index(index_hook, sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_genl_mt_rule_rec_sense_mt(index_hook, sense, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 124141L)
    public static SubLObject cb_c_genl_mt_rule_rec_sense_mt(final SubLObject index_hook, final SubLObject sense, final SubLObject mt) {
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_genl_mt_rule_index(index_hook, sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_genl_mt_rule_rec_sense_mt_direction(index_hook, sense, mt, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 124443L)
    public static SubLObject cb_c_genl_mt_rule_rec_sense_mt_direction(final SubLObject index_hook, final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_genl_mt_rule_index(assertion_link_fn, index_hook, sense, direction, mt);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 124720L)
    public static SubLObject cb_c_function_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list401);
        index_spec = args.first();
        SubLObject current = args.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list401);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list401);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            SubLObject mt = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != mt_spec) {
                mt = cb_utilities.cb_guess_hlmt(mt_spec);
                if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != direction_string) {
                    direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str402$Function_rule_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$275 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$276 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$277 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$278 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$278, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_function_rule_internal(index_hook, mt, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$277, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$276, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$275, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list401);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 125706L)
    public static SubLObject cb_link_function_rule(final SubLObject index_hook, final SubLObject count, SubLObject mt, SubLObject direction) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str404$cb_c_function_rule__A, cb_utilities.cb_index_identifier(index_hook));
        if (cb_browser.NIL != mt) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
            if (cb_browser.NIL != direction) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str405$Function_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 126256L)
    public static SubLObject cb_c_function_rule_internal(final SubLObject index_hook, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
        cb_c_type(index_hook);
        html_utilities.html_princ((SubLObject)cb_browser.$str407$_Rules__);
        html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$279 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$280 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$281 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$282 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$283 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == mt) {
                                            cb_c_function_rule_rec(index_hook);
                                        }
                                        else if (cb_browser.NIL == direction) {
                                            cb_c_function_rule_rec_mt(index_hook, mt);
                                        }
                                        else {
                                            cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                            cb_c_function_rule_rec_mt_direction(index_hook, mt, direction);
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$283, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$284 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$284, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$282, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$281, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$280, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$285 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$285, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$279, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 126768L)
    public static SubLObject cb_c_function_rule_rec(final SubLObject index_hook) {
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_function_rule_index(index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_function_rule_rec_mt(index_hook, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 126971L)
    public static SubLObject cb_c_function_rule_rec_mt(final SubLObject index_hook, final SubLObject mt) {
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_function_rule_index(index_hook, mt, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_function_rule_rec_mt_direction(index_hook, mt, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 127246L)
    public static SubLObject cb_c_function_rule_rec_mt_direction(final SubLObject index_hook, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            kb_mapping.map_function_rule_index(assertion_link_fn, index_hook, direction, mt);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 127507L)
    public static SubLObject cb_c_unbound_rule(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject sense_string = (SubLObject)(args.isCons() ? args.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(args, args, (SubLObject)cb_browser.$list408);
        SubLObject current = args.rest();
        final SubLObject mt_spec = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list408);
        current = current.rest();
        final SubLObject direction_string = (SubLObject)(current.isCons() ? current.first() : cb_browser.NIL);
        cdestructuring_bind.destructuring_bind_must_listp(current, args, (SubLObject)cb_browser.$list408);
        current = current.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = auxiliary_indexing.unbound_rule_index();
            SubLObject sense = (SubLObject)cb_browser.NIL;
            SubLObject mt = (SubLObject)cb_browser.NIL;
            SubLObject direction = (SubLObject)cb_browser.NIL;
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str409$Could_not_determine_an_index_hook, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            if (cb_browser.NIL != sense_string) {
                sense = reader.read_from_string_ignoring_errors(sense_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL == enumeration_types.sense_p(sense)) {
                    return cb_utilities.cb_error((SubLObject)cb_browser.$str360$Could_not_determine_a_literal_sen, sense_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != mt_spec) {
                    mt = cb_utilities.cb_guess_hlmt(mt_spec);
                    if (cb_browser.NIL == hlmt.hlmt_p(mt)) {
                        return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, mt_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    if (cb_browser.NIL != direction_string) {
                        direction = reader.read_from_string_ignoring_errors(direction_string, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        if (cb_browser.NIL == enumeration_types.direction_p(direction)) {
                            return cb_utilities.cb_error((SubLObject)cb_browser.$str361$Could_not_determine_a_direction_f, direction_string, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        }
                    }
                }
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str410$Unbound_rule_index);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$286 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$287 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$288 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$289 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$289, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_unbound_rule_internal(sense, mt, direction);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$288, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$287, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$286, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list408);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 128656L)
    public static SubLObject cb_link_unbound_rule(final SubLObject count, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str412$cb_c_unbound_rule);
        if (cb_browser.NIL != sense) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, sense);
            if (cb_browser.NIL != mt) {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str260$__a, cb_utilities.cb_hlmt_identifier(mt));
                if (cb_browser.NIL != direction) {
                    PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str365$__s, direction);
                }
            }
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != direction) {
                cb_utilities.cb_show_direction(direction);
            }
            else if (cb_browser.NIL != mt) {
                cb_utilities.cb_show_assertion_hlmt_readably(mt);
            }
            else if (cb_browser.NIL != sense) {
                final SubLObject pcase_var = sense;
                if (pcase_var.eql((SubLObject)cb_browser.$kw66$NEG)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str366$Antecedent);
                }
                else if (pcase_var.eql((SubLObject)cb_browser.$kw67$POS)) {
                    html_utilities.html_princ((SubLObject)cb_browser.$str367$Consequent);
                }
                else {
                    html_utilities.html_princ(sense);
                }
            }
            else {
                PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str368$All_Rules);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return auxiliary_indexing.unbound_rule_index();
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 129366L)
    public static SubLObject cb_c_unbound_rule_internal(final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$290 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$291 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$292 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$293 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$294 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL == sense) {
                                            cb_c_unbound_rule_rec();
                                        }
                                        else if (cb_browser.NIL == mt) {
                                            cb_c_unbound_rule_rec_sense(sense);
                                        }
                                        else {
                                            cb_c_sense_header(sense, (SubLObject)cb_browser.UNPROVIDED);
                                            if (cb_browser.NIL == direction) {
                                                cb_c_unbound_rule_rec_sense_mt(sense, mt);
                                            }
                                            else {
                                                cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                                cb_c_unbound_rule_rec_sense_mt_direction(sense, mt, direction);
                                            }
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$294, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$295 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$295, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$293, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$292, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$291, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$296 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$296, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$290, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 129839L)
    public static SubLObject cb_c_unbound_rule_rec() {
        SubLObject some_sense_done = (SubLObject)cb_browser.NIL;
        SubLObject cdolist_list_var = (SubLObject)cb_browser.$list370;
        SubLObject sense = (SubLObject)cb_browser.NIL;
        sense = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            if (cb_relevant_num_unbound_rule_index(sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                if (cb_browser.NIL != some_sense_done) {
                    html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                cb_c_unbound_rule_rec_sense(sense);
                some_sense_done = (SubLObject)cb_browser.T;
            }
            cdolist_list_var = cdolist_list_var.rest();
            sense = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 130121L)
    public static SubLObject cb_c_unbound_rule_rec_sense(final SubLObject sense) {
        cb_c_sense_header(sense, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject mts = cdolist_list_var = cb_relevant_key_unbound_rule_index(sense, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject mt = (SubLObject)cb_browser.NIL;
        mt = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_unbound_rule_rec_sense_mt(sense, mt);
            cdolist_list_var = cdolist_list_var.rest();
            mt = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 130346L)
    public static SubLObject cb_c_unbound_rule_rec_sense_mt(final SubLObject sense, final SubLObject mt) {
        cb_c_mt_header(mt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject directions = cdolist_list_var = cb_relevant_key_unbound_rule_index(sense, mt, (SubLObject)cb_browser.UNPROVIDED);
        SubLObject direction = (SubLObject)cb_browser.NIL;
        direction = cdolist_list_var.first();
        while (cb_browser.NIL != cdolist_list_var) {
            cb_c_unbound_rule_rec_sense_mt_direction(sense, mt, direction);
            cdolist_list_var = cdolist_list_var.rest();
            direction = cdolist_list_var.first();
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 130615L)
    public static SubLObject cb_c_unbound_rule_rec_sense_mt_direction(final SubLObject sense, final SubLObject mt, final SubLObject direction) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        cb_c_direction_header(direction);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(auxiliary_indexing.unbound_rule_index())) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            auxiliary_indexing.map_unbound_rule_mt_index(assertion_link_fn, sense, mt, direction);
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 130883L)
    public static SubLObject cb_c_sense_header(final SubLObject sense, SubLObject predicate_string) {
        if (predicate_string == cb_browser.UNPROVIDED) {
            predicate_string = (SubLObject)cb_browser.NIL;
        }
        html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        if (cb_browser.NIL != predicate_string) {
            html_utilities.html_princ(predicate_string);
            html_utilities.html_princ((SubLObject)cb_browser.$str414$_);
        }
        if (sense.eql((SubLObject)cb_browser.$kw66$NEG)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str415$Antecedent_Rules);
        }
        else if (sense.eql((SubLObject)cb_browser.$kw67$POS)) {
            html_utilities.html_princ((SubLObject)cb_browser.$str416$Consequent_Rules);
        }
        else {
            html_utilities.html_princ(sense);
        }
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 131484L)
    public static SubLObject cb_c_direction_header(final SubLObject direction) {
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str417$Direction___);
        cb_utilities.cb_show_direction(direction);
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 131649L)
    public static SubLObject cb_c_ist(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_term(index_spec, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL == hlmt.hlmt_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str418$MT_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$297 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$298 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$299 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$300 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$300, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_ist_internal(index_hook);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$299, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$298, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$297, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 132148L)
    public static SubLObject cb_link_ist(final SubLObject index_hook, final SubLObject count) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str420$cb_c_ist__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str421$Microtheory_Contents);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 132403L)
    public static SubLObject cb_link_ist_broad(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str420$cb_c_ist__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str421$Microtheory_Contents);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str423$__expensive__);
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 132635L)
    public static SubLObject cb_c_ist_internal(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str425$Microtheory_Contents__);
        html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
        final SubLObject _prev_bind_4 = mt_relevance_macros.$mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
            mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
            if (cb_browser.NIL != hlmt.hlmt_naut_p(index_hook)) {
                kb_mapping.map_hlmt_contents(assertion_link_fn, index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
            }
            else {
                kb_mapping.map_mt_contents(assertion_link_fn, index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
            }
        }
        finally {
            mt_relevance_macros.$mt$.rebind(_prev_bind_4, thread);
            mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_3, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 133041L)
    public static SubLObject cb_c_mt_gafs(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_term(index_spec, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL == hlmt.hlmt_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str426$MT_GAFs_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$301 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$302 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$303 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$304 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$304, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_mt_gafs_internal(index_hook);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$303, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$302, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$301, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 133558L)
    public static SubLObject cb_link_mt_gafs(final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str428$cb_c_mt_gafs__A, cb_utilities.cb_index_identifier(mt));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str429$Microtheory_GAFs);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str430$____);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 133753L)
    public static SubLObject cb_c_mt_gafs_internal(final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str432$Microtheory_GAFs__);
        html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        final SubLObject mt_gafs = (cb_browser.NIL != hlmt.hlmt_naut_p(mt)) ? cb_c_gather_hlmt_gafs(mt) : cb_c_gather_mt_gafs(mt);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(mt)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            SubLObject last_term = (SubLObject)cb_browser.NIL;
            SubLObject cdolist_list_var = mt_gafs;
            SubLObject gaf = (SubLObject)cb_browser.NIL;
            gaf = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                final SubLObject current_term = assertions_high.gaf_arg1(gaf);
                if (!current_term.eql(last_term)) {
                    html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
                }
                last_term = current_term;
                Functions.funcall(assertion_link_fn, gaf);
                cdolist_list_var = cdolist_list_var.rest();
                gaf = cdolist_list_var.first();
            }
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 134394L)
    public static SubLObject cb_c_gather_mt_gafs(final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject gafs = (SubLObject)cb_browser.NIL;
        final SubLObject pcase_var = kb_mapping_macros.do_mt_contents_method(mt);
        if (pcase_var.eql((SubLObject)cb_browser.$kw433$MT)) {
            if (cb_browser.NIL != kb_mapping_macros.do_mt_index_key_validator(mt, (SubLObject)cb_browser.$kw434$GAF)) {
                final SubLObject final_index_spec = kb_mapping_macros.mt_final_index_spec(mt);
                SubLObject final_index_iterator = (SubLObject)cb_browser.NIL;
                try {
                    final_index_iterator = kb_mapping_macros.new_final_index_iterator(final_index_spec, (SubLObject)cb_browser.$kw434$GAF, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
                    SubLObject done_var = (SubLObject)cb_browser.NIL;
                    final SubLObject token_var = (SubLObject)cb_browser.NIL;
                    while (cb_browser.NIL == done_var) {
                        final SubLObject ass = iteration.iteration_next_without_values_macro_helper(final_index_iterator, token_var);
                        final SubLObject valid = (SubLObject)SubLObjectFactory.makeBoolean(!token_var.eql(ass));
                        if (cb_browser.NIL != valid) {
                            gafs = (SubLObject)ConsesLow.cons(ass, gafs);
                        }
                        done_var = (SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL == valid);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values = Values.getValuesAsVector();
                        if (cb_browser.NIL != final_index_iterator) {
                            kb_mapping_macros.destroy_final_index_iterator(final_index_iterator);
                        }
                        Values.restoreValuesFromVector(_values);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                    }
                }
            }
        }
        else if (pcase_var.eql((SubLObject)cb_browser.$kw435$BROAD_MT) && cb_browser.NIL != kb_mapping_macros.do_broad_mt_index_key_validator(mt, (SubLObject)cb_browser.$kw434$GAF)) {
            final SubLObject idx = assertion_handles.do_assertions_table();
            final SubLObject mess = (SubLObject)cb_browser.$str436$do_broad_mt_index;
            final SubLObject total = id_index.id_index_count(idx);
            SubLObject sofar = (SubLObject)cb_browser.ZERO_INTEGER;
            assert cb_browser.NIL != Types.stringp(mess) : mess;
            final SubLObject _prev_bind_2 = utilities_macros.$last_percent_progress_index$.currentBinding(thread);
            final SubLObject _prev_bind_3 = utilities_macros.$last_percent_progress_prediction$.currentBinding(thread);
            final SubLObject _prev_bind_4 = utilities_macros.$within_noting_percent_progress$.currentBinding(thread);
            final SubLObject _prev_bind_5 = utilities_macros.$percent_progress_start_time$.currentBinding(thread);
            try {
                utilities_macros.$last_percent_progress_index$.bind((SubLObject)cb_browser.ZERO_INTEGER, thread);
                utilities_macros.$last_percent_progress_prediction$.bind((SubLObject)cb_browser.NIL, thread);
                utilities_macros.$within_noting_percent_progress$.bind((SubLObject)cb_browser.T, thread);
                utilities_macros.$percent_progress_start_time$.bind(Time.get_universal_time(), thread);
                try {
                    utilities_macros.noting_percent_progress_preamble(mess);
                    final SubLObject idx_$305 = idx;
                    if (cb_browser.NIL == id_index.id_index_objects_empty_p(idx_$305, (SubLObject)cb_browser.$kw438$SKIP)) {
                        final SubLObject idx_$306 = idx_$305;
                        if (cb_browser.NIL == id_index.id_index_dense_objects_empty_p(idx_$306, (SubLObject)cb_browser.$kw438$SKIP)) {
                            final SubLObject vector_var = id_index.id_index_dense_objects(idx_$306);
                            final SubLObject backwardP_var = (SubLObject)cb_browser.NIL;
                            SubLObject length;
                            SubLObject v_iteration;
                            SubLObject a_id;
                            SubLObject a_handle;
                            SubLObject ass2;
                            for (length = Sequences.length(vector_var), v_iteration = (SubLObject)cb_browser.NIL, v_iteration = (SubLObject)cb_browser.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)cb_browser.ONE_INTEGER)) {
                                a_id = ((cb_browser.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)cb_browser.ONE_INTEGER) : v_iteration);
                                a_handle = Vectors.aref(vector_var, a_id);
                                if (cb_browser.NIL == id_index.id_index_tombstone_p(a_handle) || cb_browser.NIL == id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP)) {
                                    if (cb_browser.NIL != id_index.id_index_tombstone_p(a_handle)) {
                                        a_handle = (SubLObject)cb_browser.$kw438$SKIP;
                                    }
                                    ass2 = assertion_handles.resolve_assertion_id_value_pair(a_id, a_handle);
                                    if (cb_browser.NIL != kb_mapping_macros.do_broad_mt_index_match_p(ass2, mt, (SubLObject)cb_browser.$kw434$GAF, (SubLObject)cb_browser.NIL)) {
                                        gafs = (SubLObject)ConsesLow.cons(ass2, gafs);
                                    }
                                    sofar = Numbers.add(sofar, (SubLObject)cb_browser.ONE_INTEGER);
                                    utilities_macros.note_percent_progress(sofar, total);
                                }
                            }
                        }
                        final SubLObject idx_$307 = idx_$305;
                        if (cb_browser.NIL == id_index.id_index_sparse_objects_empty_p(idx_$307) || cb_browser.NIL == id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP)) {
                            final SubLObject sparse = id_index.id_index_sparse_objects(idx_$307);
                            SubLObject a_id2 = id_index.id_index_sparse_id_threshold(idx_$307);
                            final SubLObject end_id = id_index.id_index_next_id(idx_$307);
                            final SubLObject v_default = (SubLObject)((cb_browser.NIL != id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP)) ? cb_browser.NIL : cb_browser.$kw438$SKIP);
                            while (a_id2.numL(end_id)) {
                                final SubLObject a_handle2 = Hashtables.gethash_without_values(a_id2, sparse, v_default);
                                if (cb_browser.NIL == id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP) || cb_browser.NIL == id_index.id_index_tombstone_p(a_handle2)) {
                                    final SubLObject ass3 = assertion_handles.resolve_assertion_id_value_pair(a_id2, a_handle2);
                                    if (cb_browser.NIL != kb_mapping_macros.do_broad_mt_index_match_p(ass3, mt, (SubLObject)cb_browser.$kw434$GAF, (SubLObject)cb_browser.NIL)) {
                                        gafs = (SubLObject)ConsesLow.cons(ass3, gafs);
                                    }
                                    sofar = Numbers.add(sofar, (SubLObject)cb_browser.ONE_INTEGER);
                                    utilities_macros.note_percent_progress(sofar, total);
                                }
                                a_id2 = Numbers.add(a_id2, (SubLObject)cb_browser.ONE_INTEGER);
                            }
                        }
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$308 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        utilities_macros.noting_percent_progress_postamble();
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$308, thread);
                    }
                }
            }
            finally {
                utilities_macros.$percent_progress_start_time$.rebind(_prev_bind_5, thread);
                utilities_macros.$within_noting_percent_progress$.rebind(_prev_bind_4, thread);
                utilities_macros.$last_percent_progress_prediction$.rebind(_prev_bind_3, thread);
                utilities_macros.$last_percent_progress_index$.rebind(_prev_bind_2, thread);
            }
        }
        if (cb_browser.NIL != list_utilities.lengthLE(gafs, (SubLObject)cb_browser.$int439$1000, (SubLObject)cb_browser.UNPROVIDED)) {
            gafs = assertion_utilities.sort_gafs_by_term(gafs, (SubLObject)cb_browser.$sym440$CB_TERM__, (SubLObject)cb_browser.$sym441$CB_PREDICATE__);
        }
        else {
            gafs = assertion_utilities.sort_assertions(gafs);
        }
        return gafs;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 134792L)
    public static SubLObject cb_c_gather_hlmt_gafs(final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject gafs = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
        final SubLObject _prev_bind_2 = mt_relevance_macros.$mt$.currentBinding(thread);
        try {
            mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
            mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
            SubLObject cdolist_list_var = virtual_indexing.gather_overlap_index(list_utilities.flatten(mt), (SubLObject)cb_browser.UNPROVIDED);
            SubLObject ass = (SubLObject)cb_browser.NIL;
            ass = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                if (cb_browser.NIL != hlmt.hlmt_equal(assertions_high.assertion_mt(ass), mt)) {
                    gafs = (SubLObject)ConsesLow.cons(ass, gafs);
                }
                cdolist_list_var = cdolist_list_var.rest();
                ass = cdolist_list_var.first();
            }
        }
        finally {
            mt_relevance_macros.$mt$.rebind(_prev_bind_2, thread);
            mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0, thread);
        }
        return assertion_utilities.sort_gafs_by_term(gafs, (SubLObject)cb_browser.$sym440$CB_TERM__, (SubLObject)cb_browser.$sym441$CB_PREDICATE__);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 135061L)
    public static SubLObject cb_term_L(final SubLObject term1, final SubLObject term2) {
        return kb_utilities.term_L(term1, term2, (SubLObject)cb_browser.T, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 135134L)
    public static SubLObject cb_predicate_L(final SubLObject pred1, final SubLObject pred2) {
        return kb_utilities.definitional_pred_L(pred1, pred2, (SubLObject)cb_browser.T);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 135225L)
    public static SubLObject cb_c_mt_rules(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_fort(index_spec, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str107$Could_not_determine_a_term_from__, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str442$MT_Rules_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$309 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$310 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$311 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$312 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$312, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_mt_rules_internal(index_hook);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$311, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$310, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$309, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 135757L)
    public static SubLObject cb_link_mt_rules(final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str444$cb_c_mt_rules__A, cb_utilities.cb_index_identifier(mt));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str445$Microtheory_Rules);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str430$____);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 135955L)
    public static SubLObject cb_c_mt_rules_internal(final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
        html_utilities.html_princ((SubLObject)cb_browser.$str447$Microtheory_Rules__);
        html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
        final SubLObject mt_rules = cb_c_gather_mt_rules(mt);
        final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(mt)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym277$CB_ASSERTION_LINK);
        final SubLObject _prev_bind_0 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
        final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
        try {
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
            SubLObject cdolist_list_var = mt_rules;
            SubLObject rule = (SubLObject)cb_browser.NIL;
            rule = cdolist_list_var.first();
            while (cb_browser.NIL != cdolist_list_var) {
                Functions.funcall(assertion_link_fn, rule);
                cdolist_list_var = cdolist_list_var.rest();
                rule = cdolist_list_var.first();
            }
        }
        finally {
            cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
            cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 136287L)
    public static SubLObject cb_c_gather_mt_rules(final SubLObject mt) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject rules = (SubLObject)cb_browser.NIL;
        final SubLObject pcase_var = kb_mapping_macros.do_mt_contents_method(mt);
        if (pcase_var.eql((SubLObject)cb_browser.$kw433$MT)) {
            if (cb_browser.NIL != kb_mapping_macros.do_mt_index_key_validator(mt, (SubLObject)cb_browser.$kw448$RULE)) {
                final SubLObject final_index_spec = kb_mapping_macros.mt_final_index_spec(mt);
                SubLObject final_index_iterator = (SubLObject)cb_browser.NIL;
                try {
                    final_index_iterator = kb_mapping_macros.new_final_index_iterator(final_index_spec, (SubLObject)cb_browser.$kw448$RULE, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
                    SubLObject done_var = (SubLObject)cb_browser.NIL;
                    final SubLObject token_var = (SubLObject)cb_browser.NIL;
                    while (cb_browser.NIL == done_var) {
                        final SubLObject ass = iteration.iteration_next_without_values_macro_helper(final_index_iterator, token_var);
                        final SubLObject valid = (SubLObject)SubLObjectFactory.makeBoolean(!token_var.eql(ass));
                        if (cb_browser.NIL != valid) {
                            rules = (SubLObject)ConsesLow.cons(ass, rules);
                        }
                        done_var = (SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL == valid);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values = Values.getValuesAsVector();
                        if (cb_browser.NIL != final_index_iterator) {
                            kb_mapping_macros.destroy_final_index_iterator(final_index_iterator);
                        }
                        Values.restoreValuesFromVector(_values);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0, thread);
                    }
                }
            }
        }
        else if (pcase_var.eql((SubLObject)cb_browser.$kw435$BROAD_MT) && cb_browser.NIL != kb_mapping_macros.do_broad_mt_index_key_validator(mt, (SubLObject)cb_browser.$kw448$RULE)) {
            final SubLObject idx = assertion_handles.do_assertions_table();
            final SubLObject mess = (SubLObject)cb_browser.$str436$do_broad_mt_index;
            final SubLObject total = id_index.id_index_count(idx);
            SubLObject sofar = (SubLObject)cb_browser.ZERO_INTEGER;
            assert cb_browser.NIL != Types.stringp(mess) : mess;
            final SubLObject _prev_bind_2 = utilities_macros.$last_percent_progress_index$.currentBinding(thread);
            final SubLObject _prev_bind_3 = utilities_macros.$last_percent_progress_prediction$.currentBinding(thread);
            final SubLObject _prev_bind_4 = utilities_macros.$within_noting_percent_progress$.currentBinding(thread);
            final SubLObject _prev_bind_5 = utilities_macros.$percent_progress_start_time$.currentBinding(thread);
            try {
                utilities_macros.$last_percent_progress_index$.bind((SubLObject)cb_browser.ZERO_INTEGER, thread);
                utilities_macros.$last_percent_progress_prediction$.bind((SubLObject)cb_browser.NIL, thread);
                utilities_macros.$within_noting_percent_progress$.bind((SubLObject)cb_browser.T, thread);
                utilities_macros.$percent_progress_start_time$.bind(Time.get_universal_time(), thread);
                try {
                    utilities_macros.noting_percent_progress_preamble(mess);
                    final SubLObject idx_$313 = idx;
                    if (cb_browser.NIL == id_index.id_index_objects_empty_p(idx_$313, (SubLObject)cb_browser.$kw438$SKIP)) {
                        final SubLObject idx_$314 = idx_$313;
                        if (cb_browser.NIL == id_index.id_index_dense_objects_empty_p(idx_$314, (SubLObject)cb_browser.$kw438$SKIP)) {
                            final SubLObject vector_var = id_index.id_index_dense_objects(idx_$314);
                            final SubLObject backwardP_var = (SubLObject)cb_browser.NIL;
                            SubLObject length;
                            SubLObject v_iteration;
                            SubLObject a_id;
                            SubLObject a_handle;
                            SubLObject ass2;
                            for (length = Sequences.length(vector_var), v_iteration = (SubLObject)cb_browser.NIL, v_iteration = (SubLObject)cb_browser.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)cb_browser.ONE_INTEGER)) {
                                a_id = ((cb_browser.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)cb_browser.ONE_INTEGER) : v_iteration);
                                a_handle = Vectors.aref(vector_var, a_id);
                                if (cb_browser.NIL == id_index.id_index_tombstone_p(a_handle) || cb_browser.NIL == id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP)) {
                                    if (cb_browser.NIL != id_index.id_index_tombstone_p(a_handle)) {
                                        a_handle = (SubLObject)cb_browser.$kw438$SKIP;
                                    }
                                    ass2 = assertion_handles.resolve_assertion_id_value_pair(a_id, a_handle);
                                    if (cb_browser.NIL != kb_mapping_macros.do_broad_mt_index_match_p(ass2, mt, (SubLObject)cb_browser.$kw448$RULE, (SubLObject)cb_browser.NIL)) {
                                        rules = (SubLObject)ConsesLow.cons(ass2, rules);
                                    }
                                    sofar = Numbers.add(sofar, (SubLObject)cb_browser.ONE_INTEGER);
                                    utilities_macros.note_percent_progress(sofar, total);
                                }
                            }
                        }
                        final SubLObject idx_$315 = idx_$313;
                        if (cb_browser.NIL == id_index.id_index_sparse_objects_empty_p(idx_$315) || cb_browser.NIL == id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP)) {
                            final SubLObject sparse = id_index.id_index_sparse_objects(idx_$315);
                            SubLObject a_id2 = id_index.id_index_sparse_id_threshold(idx_$315);
                            final SubLObject end_id = id_index.id_index_next_id(idx_$315);
                            final SubLObject v_default = (SubLObject)((cb_browser.NIL != id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP)) ? cb_browser.NIL : cb_browser.$kw438$SKIP);
                            while (a_id2.numL(end_id)) {
                                final SubLObject a_handle2 = Hashtables.gethash_without_values(a_id2, sparse, v_default);
                                if (cb_browser.NIL == id_index.id_index_skip_tombstones_p((SubLObject)cb_browser.$kw438$SKIP) || cb_browser.NIL == id_index.id_index_tombstone_p(a_handle2)) {
                                    final SubLObject ass3 = assertion_handles.resolve_assertion_id_value_pair(a_id2, a_handle2);
                                    if (cb_browser.NIL != kb_mapping_macros.do_broad_mt_index_match_p(ass3, mt, (SubLObject)cb_browser.$kw448$RULE, (SubLObject)cb_browser.NIL)) {
                                        rules = (SubLObject)ConsesLow.cons(ass3, rules);
                                    }
                                    sofar = Numbers.add(sofar, (SubLObject)cb_browser.ONE_INTEGER);
                                    utilities_macros.note_percent_progress(sofar, total);
                                }
                                a_id2 = Numbers.add(a_id2, (SubLObject)cb_browser.ONE_INTEGER);
                            }
                        }
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$316 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        utilities_macros.noting_percent_progress_postamble();
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$316, thread);
                    }
                }
            }
            finally {
                utilities_macros.$percent_progress_start_time$.rebind(_prev_bind_5, thread);
                utilities_macros.$within_noting_percent_progress$.rebind(_prev_bind_4, thread);
                utilities_macros.$last_percent_progress_prediction$.rebind(_prev_bind_3, thread);
                utilities_macros.$last_percent_progress_index$.rebind(_prev_bind_2, thread);
            }
        }
        return assertion_utilities.sort_assertions(rules);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 136487L)
    public static SubLObject cb_c_other(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject index_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list94);
        index_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject index_hook = cb_utilities.cb_guess_index(index_spec);
            if (cb_browser.NIL == cb_utilities.cb_index_hook_p(index_hook)) {
                return cb_utilities.cb_error((SubLObject)cb_browser.$str95$Could_not_determine_an_index_hook, index_spec, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject title_var;
            final SubLObject title = title_var = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str449$OTHER_index_for__S, index_hook);
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$317 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    dhtml_macros.html_basic_cb_scripts();
                    dhtml_macros.dhtml_with_dom_script();
                    dhtml_macros.dhtml_with_toggle_visibility_support();
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$318 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$319 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$320 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str167$Refresh);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_event_attribute_onclick$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str168$reloadCurrentFrame__reloadFrameBu);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$320, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            cb_c_term_header(index_hook);
                            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                            cb_c_other_internal(index_hook);
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$319, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$318, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$317, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list94);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 137015L)
    public static SubLObject cb_link_other(final SubLObject index_hook, final SubLObject count) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str451$cb_c_other__A, cb_utilities.cb_index_identifier(index_hook));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ((SubLObject)cb_browser.$str452$Miscellaneous);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        if (count.numG((SubLObject)cb_browser.ONE_INTEGER)) {
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str232$___a_, count);
        }
        return index_hook;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 137267L)
    public static SubLObject cb_c_other_internal(final SubLObject index_hook) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_relevant_num_other_index(index_hook).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_big_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
                html_utilities.html_princ((SubLObject)cb_browser.$str454$Miscellaneous_References__);
                html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_big_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                final SubLObject assertion_link_fn = (cb_browser.NIL != cb_show_el_formulas_for_hookP(index_hook)) ? Symbols.symbol_function((SubLObject)cb_browser.$sym274$CB_EL_ASSERTION_LINK_WITH_MT_CHECKING_REDUNDANCY) : Symbols.symbol_function((SubLObject)cb_browser.$sym276$CB_ASSERTION_LINK_WITH_MT);
                final SubLObject _prev_bind_0_$321 = cb_parameters.$cb_show_el_assertion_readably_last_formula$.currentBinding(thread);
                final SubLObject _prev_bind_2 = cb_parameters.$cb_show_el_assertion_readably_last_mt$.currentBinding(thread);
                final SubLObject _prev_bind_3 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                final SubLObject _prev_bind_4 = mt_relevance_macros.$mt$.currentBinding(thread);
                try {
                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.bind((SubLObject)cb_browser.NIL, thread);
                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.bind((SubLObject)cb_browser.NIL, thread);
                    mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym146$RELEVANT_MT_IS_EVERYTHING, thread);
                    mt_relevance_macros.$mt$.bind(cb_browser.$const147$EverythingPSC, thread);
                    cb_relevant_key_other_index(assertion_link_fn, index_hook, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
                }
                finally {
                    mt_relevance_macros.$mt$.rebind(_prev_bind_4, thread);
                    mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_3, thread);
                    cb_parameters.$cb_show_el_assertion_readably_last_mt$.rebind(_prev_bind_2, thread);
                    cb_parameters.$cb_show_el_assertion_readably_last_formula$.rebind(_prev_bind_0_$321, thread);
                }
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 137759L)
    public static SubLObject cb_relevant_key_other_index(final SubLObject function, final SubLObject v_term, final SubLObject truth, final SubLObject gafs) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = pph_macros.$free_pph_problem_store_pointers$.currentBinding(thread);
        try {
            pph_macros.$free_pph_problem_store_pointers$.bind((SubLObject)cb_browser.NIL, thread);
            thread.resetMultipleValues();
            final SubLObject _prev_bind_0_$322 = pph_macros.$pph_problem_store_pointer$.currentBinding(thread);
            try {
                pph_macros.$pph_problem_store_pointer$.bind(pph_macros.find_or_create_pph_problem_store_pointer(), thread);
                final SubLObject reuseP = thread.secondMultipleValue();
                thread.resetMultipleValues();
                try {
                    thread.resetMultipleValues();
                    final SubLObject _prev_bind_0_$323 = pph_macros.$pph_memoization_state$.currentBinding(thread);
                    try {
                        pph_macros.$pph_memoization_state$.bind(pph_macros.find_or_create_pph_memoization_state(), thread);
                        final SubLObject new_or_reused = thread.secondMultipleValue();
                        thread.resetMultipleValues();
                        final SubLObject _prev_bind_0_$324 = pph_macros.$pph_external_memoization_state$.currentBinding(thread);
                        try {
                            pph_macros.$pph_external_memoization_state$.bind(pph_macros.find_or_create_pph_external_memoization_state(), thread);
                            final SubLObject local_state = pph_macros.$pph_memoization_state$.getDynamicValue(thread);
                            final SubLObject _prev_bind_0_$325 = memoization_state.$memoization_state$.currentBinding(thread);
                            try {
                                memoization_state.$memoization_state$.bind(local_state, thread);
                                final SubLObject original_memoization_process = memoization_state.memoization_state_original_process(local_state);
                                try {
                                    final SubLObject _prev_bind_0_$326 = pph_vars.$pph_language_mt$.currentBinding(thread);
                                    final SubLObject _prev_bind_2 = pph_vars.$paraphrase_mode$.currentBinding(thread);
                                    final SubLObject _prev_bind_3 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
                                    try {
                                        pph_vars.$pph_language_mt$.bind(cb_tools.cb_paraphrase_mt(), thread);
                                        pph_vars.$paraphrase_mode$.bind((SubLObject)cb_browser.$kw169$HTML, thread);
                                        cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
                                        if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                                            if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                                                final SubLObject _prev_bind_0_$327 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                                                final SubLObject _prev_bind_1_$328 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                                                try {
                                                    mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                                                    mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                                                    answer_list = kb_mapping.map_other_index(function, v_term, truth, gafs);
                                                }
                                                finally {
                                                    mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_1_$328, thread);
                                                    mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$327, thread);
                                                }
                                            }
                                            else {
                                                final SubLObject _prev_bind_0_$328 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                                                final SubLObject _prev_bind_1_$329 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                                                try {
                                                    mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                                                    mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                                                    answer_list = kb_mapping.map_other_index(function, v_term, truth, gafs);
                                                }
                                                finally {
                                                    mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_1_$329, thread);
                                                    mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$328, thread);
                                                }
                                            }
                                        }
                                        else {
                                            answer_list = kb_mapping.map_other_index(function, v_term, truth, gafs);
                                        }
                                    }
                                    finally {
                                        cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_3, thread);
                                        pph_vars.$paraphrase_mode$.rebind(_prev_bind_2, thread);
                                        pph_vars.$pph_language_mt$.rebind(_prev_bind_0_$326, thread);
                                    }
                                }
                                finally {
                                    final SubLObject _prev_bind_0_$329 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                                    try {
                                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                                        final SubLObject _values = Values.getValuesAsVector();
                                        memoization_state.memoization_state_possibly_clear_original_process(local_state, original_memoization_process);
                                        Values.restoreValuesFromVector(_values);
                                    }
                                    finally {
                                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$329, thread);
                                    }
                                }
                            }
                            finally {
                                memoization_state.$memoization_state$.rebind(_prev_bind_0_$325, thread);
                            }
                        }
                        finally {
                            pph_macros.$pph_external_memoization_state$.rebind(_prev_bind_0_$324, thread);
                        }
                        if (new_or_reused == cb_browser.$kw171$NEW && cb_browser.NIL != memoization_state.memoization_state_p(pph_macros.$pph_memoization_state$.getDynamicValue(thread))) {
                            memoization_state.clear_all_memoization(pph_macros.$pph_memoization_state$.getDynamicValue(thread));
                        }
                    }
                    finally {
                        pph_macros.$pph_memoization_state$.rebind(_prev_bind_0_$323, thread);
                    }
                }
                finally {
                    final SubLObject _prev_bind_0_$330 = Threads.$is_thread_performing_cleanupP$.currentBinding(thread);
                    try {
                        Threads.$is_thread_performing_cleanupP$.bind((SubLObject)cb_browser.T, thread);
                        final SubLObject _values2 = Values.getValuesAsVector();
                        if (cb_browser.NIL == reuseP) {
                            pph_macros.free_pph_problem_store_pointer(pph_macros.$pph_problem_store_pointer$.getDynamicValue(thread));
                        }
                        Values.restoreValuesFromVector(_values2);
                    }
                    finally {
                        Threads.$is_thread_performing_cleanupP$.rebind(_prev_bind_0_$330, thread);
                    }
                }
            }
            finally {
                pph_macros.$pph_problem_store_pointer$.rebind(_prev_bind_0_$322, thread);
            }
        }
        finally {
            pph_macros.$free_pph_problem_store_pointers$.rebind(_prev_bind_0, thread);
        }
        return answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 138320L)
    public static SubLObject cb_auxiliary_indices(SubLObject args) {
        if (args == cb_browser.UNPROVIDED) {
            args = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject indices = auxiliary_indexing.auxiliary_indices();
        if (cb_browser.NIL != indices) {
            final SubLObject title_var = (SubLObject)cb_browser.$str460$Auxiliary_Indices;
            final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
            try {
                html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
                html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
                if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$333 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
                try {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                    html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                    html_macros.html_head_content_type();
                    cb_parameters.cb_head_shortcut_icon();
                    html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                    cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                    dhtml_macros.html_basic_cb_scripts();
                    if (cb_browser.NIL != title_var) {
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                        html_utilities.html_princ(title_var);
                        html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                    }
                    html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$334 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                    try {
                        html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                        if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                            html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$335 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$336 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ((SubLObject)cb_browser.$str185$Refresh_Frames);
                                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                    html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$336, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                            if (cb_browser.NIL != title_var) {
                                html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                                html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_princ(title_var);
                                html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                                html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            }
                            html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$337 = html_macros.$html_safe_print$.currentBinding(thread);
                            final SubLObject _prev_bind_2 = html_macros.$within_html_form$.currentBinding(thread);
                            final SubLObject _prev_bind_3 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                html_macros.$within_html_form$.bind((SubLObject)cb_browser.T, thread);
                                html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                                cb_utilities.cb_help_preamble((SubLObject)cb_browser.$kw458$CB_AUXILIARY_INDICES, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
                                indices = Sort.sort(indices, Symbols.symbol_function((SubLObject)cb_browser.$sym461$STRING_LESSP), Symbols.symbol_function((SubLObject)cb_browser.$sym462$AUXILIARY_INDEX_NAME));
                                html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                                html_utilities.html_princ((SubLObject)cb_browser.$str463$Choose_an_auxiliary_index___);
                                html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                                html_utilities.html_markup(html_macros.$html_unordered_list_head$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$338 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    SubLObject cdolist_list_var = indices;
                                    SubLObject index = (SubLObject)cb_browser.NIL;
                                    index = cdolist_list_var.first();
                                    while (cb_browser.NIL != cdolist_list_var) {
                                        html_utilities.html_markup(html_macros.$html_list_item_head$.getGlobalValue());
                                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                        final SubLObject _prev_bind_0_$339 = html_macros.$html_safe_print$.currentBinding(thread);
                                        try {
                                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                            cb_utilities.cb_link((SubLObject)cb_browser.$kw6$AUXILIARY_INDEX, index, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                        }
                                        finally {
                                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$339, thread);
                                        }
                                        html_utilities.html_markup(html_macros.$html_list_item_tail$.getGlobalValue());
                                        cdolist_list_var = cdolist_list_var.rest();
                                        index = cdolist_list_var.first();
                                    }
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$338, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_unordered_list_tail$.getGlobalValue());
                                html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                            }
                            finally {
                                html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_3, thread);
                                html_macros.$within_html_form$.rebind(_prev_bind_2, thread);
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$337, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_copyright_notice();
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$335, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$334, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
                }
                finally {
                    cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$333, thread);
                }
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
            }
        }
        else {
            cb_utilities.cb_error((SubLObject)cb_browser.$str464$No_auxiliary_indexes_exist_, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 138917L)
    public static SubLObject cb_link_auxiliary_indices(SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str466$Auxiliary_Index_List;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        html_utilities.html_princ((SubLObject)cb_browser.$str467$cb_auxiliary_indices);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 139147L)
    public static SubLObject cb_auxiliary_index(SubLObject args) {
        if (args == cb_browser.UNPROVIDED) {
            args = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject index = cb_utilities.cb_guess_index(args.first());
        if (cb_browser.NIL == auxiliary_indexing.auxiliary_index_p(index)) {
            cb_utilities.cb_error((SubLObject)cb_browser.$str469$_S_did_not_specify_an_auxiliary_i, index, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        else if (!kb_indexing.num_index(index).numG((SubLObject)cb_browser.ZERO_INTEGER)) {
            final SubLObject message = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str470$The_auxiliary_index__S_is_current, auxiliary_indexing.auxiliary_index_name(index));
            cb_utilities.cb_simple_message_page(message, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL != html_macros.html_inside_body_p()) {
                    Errors.error((SubLObject)cb_browser.$str471$Cannot_have_a_FRAMESET_tag_inside);
                }
                html_utilities.html_markup(html_macros.$html_frameset_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_frameset_cols$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str472$30___);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$340 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    cb_utilities.cb_frame((SubLObject)cb_browser.$kw473$INDEX, index, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    cb_utilities.cb_frame((SubLObject)cb_browser.$kw52$CONTENT, index, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$340, thread);
                }
                html_utilities.html_markup(html_macros.$html_frameset_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 139718L)
    public static SubLObject cb_link_auxiliary_index(final SubLObject aux_index, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != auxiliary_indexing.auxiliary_index_p(aux_index)) {
            if (cb_browser.NIL == linktext) {
                linktext = auxiliary_indexing.auxiliary_index_name(aux_index);
            }
            final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            cb_parameters.cyc_cgi_url_int();
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str475$cb_auxiliary_index__A, aux_index);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != frame_name_var) {
                html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(frame_name_var);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_princ(linktext);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
            return aux_index;
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 140254L)
    public static SubLObject cb_alpha(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject raw_string = args.first();
        final SubLObject v_term = cb_utilities.cb_guess_term(raw_string, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject string = (cb_browser.NIL != v_term) ? string_utilities.fort_print_name(v_term) : raw_string;
        final SubLObject title = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str478$Alphabetical_search_for___A_, string);
        SubLObject use_type = (SubLObject)cb_browser.$kw479$ALPHA_TERM;
        thread.resetMultipleValues();
        SubLObject current_item = cb_alphabetical_placement(string, cb_browser.$cb_alpha_before$.getDynamicValue(thread), cb_browser.$cb_alpha_after$.getDynamicValue(thread));
        final SubLObject before_items = thread.secondMultipleValue();
        final SubLObject after_items = thread.thirdMultipleValue();
        thread.resetMultipleValues();
        if (cb_browser.NIL == current_item) {
            use_type = (SubLObject)cb_browser.$kw480$MISSING;
            current_item = string;
        }
        cb_alpha_index(use_type, title, (SubLObject)cb_browser.NIL, before_items, current_item, after_items);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 140960L)
    public static SubLObject cb_ad(final SubLObject args) {
        return cb_alpha(args);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 141075L)
    public static SubLObject cb_link_alphabetical(final SubLObject v_object, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject string = (SubLObject)cb_browser.NIL;
        if (cb_browser.NIL != nart_handles.nart_p(v_object)) {
            return (SubLObject)cb_browser.NIL;
        }
        if (cb_browser.NIL != constant_handles.constant_p(v_object)) {
            string = constants_high.constant_name(v_object);
        }
        else if (v_object.isString()) {
            string = v_object;
        }
        else if (v_object.isChar()) {
            string = v_object;
        }
        else {
            string = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str486$_A, v_object);
        }
        if (cb_browser.NIL == linktext) {
            linktext = string;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str487$cb_ad__A, string);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            if (cb_browser.NIL != constant_handles.constant_p(v_object)) {
                final SubLObject image_src = cyc_file_dependencies.cb_icon_file_path((SubLObject)cb_browser.$kw483$ALPHA);
                final SubLObject align = (SubLObject)cb_browser.$kw38$TOP;
                final SubLObject alt = cyc_file_dependencies.cb_get_icon_alt_string((SubLObject)cb_browser.$kw483$ALPHA);
                final SubLObject border = (SubLObject)cb_browser.ZERO_INTEGER;
                html_utilities.html_markup(html_macros.$html_image_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_image_src$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(image_src);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                if (cb_browser.NIL != alt) {
                    html_utilities.html_markup(html_macros.$html_image_alt$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(alt);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != align) {
                    html_utilities.html_markup(html_macros.$html_image_align$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_align(align));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                }
                if (cb_browser.NIL != border) {
                    html_utilities.html_markup(html_macros.$html_image_border$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(border);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                }
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$341 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$341, thread);
                }
                html_utilities.html_markup(html_macros.$html_image_tail$.getGlobalValue());
            }
            else {
                html_utilities.html_princ(linktext);
            }
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return v_object;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 141879L)
    public static SubLObject cb_alpha_top(SubLObject args) {
        if (args == cb_browser.UNPROVIDED) {
            args = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject title = (SubLObject)cb_browser.$str493$Top_of_Alphabetical_Index;
        thread.resetMultipleValues();
        final SubLObject current_item = cb_alphabetical_placement(cb_browser.$cb_before_alpha_top$.getDynamicValue(thread), (SubLObject)cb_browser.ZERO_INTEGER, cb_browser.$cb_alpha_total$.getDynamicValue(thread));
        final SubLObject before_items = thread.secondMultipleValue();
        final SubLObject after_items = thread.thirdMultipleValue();
        thread.resetMultipleValues();
        cb_alpha_index((SubLObject)cb_browser.$kw38$TOP, title, (SubLObject)cb_browser.NIL, before_items, current_item, after_items);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 142254L)
    public static SubLObject cb_link_alpha_top(SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str495$Top;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        html_utilities.html_princ((SubLObject)cb_browser.$str496$cb_alpha_top);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 142527L)
    public static SubLObject cb_alpha_bottom(SubLObject args) {
        if (args == cb_browser.UNPROVIDED) {
            args = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject title = (SubLObject)cb_browser.$str499$Bottom_of_Alphabetical_Index;
        thread.resetMultipleValues();
        final SubLObject current_item = cb_alphabetical_placement(cb_browser.$cb_after_alpha_bottom$.getDynamicValue(thread), cb_browser.$cb_alpha_total$.getDynamicValue(thread), (SubLObject)cb_browser.ZERO_INTEGER);
        final SubLObject before_items = thread.secondMultipleValue();
        final SubLObject after_items = thread.thirdMultipleValue();
        thread.resetMultipleValues();
        cb_alpha_index((SubLObject)cb_browser.$kw500$BOTTOM, title, (SubLObject)cb_browser.NIL, before_items, current_item, after_items);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 142916L)
    public static SubLObject cb_link_alpha_bottom(SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str502$Bottom;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        html_utilities.html_princ((SubLObject)cb_browser.$str503$cb_alpha_bottom);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 143125L)
    public static SubLObject cb_alpha_pageup(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return cb_alpha_scroll((SubLObject)cb_browser.$kw506$PAGEUP, Numbers.subtract(cb_browser.$cb_alpha_total$.getDynamicValue(thread), (SubLObject)cb_browser.ONE_INTEGER), (SubLObject)cb_browser.ONE_INTEGER, args);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 143305L)
    public static SubLObject cb_link_alpha_pageup(final SubLObject string, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str508$Page_Up;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str509$cb_alpha_pageup__A, string);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return string;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 143536L)
    public static SubLObject cb_alpha_pagedn(final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return cb_alpha_scroll((SubLObject)cb_browser.$kw512$PAGEDN, (SubLObject)cb_browser.ZERO_INTEGER, cb_browser.$cb_alpha_total$.getDynamicValue(thread), args);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 143672L)
    public static SubLObject cb_link_alpha_pagedn(final SubLObject string, SubLObject linktext) {
        if (linktext == cb_browser.UNPROVIDED) {
            linktext = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL == linktext) {
            linktext = (SubLObject)cb_browser.$str514$Page_Down;
        }
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str515$cb_alpha_pagedn__A, string);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(linktext);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        return string;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 143905L)
    public static SubLObject cb_alpha_scroll(final SubLObject use_type, final SubLObject before_count, final SubLObject after_count, final SubLObject args) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject string = args.first();
        final SubLObject title = (SubLObject)cb_browser.$str518$Alphabetical_index_scroll;
        thread.resetMultipleValues();
        SubLObject current_item = cb_alphabetical_placement(string, before_count, after_count);
        final SubLObject before_items = thread.secondMultipleValue();
        SubLObject after_items = thread.thirdMultipleValue();
        thread.resetMultipleValues();
        if (cb_browser.NIL != current_item) {
            after_items = (SubLObject)ConsesLow.cons(current_item, after_items);
            current_item = (SubLObject)cb_browser.NIL;
        }
        cb_alpha_index(use_type, title, (SubLObject)cb_browser.NIL, before_items, (SubLObject)cb_browser.NIL, after_items);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 144416L)
    public static SubLObject cb_alpha_index(final SubLObject use_type, final SubLObject title, final SubLObject message, final SubLObject before_items, final SubLObject central_item, final SubLObject after_items) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = html_macros.$html_id_space_id_generator$.currentBinding(thread);
        try {
            html_macros.$html_id_space_id_generator$.bind((cb_browser.NIL != integer_sequence_generator.integer_sequence_generator_p(html_macros.$html_id_space_id_generator$.getDynamicValue(thread))) ? html_macros.$html_id_space_id_generator$.getDynamicValue(thread) : integer_sequence_generator.new_integer_sequence_generator((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), thread);
            html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
            if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$342 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
            try {
                cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
                html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                dhtml_macros.html_basic_cb_scripts();
                if (cb_browser.NIL != title) {
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                    html_utilities.html_princ(title);
                    html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                }
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$343 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    if (cb_browser.NIL != html_macros.$html_default_bgcolor$.getDynamicValue(thread)) {
                        html_utilities.html_markup(html_macros.$html_body_bgcolor$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_utilities.html_color(html_macros.$html_default_bgcolor$.getDynamicValue(thread)));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_markup(html_macros.$html_body_class$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.$str163$yui_skin_sam);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$344 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup((SubLObject)cb_browser.$str164$reloadFrameButton);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$345 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_input_head$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_input_type$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str165$button);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_name$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.$str166$reload);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_input_value$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ((SubLObject)cb_browser.$str185$Refresh_Frames);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            if (cb_browser.NIL != html_macros.$html_input_disabledP$.getDynamicValue(thread)) {
                                html_utilities.html_simple_attribute(html_macros.$html_input_disabled$.getGlobalValue());
                            }
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$345, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
                        if (cb_browser.NIL != title) {
                            html_utilities.html_markup(html_macros.$html_heading_head$.getGlobalValue());
                            html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_princ(title);
                            html_utilities.html_markup(html_macros.$html_heading_tail$.getGlobalValue());
                            html_utilities.html_markup((SubLObject)cb_browser.TWO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_markup(html_macros.$html_form_head$.getGlobalValue());
                        html_utilities.html_markup(html_macros.$html_form_action$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(system_parameters.$cyc_cgi_program$.getDynamicValue(thread));
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$346 = html_macros.$html_safe_print$.currentBinding(thread);
                        final SubLObject _prev_bind_2 = html_macros.$within_html_form$.currentBinding(thread);
                        final SubLObject _prev_bind_3 = html_macros.$html_form_field_uniquifier_code$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_macros.$within_html_form$.bind((SubLObject)cb_browser.T, thread);
                            html_macros.$html_form_field_uniquifier_code$.bind(html_macros.next_html_form_field_uniquifier_code(), thread);
                            if (cb_browser.NIL != message) {
                                html_utilities.html_princ(message);
                            }
                            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                            cb_alpha_position_bar(use_type, before_items, after_items);
                            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                            html_utilities.html_simple_attribute(html_macros.$html_table_noflow$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$347 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                SubLObject cdolist_list_var = before_items;
                                SubLObject item = (SubLObject)cb_browser.NIL;
                                item = cdolist_list_var.first();
                                while (cb_browser.NIL != cdolist_list_var) {
                                    cb_alphabetical_item(item, (SubLObject)cb_browser.UNPROVIDED);
                                    cdolist_list_var = cdolist_list_var.rest();
                                    item = cdolist_list_var.first();
                                }
                                if (cb_browser.NIL != central_item) {
                                    cb_alphabetical_central_item(use_type, central_item);
                                }
                                cdolist_list_var = after_items;
                                item = (SubLObject)cb_browser.NIL;
                                item = cdolist_list_var.first();
                                while (cb_browser.NIL != cdolist_list_var) {
                                    cb_alphabetical_item(item, (SubLObject)cb_browser.UNPROVIDED);
                                    cdolist_list_var = cdolist_list_var.rest();
                                    item = cdolist_list_var.first();
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$348 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$349 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_indent((SubLObject)cb_browser.FIVE_INTEGER);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$349, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                    html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                    final SubLObject _prev_bind_0_$350 = html_macros.$html_safe_print$.currentBinding(thread);
                                    try {
                                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                        html_utilities.html_indent((SubLObject)cb_browser.FIVE_INTEGER);
                                    }
                                    finally {
                                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$350, thread);
                                    }
                                    html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$348, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$347, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                            html_macros.embed_form_field_code(html_macros.$html_form_field_uniquifier_code$.getDynamicValue(thread));
                        }
                        finally {
                            html_macros.$html_form_field_uniquifier_code$.rebind(_prev_bind_3, thread);
                            html_macros.$within_html_form$.rebind(_prev_bind_2, thread);
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$346, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_form_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$344, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$343, thread);
                }
                html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
            }
            finally {
                cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0_$342, thread);
            }
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_id_space_id_generator$.rebind(_prev_bind_0, thread);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 145500L)
    public static SubLObject cb_alpha_position_bar(final SubLObject use_type, final SubLObject before_items, final SubLObject after_items) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject pageup_possible = (SubLObject)cb_browser.NIL;
        SubLObject pageup_item = (SubLObject)cb_browser.NIL;
        SubLObject pagedn_possible = (SubLObject)cb_browser.NIL;
        SubLObject pagedn_item = (SubLObject)cb_browser.NIL;
        if (use_type.eql((SubLObject)cb_browser.$kw506$PAGEUP)) {
            pageup_possible = Numbers.numE(Sequences.length(before_items), Numbers.subtract(cb_browser.$cb_alpha_total$.getDynamicValue(thread), (SubLObject)cb_browser.ONE_INTEGER));
            pagedn_possible = (SubLObject)cb_browser.T;
        }
        else if (use_type.eql((SubLObject)cb_browser.$kw512$PAGEDN)) {
            pageup_possible = (SubLObject)cb_browser.T;
            pagedn_possible = Numbers.numE(Sequences.length(after_items), cb_browser.$cb_alpha_total$.getDynamicValue(thread));
        }
        else if (use_type.eql((SubLObject)cb_browser.$kw479$ALPHA_TERM)) {
            pageup_possible = Numbers.numE(Sequences.length(before_items), cb_browser.$cb_alpha_before$.getDynamicValue(thread));
            pagedn_possible = Numbers.numE(Sequences.length(after_items), Numbers.subtract(cb_browser.$cb_alpha_after$.getDynamicValue(thread), (SubLObject)cb_browser.ONE_INTEGER));
        }
        else if (use_type.eql((SubLObject)cb_browser.$kw38$TOP)) {
            pageup_possible = (SubLObject)cb_browser.NIL;
            pagedn_possible = Numbers.numE(Sequences.length(after_items), cb_browser.$cb_alpha_total$.getDynamicValue(thread));
        }
        else if (use_type.eql((SubLObject)cb_browser.$kw500$BOTTOM)) {
            pageup_possible = Numbers.numE(Sequences.length(before_items), cb_browser.$cb_alpha_total$.getDynamicValue(thread));
            pagedn_possible = (SubLObject)cb_browser.NIL;
        }
        else {
            pageup_possible = Numbers.numE(Sequences.length(before_items), cb_browser.$cb_alpha_before$.getDynamicValue(thread));
            pagedn_possible = Numbers.numE(Sequences.length(after_items), cb_browser.$cb_alpha_after$.getDynamicValue(thread));
        }
        if (cb_browser.NIL != pageup_possible) {
            if (cb_browser.NIL != before_items) {
                pageup_item = constants_high.constant_name(before_items.first());
            }
            else if (cb_browser.NIL != after_items) {
                pageup_item = constants_high.constant_name(after_items.first());
            }
        }
        if (cb_browser.NIL != pagedn_possible) {
            if (cb_browser.NIL != after_items) {
                pagedn_item = constants_high.constant_name(conses_high.last(after_items, (SubLObject)cb_browser.UNPROVIDED).first());
            }
            else if (cb_browser.NIL != before_items) {
                pagedn_item = constants_high.constant_name(conses_high.last(before_items, (SubLObject)cb_browser.UNPROVIDED).first());
            }
        }
        html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
        html_utilities.html_simple_attribute(html_macros.$html_table_noflow$.getGlobalValue());
        html_utilities.html_simple_attribute(html_macros.$html_table_nowrap$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$351 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$352 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    cb_utilities.cb_help_preamble((SubLObject)cb_browser.$kw521$CB_ALPHA_INDEX, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$352, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$353 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_table_head$.getGlobalValue());
                    html_utilities.html_simple_attribute(html_macros.$html_table_noflow$.getGlobalValue());
                    html_utilities.html_simple_attribute(html_macros.$html_table_nowrap$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_table_border$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_cellpadding$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_table_cellspacing$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.ZERO_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$354 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$355 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$356 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                if (cb_browser.NIL != pageup_possible) {
                                    cb_utilities.cb_link((SubLObject)cb_browser.$kw510$ALPHA_PAGEUP, pageup_item, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
                                }
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$356, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$357 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                cb_utilities.cb_link((SubLObject)cb_browser.$kw490$ALPHA_TOP, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$357, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$358 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                final SubLObject size_val = (SubLObject)cb_browser.TWO_INTEGER;
                                html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                                if (cb_browser.NIL != size_val) {
                                    html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(size_val);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$359 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_teletype_head$.getGlobalValue());
                                    final SubLObject string_var = cb_browser.$cb_alpha_upper_char_order$.getDynamicValue(thread);
                                    SubLObject end_var_$360;
                                    SubLObject end_var;
                                    SubLObject i;
                                    SubLObject v_char;
                                    for (end_var = (end_var_$360 = Sequences.length(string_var)), i = (SubLObject)cb_browser.NIL, i = (SubLObject)cb_browser.ZERO_INTEGER; !i.numGE(end_var_$360); i = number_utilities.f_1X(i)) {
                                        v_char = Strings.sublisp_char(string_var, i);
                                        if (!i.numE((SubLObject)cb_browser.ZERO_INTEGER)) {
                                            html_utilities.html_princ((SubLObject)cb_browser.$str523$_);
                                        }
                                        cb_utilities.cb_link((SubLObject)cb_browser.$kw488$ALPHABETICAL, v_char, v_char, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    html_utilities.html_markup(html_macros.$html_teletype_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$359, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$358, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$355, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$360 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$361 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                if (cb_browser.NIL != pagedn_possible) {
                                    cb_utilities.cb_link((SubLObject)cb_browser.$kw516$ALPHA_PAGEDN, pagedn_item, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
                                }
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$361, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$362 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                cb_utilities.cb_link((SubLObject)cb_browser.$kw504$ALPHA_BOTTOM, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$362, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                            final SubLObject _prev_bind_0_$363 = html_macros.$html_safe_print$.currentBinding(thread);
                            try {
                                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                final SubLObject size_val = (SubLObject)cb_browser.TWO_INTEGER;
                                html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                                if (cb_browser.NIL != size_val) {
                                    html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                    html_utilities.html_markup(size_val);
                                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                                }
                                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                                final SubLObject _prev_bind_0_$364 = html_macros.$html_safe_print$.currentBinding(thread);
                                try {
                                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                                    html_utilities.html_markup(html_macros.$html_teletype_head$.getGlobalValue());
                                    final SubLObject string_var = cb_browser.$cb_alpha_lower_char_order$.getDynamicValue(thread);
                                    SubLObject end_var;
                                    SubLObject i;
                                    SubLObject v_char;
                                    SubLObject end_var_$361;
                                    for (end_var = (end_var_$361 = Sequences.length(string_var)), i = (SubLObject)cb_browser.NIL, i = (SubLObject)cb_browser.ZERO_INTEGER; !i.numGE(end_var_$361); i = number_utilities.f_1X(i)) {
                                        v_char = Strings.sublisp_char(string_var, i);
                                        if (!i.numE((SubLObject)cb_browser.ZERO_INTEGER)) {
                                            html_utilities.html_princ((SubLObject)cb_browser.$str523$_);
                                        }
                                        cb_utilities.cb_link((SubLObject)cb_browser.$kw488$ALPHABETICAL, v_char, v_char, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                                    }
                                    html_utilities.html_markup(html_macros.$html_teletype_tail$.getGlobalValue());
                                }
                                finally {
                                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$364, thread);
                                }
                                html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
                            }
                            finally {
                                html_macros.$html_safe_print$.rebind(_prev_bind_0_$363, thread);
                            }
                            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$360, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$354, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$353, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$351, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_table_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 148130L)
    public static SubLObject cb_alphabetical_central_item(final SubLObject use_type, final SubLObject central_item) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (central_item.isString()) {
            html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw524$MIDDLE));
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$367 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup((SubLObject)cb_browser.FIVE_INTEGER);
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_macros.$html_font_color$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_markup(html_utilities.html_color((SubLObject)cb_browser.$kw118$RED));
                    html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$368 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_princ((SubLObject)cb_browser.$str525$_____);
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$368, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$367, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw37$LEFT));
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$369 = html_macros.$html_safe_print$.currentBinding(thread);
                try {
                    html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                    SubLObject size_val = (SubLObject)cb_browser.FIVE_INTEGER;
                    html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                    if (cb_browser.NIL != size_val) {
                        html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(size_val);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$370 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str526$__A_, central_item);
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$370, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
                    if (use_type == cb_browser.$kw480$MISSING) {
                        size_val = (SubLObject)cb_browser.FOUR_INTEGER;
                        html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                        if (cb_browser.NIL != size_val) {
                            html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                            html_utilities.html_markup(size_val);
                            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        }
                        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                        final SubLObject _prev_bind_0_$371 = html_macros.$html_safe_print$.currentBinding(thread);
                        try {
                            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                            html_utilities.html_princ((SubLObject)cb_browser.$str527$would_be_here_);
                        }
                        finally {
                            html_macros.$html_safe_print$.rebind(_prev_bind_0_$371, thread);
                        }
                        html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
                    }
                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                }
                finally {
                    html_macros.$html_safe_print$.rebind(_prev_bind_0_$369, thread);
                }
                html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            cb_alphabetical_item(central_item, (SubLObject)cb_browser.T);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 148742L)
    public static SubLObject cb_alphabetical_item(final SubLObject constant, SubLObject highlight) {
        if (highlight == cb_browser.UNPROVIDED) {
            highlight = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_table_row_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_table_data_valign$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw524$MIDDLE));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_table_data_align$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_utilities.html_align((SubLObject)cb_browser.$kw126$RIGHT));
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$372 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_indent((SubLObject)cb_browser.UNPROVIDED);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$372, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_table_data_head$.getGlobalValue());
            html_utilities.html_simple_attribute(html_macros.$html_table_data_nowrap$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$373 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                if (cb_browser.NIL != highlight) {
                    html_utilities.html_markup(html_macros.$html_strong_head$.getGlobalValue());
                    final SubLObject size_val = (SubLObject)cb_browser.FIVE_INTEGER;
                    html_utilities.html_markup(html_macros.$html_font_head$.getGlobalValue());
                    if (cb_browser.NIL != size_val) {
                        html_utilities.html_markup(html_macros.$html_font_size$.getGlobalValue());
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_markup(size_val);
                        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$374 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        cb_utilities.cb_show_term(constant, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$374, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_font_tail$.getGlobalValue());
                    html_utilities.html_markup(html_macros.$html_strong_tail$.getGlobalValue());
                }
                else {
                    cb_utilities.cb_show_term(constant, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$373, thread);
            }
            html_utilities.html_markup(html_macros.$html_table_data_tail$.getGlobalValue());
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_table_row_tail$.getGlobalValue());
        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 149312L)
    public static SubLObject cb_alphabetical_placement(final SubLObject string, final SubLObject n_before, final SubLObject n_after) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        thread.resetMultipleValues();
        final SubLObject before_items = cb_alpha_around(string, n_before, n_after);
        final SubLObject after_items = thread.secondMultipleValue();
        thread.resetMultipleValues();
        if (cb_browser.NIL != after_items && constants_high.constant_name(after_items.first()).equal(string)) {
            return Values.values(after_items.first(), before_items, after_items.rest());
        }
        return Values.values((SubLObject)cb_browser.NIL, before_items, after_items);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 149848L)
    public static SubLObject cb_alpha_around(final SubLObject string, final SubLObject n_before, final SubLObject n_after) {
        assert cb_browser.NIL != Types.stringp(string) : string;
        assert cb_browser.NIL != Types.fixnump(n_before) : n_before;
        assert cb_browser.NIL != Types.fixnump(n_after) : n_after;
        final SubLObject before = constant_completion_high.n_constants_before(n_before, string, (SubLObject)cb_browser.T, (SubLObject)cb_browser.ZERO_INTEGER, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.T);
        final SubLObject after = constant_completion_high.n_constants_after(n_after, string, (SubLObject)cb_browser.T, (SubLObject)cb_browser.ZERO_INTEGER, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL);
        return Values.values(Sequences.nreverse(before), after);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 150169L)
    public static SubLObject cb_add_from_trie_map(final SubLObject constant) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != constant_handles.valid_constantP(constant, (SubLObject)cb_browser.UNPROVIDED)) {
            cb_browser.$cb_alpha_around_sofar$.setDynamicValue(Numbers.add(cb_browser.$cb_alpha_around_sofar$.getDynamicValue(thread), (SubLObject)cb_browser.ONE_INTEGER), thread);
            cb_browser.$cb_alpha_around_gather$.setDynamicValue((SubLObject)ConsesLow.cons(constant, cb_browser.$cb_alpha_around_gather$.getDynamicValue(thread)), thread);
            if (cb_browser.$cb_alpha_around_sofar$.getDynamicValue(thread).numGE(cb_browser.$cb_alpha_around_total$.getDynamicValue(thread))) {
                utilities_macros.mapping_finished();
            }
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 155716L)
    public static SubLObject cb_relevant_num_all_assertions(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject result = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                result = Numbers.add(new SubLObject[] { cb_relevant_num_gaf_arg_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_nart_arg_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_predicate_extent_index(v_term, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_function_extent_index(v_term, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_predicate_rule_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_decontextualized_ist_predicate_rule_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_isa_rule_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_genls_rule_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_genl_mt_rule_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_function_rule_index(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED), cb_relevant_num_mt_index(v_term), cb_relevant_num_other_index(v_term) });
            }
            else {
                result = kb_indexing.num_index(v_term);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return result;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 156815L)
    public static SubLObject cb_relevant_num_gaf_arg_index(final SubLObject v_term, SubLObject argnum, SubLObject pred, SubLObject mt) {
        if (argnum == cb_browser.UNPROVIDED) {
            argnum = (SubLObject)cb_browser.NIL;
        }
        if (pred == cb_browser.UNPROVIDED) {
            pred = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$375 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_gaf_arg_index(v_term, argnum, pred);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$375, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$376 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_gaf_arg_index(v_term, argnum, pred);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$376, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_gaf_arg_index(v_term, argnum, pred, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 157223L)
    public static SubLObject cb_relevant_num_nart_arg_index(final SubLObject v_term, SubLObject argnum, SubLObject func, SubLObject mt) {
        if (argnum == cb_browser.UNPROVIDED) {
            argnum = (SubLObject)cb_browser.NIL;
        }
        if (func == cb_browser.UNPROVIDED) {
            func = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$377 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_nart_arg_index(v_term, argnum, func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$377, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$378 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_nart_arg_index(v_term, argnum, func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$378, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_nart_arg_index(v_term, argnum, func);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 157632L)
    public static SubLObject cb_relevant_num_predicate_extent_index(final SubLObject pred, SubLObject mt) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$379 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_predicate_extent_index(pred);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$379, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$380 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_predicate_extent_index(pred);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$380, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_predicate_extent_index(pred, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 158041L)
    public static SubLObject cb_relevant_num_function_extent_index(final SubLObject func, SubLObject mt) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$381 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_function_extent_index(func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$381, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$382 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_function_extent_index(func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$382, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_function_extent_index(func);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 158443L)
    public static SubLObject cb_relevant_num_predicate_rule_index(final SubLObject pred, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$383 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_predicate_rule_index(pred, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$383, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$384 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_predicate_rule_index(pred, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$384, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_predicate_rule_index(pred, sense, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 158881L)
    public static SubLObject cb_relevant_num_decontextualized_ist_predicate_rule_index(final SubLObject pred, SubLObject sense, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$385 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.num_decontextualized_ist_predicate_rule_index(pred, sense, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$385, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$386 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.num_decontextualized_ist_predicate_rule_index(pred, sense, (SubLObject)cb_browser.UNPROVIDED);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$386, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_decontextualized_ist_predicate_rule_index(pred, sense, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 159327L)
    public static SubLObject cb_relevant_num_isa_rule_index(final SubLObject col, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$387 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_isa_rule_index(col, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$387, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$388 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_isa_rule_index(col, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$388, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_isa_rule_index(col, sense, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 159738L)
    public static SubLObject cb_relevant_num_quoted_isa_rule_index(final SubLObject col, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$389 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_quoted_isa_rule_index(col, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$389, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$390 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_quoted_isa_rule_index(col, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$390, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_quoted_isa_rule_index(col, sense, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 160177L)
    public static SubLObject cb_relevant_num_genls_rule_index(final SubLObject col, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$391 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_genls_rule_index(col, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$391, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$392 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_genls_rule_index(col, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$392, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_genls_rule_index(col, sense, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 160596L)
    public static SubLObject cb_relevant_num_genl_mt_rule_index(final SubLObject genl_mt, SubLObject sense, SubLObject rule_mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (rule_mt == cb_browser.UNPROVIDED) {
            rule_mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == rule_mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$393 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_genl_mt_rule_index(genl_mt, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$393, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$394 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_genl_mt_rule_index(genl_mt, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$394, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_genl_mt_rule_index(genl_mt, sense, rule_mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 161049L)
    public static SubLObject cb_relevant_num_function_rule_index(final SubLObject func, SubLObject mt, SubLObject direction) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$395 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_function_rule_index(func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$395, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$396 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_function_rule_index(func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$396, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_function_rule_index(func, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 161465L)
    public static SubLObject cb_relevant_num_exception_rule_index(final SubLObject rule, SubLObject mt, SubLObject direction) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$397 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_exception_rule_index(rule);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$397, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$398 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_exception_rule_index(rule);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$398, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_exception_rule_index(rule, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 161885L)
    public static SubLObject cb_relevant_num_pragma_rule_index(final SubLObject rule, SubLObject mt, SubLObject direction) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$399 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_pragma_rule_index(rule);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$399, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$400 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_pragma_rule_index(rule);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$400, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_pragma_rule_index(rule, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 162293L)
    public static SubLObject cb_relevant_num_unbound_rule_index(SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$401 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = auxiliary_indexing.relevant_num_unbound_rule_index(sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$401, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$402 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = auxiliary_indexing.relevant_num_unbound_rule_index(sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$402, thread);
                    }
                }
            }
            else {
                count = auxiliary_indexing.num_unbound_rule_index(sense, mt, direction);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 162708L)
    public static SubLObject cb_relevant_num_other_index(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$403 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_other_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$403, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$404 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_other_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$404, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_other_index(v_term);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 163006L)
    public static SubLObject cb_relevant_num_mt_index(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$405 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_mt_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$405, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$406 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_mt_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$406, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_mt_index(v_term);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 163292L)
    public static SubLObject cb_relevant_num_hlmt_index(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject count = (SubLObject)cb_browser.ZERO_INTEGER;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$407 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_hlmt_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$407, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$408 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        count = kb_indexing.relevant_num_hlmt_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$408, thread);
                    }
                }
            }
            else {
                count = kb_indexing.num_hlmt_index(v_term);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return count;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 163586L)
    public static SubLObject cb_relevant_key_gaf_arg_index(final SubLObject v_term, SubLObject arg, SubLObject pred, SubLObject mt) {
        if (arg == cb_browser.UNPROVIDED) {
            arg = (SubLObject)cb_browser.NIL;
        }
        if (pred == cb_browser.UNPROVIDED) {
            pred = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$409 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_gaf_arg_index(v_term, arg, pred);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$409, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$410 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_gaf_arg_index(v_term, arg, pred);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$410, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_gaf_arg_index(v_term, arg, pred);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL == pred) {
            if (cb_browser.NIL == arg) {
                sorted_answer_list = cb_utilities.cb_sort_args_for_display(answer_list);
            }
            else {
                sorted_answer_list = cb_utilities.cb_sort_preds_for_display(v_term, answer_list, (SubLObject)cb_browser.UNPROVIDED);
            }
        }
        else {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 164437L)
    public static SubLObject cb_relevant_key_nart_arg_index(final SubLObject v_term, SubLObject arg, SubLObject func, SubLObject mt) {
        if (arg == cb_browser.UNPROVIDED) {
            arg = (SubLObject)cb_browser.NIL;
        }
        if (func == cb_browser.UNPROVIDED) {
            func = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$411 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_nart_arg_index(v_term, arg, func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$411, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$412 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_nart_arg_index(v_term, arg, func);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$412, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_nart_arg_index(v_term, arg, func);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL == func) {
            if (cb_browser.NIL == arg) {
                sorted_answer_list = cb_utilities.cb_sort_args_for_display(answer_list);
            }
            else {
                sorted_answer_list = cb_utilities.cb_sort_preds_for_display(v_term, answer_list, (SubLObject)cb_browser.UNPROVIDED);
            }
        }
        else {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 165196L)
    public static SubLObject cb_relevant_key_predicate_extent_index(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$413 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_predicate_extent_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$413, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$414 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_predicate_extent_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$414, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_predicate_extent_index(v_term);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 165653L)
    public static SubLObject cb_relevant_key_predicate_rule_index(final SubLObject v_term, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$415 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_predicate_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$415, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$416 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_predicate_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$416, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_predicate_rule_index(v_term, sense, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL != sense && cb_browser.NIL == mt) {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            sorted_answer_list = answer_list;
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 166355L)
    public static SubLObject cb_relevant_key_decontextualized_ist_predicate_rule_index(final SubLObject v_term, SubLObject sense, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS)) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$417 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.key_decontextualized_ist_predicate_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$417, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$418 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.key_decontextualized_ist_predicate_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$418, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_decontextualized_ist_predicate_rule_index(v_term, sense);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        return answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 166862L)
    public static SubLObject cb_relevant_key_isa_rule_index(final SubLObject v_term, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$419 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_isa_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$419, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$420 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_isa_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$420, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_isa_rule_index(v_term, sense, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL != sense && cb_browser.NIL == mt) {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            sorted_answer_list = answer_list;
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 167540L)
    public static SubLObject cb_relevant_key_quoted_isa_rule_index(final SubLObject v_term, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$421 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_quoted_isa_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$421, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$422 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_quoted_isa_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$422, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_quoted_isa_rule_index(v_term, sense, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL != sense && cb_browser.NIL == mt) {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            sorted_answer_list = answer_list;
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 168246L)
    public static SubLObject cb_relevant_key_genls_rule_index(final SubLObject v_term, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$423 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_genls_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$423, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$424 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_genls_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$424, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_genls_rule_index(v_term, sense, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL != sense && cb_browser.NIL == mt) {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            sorted_answer_list = answer_list;
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 168932L)
    public static SubLObject cb_relevant_key_genl_mt_rule_index(final SubLObject v_term, SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$425 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_genl_mt_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$425, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$426 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_genl_mt_rule_index(v_term, sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$426, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_genl_mt_rule_index(v_term, sense, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL != sense && cb_browser.NIL == mt) {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            sorted_answer_list = answer_list;
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 169625L)
    public static SubLObject cb_relevant_key_function_rule_index(final SubLObject v_term, SubLObject mt, SubLObject direction) {
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$427 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_function_rule_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$427, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$428 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = kb_indexing.relevant_key_function_rule_index(v_term);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$428, thread);
                    }
                }
            }
            else {
                answer_list = kb_indexing.key_function_rule_index(v_term, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL == mt) {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            sorted_answer_list = answer_list;
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 170293L)
    public static SubLObject cb_relevant_key_unbound_rule_index(SubLObject sense, SubLObject mt, SubLObject direction) {
        if (sense == cb_browser.UNPROVIDED) {
            sense = (SubLObject)cb_browser.NIL;
        }
        if (mt == cb_browser.UNPROVIDED) {
            mt = (SubLObject)cb_browser.NIL;
        }
        if (direction == cb_browser.UNPROVIDED) {
            direction = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        SubLObject answer_list = (SubLObject)cb_browser.NIL;
        SubLObject sorted_answer_list = (SubLObject)cb_browser.NIL;
        final SubLObject _prev_bind_0 = cb_utilities.$assertion_filter_hook$.currentBinding(thread);
        try {
            cb_utilities.$assertion_filter_hook$.bind(cb_viewpoint.cb_calc_filter_hooks(), thread);
            if (cb_browser.NIL != cb_viewpoint.active_filter_p((SubLObject)cb_browser.$sym455$MTS) && cb_browser.NIL == mt) {
                if (cb_browser.NIL != cb_parameters.cb_mts_filter_use_genlmt()) {
                    final SubLObject _prev_bind_0_$429 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = auxiliary_indexing.relevant_key_unbound_rule_index(sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$429, thread);
                    }
                }
                else {
                    final SubLObject _prev_bind_0_$430 = mt_relevance_macros.$relevant_mt_function$.currentBinding(thread);
                    final SubLObject _prev_bind_2 = mt_relevance_macros.$relevant_mts$.currentBinding(thread);
                    try {
                        mt_relevance_macros.$relevant_mt_function$.bind((SubLObject)cb_browser.$sym457$RELEVANT_MT_IS_IN_LIST, thread);
                        mt_relevance_macros.$relevant_mts$.bind(cb_viewpoint.cb_mts_filter(), thread);
                        answer_list = auxiliary_indexing.relevant_key_unbound_rule_index(sense);
                    }
                    finally {
                        mt_relevance_macros.$relevant_mts$.rebind(_prev_bind_2, thread);
                        mt_relevance_macros.$relevant_mt_function$.rebind(_prev_bind_0_$430, thread);
                    }
                }
            }
            else {
                answer_list = auxiliary_indexing.key_unbound_rule_index(sense, mt);
            }
        }
        finally {
            cb_utilities.$assertion_filter_hook$.rebind(_prev_bind_0, thread);
        }
        if (cb_browser.NIL != sense && cb_browser.NIL == mt) {
            sorted_answer_list = cb_utilities.cb_sort_mts_for_display(answer_list, (SubLObject)cb_browser.UNPROVIDED);
        }
        else {
            sorted_answer_list = answer_list;
        }
        return sorted_answer_list;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 170972L)
    public static SubLObject cb_my_creator_lookup(final SubLObject fort) {
        return bookkeeping_store.creator(fort, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171086L)
    public static SubLObject cb_my_creation_time_lookup(final SubLObject fort) {
        return bookkeeping_store.creation_time(fort, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171167L)
    public static SubLObject cb_my_creation_purpose_lookup(final SubLObject fort) {
        return bookkeeping_store.creation_purpose(fort, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171254L)
    public static SubLObject cb_my_creation_second_lookup(final SubLObject fort) {
        return bookkeeping_store.creation_second(fort, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_link_graph(final SubLObject v_term, SubLObject newlineP) {
        if (newlineP == cb_browser.UNPROVIDED) {
            newlineP = (SubLObject)cb_browser.NIL;
        }
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (cb_browser.NIL != cb_c_check_graph(v_term)) {
            if (cb_browser.NIL != newlineP) {
                html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            }
            final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw52$CONTENT);
            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            cb_parameters.cyc_cgi_url_int();
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str529$cb_c_graph__A, cb_utilities.cb_term_identifier(v_term));
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            if (cb_browser.NIL != frame_name_var) {
                html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(frame_name_var);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_princ(cb_c_graph_type_string(v_term));
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        }
        return v_term;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_c_graph(final SubLObject args) {
        SubLObject term_spec = (SubLObject)cb_browser.NIL;
        cdestructuring_bind.destructuring_bind_must_consp(args, args, (SubLObject)cb_browser.$list178);
        term_spec = args.first();
        final SubLObject current = args.rest();
        if (cb_browser.NIL == current) {
            final SubLObject v_term = cb_utilities.cb_guess_term(term_spec, (SubLObject)cb_browser.UNPROVIDED);
            cb_c_graph_internal(v_term);
        }
        else {
            cdestructuring_bind.cdestructuring_bind_error(args, (SubLObject)cb_browser.$list178);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_c_graph_internal(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject title = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str532$Assertion_Graph_for__S, v_term);
        html_utilities.html_markup((SubLObject)cb_browser.$str0$__DOCTYPE_html_PUBLIC_____W3C__DT);
        if (cb_browser.NIL != html_macros.$html_force_ie_standards_mode$.getDynamicValue(thread)) {
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str1$_meta_http_equiv__X_UA_Compatible);
        }
        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = cyc_file_dependencies.$html_emitted_file_dependencies$.currentBinding(thread);
        try {
            cyc_file_dependencies.$html_emitted_file_dependencies$.bind((SubLObject)((cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread) == cb_browser.$kw2$UNINITIALIZED) ? ConsesLow.list(cb_browser.EMPTY_SUBL_OBJECT_ARRAY) : cyc_file_dependencies.$html_emitted_file_dependencies$.getDynamicValue(thread)), thread);
            html_utilities.html_markup(html_macros.$html_html_head$.getGlobalValue());
            final SubLObject _prev_bind_0_$431 = dhtml_macros.$html_element_id$.currentBinding(thread);
            try {
                dhtml_macros.$html_element_id$.bind((SubLObject)cb_browser.ZERO_INTEGER, thread);
                dhtml_macros.basic_ajax_scripts();
                html_utilities.html_markup(dhtml_macros.$js_load_later$.getGlobalValue());
                html_utilities.html_markup(html_macros.$html_head_head$.getGlobalValue());
                html_macros.html_head_content_type();
                cb_parameters.cb_head_shortcut_icon();
                html_utilities.html_meta_robot_instructions(cb_parameters.$cb_permit_robots_to_indexP$.getDynamicValue(thread), cb_parameters.$cb_permit_robots_to_followP$.getDynamicValue(thread));
                cyc_file_dependencies.css((SubLObject)cb_browser.$kw3$CB_CYC);
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(html_macros.$html_title_head$.getGlobalValue());
                html_utilities.html_princ(title);
                html_utilities.html_markup(html_macros.$html_title_tail$.getGlobalValue());
                dhtml_macros.dhtml_with_dom_script();
                dhtml_macros.dhtml_with_toggle_visibility_support();
                dhtml_macros.dhtml_creation_scripts();
                html_utilities.html_markup(html_macros.$html_head_tail$.getGlobalValue());
                html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                final SubLObject _prev_bind_0_$432 = html_macros.$html_inside_bodyP$.currentBinding(thread);
                try {
                    html_macros.$html_inside_bodyP$.bind((SubLObject)cb_browser.T, thread);
                    html_utilities.html_markup(html_macros.$html_body_head$.getGlobalValue());
                    html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
                    final SubLObject _prev_bind_0_$433 = html_macros.$html_safe_print$.currentBinding(thread);
                    try {
                        html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                        html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
                        cb_utilities.cb_show_term(v_term, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_princ((SubLObject)cb_browser.$str533$_assertion_graph);
                        html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
                        cb_c_print_graph(v_term);
                        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                        html_utilities.html_copyright_notice();
                    }
                    finally {
                        html_macros.$html_safe_print$.rebind(_prev_bind_0_$433, thread);
                    }
                    html_utilities.html_markup(html_macros.$html_body_tail$.getGlobalValue());
                    html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
                }
                finally {
                    html_macros.$html_inside_bodyP$.rebind(_prev_bind_0_$432, thread);
                }
            }
            finally {
                dhtml_macros.$html_element_id$.rebind(_prev_bind_0_$431, thread);
            }
            html_utilities.html_markup(html_macros.$html_html_tail$.getGlobalValue());
        }
        finally {
            cyc_file_dependencies.$html_emitted_file_dependencies$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_c_graph_type_string(final SubLObject v_term) {
        if (cb_browser.NIL != cb_c_check_graph_of_script(v_term)) {
            return (SubLObject)cb_browser.$str534$Script_Graph;
        }
        return (SubLObject)cb_browser.$str535$Unknown_Graph;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_c_print_graph(final SubLObject v_term) {
        if (cb_browser.NIL != cb_c_check_graph_of_script(v_term)) {
            cb_c_print_graph_of_script(v_term);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_c_check_graph(final SubLObject v_term) {
        return cb_c_check_graph_of_script(v_term);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_c_check_graph_of_script(final SubLObject v_term) {
        return (SubLObject)SubLObjectFactory.makeBoolean(cb_browser.NIL != forts.fort_p(v_term) && cb_browser.NIL != genls.genl_in_any_mtP(v_term, cb_browser.$const536$Situation));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 171339L)
    public static SubLObject cb_c_print_graph_of_script(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
        final SubLObject signature = PrintLow.format((SubLObject)cb_browser.NIL, (SubLObject)cb_browser.$str537$_a, random.random(Numbers.expt((SubLObject)cb_browser.TWO_INTEGER, (SubLObject)cb_browser.$int538$30)));
        final SubLObject defining_mt = kb_accessors.defining_mt(v_term);
        if (cb_browser.NIL == defining_mt) {
            html_utilities.html_markup(html_macros.$html_italic_head$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str539$Graphical_editing_of_this_script_);
            cb_utilities.cb_show_term(cb_browser.$const540$definingMt, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_princ((SubLObject)cb_browser.$str541$_assertion_);
            html_utilities.html_markup(html_macros.$html_italic_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        if (cb_browser.NIL != constants_high.find_constant((SubLObject)cb_browser.$str542$candidateProperSubSituationTypes) && cb_browser.NIL == ask_utilities.ask_template((SubLObject)cb_browser.$sym543$_ARG2, (SubLObject)ConsesLow.list(cb_browser.$const544$candidateProperSubSituationTypes, v_term, (SubLObject)cb_browser.$sym543$_ARG2), (cb_browser.NIL != defining_mt) ? defining_mt : cb_browser.$const147$EverythingPSC, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED)) {
            html_utilities.html_markup(html_macros.$html_italic_head$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str545$Note_that_since_no_scenes_were_fo);
            html_utilities.html_markup(html_macros.$html_italic_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        }
        blue_grapher_utilities.blue_event(signature, (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str546$com_cyc_framework_ui_scriptEditor, (SubLObject)ConsesLow.list(new SubLObject[] { cb_browser.$kw547$BUILDER_FN, cb_browser.$sym548$BBF_SCRIPT, cb_browser.$kw549$PREDS, cb_browser.NIL, cb_browser.$kw550$FORTS, ConsesLow.list(v_term), cb_browser.$kw433$MT, cb_browser.NIL, cb_browser.$kw551$DEPTH, cb_browser.ONE_INTEGER })));
        cb_blue_grapher.cb_blue_applet((SubLObject)ConsesLow.list((SubLObject)cb_browser.$kw552$CLASS_FILE, (SubLObject)cb_browser.$str553$com_cyc_framework_ui_scriptEditor, (SubLObject)cb_browser.$kw554$WIDTH, (SubLObject)cb_browser.$str555$100_, (SubLObject)cb_browser.$kw556$HEIGHT, (SubLObject)cb_browser.$str557$90_, (SubLObject)cb_browser.$kw558$SIGNATURE, signature));
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        final SubLObject dhtml_object_id = (SubLObject)cb_browser.$str559$pertinent_queries;
        html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
        dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
        html_utilities.html_princ((SubLObject)cb_browser.$str560$Troubleshooting);
        html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
        html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
        if (cb_browser.NIL != dhtml_object_id) {
            html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(dhtml_object_id);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str561$Java_Profile);
            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
            html_utilities.html_princ((SubLObject)cb_browser.$str562$In_order_for_the_Grapher_applet_t);
            html_macros.verify_not_within_html_pre();
            html_utilities.html_markup(html_macros.$html_preformatted_head$.getGlobalValue());
            final SubLObject _prev_bind_0_$434 = html_macros.$within_html_pre$.currentBinding(thread);
            try {
                html_macros.$within_html_pre$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_princ((SubLObject)cb_browser.$str563$_grant_codeBase__http___localhost);
            }
            finally {
                html_macros.$within_html_pre$.rebind(_prev_bind_0_$434, thread);
            }
            html_utilities.html_markup(html_macros.$html_preformatted_tail$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str564$On_Linux_systems_this_file_should);
            html_utilities.html_markup(html_macros.$html_code_head$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str565$_HOME__java_policy);
            html_utilities.html_markup(html_macros.$html_code_tail$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str566$____See_);
            html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$str567$http___download_oracle_com_javase);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup((SubLObject)cb_browser.$kw7$MAIN);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0_$435 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                html_utilities.html_princ((SubLObject)cb_browser.$str568$the_Oracle_documentation);
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0_$435, thread);
            }
            html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str569$_for_other_OS_s_);
            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
            html_utilities.html_markup(html_macros.$html_bold_head$.getGlobalValue());
            html_utilities.html_princ((SubLObject)cb_browser.$str570$It_worked_once_but_then_stopped_w);
            html_utilities.html_markup(html_macros.$html_bold_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.TWO_INTEGER);
            html_utilities.html_princ((SubLObject)cb_browser.$str571$In_your_Java_console__clear_the_c);
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
        html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 176063L)
    public static SubLObject cb_c_pertinent_query_links(final SubLObject args) {
        final SubLObject v_term = cb_utilities.cb_guess_term(html_utilities.html_extract_input((SubLObject)cb_browser.$str22$term, args), (SubLObject)cb_browser.UNPROVIDED);
        return cb_c_print_pertinent_query_links(v_term);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 176461L)
    public static SubLObject cb_c_print_pertinent_query_links(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject queries = pertinent_queries_for_term(v_term);
        if (cb_browser.NIL != queries) {
            final SubLObject dhtml_object_id = (SubLObject)cb_browser.$str559$pertinent_queries;
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            html_utilities.html_indent((SubLObject)cb_browser.ZERO_INTEGER);
            html_utilities.html_hr((SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
            dhtml_macros.dhtml_switch_visibility_links_arrows(dhtml_object_id, (SubLObject)cb_browser.$str47$);
            PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str572$Pertinent_Queries___S_, Sequences.length(queries));
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
            html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
            dhtml_macros.dhtml_set_switched_visibility(dhtml_object_id, (SubLObject)cb_browser.$kw53$INVISIBLE, (SubLObject)cb_browser.$kw49$TEXT);
            html_utilities.html_markup(html_macros.$html_div_head$.getGlobalValue());
            if (cb_browser.NIL != dhtml_object_id) {
                html_utilities.html_markup(html_macros.$html_attribute_id$.getGlobalValue());
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
                html_utilities.html_markup(dhtml_object_id);
                html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            }
            html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
            final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
            try {
                html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
                SubLObject cdolist_list_var = kb_utilities.sort_terms(queries, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.NIL, (SubLObject)cb_browser.T, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
                SubLObject query = (SubLObject)cb_browser.NIL;
                query = cdolist_list_var.first();
                while (cb_browser.NIL != cdolist_list_var) {
                    cb_c_print_pertinent_query_link(v_term, query);
                    cdolist_list_var = cdolist_list_var.rest();
                    query = cdolist_list_var.first();
                }
            }
            finally {
                html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
            }
            html_utilities.html_markup(html_macros.$html_div_tail$.getGlobalValue());
            html_utilities.html_source_readability_terpri((SubLObject)cb_browser.UNPROVIDED);
        }
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 177044L)
    public static SubLObject pertinent_queries_for_term(final SubLObject v_term) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        final SubLObject _prev_bind_0 = czer_vars.$disable_create_narts_regardless_of_whether_within_assertP$.currentBinding(thread);
        try {
            czer_vars.$disable_create_narts_regardless_of_whether_within_assertP$.bind((SubLObject)cb_browser.T, thread);
            return ask_utilities.query_variable((SubLObject)cb_browser.$sym574$_QUERY, (SubLObject)ConsesLow.list(cb_browser.$const575$queryHasVeryHighPertinenceForThin, (SubLObject)cb_browser.$sym574$_QUERY, v_term), cb_browser.$const576$InferencePSC, (SubLObject)cb_browser.$list577);
        }
        finally {
            czer_vars.$disable_create_narts_regardless_of_whether_within_assertP$.rebind(_prev_bind_0, thread);
        }
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 177445L)
    public static SubLObject cb_c_print_pertinent_query_link(final SubLObject v_term, final SubLObject query) {
        cb_utilities.cb_link((SubLObject)cb_browser.$kw578$PERTINENT_QUERY, v_term, query, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED, (SubLObject)cb_browser.UNPROVIDED);
        html_utilities.html_newline((SubLObject)cb_browser.UNPROVIDED);
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 177577L)
    public static SubLObject cb_link_pertinent_query(final SubLObject v_term, final SubLObject query) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        html_utilities.html_markup(html_macros.$html_no_break_head$.getGlobalValue());
        html_utilities.html_indent((SubLObject)cb_browser.TWO_INTEGER);
        final SubLObject frame_name_var = cb_utilities.cb_frame_name((SubLObject)cb_browser.$kw7$MAIN);
        html_utilities.html_markup(html_macros.$html_anchor_head$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_anchor_href$.getGlobalValue());
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        cb_parameters.cyc_cgi_url_int();
        PrintLow.format(html_macros.$html_stream$.getDynamicValue(thread), (SubLObject)cb_browser.$str579$cb_c_pertinent_query_term__A_quer, cb_utilities.cb_term_identifier(v_term), cb_utilities.cb_term_identifier(query));
        html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        if (cb_browser.NIL != frame_name_var) {
            html_utilities.html_markup(html_macros.$html_anchor_target$.getGlobalValue());
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
            html_utilities.html_markup(frame_name_var);
            html_utilities.html_char((SubLObject)Characters.CHAR_quotation, (SubLObject)cb_browser.UNPROVIDED);
        }
        html_utilities.html_char((SubLObject)Characters.CHAR_greater, (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject _prev_bind_0 = html_macros.$html_safe_print$.currentBinding(thread);
        try {
            html_macros.$html_safe_print$.bind((SubLObject)cb_browser.T, thread);
            html_utilities.html_princ(kb_paths.fort_name(query));
        }
        finally {
            html_macros.$html_safe_print$.rebind(_prev_bind_0, thread);
        }
        html_utilities.html_markup(html_macros.$html_anchor_tail$.getGlobalValue());
        html_utilities.html_markup(html_macros.$html_no_break_tail$.getGlobalValue());
        return (SubLObject)cb_browser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/cb-browser.lisp", position = 177868L)
    public static SubLObject cb_c_pertinent_query(final SubLObject args) {
        final SubLObject v_term = cb_utilities.cb_guess_term(html_utilities.html_extract_input((SubLObject)cb_browser.$str22$term, args), (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject possibly_quoted_term = el_utilities.possibly_quote_reifiable_naut(v_term);
        final SubLObject query_spec = cb_utilities.cb_guess_term(html_utilities.html_extract_input((SubLObject)cb_browser.$str581$query, args), (SubLObject)cb_browser.UNPROVIDED);
        final SubLObject raw_sentence = kb_query.kbq_sentence(query_spec);
        final SubLObject sentence = query_utilities.indexicalized_query_substitute_term(possibly_quoted_term, raw_sentence);
        final SubLObject raw_mt = kb_query.kbq_mt(query_spec);
        final SubLObject mt = query_utilities.indexicalized_query_substitute_term(possibly_quoted_term, raw_mt);
        final SubLObject non_explanatory_sentence = kb_query.kbq_pragmatics(query_spec);
        final SubLObject v_properties = inference_parameters.explicify_inference_engine_query_property_defaults(kb_query.kbq_query_properties(query_spec));
        if (cb_browser.NIL != non_explanatory_sentence) {
            return cb_query.cb_kb_query(sentence, mt, v_properties, query_spec, non_explanatory_sentence);
        }
        return cb_query.cb_kb_query(sentence, mt, v_properties, query_spec, (SubLObject)cb_browser.UNPROVIDED);
    }
    
    public static SubLObject declare_cb_browser_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index", "CB-C-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_content_page_no_frames_index", "CB-C-CONTENT-PAGE-NO-FRAMES-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_guts", "CB-C-INDEX-GUTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_term_page_heading", "CB-TERM-PAGE-HEADING", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_views", "CB-C-INDEX-VIEWS", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_other_assertions_guts", "CB-C-INDEX-OTHER-ASSERTIONS-GUTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_bookkeeping_assertions_guts", "CB-C-INDEX-BOOKKEEPING-ASSERTIONS-GUTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_kb_assertions_guts", "CB-C-INDEX-KB-ASSERTIONS-GUTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_auxiliary_index", "CB-C-INDEX-AUXILIARY-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_fort_index", "CB-C-INDEX-FORT-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_show_term_index_besides_gaf_arg", "CB-SHOW-TERM-INDEX-BESIDES-GAF-ARG", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_gaf_args", "CB-C-INDEX-GAF-ARGS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_gaf_arg_index", "CB-GAF-ARG-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_gaf_arg_pred_index", "CB-GAF-ARG-PRED-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_make_gaf_arg_pred_object_id", "CB-MAKE-GAF-ARG-PRED-OBJECT-ID", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_gaf_arg_pred_mt_index", "CB-GAF-ARG-PRED-MT-INDEX", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_nart_args", "CB-C-INDEX-NART-ARGS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_nart_arg_index", "CB-NART-ARG-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_make_nart_arg_object_id", "CB-MAKE-NART-ARG-OBJECT-ID", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_nart_arg_func_index", "CB-NART-ARG-FUNC-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_predicate_extent", "CB-C-INDEX-PREDICATE-EXTENT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_predicate_extent_mt_index", "CB-PREDICATE-EXTENT-MT-INDEX", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_function_extent", "CB-C-INDEX-FUNCTION-EXTENT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_predicate_rules", "CB-C-INDEX-PREDICATE-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_predicate_rule_index", "CB-PREDICATE-RULE-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_predicate_rule_mt_index", "CB-PREDICATE-RULE-MT-INDEX", 3, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_make_predicate_rule_mt_id", "CB-MAKE-PREDICATE-RULE-MT-ID", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_predicate_rule_mt_direction_index", "CB-PREDICATE-RULE-MT-DIRECTION-INDEX", 4, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_decontextualized_ist_predicate_rules", "CB-C-INDEX-DECONTEXTUALIZED-IST-PREDICATE-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_decontextualized_ist_predicate_rule_index", "CB-DECONTEXTUALIZED-IST-PREDICATE-RULE-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_decontextualized_ist_predicate_rule_direction_index", "CB-DECONTEXTUALIZED-IST-PREDICATE-RULE-DIRECTION-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_isa_rules", "CB-C-INDEX-ISA-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_isa_rule_index", "CB-ISA-RULE-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_isa_rule_mt_index", "CB-ISA-RULE-MT-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_isa_rule_mt_direction_index", "CB-ISA-RULE-MT-DIRECTION-INDEX", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_quoted_isa_rules", "CB-C-INDEX-QUOTED-ISA-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_quoted_isa_rule_index", "CB-QUOTED-ISA-RULE-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_quoted_isa_rule_mt_index", "CB-QUOTED-ISA-RULE-MT-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_quoted_isa_rule_mt_direction_index", "CB-QUOTED-ISA-RULE-MT-DIRECTION-INDEX", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_genls_rules", "CB-C-INDEX-GENLS-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_genls_rule_index", "CB-GENLS-RULE-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_genls_rule_mt_index", "CB-GENLS-RULE-MT-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_genls_rule_mt_direction_index", "CB-GENLS-RULE-MT-DIRECTION-INDEX", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_genl_mt_rules", "CB-C-INDEX-GENL-MT-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_genl_mt_rule_index", "CB-GENL-MT-RULE-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_genl_mt_rule_mt_index", "CB-GENL-MT-RULE-MT-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_genl_mt_rule_mt_direction_index", "CB-GENL-MT-RULE-MT-DIRECTION-INDEX", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_function_rules", "CB-C-INDEX-FUNCTION-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_function_rule_mt_index", "CB-FUNCTION-RULE-MT-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_function_rule_mt_direction_index", "CB-FUNCTION-RULE-MT-DIRECTION-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_unbound_rules", "CB-C-INDEX-UNBOUND-RULES", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_unbound_rule_index", "CB-UNBOUND-RULE-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_unbound_rule_mt_index", "CB-UNBOUND-RULE-MT-INDEX", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_unbound_rule_mt_direction_index", "CB-UNBOUND-RULE-MT-DIRECTION-INDEX", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_other", "CB-C-INDEX-OTHER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_index_mt", "CB-C-INDEX-MT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_el_hl_formulas_link", "CB-C-EL-HL-FORMULAS-LINK", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_show_el_formulas_for_index_hookP", "CB-C-SHOW-EL-FORMULAS-FOR-INDEX-HOOK?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_assertion_formula_display_exceptionP", "CB-C-ASSERTION-FORMULA-DISPLAY-EXCEPTION?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_show_el_formulas_for_hookP", "CB-SHOW-EL-FORMULAS-FOR-HOOK?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_el", "CB-C-EL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_el_formulas_for_index_hook", "CB-LINK-EL-FORMULAS-FOR-INDEX-HOOK", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_hl", "CB-C-HL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_hl_formulas_for_index_hook", "CB-LINK-HL-FORMULAS-FOR-INDEX-HOOK", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_documentation", "CB-C-DOCUMENTATION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_documentation", "CB-LINK-DOCUMENTATION", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "clear_cb_documentation_predicate_p", "CLEAR-CB-DOCUMENTATION-PREDICATE-P", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "remove_cb_documentation_predicate_p", "REMOVE-CB-DOCUMENTATION-PREDICATE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_documentation_predicate_p_internal", "CB-DOCUMENTATION-PREDICATE-P-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_documentation_predicate_p", "CB-DOCUMENTATION-PREDICATE-P", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_print_documentation_information", "CB-PRINT-DOCUMENTATION-INFORMATION", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "display_semantic_web_uris", "DISPLAY-SEMANTIC-WEB-URIS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "display_external_links", "DISPLAY-EXTERNAL-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "display_kb_subsets", "DISPLAY-KB-SUBSETS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_summary_sentence", "CB-SUMMARY-SENTENCE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "all_kb_subset_collections", "ALL-KB-SUBSET-COLLECTIONS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_bookkeeping_info", "CB-C-BOOKKEEPING-INFO", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_bookkeeping_gafs", "CB-C-BOOKKEEPING-GAFS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_display_bookkeeping_gaf", "CB-DISPLAY-BOOKKEEPING-GAF", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_bookkeeping_header", "CB-C-BOOKKEEPING-HEADER", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_documentation_internal", "CB-C-DOCUMENTATION-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_documentation_internal_guts", "CB-C-DOCUMENTATION-INTERNAL-GUTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_documentation_assertion", "CB-C-DOCUMENTATION-ASSERTION", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_documentation_string", "CB-C-DOCUMENTATION-STRING", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_definitional", "CB-C-DEFINITIONAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_definitional", "CB-LINK-DEFINITIONAL", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_definitional_internal", "CB-C-DEFINITIONAL-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_possibly_show_followup_widget", "CB-POSSIBLY-SHOW-FOLLOWUP-WIDGET", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_print_definitional_information", "CB-PRINT-DEFINITIONAL-INFORMATION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_definitional_internal_guts_fort", "CB-C-DEFINITIONAL-INTERNAL-GUTS-FORT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_describe_constant", "CB-DESCRIBE-CONSTANT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_describe_constant", "CB-LINK-DESCRIBE-CONSTANT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_describe_nart", "CB-DESCRIBE-NART", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_describe_nart", "CB-LINK-DESCRIBE-NART", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_describe_index", "CB-DESCRIBE-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_describe_inference_modules", "CB-DESCRIBE-INFERENCE-MODULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_all_asserted_knowledge", "CB-C-ALL-ASSERTED-KNOWLEDGE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_all_asserted_knowledge_guts", "CB-C-ALL-ASSERTED-KNOWLEDGE-GUTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_all_asserted_knowledge", "CB-LINK-ALL-ASSERTED-KNOWLEDGE", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_bookkeeping_assertions", "CB-C-BOOKKEEPING-ASSERTIONS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_bookkeeping_assertions", "CB-LINK-BOOKKEEPING-ASSERTIONS", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_total", "CB-C-TOTAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_total_guts", "CB-C-TOTAL-GUTS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_constant_total", "CB-LINK-CONSTANT-TOTAL", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_total_internal", "CB-C-TOTAL-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_chronological_order", "CB-LINK-CHRONOLOGICAL-ORDER", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_assertion_chronology", "CB-ASSERTION-CHRONOLOGY", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_assertions_in_chronological_order", "CB-ASSERTIONS-IN-CHRONOLOGICAL-ORDER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_assertions_id_order", "CB-LINK-ASSERTIONS-ID-ORDER", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_assertions_id_order", "CB-ASSERTIONS-ID-ORDER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_assertions_in_id_order", "CB-ASSERTIONS-IN-ID-ORDER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg", "CB-C-GAF-ARG", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_guts", "CB-C-GAF-ARG-GUTS", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_gaf_arg", "CB-LINK-GAF-ARG", 2, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_internal", "CB-C-GAF-ARG-INTERNAL", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec", "CB-C-GAF-ARG-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg", "CB-C-GAF-ARG-REC-ARG", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred", "CB-C-GAF-ARG-REC-ARG-PRED", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred_mt", "CB-C-GAF-ARG-REC-ARG-PRED-MT", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred_mt_binary_note_negated", "CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY-NOTE-NEGATED", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_use_binaryP", "CB-C-GAF-ARG-USE-BINARY?", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_use_binary_for_major_presentation_languageP", "CB-USE-BINARY-FOR-MAJOR-PRESENTATION-LANGUAGE?", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred_mt_binary_note", "CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY-NOTE", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred_mt_binary_note_el", "CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY-NOTE-EL", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred_mt_binary", "CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred_mt_non_binary", "CB-C-GAF-ARG-REC-ARG-PRED-MT-NON-BINARY", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_rec_arg_pred_mt_non_binary_int", "CB-C-GAF-ARG-REC-ARG-PRED-MT-NON-BINARY-INT", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg", "CB-C-NART-ARG", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_nart_arg", "CB-LINK-NART-ARG", 2, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_internal", "CB-C-NART-ARG-INTERNAL", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_rec", "CB-C-NART-ARG-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_rec_arg", "CB-C-NART-ARG-REC-ARG", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_rec_arg_func", "CB-C-NART-ARG-REC-ARG-FUNC", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_use_binaryP", "CB-C-NART-ARG-USE-BINARY?", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_rec_arg_func_binary_note", "CB-C-NART-ARG-REC-ARG-FUNC-BINARY-NOTE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_rec_arg_func_binary_note_el", "CB-C-NART-ARG-REC-ARG-FUNC-BINARY-NOTE-EL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_rec_arg_func_binary", "CB-C-NART-ARG-REC-ARG-FUNC-BINARY", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_rec_arg_func_non_binary", "CB-C-NART-ARG-REC-ARG-FUNC-NON-BINARY", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_type", "CB-C-TYPE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_definitional_fort_type_name", "CB-C-DEFINITIONAL-FORT-TYPE-NAME", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_term_header_possible_implementation_constant_note", "CB-C-TERM-HEADER-POSSIBLE-IMPLEMENTATION-CONSTANT-NOTE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_term_header", "CB-C-TERM-HEADER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_add_bookmark_term_link", "CB-ADD-BOOKMARK-TERM-LINK", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_header", "CB-C-GAF-ARG-HEADER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_nart_arg_header", "CB-C-NART-ARG-HEADER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_mt_header", "CB-C-MT-HEADER", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_mt_header_int", "CB-C-MT-HEADER-INT", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_show_monadic_mt_header", "CB-SHOW-MONADIC-MT-HEADER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_show_naut_mt_header", "CB-SHOW-NAUT-MT-HEADER", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_show_time_interval_in_mt_header", "CB-SHOW-TIME-INTERVAL-IN-MT-HEADER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_pred_header", "CB-C-PRED-HEADER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_binary_pred_header", "CB-C-BINARY-PRED-HEADER", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_and_extent", "CB-C-GAF-ARG-AND-EXTENT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gaf_arg_and_extent_guts", "CB-C-GAF-ARG-AND-EXTENT-GUTS", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_extent", "CB-C-PREDICATE-EXTENT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_predicate_extent", "CB-LINK-PREDICATE-EXTENT", 2, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_extent_internal", "CB-C-PREDICATE-EXTENT-INTERNAL", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_extent_rec", "CB-C-PREDICATE-EXTENT-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_extent_rec_mt", "CB-C-PREDICATE-EXTENT-REC-MT", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_extent", "CB-C-FUNCTION-EXTENT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_function_extent", "CB-LINK-FUNCTION-EXTENT", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_extent_internal", "CB-C-FUNCTION-EXTENT-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_extent_rec", "CB-C-FUNCTION-EXTENT-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_rule", "CB-C-PREDICATE-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_predicate_rule", "CB-LINK-PREDICATE-RULE", 2, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_rule_internal", "CB-C-PREDICATE-RULE-INTERNAL", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_rule_rec", "CB-C-PREDICATE-RULE-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_rule_rec_sense", "CB-C-PREDICATE-RULE-REC-SENSE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_rule_rec_sense_mt", "CB-C-PREDICATE-RULE-REC-SENSE-MT", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_predicate_rule_rec_sense_mt_direction", "CB-C-PREDICATE-RULE-REC-SENSE-MT-DIRECTION", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_decontextualized_ist_predicate_rule", "CB-C-DECONTEXTUALIZED-IST-PREDICATE-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_decontextualized_ist_predicate_rule", "CB-LINK-DECONTEXTUALIZED-IST-PREDICATE-RULE", 2, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_decontextualized_ist_predicate_rule_internal", "CB-C-DECONTEXTUALIZED-IST-PREDICATE-RULE-INTERNAL", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_decontextualized_ist_predicate_rule_rec", "CB-C-DECONTEXTUALIZED-IST-PREDICATE-RULE-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_decontextualized_ist_predicate_rule_rec_sense", "CB-C-DECONTEXTUALIZED-IST-PREDICATE-RULE-REC-SENSE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_decontextualized_ist_predicate_rule_rec_sense_direction", "CB-C-DECONTEXTUALIZED-IST-PREDICATE-RULE-REC-SENSE-DIRECTION", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_isa_rule", "CB-C-ISA-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_isa_rule", "CB-LINK-ISA-RULE", 2, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_isa_rule_internal", "CB-C-ISA-RULE-INTERNAL", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_isa_rule_rec", "CB-C-ISA-RULE-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_isa_rule_rec_sense", "CB-C-ISA-RULE-REC-SENSE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_isa_rule_rec_sense_mt", "CB-C-ISA-RULE-REC-SENSE-MT", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_isa_rule_rec_sense_mt_direction", "CB-C-ISA-RULE-REC-SENSE-MT-DIRECTION", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_quoted_isa_rule", "CB-C-QUOTED-ISA-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_quoted_isa_rule", "CB-LINK-QUOTED-ISA-RULE", 2, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_quoted_isa_rule_internal", "CB-C-QUOTED-ISA-RULE-INTERNAL", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_quoted_isa_rule_rec", "CB-C-QUOTED-ISA-RULE-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_quoted_isa_rule_rec_sense", "CB-C-QUOTED-ISA-RULE-REC-SENSE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_quoted_isa_rule_rec_sense_mt", "CB-C-QUOTED-ISA-RULE-REC-SENSE-MT", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_quoted_isa_rule_rec_sense_mt_direction", "CB-C-QUOTED-ISA-RULE-REC-SENSE-MT-DIRECTION", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genls_rule", "CB-C-GENLS-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_genls_rule", "CB-LINK-GENLS-RULE", 2, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genls_rule_internal", "CB-C-GENLS-RULE-INTERNAL", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genls_rule_rec", "CB-C-GENLS-RULE-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genls_rule_rec_sense", "CB-C-GENLS-RULE-REC-SENSE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genls_rule_rec_sense_mt", "CB-C-GENLS-RULE-REC-SENSE-MT", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genls_rule_rec_sense_mt_direction", "CB-C-GENLS-RULE-REC-SENSE-MT-DIRECTION", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genl_mt_rule", "CB-C-GENL-MT-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_genl_mt_rule", "CB-LINK-GENL-MT-RULE", 2, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genl_mt_rule_internal", "CB-C-GENL-MT-RULE-INTERNAL", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genl_mt_rule_rec", "CB-C-GENL-MT-RULE-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genl_mt_rule_rec_sense", "CB-C-GENL-MT-RULE-REC-SENSE", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genl_mt_rule_rec_sense_mt", "CB-C-GENL-MT-RULE-REC-SENSE-MT", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_genl_mt_rule_rec_sense_mt_direction", "CB-C-GENL-MT-RULE-REC-SENSE-MT-DIRECTION", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_rule", "CB-C-FUNCTION-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_function_rule", "CB-LINK-FUNCTION-RULE", 2, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_rule_internal", "CB-C-FUNCTION-RULE-INTERNAL", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_rule_rec", "CB-C-FUNCTION-RULE-REC", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_rule_rec_mt", "CB-C-FUNCTION-RULE-REC-MT", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_function_rule_rec_mt_direction", "CB-C-FUNCTION-RULE-REC-MT-DIRECTION", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_unbound_rule", "CB-C-UNBOUND-RULE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_unbound_rule", "CB-LINK-UNBOUND-RULE", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_unbound_rule_internal", "CB-C-UNBOUND-RULE-INTERNAL", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_unbound_rule_rec", "CB-C-UNBOUND-RULE-REC", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_unbound_rule_rec_sense", "CB-C-UNBOUND-RULE-REC-SENSE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_unbound_rule_rec_sense_mt", "CB-C-UNBOUND-RULE-REC-SENSE-MT", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_unbound_rule_rec_sense_mt_direction", "CB-C-UNBOUND-RULE-REC-SENSE-MT-DIRECTION", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_sense_header", "CB-C-SENSE-HEADER", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_direction_header", "CB-C-DIRECTION-HEADER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_ist", "CB-C-IST", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_ist", "CB-LINK-IST", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_ist_broad", "CB-LINK-IST-BROAD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_ist_internal", "CB-C-IST-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_mt_gafs", "CB-C-MT-GAFS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_mt_gafs", "CB-LINK-MT-GAFS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_mt_gafs_internal", "CB-C-MT-GAFS-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gather_mt_gafs", "CB-C-GATHER-MT-GAFS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gather_hlmt_gafs", "CB-C-GATHER-HLMT-GAFS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_term_L", "CB-TERM-<", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_predicate_L", "CB-PREDICATE-<", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_mt_rules", "CB-C-MT-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_mt_rules", "CB-LINK-MT-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_mt_rules_internal", "CB-C-MT-RULES-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_gather_mt_rules", "CB-C-GATHER-MT-RULES", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_other", "CB-C-OTHER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_other", "CB-LINK-OTHER", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_other_internal", "CB-C-OTHER-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_other_index", "CB-RELEVANT-KEY-OTHER-INDEX", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_auxiliary_indices", "CB-AUXILIARY-INDICES", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_auxiliary_indices", "CB-LINK-AUXILIARY-INDICES", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_auxiliary_index", "CB-AUXILIARY-INDEX", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_auxiliary_index", "CB-LINK-AUXILIARY-INDEX", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha", "CB-ALPHA", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_ad", "CB-AD", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_alphabetical", "CB-LINK-ALPHABETICAL", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_top", "CB-ALPHA-TOP", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_alpha_top", "CB-LINK-ALPHA-TOP", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_bottom", "CB-ALPHA-BOTTOM", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_alpha_bottom", "CB-LINK-ALPHA-BOTTOM", 0, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_pageup", "CB-ALPHA-PAGEUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_alpha_pageup", "CB-LINK-ALPHA-PAGEUP", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_pagedn", "CB-ALPHA-PAGEDN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_alpha_pagedn", "CB-LINK-ALPHA-PAGEDN", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_scroll", "CB-ALPHA-SCROLL", 4, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_index", "CB-ALPHA-INDEX", 6, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_position_bar", "CB-ALPHA-POSITION-BAR", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alphabetical_central_item", "CB-ALPHABETICAL-CENTRAL-ITEM", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alphabetical_item", "CB-ALPHABETICAL-ITEM", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alphabetical_placement", "CB-ALPHABETICAL-PLACEMENT", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_alpha_around", "CB-ALPHA-AROUND", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_add_from_trie_map", "CB-ADD-FROM-TRIE-MAP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_all_assertions", "CB-RELEVANT-NUM-ALL-ASSERTIONS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_gaf_arg_index", "CB-RELEVANT-NUM-GAF-ARG-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_nart_arg_index", "CB-RELEVANT-NUM-NART-ARG-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_predicate_extent_index", "CB-RELEVANT-NUM-PREDICATE-EXTENT-INDEX", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_function_extent_index", "CB-RELEVANT-NUM-FUNCTION-EXTENT-INDEX", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_predicate_rule_index", "CB-RELEVANT-NUM-PREDICATE-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_decontextualized_ist_predicate_rule_index", "CB-RELEVANT-NUM-DECONTEXTUALIZED-IST-PREDICATE-RULE-INDEX", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_isa_rule_index", "CB-RELEVANT-NUM-ISA-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_quoted_isa_rule_index", "CB-RELEVANT-NUM-QUOTED-ISA-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_genls_rule_index", "CB-RELEVANT-NUM-GENLS-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_genl_mt_rule_index", "CB-RELEVANT-NUM-GENL-MT-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_function_rule_index", "CB-RELEVANT-NUM-FUNCTION-RULE-INDEX", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_exception_rule_index", "CB-RELEVANT-NUM-EXCEPTION-RULE-INDEX", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_pragma_rule_index", "CB-RELEVANT-NUM-PRAGMA-RULE-INDEX", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_unbound_rule_index", "CB-RELEVANT-NUM-UNBOUND-RULE-INDEX", 0, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_other_index", "CB-RELEVANT-NUM-OTHER-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_mt_index", "CB-RELEVANT-NUM-MT-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_num_hlmt_index", "CB-RELEVANT-NUM-HLMT-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_gaf_arg_index", "CB-RELEVANT-KEY-GAF-ARG-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_nart_arg_index", "CB-RELEVANT-KEY-NART-ARG-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_predicate_extent_index", "CB-RELEVANT-KEY-PREDICATE-EXTENT-INDEX", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_predicate_rule_index", "CB-RELEVANT-KEY-PREDICATE-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_decontextualized_ist_predicate_rule_index", "CB-RELEVANT-KEY-DECONTEXTUALIZED-IST-PREDICATE-RULE-INDEX", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_isa_rule_index", "CB-RELEVANT-KEY-ISA-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_quoted_isa_rule_index", "CB-RELEVANT-KEY-QUOTED-ISA-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_genls_rule_index", "CB-RELEVANT-KEY-GENLS-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_genl_mt_rule_index", "CB-RELEVANT-KEY-GENL-MT-RULE-INDEX", 1, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_function_rule_index", "CB-RELEVANT-KEY-FUNCTION-RULE-INDEX", 1, 2, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_relevant_key_unbound_rule_index", "CB-RELEVANT-KEY-UNBOUND-RULE-INDEX", 0, 3, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_my_creator_lookup", "CB-MY-CREATOR-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_my_creation_time_lookup", "CB-MY-CREATION-TIME-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_my_creation_purpose_lookup", "CB-MY-CREATION-PURPOSE-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_my_creation_second_lookup", "CB-MY-CREATION-SECOND-LOOKUP", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_graph", "CB-LINK-GRAPH", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_graph", "CB-C-GRAPH", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_graph_internal", "CB-C-GRAPH-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_graph_type_string", "CB-C-GRAPH-TYPE-STRING", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_print_graph", "CB-C-PRINT-GRAPH", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_check_graph", "CB-C-CHECK-GRAPH", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_check_graph_of_script", "CB-C-CHECK-GRAPH-OF-SCRIPT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_print_graph_of_script", "CB-C-PRINT-GRAPH-OF-SCRIPT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_pertinent_query_links", "CB-C-PERTINENT-QUERY-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_print_pertinent_query_links", "CB-C-PRINT-PERTINENT-QUERY-LINKS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "pertinent_queries_for_term", "PERTINENT-QUERIES-FOR-TERM", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_print_pertinent_query_link", "CB-C-PRINT-PERTINENT-QUERY-LINK", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_link_pertinent_query", "CB-LINK-PERTINENT-QUERY", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.cb_browser", "cb_c_pertinent_query", "CB-C-PERTINENT-QUERY", 1, 0, false);
        return (SubLObject)cb_browser.NIL;
    }
    
    public static SubLObject init_cb_browser_file() {
        cb_browser.$cb_term_page_adornments$ = SubLFiles.deflexical("*CB-TERM-PAGE-ADORNMENTS*", (SubLObject)ConsesLow.list((SubLObject)cb_browser.$sym8$INDEX_BROWSER, (SubLObject)cb_browser.$sym33$HIERARCHY_DEFAULT, (SubLObject)cb_browser.$sym34$VFACETS, (SubLObject)cb_browser.$sym35$VCLUMPS, (SubLObject)cb_browser.$sym36$ALPHABETICAL_SEARCH));
        cb_browser.$cb_documentation_predicate_p_caching_state$ = SubLFiles.deflexical("*CB-DOCUMENTATION-PREDICATE-P-CACHING-STATE*", (SubLObject)cb_browser.NIL);
        cb_browser.$semantic_web_uri_data$ = SubLFiles.deflexical("*SEMANTIC-WEB-URI-DATA*", (SubLObject)cb_browser.$list115);
        cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$ = SubLFiles.defparameter("*CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY-NEGATED*", (SubLObject)cb_browser.NIL);
        cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$ = SubLFiles.defparameter("*CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY*", (SubLObject)cb_browser.NIL);
        cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$ = SubLFiles.defparameter("*CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY-EL*", (SubLObject)cb_browser.NIL);
        cb_browser.$cb_c_nart_arg_rec_arg_func_binary$ = SubLFiles.defparameter("*CB-C-NART-ARG-REC-ARG-FUNC-BINARY*", (SubLObject)cb_browser.NIL);
        cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$ = SubLFiles.defparameter("*CB-C-NART-ARG-REC-ARG-FUNC-BINARY-EL*", (SubLObject)cb_browser.NIL);
        cb_browser.$bookmarked_term_caption$ = SubLFiles.defparameter("*BOOKMARKED-TERM-CAPTION*", (SubLObject)cb_browser.$str305$This_term_is_bookmarked___Click_t);
        cb_browser.$unbookmarked_term_caption$ = SubLFiles.defparameter("*UNBOOKMARKED-TERM-CAPTION*", (SubLObject)cb_browser.$str306$Bookmark_this_term___It_will_be_v);
        cb_browser.$cb_c_gaf_arg_show_arg_headerP$ = SubLFiles.defvar("*CB-C-GAF-ARG-SHOW-ARG-HEADER?*", (SubLObject)cb_browser.T);
        cb_browser.$cb_c_gaf_arg_show_mt_headerP$ = SubLFiles.defvar("*CB-C-GAF-ARG-SHOW-MT-HEADER?*", (SubLObject)cb_browser.T);
        cb_browser.$cb_alpha_before$ = SubLFiles.defparameter("*CB-ALPHA-BEFORE*", (SubLObject)cb_browser.FIVE_INTEGER);
        cb_browser.$cb_alpha_after$ = SubLFiles.defparameter("*CB-ALPHA-AFTER*", (SubLObject)cb_browser.$int477$25);
        cb_browser.$cb_alpha_total$ = SubLFiles.defparameter("*CB-ALPHA-TOTAL*", Numbers.add(cb_browser.$cb_alpha_before$.getDynamicValue(), cb_browser.$cb_alpha_after$.getDynamicValue()));
        cb_browser.$cb_before_alpha_top$ = SubLFiles.defparameter("*CB-BEFORE-ALPHA-TOP*", (SubLObject)cb_browser.$str47$);
        cb_browser.$cb_after_alpha_bottom$ = SubLFiles.defparameter("*CB-AFTER-ALPHA-BOTTOM*", Strings.string(Characters.code_char((SubLObject)cb_browser.$int498$127)));
        cb_browser.$cb_alpha_upper_char_order$ = SubLFiles.defparameter("*CB-ALPHA-UPPER-CHAR-ORDER*", (SubLObject)cb_browser.$str519$ABCDEFGHIJKLMNOPQRSTUVWXYZ);
        cb_browser.$cb_alpha_lower_char_order$ = SubLFiles.defparameter("*CB-ALPHA-LOWER-CHAR-ORDER*", (SubLObject)cb_browser.$str520$abcdefghijklmnopqrstuvwxyz);
        cb_browser.$cb_alpha_around_total$ = SubLFiles.defparameter("*CB-ALPHA-AROUND-TOTAL*", (SubLObject)cb_browser.NIL);
        cb_browser.$cb_alpha_around_sofar$ = SubLFiles.defparameter("*CB-ALPHA-AROUND-SOFAR*", (SubLObject)cb_browser.NIL);
        cb_browser.$cb_alpha_around_gather$ = SubLFiles.defparameter("*CB-ALPHA-AROUND-GATHER*", (SubLObject)cb_browser.NIL);
        return (SubLObject)cb_browser.NIL;
    }
    
    public static SubLObject setup_cb_browser_file() {
        Hashtables.sethash((SubLObject)cb_browser.$kw4$CB_C_INDEX, cyc_file_dependencies.$cb_help_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str5$cb_c_index_html, (SubLObject)cb_browser.NIL));
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym97$CB_C_EL, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw89$EL_FORMULAS_FOR_INDEX_HOOK, (SubLObject)cb_browser.$sym101$CB_LINK_EL_FORMULAS_FOR_INDEX_HOOK, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym102$CB_C_HL, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw88$HL_FORMULAS_FOR_INDEX_HOOK, (SubLObject)cb_browser.$sym105$CB_LINK_HL_FORMULAS_FOR_INDEX_HOOK, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym108$CB_C_DOCUMENTATION, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw11$DOCUMENTATION, (SubLObject)cb_browser.$sym111$CB_LINK_DOCUMENTATION, (SubLObject)cb_browser.TWO_INTEGER);
        memoization_state.note_globally_cached_function((SubLObject)cb_browser.$sym112$CB_DOCUMENTATION_PREDICATE_P);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym120$CB_SUMMARY_SENTENCE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym179$CB_C_DEFINITIONAL, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw12$DEFINITIONAL, (SubLObject)cb_browser.$sym182$CB_LINK_DEFINITIONAL, (SubLObject)cb_browser.TWO_INTEGER);
        Hashtables.sethash((SubLObject)cb_browser.$kw187$CB_DESCRIBE_CONSTANT, cyc_file_dependencies.$cb_help_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str188$cb_describe_constant_html, (SubLObject)cb_browser.NIL));
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym204$CB_DESCRIBE_CONSTANT, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw15$DESCRIBE_CONSTANT, (SubLObject)cb_browser.$sym207$CB_LINK_DESCRIBE_CONSTANT, (SubLObject)cb_browser.ONE_INTEGER);
        Hashtables.sethash((SubLObject)cb_browser.$kw208$CB_DESCRIBE_NAT, cyc_file_dependencies.$cb_help_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str209$cb_describe_nat_html, (SubLObject)cb_browser.NIL));
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym218$CB_DESCRIBE_NART, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw14$DESCRIBE_NART, (SubLObject)cb_browser.$sym220$CB_LINK_DESCRIBE_NART, (SubLObject)cb_browser.ONE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym228$CB_C_ALL_ASSERTED_KNOWLEDGE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw29$ALL_ASSERTED_KNOWLEDGE, (SubLObject)cb_browser.$sym233$CB_LINK_ALL_ASSERTED_KNOWLEDGE, (SubLObject)cb_browser.THREE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym235$CB_C_BOOKKEEPING_ASSERTIONS, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw42$BOOKKEEPING_ASSERTIONS, (SubLObject)cb_browser.$sym238$CB_LINK_BOOKKEEPING_ASSERTIONS, (SubLObject)cb_browser.THREE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym239$CB_C_TOTAL, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw43$CONSTANT_TOTAL, (SubLObject)cb_browser.$sym242$CB_LINK_CONSTANT_TOTAL, (SubLObject)cb_browser.THREE_INTEGER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw18$CHRONOLOGICAL_ORDER, (SubLObject)cb_browser.$sym245$CB_LINK_CHRONOLOGICAL_ORDER, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym247$CB_ASSERTION_CHRONOLOGY, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw251$ASSERTIONS_ID_ORDER, (SubLObject)cb_browser.$sym252$CB_LINK_ASSERTIONS_ID_ORDER, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym253$CB_ASSERTIONS_ID_ORDER, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym257$CB_C_GAF_ARG, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw45$GAF_ARG, (SubLObject)cb_browser.$sym263$CB_LINK_GAF_ARG, (SubLObject)cb_browser.FIVE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym284$CB_C_NART_ARG, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw56$NART_ARG, (SubLObject)cb_browser.$sym287$CB_LINK_NART_ARG, (SubLObject)cb_browser.FOUR_INTEGER);
        Hashtables.sethash((SubLObject)cb_browser.$kw296$IMPLEMENTATION_CONSTANTS, cyc_file_dependencies.$cb_help_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str297$implementation_constants_html, (SubLObject)cb_browser.NIL));
        Hashtables.sethash((SubLObject)cb_browser.$kw310$HTML_INTERESTING_IMG, cyc_file_dependencies.$html_icon_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str316$cb_yellow_star_21x21_png, (SubLObject)cb_browser.$str317$_Bookmark_Term_));
        Hashtables.sethash((SubLObject)cb_browser.$kw318$HTML_INTERESTING_ARMED_IMG, cyc_file_dependencies.$html_icon_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str319$cb_yellow_star_armed_21x21_png, (SubLObject)cb_browser.$str47$));
        Hashtables.sethash((SubLObject)cb_browser.$kw312$HTML_NOT_INTERESTING_IMG, cyc_file_dependencies.$html_icon_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str320$cb_yellow_star_off_21x21_png, (SubLObject)cb_browser.$str321$_Remove_Bookmark_));
        Hashtables.sethash((SubLObject)cb_browser.$kw314$HTML_INTERESTING_WORKING_IMG, cyc_file_dependencies.$html_icon_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str322$cb_yellow_star_armed_rotating_21x, (SubLObject)cb_browser.$str47$));
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym349$CB_C_PREDICATE_EXTENT, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw61$PREDICATE_EXTENT, (SubLObject)cb_browser.$sym352$CB_LINK_PREDICATE_EXTENT, (SubLObject)cb_browser.THREE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym355$CB_C_FUNCTION_EXTENT, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw64$FUNCTION_EXTENT, (SubLObject)cb_browser.$sym358$CB_LINK_FUNCTION_EXTENT, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym363$CB_C_PREDICATE_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw65$PREDICATE_RULE, (SubLObject)cb_browser.$sym369$CB_LINK_PREDICATE_RULE, (SubLObject)cb_browser.FIVE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym373$CB_C_DECONTEXTUALIZED_IST_PREDICATE_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw70$DECONTEXTUALIZED_IST_PREDICATE_RULE, (SubLObject)cb_browser.$sym376$CB_LINK_DECONTEXTUALIZED_IST_PREDICATE_RULE, (SubLObject)cb_browser.FOUR_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym378$CB_C_ISA_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw72$ISA_RULE, (SubLObject)cb_browser.$sym381$CB_LINK_ISA_RULE, (SubLObject)cb_browser.FIVE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym384$CB_C_QUOTED_ISA_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw74$QUOTED_ISA_RULE, (SubLObject)cb_browser.$sym387$CB_LINK_QUOTED_ISA_RULE, (SubLObject)cb_browser.FIVE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym390$CB_C_GENLS_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw76$GENLS_RULE, (SubLObject)cb_browser.$sym393$CB_LINK_GENLS_RULE, (SubLObject)cb_browser.FIVE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym396$CB_C_GENL_MT_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw78$GENL_MT_RULE, (SubLObject)cb_browser.$sym399$CB_LINK_GENL_MT_RULE, (SubLObject)cb_browser.FIVE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym403$CB_C_FUNCTION_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw80$FUNCTION_RULE, (SubLObject)cb_browser.$sym406$CB_LINK_FUNCTION_RULE, (SubLObject)cb_browser.FOUR_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym411$CB_C_UNBOUND_RULE, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw81$UNBOUND_RULE, (SubLObject)cb_browser.$sym413$CB_LINK_UNBOUND_RULE, (SubLObject)cb_browser.FOUR_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym419$CB_C_IST, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw84$IST, (SubLObject)cb_browser.$sym422$CB_LINK_IST, (SubLObject)cb_browser.TWO_INTEGER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw83$IST_BROAD, (SubLObject)cb_browser.$sym424$CB_LINK_IST_BROAD, (SubLObject)cb_browser.ONE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym427$CB_C_MT_GAFS, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw85$MT_GAFS, (SubLObject)cb_browser.$sym431$CB_LINK_MT_GAFS, (SubLObject)cb_browser.ONE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym443$CB_C_MT_RULES, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw86$MT_RULES, (SubLObject)cb_browser.$sym446$CB_LINK_MT_RULES, (SubLObject)cb_browser.ONE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym450$CB_C_OTHER, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw82$OTHER, (SubLObject)cb_browser.$sym453$CB_LINK_OTHER, (SubLObject)cb_browser.TWO_INTEGER);
        Hashtables.sethash((SubLObject)cb_browser.$kw458$CB_AUXILIARY_INDICES, cyc_file_dependencies.$cb_help_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str459$cb_auxiliary_indices_html, (SubLObject)cb_browser.NIL));
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym465$CB_AUXILIARY_INDICES, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw10$AUXILIARY_INDICES, (SubLObject)cb_browser.$sym468$CB_LINK_AUXILIARY_INDICES, (SubLObject)cb_browser.ONE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym474$CB_AUXILIARY_INDEX, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw6$AUXILIARY_INDEX, (SubLObject)cb_browser.$sym476$CB_LINK_AUXILIARY_INDEX, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym481$CB_ALPHA, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym482$CB_AD, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        Hashtables.sethash((SubLObject)cb_browser.$kw483$ALPHA, cyc_file_dependencies.$cb_icon_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str484$alpha_gif, (SubLObject)cb_browser.$str485$_Alpha_));
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw488$ALPHABETICAL, (SubLObject)cb_browser.$sym489$CB_LINK_ALPHABETICAL, (SubLObject)cb_browser.TWO_INTEGER);
        cb_utilities.declare_deprecated_cb_tool((SubLObject)cb_browser.$kw490$ALPHA_TOP, (SubLObject)cb_browser.$str491$Alph, (SubLObject)cb_browser.$str491$Alph, (SubLObject)cb_browser.$str492$The_Alphabetical_Browser);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym494$CB_ALPHA_TOP, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw490$ALPHA_TOP, (SubLObject)cb_browser.$sym497$CB_LINK_ALPHA_TOP, (SubLObject)cb_browser.ONE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym501$CB_ALPHA_BOTTOM, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw504$ALPHA_BOTTOM, (SubLObject)cb_browser.$sym505$CB_LINK_ALPHA_BOTTOM, (SubLObject)cb_browser.ONE_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym507$CB_ALPHA_PAGEUP, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw510$ALPHA_PAGEUP, (SubLObject)cb_browser.$sym511$CB_LINK_ALPHA_PAGEUP, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym513$CB_ALPHA_PAGEDN, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw516$ALPHA_PAGEDN, (SubLObject)cb_browser.$sym517$CB_LINK_ALPHA_PAGEDN, (SubLObject)cb_browser.TWO_INTEGER);
        Hashtables.sethash((SubLObject)cb_browser.$kw521$CB_ALPHA_INDEX, cyc_file_dependencies.$cb_help_definitions$.getGlobalValue(), (SubLObject)ConsesLow.list((SubLObject)cb_browser.$str522$cb_alpha_index_html, (SubLObject)cb_browser.NIL));
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw13$GRAPH, (SubLObject)cb_browser.$sym530$CB_LINK_GRAPH, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym531$CB_C_GRAPH, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym20$CB_C_PERTINENT_QUERY_LINKS, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        cb_utilities.setup_cb_link_method((SubLObject)cb_browser.$kw578$PERTINENT_QUERY, (SubLObject)cb_browser.$sym580$CB_LINK_PERTINENT_QUERY, (SubLObject)cb_browser.TWO_INTEGER);
        html_macros.note_cgi_handler_function((SubLObject)cb_browser.$sym582$CB_C_PERTINENT_QUERY, (SubLObject)cb_browser.$kw98$HTML_HANDLER);
        return (SubLObject)cb_browser.NIL;
    }
    
    public void declareFunctions() {
        declare_cb_browser_file();
    }
    
    public void initializeVariables() {
        init_cb_browser_file();
    }
    
    public void runTopLevelForms() {
        setup_cb_browser_file();
    }
    
    static {
        me = (SubLFile)new cb_browser();
        cb_browser.$cb_term_page_adornments$ = null;
        cb_browser.$cb_documentation_predicate_p_caching_state$ = null;
        cb_browser.$semantic_web_uri_data$ = null;
        cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_negated$ = null;
        cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary$ = null;
        cb_browser.$cb_c_gaf_arg_rec_arg_pred_mt_binary_el$ = null;
        cb_browser.$cb_c_nart_arg_rec_arg_func_binary$ = null;
        cb_browser.$cb_c_nart_arg_rec_arg_func_binary_el$ = null;
        cb_browser.$bookmarked_term_caption$ = null;
        cb_browser.$unbookmarked_term_caption$ = null;
        cb_browser.$cb_c_gaf_arg_show_arg_headerP$ = null;
        cb_browser.$cb_c_gaf_arg_show_mt_headerP$ = null;
        cb_browser.$cb_alpha_before$ = null;
        cb_browser.$cb_alpha_after$ = null;
        cb_browser.$cb_alpha_total$ = null;
        cb_browser.$cb_before_alpha_top$ = null;
        cb_browser.$cb_after_alpha_bottom$ = null;
        cb_browser.$cb_alpha_upper_char_order$ = null;
        cb_browser.$cb_alpha_lower_char_order$ = null;
        cb_browser.$cb_alpha_around_total$ = null;
        cb_browser.$cb_alpha_around_sofar$ = null;
        cb_browser.$cb_alpha_around_gather$ = null;
        $str0$__DOCTYPE_html_PUBLIC_____W3C__DT = SubLObjectFactory.makeString("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">");
        $str1$_meta_http_equiv__X_UA_Compatible = SubLObjectFactory.makeString("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\" >");
        $kw2$UNINITIALIZED = SubLObjectFactory.makeKeyword("UNINITIALIZED");
        $kw3$CB_CYC = SubLObjectFactory.makeKeyword("CB-CYC");
        $kw4$CB_C_INDEX = SubLObjectFactory.makeKeyword("CB-C-INDEX");
        $str5$cb_c_index_html = SubLObjectFactory.makeString("cb-c-index.html");
        $kw6$AUXILIARY_INDEX = SubLObjectFactory.makeKeyword("AUXILIARY-INDEX");
        $kw7$MAIN = SubLObjectFactory.makeKeyword("MAIN");
        $sym8$INDEX_BROWSER = SubLObjectFactory.makeSymbol("INDEX-BROWSER");
        $kw9$CYCL = SubLObjectFactory.makeKeyword("CYCL");
        $kw10$AUXILIARY_INDICES = SubLObjectFactory.makeKeyword("AUXILIARY-INDICES");
        $kw11$DOCUMENTATION = SubLObjectFactory.makeKeyword("DOCUMENTATION");
        $kw12$DEFINITIONAL = SubLObjectFactory.makeKeyword("DEFINITIONAL");
        $kw13$GRAPH = SubLObjectFactory.makeKeyword("GRAPH");
        $kw14$DESCRIBE_NART = SubLObjectFactory.makeKeyword("DESCRIBE-NART");
        $kw15$DESCRIBE_CONSTANT = SubLObjectFactory.makeKeyword("DESCRIBE-CONSTANT");
        $int16$200 = SubLObjectFactory.makeInteger(200);
        $kw17$LEXICAL = SubLObjectFactory.makeKeyword("LEXICAL");
        $kw18$CHRONOLOGICAL_ORDER = SubLObjectFactory.makeKeyword("CHRONOLOGICAL-ORDER");
        $kw19$HANDLER = SubLObjectFactory.makeKeyword("HANDLER");
        $sym20$CB_C_PERTINENT_QUERY_LINKS = SubLObjectFactory.makeSymbol("CB-C-PERTINENT-QUERY-LINKS");
        $kw21$ARGS = SubLObjectFactory.makeKeyword("ARGS");
        $str22$term = SubLObjectFactory.makeString("term");
        $kw23$MESSAGE = SubLObjectFactory.makeKeyword("MESSAGE");
        $str24$Checking_for_Pertinent_Queries___ = SubLObjectFactory.makeString("Checking for Pertinent Queries...");
        $kw25$TAG = SubLObjectFactory.makeKeyword("TAG");
        $str26$div = SubLObjectFactory.makeString("div");
        $kw27$DELAY = SubLObjectFactory.makeKeyword("DELAY");
        $int28$50 = SubLObjectFactory.makeInteger(50);
        $kw29$ALL_ASSERTED_KNOWLEDGE = SubLObjectFactory.makeKeyword("ALL-ASSERTED-KNOWLEDGE");
        $kw30$INFERRED_INDEX = SubLObjectFactory.makeKeyword("INFERRED-INDEX");
        $str31$Inferred_Index = SubLObjectFactory.makeString("Inferred Index");
        $kw32$SELF = SubLObjectFactory.makeKeyword("SELF");
        $sym33$HIERARCHY_DEFAULT = SubLObjectFactory.makeSymbol("HIERARCHY-DEFAULT");
        $sym34$VFACETS = SubLObjectFactory.makeSymbol("VFACETS");
        $sym35$VCLUMPS = SubLObjectFactory.makeSymbol("VCLUMPS");
        $sym36$ALPHABETICAL_SEARCH = SubLObjectFactory.makeSymbol("ALPHABETICAL-SEARCH");
        $kw37$LEFT = SubLObjectFactory.makeKeyword("LEFT");
        $kw38$TOP = SubLObjectFactory.makeKeyword("TOP");
        $str39$lightyellow = SubLObjectFactory.makeString("lightyellow");
        $kw40$NBSP = SubLObjectFactory.makeKeyword("NBSP");
        $str41$Viewpoint_Filters = SubLObjectFactory.makeString("Viewpoint Filters");
        $kw42$BOOKKEEPING_ASSERTIONS = SubLObjectFactory.makeKeyword("BOOKKEEPING-ASSERTIONS");
        $kw43$CONSTANT_TOTAL = SubLObjectFactory.makeKeyword("CONSTANT-TOTAL");
        $str44$Unknown_auxiliary_index__a = SubLObjectFactory.makeString("Unknown auxiliary index ~a");
        $kw45$GAF_ARG = SubLObjectFactory.makeKeyword("GAF-ARG");
        $kw46$SKSI_EXTERNAL_GAF_ARGUMENT = SubLObjectFactory.makeKeyword("SKSI-EXTERNAL-GAF-ARGUMENT");
        $str47$ = SubLObjectFactory.makeString("");
        $kw48$VISIBLE = SubLObjectFactory.makeKeyword("VISIBLE");
        $kw49$TEXT = SubLObjectFactory.makeKeyword("TEXT");
        $kw50$GAF_ARG_PREDICATE = SubLObjectFactory.makeKeyword("GAF-ARG-PREDICATE");
        $kw51$GAF_ARG_PREDICATE_CONTENT = SubLObjectFactory.makeKeyword("GAF-ARG-PREDICATE-CONTENT");
        $kw52$CONTENT = SubLObjectFactory.makeKeyword("CONTENT");
        $kw53$INVISIBLE = SubLObjectFactory.makeKeyword("INVISIBLE");
        $str54$_arg_ = SubLObjectFactory.makeString("_arg_");
        $str55$arg_ = SubLObjectFactory.makeString("arg_");
        $kw56$NART_ARG = SubLObjectFactory.makeKeyword("NART-ARG");
        $str57$nart_arg__A = SubLObjectFactory.makeString("nart_arg_~A");
        $kw58$NART_ARG_FUNCTION = SubLObjectFactory.makeKeyword("NART-ARG-FUNCTION");
        $kw59$NART_ARG_FUNCTION_CONTENT = SubLObjectFactory.makeKeyword("NART-ARG-FUNCTION-CONTENT");
        $str60$pred_extent = SubLObjectFactory.makeString("pred_extent");
        $kw61$PREDICATE_EXTENT = SubLObjectFactory.makeKeyword("PREDICATE-EXTENT");
        $int62$12000000 = SubLObjectFactory.makeInteger(12000000);
        $kw63$SKSI_EXTERNAL_PREDICATE_EXTENT = SubLObjectFactory.makeKeyword("SKSI-EXTERNAL-PREDICATE-EXTENT");
        $kw64$FUNCTION_EXTENT = SubLObjectFactory.makeKeyword("FUNCTION-EXTENT");
        $kw65$PREDICATE_RULE = SubLObjectFactory.makeKeyword("PREDICATE-RULE");
        $kw66$NEG = SubLObjectFactory.makeKeyword("NEG");
        $kw67$POS = SubLObjectFactory.makeKeyword("POS");
        $str68$pred_rule__A = SubLObjectFactory.makeString("pred_rule_~A");
        $str69$rule__A__A__A = SubLObjectFactory.makeString("rule_~A_~A_~A");
        $kw70$DECONTEXTUALIZED_IST_PREDICATE_RULE = SubLObjectFactory.makeKeyword("DECONTEXTUALIZED-IST-PREDICATE-RULE");
        $str71$decontextualized_ist_pred_rule__A = SubLObjectFactory.makeString("decontextualized_ist_pred_rule_~A");
        $kw72$ISA_RULE = SubLObjectFactory.makeKeyword("ISA-RULE");
        $str73$isa_rule__A = SubLObjectFactory.makeString("isa_rule_~A");
        $kw74$QUOTED_ISA_RULE = SubLObjectFactory.makeKeyword("QUOTED-ISA-RULE");
        $str75$quoted_isa_rule__A = SubLObjectFactory.makeString("quoted_isa_rule_~A");
        $kw76$GENLS_RULE = SubLObjectFactory.makeKeyword("GENLS-RULE");
        $str77$genl_rule__A = SubLObjectFactory.makeString("genl_rule_~A");
        $kw78$GENL_MT_RULE = SubLObjectFactory.makeKeyword("GENL-MT-RULE");
        $str79$genl_mt_rule__A = SubLObjectFactory.makeString("genl_mt_rule_~A");
        $kw80$FUNCTION_RULE = SubLObjectFactory.makeKeyword("FUNCTION-RULE");
        $kw81$UNBOUND_RULE = SubLObjectFactory.makeKeyword("UNBOUND-RULE");
        $kw82$OTHER = SubLObjectFactory.makeKeyword("OTHER");
        $kw83$IST_BROAD = SubLObjectFactory.makeKeyword("IST-BROAD");
        $kw84$IST = SubLObjectFactory.makeKeyword("IST");
        $kw85$MT_GAFS = SubLObjectFactory.makeKeyword("MT-GAFS");
        $kw86$MT_RULES = SubLObjectFactory.makeKeyword("MT-RULES");
        $kw87$SKSI_EXTERNAL_MT_CONTENTS = SubLObjectFactory.makeKeyword("SKSI-EXTERNAL-MT-CONTENTS");
        $kw88$HL_FORMULAS_FOR_INDEX_HOOK = SubLObjectFactory.makeKeyword("HL-FORMULAS-FOR-INDEX-HOOK");
        $kw89$EL_FORMULAS_FOR_INDEX_HOOK = SubLObjectFactory.makeKeyword("EL-FORMULAS-FOR-INDEX-HOOK");
        $kw90$HL_FORMULAS = SubLObjectFactory.makeKeyword("HL-FORMULAS");
        $kw91$EL_FORMULAS = SubLObjectFactory.makeKeyword("EL-FORMULAS");
        $kw92$EL_FORMULAS_EXCEPT_WHEN_BROWSING_SKOLEMS = SubLObjectFactory.makeKeyword("EL-FORMULAS-EXCEPT-WHEN-BROWSING-SKOLEMS");
        $kw93$HISTORY = SubLObjectFactory.makeKeyword("HISTORY");
        $list94 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX-SPEC"));
        $str95$Could_not_determine_an_index_hook = SubLObjectFactory.makeString("Could not determine an index-hook from ~a");
        $str96$_ = SubLObjectFactory.makeString(":");
        $sym97$CB_C_EL = SubLObjectFactory.makeSymbol("CB-C-EL");
        $kw98$HTML_HANDLER = SubLObjectFactory.makeKeyword("HTML-HANDLER");
        $str99$_EL_Formulas_ = SubLObjectFactory.makeString("[EL Formulas]");
        $str100$cb_c_el__A = SubLObjectFactory.makeString("cb-c-el&~A");
        $sym101$CB_LINK_EL_FORMULAS_FOR_INDEX_HOOK = SubLObjectFactory.makeSymbol("CB-LINK-EL-FORMULAS-FOR-INDEX-HOOK");
        $sym102$CB_C_HL = SubLObjectFactory.makeSymbol("CB-C-HL");
        $str103$_HL_Formulas_ = SubLObjectFactory.makeString("[HL Formulas]");
        $str104$cb_c_hl__A = SubLObjectFactory.makeString("cb-c-hl&~A");
        $sym105$CB_LINK_HL_FORMULAS_FOR_INDEX_HOOK = SubLObjectFactory.makeSymbol("CB-LINK-HL-FORMULAS-FOR-INDEX-HOOK");
        $list106 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("FORT-SPEC"));
        $str107$Could_not_determine_a_term_from__ = SubLObjectFactory.makeString("Could not determine a term from ~a");
        $sym108$CB_C_DOCUMENTATION = SubLObjectFactory.makeSymbol("CB-C-DOCUMENTATION");
        $str109$Documentation = SubLObjectFactory.makeString("Documentation");
        $str110$cb_c_documentation__A = SubLObjectFactory.makeString("cb-c-documentation&~A");
        $sym111$CB_LINK_DOCUMENTATION = SubLObjectFactory.makeSymbol("CB-LINK-DOCUMENTATION");
        $sym112$CB_DOCUMENTATION_PREDICATE_P = SubLObjectFactory.makeSymbol("CB-DOCUMENTATION-PREDICATE-P");
        $sym113$_CB_DOCUMENTATION_PREDICATE_P_CACHING_STATE_ = SubLObjectFactory.makeSymbol("*CB-DOCUMENTATION-PREDICATE-P-CACHING-STATE*");
        $int114$64 = SubLObjectFactory.makeInteger(64);
        $list115 = ConsesLow.list((SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("latest OpenCyc"), (SubLObject)SubLObjectFactory.makeSymbol("OWL-OPENCYC-LATEST-URI-FOR-FORT")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("versioned OpenCyc"), (SubLObject)SubLObjectFactory.makeSymbol("OWL-OPENCYC-VERSIONED-URI-FOR-FORT")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("readable OpenCyc"), (SubLObject)SubLObjectFactory.makeSymbol("OWL-OPENCYC-READABLE-URI-FOR-FORT")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("latest Cyc"), (SubLObject)SubLObjectFactory.makeSymbol("OWL-CYC-LATEST-URI-FOR-FORT")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("versioned Cyc"), (SubLObject)SubLObjectFactory.makeSymbol("OWL-CYC-VERSIONED-URI-FOR-FORT")), (SubLObject)ConsesLow.cons((SubLObject)SubLObjectFactory.makeString("readable Cyc"), (SubLObject)SubLObjectFactory.makeSymbol("OWL-CYC-READABLE-URI-FOR-FORT")));
        $sym116$FORT_P = SubLObjectFactory.makeSymbol("FORT-P");
        $str117$_documentation__ = SubLObjectFactory.makeString(" documentation :");
        $kw118$RED = SubLObjectFactory.makeKeyword("RED");
        $str119$_is_mentioned_in_code_ = SubLObjectFactory.makeString(" is mentioned in code.");
        $sym120$CB_SUMMARY_SENTENCE = SubLObjectFactory.makeSymbol("CB-SUMMARY-SENTENCE");
        $str121$Getting_summary_sentence___ = SubLObjectFactory.makeString("Getting summary sentence...");
        $str122$span = SubLObjectFactory.makeString("span");
        $str123$semantic_web_uris = SubLObjectFactory.makeString("semantic_web_uris");
        $str124$Semantic_Web_URIs = SubLObjectFactory.makeString("Semantic Web URIs");
        $list125 = (SubLList)ConsesLow.cons((SubLObject)SubLObjectFactory.makeSymbol("LABEL"), (SubLObject)SubLObjectFactory.makeSymbol("METHOD"));
        $kw126$RIGHT = SubLObjectFactory.makeKeyword("RIGHT");
        $kw127$CENTER = SubLObjectFactory.makeKeyword("CENTER");
        $str128$___ = SubLObjectFactory.makeString(" : ");
        $const129$GetPredsAndMetaDataForExternalDoc = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("GetPredsAndMetaDataForExternalDocumentationURL"));
        $sym130$_MT = SubLObjectFactory.makeSymbol("?MT");
        $sym131$_PRED = SubLObjectFactory.makeSymbol("?PRED");
        $sym132$_DISPLAY_STRING = SubLObjectFactory.makeSymbol("?DISPLAY-STRING");
        $const133$GetURLsFromExternalURLPred = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("GetURLsFromExternalURLPred"));
        $list134 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Thing")));
        $list135 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DocumentationPageExternalURLPredicate")));
        $list136 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TheFn")), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Microtheory")));
        $str137$external_links = SubLObjectFactory.makeString("external_links");
        $str138$External_Links = SubLObjectFactory.makeString("External Links");
        $sym139$_ = SubLObjectFactory.makeSymbol("<");
        $sym140$QUOTED_INSTANCE_CARDINALITY = SubLObjectFactory.makeSymbol("QUOTED-INSTANCE-CARDINALITY");
        $str141$kb_subsets = SubLObjectFactory.makeString("kb_subsets");
        $str142$Relevant_KB_Subsets = SubLObjectFactory.makeString("Relevant KB Subsets");
        $const143$quotedIsa = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("quotedIsa"));
        $str144$Summary_of_ = SubLObjectFactory.makeString("Summary of ");
        $sym145$CB_CF = SubLObjectFactory.makeSymbol("CB-CF");
        $sym146$RELEVANT_MT_IS_EVERYTHING = SubLObjectFactory.makeSymbol("RELEVANT-MT-IS-EVERYTHING");
        $const147$EverythingPSC = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("EverythingPSC"));
        $const148$CycKBSubsetCollection = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("CycKBSubsetCollection"));
        $sym149$GENERALITY_ESTIMATE_ = SubLObjectFactory.makeSymbol("GENERALITY-ESTIMATE<");
        $str150$Created = SubLObjectFactory.makeString("Created");
        $str151$_by_ = SubLObjectFactory.makeString(" by ");
        $str152$_on_ = SubLObjectFactory.makeString(" on ");
        $str153$_at_ = SubLObjectFactory.makeString(" at ");
        $str154$_for_ = SubLObjectFactory.makeString(" for ");
        $const155$myCreator = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("myCreator"));
        $const156$myCreationPurpose = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("myCreationPurpose"));
        $const157$myCreationTime = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("myCreationTime"));
        $const158$myCreationSecond = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("myCreationSecond"));
        $const159$BookkeepingMt = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("BookkeepingMt"));
        $str160$___ = SubLObjectFactory.makeString(";; ");
        $str161$Bookkeeping_Assertions___ = SubLObjectFactory.makeString("Bookkeeping Assertions : ");
        $str162$Documentation_for__S = SubLObjectFactory.makeString("Documentation for ~S");
        $str163$yui_skin_sam = SubLObjectFactory.makeString("yui-skin-sam");
        $str164$reloadFrameButton = SubLObjectFactory.makeString("reloadFrameButton");
        $str165$button = SubLObjectFactory.makeString("button");
        $str166$reload = SubLObjectFactory.makeString("reload");
        $str167$Refresh = SubLObjectFactory.makeString("Refresh");
        $str168$reloadCurrentFrame__reloadFrameBu = SubLObjectFactory.makeString("reloadCurrentFrame('reloadFrameButton');");
        $kw169$HTML = SubLObjectFactory.makeKeyword("HTML");
        $str170$Bad_type_of_term__A__ = SubLObjectFactory.makeString("Bad type of term ~A~%");
        $kw171$NEW = SubLObjectFactory.makeKeyword("NEW");
        $const172$sharedNotes = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("sharedNotes"));
        $str173$No_documentation_assertions_for_ = SubLObjectFactory.makeString("No documentation assertions for ");
        $sym174$ASSERTION_P = SubLObjectFactory.makeSymbol("ASSERTION-P");
        $str175$In_Mt___ = SubLObjectFactory.makeString("In Mt : ");
        $str176$Mt___ = SubLObjectFactory.makeString("Mt : ");
        $str177$__ = SubLObjectFactory.makeString(" .");
        $list178 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("TERM-SPEC"));
        $sym179$CB_C_DEFINITIONAL = SubLObjectFactory.makeSymbol("CB-C-DEFINITIONAL");
        $str180$Definitional_Info = SubLObjectFactory.makeString("Definitional Info");
        $str181$cb_c_definitional__A = SubLObjectFactory.makeString("cb-c-definitional&~A");
        $sym182$CB_LINK_DEFINITIONAL = SubLObjectFactory.makeSymbol("CB-LINK-DEFINITIONAL");
        $kw183$INFERRED = SubLObjectFactory.makeKeyword("INFERRED");
        $str184$Definitional_info_for__S = SubLObjectFactory.makeString("Definitional info for ~S");
        $str185$Refresh_Frames = SubLObjectFactory.makeString("Refresh Frames");
        $const186$salientAssertions = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("salientAssertions"));
        $kw187$CB_DESCRIBE_CONSTANT = SubLObjectFactory.makeKeyword("CB-DESCRIBE-CONSTANT");
        $str188$cb_describe_constant_html = SubLObjectFactory.makeString("cb-describe-constant.html");
        $str189$the_Constant_Internal_Data_page = SubLObjectFactory.makeString("the Constant Internal Data page");
        $str190$_a_does_not_specify_a_Cyc_constan = SubLObjectFactory.makeString("~a does not specify a Cyc constant");
        $str191$Constant_Internal_Data = SubLObjectFactory.makeString("Constant Internal Data");
        $kw192$SAM_AUTOCOMPLETE_CSS = SubLObjectFactory.makeKeyword("SAM-AUTOCOMPLETE-CSS");
        $kw193$SHA1 = SubLObjectFactory.makeKeyword("SHA1");
        $str194$Internal_data_for_constant__ = SubLObjectFactory.makeString("Internal data for constant :");
        $str195$Name__ = SubLObjectFactory.makeString("Name :");
        $str196$_ephemeral__internal__ = SubLObjectFactory.makeString("(ephemeral, internal) ");
        $str197$SUID__ = SubLObjectFactory.makeString("SUID :");
        $str198$_permanent__external__ = SubLObjectFactory.makeString("(permanent, external) ");
        $str199$GUID__ = SubLObjectFactory.makeString("GUID :");
        $str200$_compact_external__ = SubLObjectFactory.makeString("(compact external) ");
        $str201$HL_ID__ = SubLObjectFactory.makeString("HL ID :");
        $str202$To_use_in_Java_OpenCYC_API_ = SubLObjectFactory.makeString("To use in Java OpenCYC API:");
        $str203$new_CycConstant__S__new_Guid__S__ = SubLObjectFactory.makeString("new CycConstant(~S, new Guid(~S))");
        $sym204$CB_DESCRIBE_CONSTANT = SubLObjectFactory.makeSymbol("CB-DESCRIBE-CONSTANT");
        $str205$cb_describe_constant__A = SubLObjectFactory.makeString("cb-describe-constant&~A");
        $str206$Internal_Data = SubLObjectFactory.makeString("Internal Data");
        $sym207$CB_LINK_DESCRIBE_CONSTANT = SubLObjectFactory.makeSymbol("CB-LINK-DESCRIBE-CONSTANT");
        $kw208$CB_DESCRIBE_NAT = SubLObjectFactory.makeKeyword("CB-DESCRIBE-NAT");
        $str209$cb_describe_nat_html = SubLObjectFactory.makeString("cb-describe-nat.html");
        $str210$the_Reified_NAT_Internal_Data_pag = SubLObjectFactory.makeString("the Reified NAT Internal Data page");
        $str211$_a_does_not_specify_a_Cyc_reified = SubLObjectFactory.makeString("~a does not specify a Cyc reified NAT");
        $str212$Reified_NAT_Internal_Data = SubLObjectFactory.makeString("Reified NAT Internal Data");
        $str213$Internal_data_for_Reified_NAT__ = SubLObjectFactory.makeString("Internal data for Reified NAT :");
        $str214$ID_Number__ = SubLObjectFactory.makeString("ID Number :");
        $str215$HL_Formula__ = SubLObjectFactory.makeString("HL Formula :");
        $str216$_compact__external__ = SubLObjectFactory.makeString("(compact, external) ");
        $str217$HL_ID_String___ = SubLObjectFactory.makeString("HL ID String : ");
        $sym218$CB_DESCRIBE_NART = SubLObjectFactory.makeSymbol("CB-DESCRIBE-NART");
        $str219$cb_describe_nart__A = SubLObjectFactory.makeString("cb-describe-nart&~A");
        $sym220$CB_LINK_DESCRIBE_NART = SubLObjectFactory.makeSymbol("CB-LINK-DESCRIBE-NART");
        $str221$Inference_Data = SubLObjectFactory.makeString("Inference Data");
        $kw222$PREDICATE_SPECIFIC_REMOVAL_MODULES = SubLObjectFactory.makeKeyword("PREDICATE-SPECIFIC-REMOVAL-MODULES");
        $str223$_Removal_Modules_ = SubLObjectFactory.makeString("[Removal Modules]");
        $kw224$PREDICATE_SPECIFIC_PREFERENCE_MODULES = SubLObjectFactory.makeKeyword("PREDICATE-SPECIFIC-PREFERENCE-MODULES");
        $str225$_Preference_Modules_ = SubLObjectFactory.makeString("[Preference Modules]");
        $kw226$PREDICATE_SPECIFIC_HL_STORAGE_MODULES = SubLObjectFactory.makeKeyword("PREDICATE-SPECIFIC-HL-STORAGE-MODULES");
        $str227$_Storage_Modules_ = SubLObjectFactory.makeString("[Storage Modules]");
        $sym228$CB_C_ALL_ASSERTED_KNOWLEDGE = SubLObjectFactory.makeSymbol("CB-C-ALL-ASSERTED-KNOWLEDGE");
        $str229$All_assertions_for__S = SubLObjectFactory.makeString("All assertions for ~S");
        $str230$cb_c_all_asserted_knowledge__A = SubLObjectFactory.makeString("cb-c-all-asserted-knowledge&~A");
        $str231$All_Asserted_Knowledge = SubLObjectFactory.makeString("All Asserted Knowledge");
        $str232$___a_ = SubLObjectFactory.makeString(" (~a)");
        $sym233$CB_LINK_ALL_ASSERTED_KNOWLEDGE = SubLObjectFactory.makeSymbol("CB-LINK-ALL-ASSERTED-KNOWLEDGE");
        $str234$All_bookeeping_assertions_for__S = SubLObjectFactory.makeString("All bookeeping assertions for ~S");
        $sym235$CB_C_BOOKKEEPING_ASSERTIONS = SubLObjectFactory.makeSymbol("CB-C-BOOKKEEPING-ASSERTIONS");
        $str236$cb_c_bookkeeping_assertions__A = SubLObjectFactory.makeString("cb-c-bookkeeping-assertions&~A");
        $str237$Bookkeeping_Info = SubLObjectFactory.makeString("Bookkeeping Info");
        $sym238$CB_LINK_BOOKKEEPING_ASSERTIONS = SubLObjectFactory.makeSymbol("CB-LINK-BOOKKEEPING-ASSERTIONS");
        $sym239$CB_C_TOTAL = SubLObjectFactory.makeSymbol("CB-C-TOTAL");
        $str240$cb_c_total__A = SubLObjectFactory.makeString("cb-c-total&~A");
        $str241$All_KB_Assertions = SubLObjectFactory.makeString("All KB Assertions");
        $sym242$CB_LINK_CONSTANT_TOTAL = SubLObjectFactory.makeSymbol("CB-LINK-CONSTANT-TOTAL");
        $str243$cb_assertion_chronology__A = SubLObjectFactory.makeString("cb-assertion-chronology&~A");
        $str244$Assertions_History = SubLObjectFactory.makeString("Assertions History");
        $sym245$CB_LINK_CHRONOLOGICAL_ORDER = SubLObjectFactory.makeSymbol("CB-LINK-CHRONOLOGICAL-ORDER");
        $str246$Assertion_History = SubLObjectFactory.makeString("Assertion History");
        $sym247$CB_ASSERTION_CHRONOLOGY = SubLObjectFactory.makeSymbol("CB-ASSERTION-CHRONOLOGY");
        $str248$unknown = SubLObjectFactory.makeString("unknown");
        $str249$cb_assertions_id_order__A = SubLObjectFactory.makeString("cb-assertions-id-order&~A");
        $str250$Assertions_by_ID = SubLObjectFactory.makeString("Assertions by ID");
        $kw251$ASSERTIONS_ID_ORDER = SubLObjectFactory.makeKeyword("ASSERTIONS-ID-ORDER");
        $sym252$CB_LINK_ASSERTIONS_ID_ORDER = SubLObjectFactory.makeSymbol("CB-LINK-ASSERTIONS-ID-ORDER");
        $sym253$CB_ASSERTIONS_ID_ORDER = SubLObjectFactory.makeSymbol("CB-ASSERTIONS-ID-ORDER");
        $list254 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("ARG-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("PRED-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("MT-SPEC"));
        $str255$Could_not_determine_an_arg_from__ = SubLObjectFactory.makeString("Could not determine an arg from ~a");
        $str256$Could_not_determine_a_microtheory = SubLObjectFactory.makeString("Could not determine a microtheory from ~a");
        $sym257$CB_C_GAF_ARG = SubLObjectFactory.makeSymbol("CB-C-GAF-ARG");
        $str258$GAF_index_for__S = SubLObjectFactory.makeString("GAF index for ~S");
        $str259$cb_c_gaf_arg__A = SubLObjectFactory.makeString("cb-c-gaf-arg&~A");
        $str260$__a = SubLObjectFactory.makeString("&~a");
        $str261$Arg__a = SubLObjectFactory.makeString("Arg ~a");
        $str262$All_GAFs = SubLObjectFactory.makeString("All GAFs");
        $sym263$CB_LINK_GAF_ARG = SubLObjectFactory.makeSymbol("CB-LINK-GAF-ARG");
        $sym264$LITERAL_QUERY_INDEX_DISPLAY = SubLObjectFactory.makeSymbol("LITERAL-QUERY-INDEX-DISPLAY");
        $kw265$NL = SubLObjectFactory.makeKeyword("NL");
        $kw266$SILK = SubLObjectFactory.makeKeyword("SILK");
        $kw267$FALSE = SubLObjectFactory.makeKeyword("FALSE");
        $sym268$FAST_FI_NOT_EL_TERM_ = SubLObjectFactory.makeSymbol("FAST-FI-NOT-EL-TERM?");
        $sym269$CB_C_GAF_ARG_REC_ARG_PRED_MT_BINARY_NOTE_EL = SubLObjectFactory.makeSymbol("CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY-NOTE-EL");
        $sym270$CB_C_GAF_ARG_REC_ARG_PRED_MT_BINARY_NOTE = SubLObjectFactory.makeSymbol("CB-C-GAF-ARG-REC-ARG-PRED-MT-BINARY-NOTE");
        $sym271$CB_EL_ASSERTION_LINK_BINARY_CHECKING_REDUNDANCY = SubLObjectFactory.makeSymbol("CB-EL-ASSERTION-LINK-BINARY-CHECKING-REDUNDANCY");
        $sym272$CB_ASSERTION_LINK_BINARY = SubLObjectFactory.makeSymbol("CB-ASSERTION-LINK-BINARY");
        $sym273$ASSERTION_CONS = SubLObjectFactory.makeSymbol("ASSERTION-CONS");
        $sym274$CB_EL_ASSERTION_LINK_WITH_MT_CHECKING_REDUNDANCY = SubLObjectFactory.makeSymbol("CB-EL-ASSERTION-LINK-WITH-MT-CHECKING-REDUNDANCY");
        $sym275$CB_EL_ASSERTION_LINK_CHECKING_REDUNDANCY = SubLObjectFactory.makeSymbol("CB-EL-ASSERTION-LINK-CHECKING-REDUNDANCY");
        $sym276$CB_ASSERTION_LINK_WITH_MT = SubLObjectFactory.makeSymbol("CB-ASSERTION-LINK-WITH-MT");
        $sym277$CB_ASSERTION_LINK = SubLObjectFactory.makeSymbol("CB-ASSERTION-LINK");
        $str278$__ = SubLObjectFactory.makeString("#$");
        $str279$_arg_S___S_ = SubLObjectFactory.makeString(" arg~S (~S)");
        $sym280$RELEVANT_MT_IS_GENL_MT = SubLObjectFactory.makeSymbol("RELEVANT-MT-IS-GENL-MT");
        $sym281$INDEXED_TERM_P = SubLObjectFactory.makeSymbol("INDEXED-TERM-P");
        $list282 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("ARG-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("FUNC-SPEC"));
        $str283$NART_index_for__S = SubLObjectFactory.makeString("NART index for ~S");
        $sym284$CB_C_NART_ARG = SubLObjectFactory.makeSymbol("CB-C-NART-ARG");
        $str285$cb_c_nart_arg__A = SubLObjectFactory.makeString("cb-c-nart-arg&~A");
        $str286$All_NARTs = SubLObjectFactory.makeString("All NARTs");
        $sym287$CB_LINK_NART_ARG = SubLObjectFactory.makeSymbol("CB-LINK-NART-ARG");
        $sym288$CB_C_NART_ARG_REC_ARG_FUNC_BINARY_NOTE_EL = SubLObjectFactory.makeSymbol("CB-C-NART-ARG-REC-ARG-FUNC-BINARY-NOTE-EL");
        $sym289$CB_C_NART_ARG_REC_ARG_FUNC_BINARY_NOTE = SubLObjectFactory.makeSymbol("CB-C-NART-ARG-REC-ARG-FUNC-BINARY-NOTE");
        $sym290$CB_TERM_OF_UNIT_LINK = SubLObjectFactory.makeSymbol("CB-TERM-OF-UNIT-LINK");
        $str291$Individual = SubLObjectFactory.makeString("Individual");
        $str292$Index = SubLObjectFactory.makeString("Index");
        $str293$NAUT = SubLObjectFactory.makeString("NAUT");
        $const294$Function_Denotational = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Function-Denotational"));
        $str295$Function = SubLObjectFactory.makeString("Function");
        $kw296$IMPLEMENTATION_CONSTANTS = SubLObjectFactory.makeKeyword("IMPLEMENTATION-CONSTANTS");
        $str297$implementation_constants_html = SubLObjectFactory.makeString("implementation-constants.html");
        $const298$ImplementationConstant = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("ImplementationConstant"));
        $str299$_is_not_used_to_represent_common_ = SubLObjectFactory.makeString(" is not used to represent common sense knowledge.");
        $str300$_1 = SubLObjectFactory.makeString("-1");
        $kw301$DOC = SubLObjectFactory.makeKeyword("DOC");
        $str302$_Explain_ = SubLObjectFactory.makeString("[Explain]");
        $str303$Open_the_CURE_on_ = SubLObjectFactory.makeString("Open the CURE on ");
        $str304$_to_add_more_facts_ = SubLObjectFactory.makeString(" to add more facts.");
        $str305$This_term_is_bookmarked___Click_t = SubLObjectFactory.makeString("This term is bookmarked.  Click to remove it from the 'Interesting Items' of your history page.");
        $str306$Bookmark_this_term___It_will_be_v = SubLObjectFactory.makeString("Bookmark this term.  It will be visible in the 'Interesting Items' section of the history page.");
        $str307$bookmarked = SubLObjectFactory.makeString("bookmarked");
        $str308$_bookmarkButton_ = SubLObjectFactory.makeString(" bookmarkButton ");
        $str309$width_21px = SubLObjectFactory.makeString("width:21px");
        $kw310$HTML_INTERESTING_IMG = SubLObjectFactory.makeKeyword("HTML-INTERESTING-IMG");
        $str311$bookmarkOn = SubLObjectFactory.makeString("bookmarkOn");
        $kw312$HTML_NOT_INTERESTING_IMG = SubLObjectFactory.makeKeyword("HTML-NOT-INTERESTING-IMG");
        $str313$bookmarkOff = SubLObjectFactory.makeString("bookmarkOff");
        $kw314$HTML_INTERESTING_WORKING_IMG = SubLObjectFactory.makeKeyword("HTML-INTERESTING-WORKING-IMG");
        $str315$bookmarkWorking = SubLObjectFactory.makeString("bookmarkWorking");
        $str316$cb_yellow_star_21x21_png = SubLObjectFactory.makeString("cb/yellow-star-21x21.png");
        $str317$_Bookmark_Term_ = SubLObjectFactory.makeString("[Bookmark Term]");
        $kw318$HTML_INTERESTING_ARMED_IMG = SubLObjectFactory.makeKeyword("HTML-INTERESTING-ARMED-IMG");
        $str319$cb_yellow_star_armed_21x21_png = SubLObjectFactory.makeString("cb/yellow-star-armed-21x21.png");
        $str320$cb_yellow_star_off_21x21_png = SubLObjectFactory.makeString("cb/yellow-star-off-21x21.png");
        $str321$_Remove_Bookmark_ = SubLObjectFactory.makeString("[Remove Bookmark]");
        $str322$cb_yellow_star_armed_rotating_21x = SubLObjectFactory.makeString("cb/yellow-star-armed-rotating-21x21.gif");
        $str323$GAF_Arg____A = SubLObjectFactory.makeString("GAF Arg : ~A");
        $str324$NART_Arg____A = SubLObjectFactory.makeString("NART Arg : ~A");
        $str325$mt_header = SubLObjectFactory.makeString("mt-header");
        $list326 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("SomeTimeInIntervalFn")), (SubLObject)ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("IntervalEndedByFn")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING")), (SubLObject)SubLObjectFactory.makeKeyword("STRING"));
        $str327$throughout_some_time_before = SubLObjectFactory.makeString("throughout some time before");
        $list328 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TimeIntervalInclusiveFn")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Now")));
        $str329$since = SubLObjectFactory.makeString("since");
        $list330 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TimeIntervalInclusiveFn")), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"), (SubLObject)SubLObjectFactory.makeKeyword("ANYTHING"));
        $list331 = ConsesLow.list(constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("TimeIntervalInclusiveFn")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("START")), (SubLObject)ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("BIND"), (SubLObject)SubLObjectFactory.makeSymbol("END")));
        $sym332$END = SubLObjectFactory.makeSymbol("END");
        $sym333$START = SubLObjectFactory.makeSymbol("START");
        $str334$throughout = SubLObjectFactory.makeString("throughout");
        $str335$until = SubLObjectFactory.makeString("until");
        $str336$during_some_time_before = SubLObjectFactory.makeString("during some time before");
        $str337$from = SubLObjectFactory.makeString("from");
        $str338$until_now = SubLObjectFactory.makeString("until now");
        $str339$in = SubLObjectFactory.makeString("in");
        $str340$Monadic_ = SubLObjectFactory.makeString("Monadic ");
        $str341$Time_Interval___ = SubLObjectFactory.makeString("Time Interval : ");
        $str342$Time_Parameter___ = SubLObjectFactory.makeString("Time Parameter : ");
        $const343$DateFromStringFn = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("DateFromStringFn"));
        $str344$Predicate___ = SubLObjectFactory.makeString("Predicate : ");
        $str345$neg = SubLObjectFactory.makeString("neg");
        $str346$not = SubLObjectFactory.makeString("not");
        $str347$Predicate_extent_index_for__S = SubLObjectFactory.makeString("Predicate extent index for ~S");
        $list348 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("MT-SPEC"));
        $sym349$CB_C_PREDICATE_EXTENT = SubLObjectFactory.makeSymbol("CB-C-PREDICATE-EXTENT");
        $str350$cb_c_predicate_extent__A = SubLObjectFactory.makeString("cb-c-predicate-extent&~A");
        $str351$Predicate_Extent = SubLObjectFactory.makeString("Predicate Extent");
        $sym352$CB_LINK_PREDICATE_EXTENT = SubLObjectFactory.makeSymbol("CB-LINK-PREDICATE-EXTENT");
        $str353$_Extent__ = SubLObjectFactory.makeString(" Extent :");
        $str354$Function_extent_index_for__S = SubLObjectFactory.makeString("Function extent index for ~S");
        $sym355$CB_C_FUNCTION_EXTENT = SubLObjectFactory.makeSymbol("CB-C-FUNCTION-EXTENT");
        $str356$cb_c_function_extent__A = SubLObjectFactory.makeString("cb-c-function-extent&~A");
        $str357$Function_Extent = SubLObjectFactory.makeString("Function Extent");
        $sym358$CB_LINK_FUNCTION_EXTENT = SubLObjectFactory.makeSymbol("CB-LINK-FUNCTION-EXTENT");
        $list359 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("SENSE-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("MT-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION-STRING"));
        $str360$Could_not_determine_a_literal_sen = SubLObjectFactory.makeString("Could not determine a literal sense ~S");
        $str361$Could_not_determine_a_direction_f = SubLObjectFactory.makeString("Could not determine a direction from ~S");
        $str362$Predicate_rule_index_for__S = SubLObjectFactory.makeString("Predicate rule index for ~S");
        $sym363$CB_C_PREDICATE_RULE = SubLObjectFactory.makeSymbol("CB-C-PREDICATE-RULE");
        $str364$cb_c_predicate_rule__A = SubLObjectFactory.makeString("cb-c-predicate-rule&~A");
        $str365$__s = SubLObjectFactory.makeString("&~s");
        $str366$Antecedent = SubLObjectFactory.makeString("Antecedent");
        $str367$Consequent = SubLObjectFactory.makeString("Consequent");
        $str368$All_Rules = SubLObjectFactory.makeString("All Rules");
        $sym369$CB_LINK_PREDICATE_RULE = SubLObjectFactory.makeSymbol("CB-LINK-PREDICATE-RULE");
        $list370 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("NEG"), (SubLObject)SubLObjectFactory.makeKeyword("POS"));
        $list371 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("SENSE-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION-STRING"));
        $str372$ist_Predicate_rule_index_for__S = SubLObjectFactory.makeString("ist Predicate rule index for ~S");
        $sym373$CB_C_DECONTEXTUALIZED_IST_PREDICATE_RULE = SubLObjectFactory.makeSymbol("CB-C-DECONTEXTUALIZED-IST-PREDICATE-RULE");
        $str374$cb_c_decontextualized_ist_predica = SubLObjectFactory.makeString("cb-c-decontextualized-ist-predicate-rule&~A");
        $str375$All_Lifting_Rules = SubLObjectFactory.makeString("All Lifting Rules");
        $sym376$CB_LINK_DECONTEXTUALIZED_IST_PREDICATE_RULE = SubLObjectFactory.makeSymbol("CB-LINK-DECONTEXTUALIZED-IST-PREDICATE-RULE");
        $str377$isa_rule_index_for__S = SubLObjectFactory.makeString("isa rule index for ~S");
        $sym378$CB_C_ISA_RULE = SubLObjectFactory.makeSymbol("CB-C-ISA-RULE");
        $str379$cb_c_isa_rule__A = SubLObjectFactory.makeString("cb-c-isa-rule&~A");
        $str380$All_isa_Rules = SubLObjectFactory.makeString("All isa Rules");
        $sym381$CB_LINK_ISA_RULE = SubLObjectFactory.makeSymbol("CB-LINK-ISA-RULE");
        $str382$isa = SubLObjectFactory.makeString("isa");
        $str383$quoted_isa_rule_index_for__S = SubLObjectFactory.makeString("quoted isa rule index for ~S");
        $sym384$CB_C_QUOTED_ISA_RULE = SubLObjectFactory.makeSymbol("CB-C-QUOTED-ISA-RULE");
        $str385$cb_c_quoted_isa_rule__A = SubLObjectFactory.makeString("cb-c-quoted-isa-rule&~A");
        $str386$All_quoted_isa_Rules = SubLObjectFactory.makeString("All quoted isa Rules");
        $sym387$CB_LINK_QUOTED_ISA_RULE = SubLObjectFactory.makeSymbol("CB-LINK-QUOTED-ISA-RULE");
        $str388$quoted_isa = SubLObjectFactory.makeString("quoted isa");
        $str389$genls_rule_index_for__S = SubLObjectFactory.makeString("genls rule index for ~S");
        $sym390$CB_C_GENLS_RULE = SubLObjectFactory.makeSymbol("CB-C-GENLS-RULE");
        $str391$cb_c_genls_rule__A = SubLObjectFactory.makeString("cb-c-genls-rule&~A");
        $str392$All_genls_Rules = SubLObjectFactory.makeString("All genls Rules");
        $sym393$CB_LINK_GENLS_RULE = SubLObjectFactory.makeSymbol("CB-LINK-GENLS-RULE");
        $str394$genls = SubLObjectFactory.makeString("genls");
        $str395$genlMt_rule_index_for__S = SubLObjectFactory.makeString("genlMt rule index for ~S");
        $sym396$CB_C_GENL_MT_RULE = SubLObjectFactory.makeSymbol("CB-C-GENL-MT-RULE");
        $str397$cb_c_genl_mt_rule__A = SubLObjectFactory.makeString("cb-c-genl-mt-rule&~A");
        $str398$All_genlMt_Rules = SubLObjectFactory.makeString("All genlMt Rules");
        $sym399$CB_LINK_GENL_MT_RULE = SubLObjectFactory.makeSymbol("CB-LINK-GENL-MT-RULE");
        $str400$genlMt = SubLObjectFactory.makeString("genlMt");
        $list401 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("INDEX-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("MT-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION-STRING"));
        $str402$Function_rule_index_for__S = SubLObjectFactory.makeString("Function rule index for ~S");
        $sym403$CB_C_FUNCTION_RULE = SubLObjectFactory.makeSymbol("CB-C-FUNCTION-RULE");
        $str404$cb_c_function_rule__A = SubLObjectFactory.makeString("cb-c-function-rule&~A");
        $str405$Function_Rules = SubLObjectFactory.makeString("Function Rules");
        $sym406$CB_LINK_FUNCTION_RULE = SubLObjectFactory.makeSymbol("CB-LINK-FUNCTION-RULE");
        $str407$_Rules__ = SubLObjectFactory.makeString(" Rules :");
        $list408 = ConsesLow.list((SubLObject)SubLObjectFactory.makeSymbol("&OPTIONAL"), (SubLObject)SubLObjectFactory.makeSymbol("SENSE-STRING"), (SubLObject)SubLObjectFactory.makeSymbol("MT-SPEC"), (SubLObject)SubLObjectFactory.makeSymbol("DIRECTION-STRING"));
        $str409$Could_not_determine_an_index_hook = SubLObjectFactory.makeString("Could not determine an index-hook");
        $str410$Unbound_rule_index = SubLObjectFactory.makeString("Unbound rule index");
        $sym411$CB_C_UNBOUND_RULE = SubLObjectFactory.makeSymbol("CB-C-UNBOUND-RULE");
        $str412$cb_c_unbound_rule = SubLObjectFactory.makeString("cb-c-unbound-rule");
        $sym413$CB_LINK_UNBOUND_RULE = SubLObjectFactory.makeSymbol("CB-LINK-UNBOUND-RULE");
        $str414$_ = SubLObjectFactory.makeString(" ");
        $str415$Antecedent_Rules = SubLObjectFactory.makeString("Antecedent Rules");
        $str416$Consequent_Rules = SubLObjectFactory.makeString("Consequent Rules");
        $str417$Direction___ = SubLObjectFactory.makeString("Direction : ");
        $str418$MT_index_for__S = SubLObjectFactory.makeString("MT index for ~S");
        $sym419$CB_C_IST = SubLObjectFactory.makeSymbol("CB-C-IST");
        $str420$cb_c_ist__A = SubLObjectFactory.makeString("cb-c-ist&~A");
        $str421$Microtheory_Contents = SubLObjectFactory.makeString("Microtheory Contents");
        $sym422$CB_LINK_IST = SubLObjectFactory.makeSymbol("CB-LINK-IST");
        $str423$__expensive__ = SubLObjectFactory.makeString(" (expensive!)");
        $sym424$CB_LINK_IST_BROAD = SubLObjectFactory.makeSymbol("CB-LINK-IST-BROAD");
        $str425$Microtheory_Contents__ = SubLObjectFactory.makeString("Microtheory Contents :");
        $str426$MT_GAFs_for__S = SubLObjectFactory.makeString("MT GAFs for ~S");
        $sym427$CB_C_MT_GAFS = SubLObjectFactory.makeSymbol("CB-C-MT-GAFS");
        $str428$cb_c_mt_gafs__A = SubLObjectFactory.makeString("cb-c-mt-gafs&~A");
        $str429$Microtheory_GAFs = SubLObjectFactory.makeString("Microtheory GAFs");
        $str430$____ = SubLObjectFactory.makeString(" (?)");
        $sym431$CB_LINK_MT_GAFS = SubLObjectFactory.makeSymbol("CB-LINK-MT-GAFS");
        $str432$Microtheory_GAFs__ = SubLObjectFactory.makeString("Microtheory GAFs :");
        $kw433$MT = SubLObjectFactory.makeKeyword("MT");
        $kw434$GAF = SubLObjectFactory.makeKeyword("GAF");
        $kw435$BROAD_MT = SubLObjectFactory.makeKeyword("BROAD-MT");
        $str436$do_broad_mt_index = SubLObjectFactory.makeString("do-broad-mt-index");
        $sym437$STRINGP = SubLObjectFactory.makeSymbol("STRINGP");
        $kw438$SKIP = SubLObjectFactory.makeKeyword("SKIP");
        $int439$1000 = SubLObjectFactory.makeInteger(1000);
        $sym440$CB_TERM__ = SubLObjectFactory.makeSymbol("CB-TERM-<");
        $sym441$CB_PREDICATE__ = SubLObjectFactory.makeSymbol("CB-PREDICATE-<");
        $str442$MT_Rules_for__S = SubLObjectFactory.makeString("MT Rules for ~S");
        $sym443$CB_C_MT_RULES = SubLObjectFactory.makeSymbol("CB-C-MT-RULES");
        $str444$cb_c_mt_rules__A = SubLObjectFactory.makeString("cb-c-mt-rules&~A");
        $str445$Microtheory_Rules = SubLObjectFactory.makeString("Microtheory Rules");
        $sym446$CB_LINK_MT_RULES = SubLObjectFactory.makeSymbol("CB-LINK-MT-RULES");
        $str447$Microtheory_Rules__ = SubLObjectFactory.makeString("Microtheory Rules :");
        $kw448$RULE = SubLObjectFactory.makeKeyword("RULE");
        $str449$OTHER_index_for__S = SubLObjectFactory.makeString("OTHER index for ~S");
        $sym450$CB_C_OTHER = SubLObjectFactory.makeSymbol("CB-C-OTHER");
        $str451$cb_c_other__A = SubLObjectFactory.makeString("cb-c-other&~A");
        $str452$Miscellaneous = SubLObjectFactory.makeString("Miscellaneous");
        $sym453$CB_LINK_OTHER = SubLObjectFactory.makeSymbol("CB-LINK-OTHER");
        $str454$Miscellaneous_References__ = SubLObjectFactory.makeString("Miscellaneous References :");
        $sym455$MTS = SubLObjectFactory.makeSymbol("MTS");
        $sym456$RELEVANT_MT_IS_GENL_MT_OF_LIST_MEMBER = SubLObjectFactory.makeSymbol("RELEVANT-MT-IS-GENL-MT-OF-LIST-MEMBER");
        $sym457$RELEVANT_MT_IS_IN_LIST = SubLObjectFactory.makeSymbol("RELEVANT-MT-IS-IN-LIST");
        $kw458$CB_AUXILIARY_INDICES = SubLObjectFactory.makeKeyword("CB-AUXILIARY-INDICES");
        $str459$cb_auxiliary_indices_html = SubLObjectFactory.makeString("cb-auxiliary-indices.html");
        $str460$Auxiliary_Indices = SubLObjectFactory.makeString("Auxiliary Indices");
        $sym461$STRING_LESSP = SubLObjectFactory.makeSymbol("STRING-LESSP");
        $sym462$AUXILIARY_INDEX_NAME = SubLObjectFactory.makeSymbol("AUXILIARY-INDEX-NAME");
        $str463$Choose_an_auxiliary_index___ = SubLObjectFactory.makeString("Choose an auxiliary index : ");
        $str464$No_auxiliary_indexes_exist_ = SubLObjectFactory.makeString("No auxiliary indexes exist.");
        $sym465$CB_AUXILIARY_INDICES = SubLObjectFactory.makeSymbol("CB-AUXILIARY-INDICES");
        $str466$Auxiliary_Index_List = SubLObjectFactory.makeString("Auxiliary Index List");
        $str467$cb_auxiliary_indices = SubLObjectFactory.makeString("cb-auxiliary-indices");
        $sym468$CB_LINK_AUXILIARY_INDICES = SubLObjectFactory.makeSymbol("CB-LINK-AUXILIARY-INDICES");
        $str469$_S_did_not_specify_an_auxiliary_i = SubLObjectFactory.makeString("~S did not specify an auxiliary index.");
        $str470$The_auxiliary_index__S_is_current = SubLObjectFactory.makeString("The auxiliary index ~S is currently empty.");
        $str471$Cannot_have_a_FRAMESET_tag_inside = SubLObjectFactory.makeString("Cannot have a FRAMESET tag inside a BODY tag.");
        $str472$30___ = SubLObjectFactory.makeString("30%,*");
        $kw473$INDEX = SubLObjectFactory.makeKeyword("INDEX");
        $sym474$CB_AUXILIARY_INDEX = SubLObjectFactory.makeSymbol("CB-AUXILIARY-INDEX");
        $str475$cb_auxiliary_index__A = SubLObjectFactory.makeString("cb-auxiliary-index&~A");
        $sym476$CB_LINK_AUXILIARY_INDEX = SubLObjectFactory.makeSymbol("CB-LINK-AUXILIARY-INDEX");
        $int477$25 = SubLObjectFactory.makeInteger(25);
        $str478$Alphabetical_search_for___A_ = SubLObjectFactory.makeString("Alphabetical search for `~A'");
        $kw479$ALPHA_TERM = SubLObjectFactory.makeKeyword("ALPHA-TERM");
        $kw480$MISSING = SubLObjectFactory.makeKeyword("MISSING");
        $sym481$CB_ALPHA = SubLObjectFactory.makeSymbol("CB-ALPHA");
        $sym482$CB_AD = SubLObjectFactory.makeSymbol("CB-AD");
        $kw483$ALPHA = SubLObjectFactory.makeKeyword("ALPHA");
        $str484$alpha_gif = SubLObjectFactory.makeString("alpha.gif");
        $str485$_Alpha_ = SubLObjectFactory.makeString("[Alpha]");
        $str486$_A = SubLObjectFactory.makeString("~A");
        $str487$cb_ad__A = SubLObjectFactory.makeString("cb-ad|~A");
        $kw488$ALPHABETICAL = SubLObjectFactory.makeKeyword("ALPHABETICAL");
        $sym489$CB_LINK_ALPHABETICAL = SubLObjectFactory.makeSymbol("CB-LINK-ALPHABETICAL");
        $kw490$ALPHA_TOP = SubLObjectFactory.makeKeyword("ALPHA-TOP");
        $str491$Alph = SubLObjectFactory.makeString("Alph");
        $str492$The_Alphabetical_Browser = SubLObjectFactory.makeString("The Alphabetical Browser");
        $str493$Top_of_Alphabetical_Index = SubLObjectFactory.makeString("Top of Alphabetical Index");
        $sym494$CB_ALPHA_TOP = SubLObjectFactory.makeSymbol("CB-ALPHA-TOP");
        $str495$Top = SubLObjectFactory.makeString("Top");
        $str496$cb_alpha_top = SubLObjectFactory.makeString("cb-alpha-top");
        $sym497$CB_LINK_ALPHA_TOP = SubLObjectFactory.makeSymbol("CB-LINK-ALPHA-TOP");
        $int498$127 = SubLObjectFactory.makeInteger(127);
        $str499$Bottom_of_Alphabetical_Index = SubLObjectFactory.makeString("Bottom of Alphabetical Index");
        $kw500$BOTTOM = SubLObjectFactory.makeKeyword("BOTTOM");
        $sym501$CB_ALPHA_BOTTOM = SubLObjectFactory.makeSymbol("CB-ALPHA-BOTTOM");
        $str502$Bottom = SubLObjectFactory.makeString("Bottom");
        $str503$cb_alpha_bottom = SubLObjectFactory.makeString("cb-alpha-bottom");
        $kw504$ALPHA_BOTTOM = SubLObjectFactory.makeKeyword("ALPHA-BOTTOM");
        $sym505$CB_LINK_ALPHA_BOTTOM = SubLObjectFactory.makeSymbol("CB-LINK-ALPHA-BOTTOM");
        $kw506$PAGEUP = SubLObjectFactory.makeKeyword("PAGEUP");
        $sym507$CB_ALPHA_PAGEUP = SubLObjectFactory.makeSymbol("CB-ALPHA-PAGEUP");
        $str508$Page_Up = SubLObjectFactory.makeString("Page Up");
        $str509$cb_alpha_pageup__A = SubLObjectFactory.makeString("cb-alpha-pageup|~A");
        $kw510$ALPHA_PAGEUP = SubLObjectFactory.makeKeyword("ALPHA-PAGEUP");
        $sym511$CB_LINK_ALPHA_PAGEUP = SubLObjectFactory.makeSymbol("CB-LINK-ALPHA-PAGEUP");
        $kw512$PAGEDN = SubLObjectFactory.makeKeyword("PAGEDN");
        $sym513$CB_ALPHA_PAGEDN = SubLObjectFactory.makeSymbol("CB-ALPHA-PAGEDN");
        $str514$Page_Down = SubLObjectFactory.makeString("Page Down");
        $str515$cb_alpha_pagedn__A = SubLObjectFactory.makeString("cb-alpha-pagedn|~A");
        $kw516$ALPHA_PAGEDN = SubLObjectFactory.makeKeyword("ALPHA-PAGEDN");
        $sym517$CB_LINK_ALPHA_PAGEDN = SubLObjectFactory.makeSymbol("CB-LINK-ALPHA-PAGEDN");
        $str518$Alphabetical_index_scroll = SubLObjectFactory.makeString("Alphabetical index scroll");
        $str519$ABCDEFGHIJKLMNOPQRSTUVWXYZ = SubLObjectFactory.makeString("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
        $str520$abcdefghijklmnopqrstuvwxyz = SubLObjectFactory.makeString("abcdefghijklmnopqrstuvwxyz");
        $kw521$CB_ALPHA_INDEX = SubLObjectFactory.makeKeyword("CB-ALPHA-INDEX");
        $str522$cb_alpha_index_html = SubLObjectFactory.makeString("cb-alpha-index.html");
        $str523$_ = SubLObjectFactory.makeString("|");
        $kw524$MIDDLE = SubLObjectFactory.makeKeyword("MIDDLE");
        $str525$_____ = SubLObjectFactory.makeString("---> ");
        $str526$__A_ = SubLObjectFactory.makeString(" ~A ");
        $str527$would_be_here_ = SubLObjectFactory.makeString("would be here.");
        $sym528$FIXNUMP = SubLObjectFactory.makeSymbol("FIXNUMP");
        $str529$cb_c_graph__A = SubLObjectFactory.makeString("cb-c-graph&~A");
        $sym530$CB_LINK_GRAPH = SubLObjectFactory.makeSymbol("CB-LINK-GRAPH");
        $sym531$CB_C_GRAPH = SubLObjectFactory.makeSymbol("CB-C-GRAPH");
        $str532$Assertion_Graph_for__S = SubLObjectFactory.makeString("Assertion Graph for ~S");
        $str533$_assertion_graph = SubLObjectFactory.makeString(" assertion graph");
        $str534$Script_Graph = SubLObjectFactory.makeString("Script Graph");
        $str535$Unknown_Graph = SubLObjectFactory.makeString("Unknown Graph");
        $const536$Situation = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("Situation"));
        $str537$_a = SubLObjectFactory.makeString("~a");
        $int538$30 = SubLObjectFactory.makeInteger(30);
        $str539$Graphical_editing_of_this_script_ = SubLObjectFactory.makeString("Graphical editing of this script will not work until this term has a ");
        $const540$definingMt = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("definingMt"));
        $str541$_assertion_ = SubLObjectFactory.makeString(" assertion.");
        $str542$candidateProperSubSituationTypes = SubLObjectFactory.makeString("candidateProperSubSituationTypes");
        $sym543$_ARG2 = SubLObjectFactory.makeSymbol("?ARG2");
        $const544$candidateProperSubSituationTypes = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("candidateProperSubSituationTypes"));
        $str545$Note_that_since_no_scenes_were_fo = SubLObjectFactory.makeString("Note that since no scenes were found the editor will start blank.");
        $str546$com_cyc_framework_ui_scriptEditor = SubLObjectFactory.makeString("com.cyc.framework.ui.scriptEditor.command.AddGraphScriptCommand");
        $kw547$BUILDER_FN = SubLObjectFactory.makeKeyword("BUILDER-FN");
        $sym548$BBF_SCRIPT = SubLObjectFactory.makeSymbol("BBF-SCRIPT");
        $kw549$PREDS = SubLObjectFactory.makeKeyword("PREDS");
        $kw550$FORTS = SubLObjectFactory.makeKeyword("FORTS");
        $kw551$DEPTH = SubLObjectFactory.makeKeyword("DEPTH");
        $kw552$CLASS_FILE = SubLObjectFactory.makeKeyword("CLASS-FILE");
        $str553$com_cyc_framework_ui_scriptEditor = SubLObjectFactory.makeString("com.cyc.framework.ui.scriptEditor.ScriptEditorApplet");
        $kw554$WIDTH = SubLObjectFactory.makeKeyword("WIDTH");
        $str555$100_ = SubLObjectFactory.makeString("100%");
        $kw556$HEIGHT = SubLObjectFactory.makeKeyword("HEIGHT");
        $str557$90_ = SubLObjectFactory.makeString("90%");
        $kw558$SIGNATURE = SubLObjectFactory.makeKeyword("SIGNATURE");
        $str559$pertinent_queries = SubLObjectFactory.makeString("pertinent_queries");
        $str560$Troubleshooting = SubLObjectFactory.makeString("Troubleshooting");
        $str561$Java_Profile = SubLObjectFactory.makeString("Java Profile");
        $str562$In_order_for_the_Grapher_applet_t = SubLObjectFactory.makeString("In order for the Grapher applet to contact the Cyc image, your java profile file needs to enable the following permissions:");
        $str563$_grant_codeBase__http___localhost = SubLObjectFactory.makeString("\ngrant codeBase \"http://localhost\" {\n  permission java.net.SocketPermission \"*:3600-3700\", \"accept, listen, connect, resolve\";\n};\n\ngrant codeBase \"http://127.0.0.1\" {\n  permission java.net.SocketPermission \"*:3600-3700\", \"accept, listen, connect, resolve\";\n};\n\ngrant codeBase \"http://$HOST\" {\n  permission java.net.SocketPermission \"*:3600-3700\", \"accept, listen, connect, resolve\";\n};\n\ngrant codeBase \"http://$HOSTNAME\" {\n  permission java.net.SocketPermission \"*:3600-3700\", \"accept, listen, connect, resolve\";\n};\n\ngrant {\n permission java.util.PropertyPermission \"*\", \"read\";\n permission java.util.logging.LoggingPermission \"control\";\n};");
        $str564$On_Linux_systems_this_file_should = SubLObjectFactory.makeString("On Linux systems this file should be located at ");
        $str565$_HOME__java_policy = SubLObjectFactory.makeString("$HOME/.java.policy");
        $str566$____See_ = SubLObjectFactory.makeString(" .  See ");
        $str567$http___download_oracle_com_javase = SubLObjectFactory.makeString("http://download.oracle.com/javase/1.3/docs/guide/security/PolicyFiles.html#DefaultLocs");
        $str568$the_Oracle_documentation = SubLObjectFactory.makeString("the Oracle documentation");
        $str569$_for_other_OS_s_ = SubLObjectFactory.makeString(" for other OS's.");
        $str570$It_worked_once_but_then_stopped_w = SubLObjectFactory.makeString("It worked once but then stopped working");
        $str571$In_your_Java_console__clear_the_c = SubLObjectFactory.makeString("In your Java console, clear the classloader cache by hitting 'x'.  If that doesn't work you may need need to restart your browser.");
        $str572$Pertinent_Queries___S_ = SubLObjectFactory.makeString("Pertinent Queries (~S)");
        $sym573$_EXIT = SubLObjectFactory.makeSymbol("%EXIT");
        $sym574$_QUERY = SubLObjectFactory.makeSymbol("?QUERY");
        $const575$queryHasVeryHighPertinenceForThin = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("queryHasVeryHighPertinenceForThing"));
        $const576$InferencePSC = constant_handles.reader_make_constant_shell((SubLObject)SubLObjectFactory.makeString("InferencePSC"));
        $list577 = ConsesLow.list((SubLObject)SubLObjectFactory.makeKeyword("ANSWER-LANGUAGE"), (SubLObject)SubLObjectFactory.makeKeyword("HL"), (SubLObject)SubLObjectFactory.makeKeyword("INFERENCE-MODE"), (SubLObject)SubLObjectFactory.makeKeyword("SHALLOW"));
        $kw578$PERTINENT_QUERY = SubLObjectFactory.makeKeyword("PERTINENT-QUERY");
        $str579$cb_c_pertinent_query_term__A_quer = SubLObjectFactory.makeString("cb-c-pertinent-query&term=~A&query=~A");
        $sym580$CB_LINK_PERTINENT_QUERY = SubLObjectFactory.makeSymbol("CB-LINK-PERTINENT-QUERY");
        $str581$query = SubLObjectFactory.makeString("query");
        $sym582$CB_C_PERTINENT_QUERY = SubLObjectFactory.makeSymbol("CB-C-PERTINENT-QUERY");
    }
}

/*

	Total time: 7734 ms
	
*/