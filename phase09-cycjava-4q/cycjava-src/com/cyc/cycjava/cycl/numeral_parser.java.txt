// 
// Decompiled by Procyon v0.5.30
// 

package com.cyc.cycjava.cycl;

import com.cyc.tool.subl.jrtl.nativeCode.subLisp.BinaryFunction;
import com.cyc.tool.subl.util.SubLFiles;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sort;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Functions;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapping;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.print_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Types;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.conses_high;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLThread;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Strings;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables;
import com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLFloat;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.number.SubLInteger;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLList;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.util.SubLFile;
import com.cyc.tool.subl.util.SubLTranslatedFile;

public final class numeral_parser extends SubLTranslatedFile
{
    public static final SubLFile me;
    public static final String myName = "com.cyc.cycjava.cycl.numeral_parser";
    public static final String myFingerPrint = "51ab259000ee60d1c803f220566e9bce56b798e2dabc14202a1184857d3b8503";
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 1134L)
    private static SubLSymbol $null$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 1231L)
    private static SubLSymbol $a$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 1269L)
    private static SubLSymbol $digits$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 1432L)
    private static SubLSymbol $teens$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 1646L)
    private static SubLSymbol $fuzzies$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 1802L)
    private static SubLSymbol $atomic_tens$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 1978L)
    private static SubLSymbol $onedozen$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 2044L)
    private static SubLSymbol $onehundred$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 2112L)
    private static SubLSymbol $onethousand$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 2180L)
    private static SubLSymbol $onemillion$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 2248L)
    private static SubLSymbol $onebillion$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 2316L)
    private static SubLSymbol $onetrillion$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 2384L)
    private static SubLSymbol $irregular_denominators$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 4464L)
    private static SubLSymbol $number_values$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 18027L)
    private static SubLSymbol $denominator$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 18495L)
    private static SubLSymbol $zero$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 18859L)
    private static SubLSymbol $indefinite$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 19229L)
    private static SubLSymbol $deci$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 19623L)
    private static SubLSymbol $teen$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 19991L)
    private static SubLSymbol $fuzzy$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 20372L)
    private static SubLSymbol $atomic_ten$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 20780L)
    private static SubLSymbol $hyphenated_non_atomic_ten$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 21468L)
    private static SubLSymbol $non_atomic_ten$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 21905L)
    private static SubLSymbol $cent$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 22857L)
    private static SubLSymbol $standard_hundred$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 23709L)
    private static SubLSymbol $a_few$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 24532L)
    private static SubLSymbol $extended_hundred$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 25689L)
    private static SubLSymbol $standard_dozen$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 26576L)
    private static SubLSymbol $extended_dozen$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 26994L)
    private static SubLSymbol $kilo$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 27907L)
    private static SubLSymbol $thousand$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 28588L)
    private static SubLSymbol $milli$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 29418L)
    private static SubLSymbol $million$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 30098L)
    private static SubLSymbol $billi$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 30930L)
    private static SubLSymbol $billion$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 31613L)
    private static SubLSymbol $trilli$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 32453L)
    private static SubLSymbol $trillion$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 33142L)
    private static SubLSymbol $integer$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 33494L)
    private static SubLSymbol $number$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 34284L)
    private static SubLSymbol $fraction$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 34748L)
    private static SubLSymbol $half$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 35303L)
    private static SubLSymbol $float$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 35861L)
    private static SubLSymbol $negative_number_string$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 36474L)
    public static SubLSymbol $proper_interval$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 37274L)
    private static SubLSymbol $interval$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 37469L)
    public static SubLSymbol $english_interval_parser$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 39008L)
    private static SubLSymbol $negative_number$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 39627L)
    private static SubLSymbol $exponentiation$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 40289L)
    private static SubLSymbol $multiplication$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 40532L)
    public static SubLSymbol $digit_interval_parser$;
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 41003L)
    private static SubLSymbol $string_to_interval_cached_caching_state$;
    private static final SubLList $list0;
    private static final SubLList $list1;
    private static final SubLList $list2;
    private static final SubLList $list3;
    private static final SubLList $list4;
    private static final SubLList $list5;
    private static final SubLList $list6;
    private static final SubLList $list7;
    private static final SubLList $list8;
    private static final SubLList $list9;
    private static final SubLList $list10;
    private static final SubLList $list11;
    private static final SubLList $list12;
    private static final SubLSymbol $kw13$AMERICAN;
    private static final SubLString $str14$_;
    private static final SubLInteger $int15$100;
    private static final SubLString $str16$s;
    private static final SubLString $str17$th;
    private static final SubLString $str18$ths;
    private static final SubLList $list19;
    private static final SubLSymbol $kw20$PLUS;
    private static final SubLSymbol $sym21$KEYWORDP;
    private static final SubLSymbol $kw22$TIMES;
    private static final SubLSymbol $sym23$DIGIT_CHAR_P;
    private static final SubLObject $const24$PlusFn;
    private static final SubLObject $const25$TimesFn;
    private static final SubLSymbol $kw26$DIVIDEDBY;
    private static final SubLObject $const27$QuotientFn;
    private static final SubLSymbol $kw28$TOTHE;
    private static final SubLObject $const29$ExponentFn;
    private static final SubLString $str30$zero;
    private static final SubLSymbol $kw31$INDEFINITE;
    private static final SubLSymbol $sym32$NUMERAL_PARSER_STRING_;
    private static final SubLString $str33$_;
    private static final SubLSymbol $kw34$FUZZY;
    private static final SubLSymbol $kw35$NON_ATOMIC_TEN;
    private static final SubLSymbol $kw36$CENT;
    private static final SubLSymbol $kw37$KILO;
    private static final SubLSymbol $kw38$FRACTION;
    private static final SubLSymbol $kw39$FLOAT;
    private static final SubLSymbol $kw40$NUMBER;
    private static final SubLSymbol $kw41$INTERVAL;
    private static final SubLSymbol $kw42$PROPER_INTERVAL;
    private static final SubLSymbol $kw43$MILLI;
    private static final SubLSymbol $kw44$BILLI;
    private static final SubLSymbol $kw45$TRILLI;
    private static final SubLSymbol $kw46$INTEGER;
    private static final SubLSymbol $kw47$EXTENDED_DOZEN;
    private static final SubLSymbol $kw48$STANDARD_DOZEN;
    private static final SubLSymbol $kw49$EXTENDED_HUNDRED;
    private static final SubLSymbol $kw50$STANDARD_HUNDRED;
    private static final SubLSymbol $kw51$THOUSAND;
    private static final SubLSymbol $kw52$MILLION;
    private static final SubLSymbol $kw53$BILLION;
    private static final SubLSymbol $kw54$TRILLION;
    private static final SubLString $str55$and;
    private static final SubLString $str56$dozen;
    private static final SubLString $str57$few;
    private static final SubLString $str58$hundred;
    private static final SubLString $str59$thousand;
    private static final SubLString $str60$million;
    private static final SubLString $str61$millions;
    private static final SubLString $str62$billions;
    private static final SubLString $str63$billion;
    private static final SubLString $str64$trillions;
    private static final SubLString $str65$trillion;
    private static final SubLString $str66$first;
    private static final SubLString $str67$second;
    private static final SubLString $str68$seconds;
    private static final SubLString $str69$halves;
    private static final SubLSymbol $sym70$NUMERAL_PARSER_CHAR_;
    private static final SubLSymbol $kw71$DENOMINATOR;
    private static final SubLString $str72$half;
    private static final SubLString $str73$minus;
    private static final SubLString $str74$negative;
    private static final SubLString $str75$to;
    private static final SubLString $str76$from;
    private static final SubLString $str77$between;
    private static final SubLSymbol $kw78$MULT;
    private static final SubLSymbol $kw79$EXPT;
    private static final SubLSymbol $kw80$EXPONENTIATION;
    private static final SubLString $str81$_;
    private static final SubLString $str82$Can_t_build_a_denominator_out_of_;
    private static final SubLSymbol $kw83$CATEGORY;
    private static final SubLSymbol $kw84$INFO;
    private static final SubLSymbol $kw85$STRING;
    private static final SubLSymbol $sym86$SIGN_STRING;
    private static final SubLSymbol $kw87$CONSTITUENTS;
    private static final SubLSymbol $sym88$VECTOR;
    private static final SubLList $list89;
    private static final SubLSymbol $sym90$ATOMIC_DENOMINATOR_LITERAL_;
    private static final SubLList $list91;
    private static final SubLSymbol $sym92$ATOMIC_TEN_SIGN_;
    private static final SubLList $list93;
    private static final SubLSymbol $sym94$DENOMINATOR_LITERAL_;
    private static final SubLSymbol $sym95$BUILD_DENOMINATOR;
    private static final SubLSymbol $kw96$ZERO;
    private static final SubLSymbol $sym97$ZERO_LITERAL_;
    private static final SubLSymbol $sym98$BUILD_ZERO;
    private static final SubLSymbol $sym99$INDEFINITE_LITERAL_;
    private static final SubLSymbol $sym100$BUILD_INDEFINITE;
    private static final SubLSymbol $kw101$DECI;
    private static final SubLSymbol $sym102$DIGIT_SIGN_;
    private static final SubLSymbol $sym103$NUMBER_STRING_SIGN_;
    private static final SubLSymbol $sym104$BUILD_DECI;
    private static final SubLSymbol $kw105$TEEN;
    private static final SubLSymbol $sym106$TEEN_SIGN_;
    private static final SubLSymbol $sym107$BUILD_TEEN;
    private static final SubLSymbol $sym108$FUZZY_SIGN_;
    private static final SubLSymbol $sym109$BUILD_FUZZY;
    private static final SubLSymbol $kw110$ATOMIC_TEN;
    private static final SubLSymbol $sym111$BUILD_ATOMIC_TEN;
    private static final SubLSymbol $sym112$HYPHENATED_NON_ATOMIC_TEN_SIGN_;
    private static final SubLSymbol $sym113$BUILD_HYPHENATED_NON_ATOMIC_TEN;
    private static final SubLSymbol $sym114$HYPHEN_SIGN_;
    private static final SubLList $list115;
    private static final SubLSymbol $sym116$DECI_SIGN_;
    private static final SubLList $list117;
    private static final SubLSymbol $sym118$BUILD_NON_ATOMIC_TEN;
    private static final SubLSymbol $sym119$NON_ATOMIC_TEN_SIGN_;
    private static final SubLSymbol $sym120$BUILD_CENT;
    private static final SubLSymbol $sym121$AND_LITERAL_;
    private static final SubLSymbol $sym122$INDEFINITE_SIGN_;
    private static final SubLSymbol $sym123$HUNDRED_LITERAL_;
    private static final SubLSymbol $sym124$CENT_SIGN_;
    private static final SubLSymbol $sym125$SIGN_P;
    private static final SubLList $list126;
    private static final SubLList $list127;
    private static final SubLList $list128;
    private static final SubLSymbol $sym129$FRACTION_SIGN_;
    private static final SubLSymbol $sym130$BUILD_STANDARD_HUNDRED;
    private static final SubLObject $const131$AFew_Quant;
    private static final SubLSymbol $sym132$FEW_LITERAL_;
    private static final SubLSymbol $sym133$BUILD_A_FEW;
    private static final SubLList $list134;
    private static final SubLSymbol $sym135$BUILD_EXTENDED_HUNDRED;
    private static final SubLSymbol $sym136$DOZEN_LITERAL_;
    private static final SubLSymbol $sym137$BUILD_STANDARD_DOZEN;
    private static final SubLSymbol $sym138$BUILD_EXTENDED_DOZEN;
    private static final SubLSymbol $sym139$STANDARD_HUNDRED_SIGN_;
    private static final SubLSymbol $sym140$EXTENDED_HUNDRED_SIGN_;
    private static final SubLSymbol $sym141$FLOAT_SIGN_;
    private static final SubLSymbol $sym142$BUILD_KILO;
    private static final SubLInteger $int143$1000;
    private static final SubLSymbol $sym144$KILO_SIGN_;
    private static final SubLSymbol $sym145$THOUSAND_LITERAL_;
    private static final SubLSymbol $sym146$BUILD_THOUSAND;
    private static final SubLSymbol $sym147$THOUSAND_SIGN_;
    private static final SubLSymbol $sym148$BUILD_MILLI;
    private static final SubLInteger $int149$1000000;
    private static final SubLSymbol $sym150$MILLI_SIGN_;
    private static final SubLSymbol $sym151$MILLION_LITERAL_;
    private static final SubLSymbol $sym152$BUILD_MILLION;
    private static final SubLSymbol $sym153$MILLION_SIGN_;
    private static final SubLSymbol $sym154$BUILD_BILLI;
    private static final SubLInteger $int155$1000000000;
    private static final SubLSymbol $sym156$BILLI_SIGN_;
    private static final SubLSymbol $sym157$BILLION_LITERAL_;
    private static final SubLSymbol $sym158$BUILD_BILLION;
    private static final SubLSymbol $sym159$BILLION_SIGN_;
    private static final SubLSymbol $sym160$BUILD_TRILLI;
    private static final SubLInteger $int161$1000000000000;
    private static final SubLSymbol $sym162$TRILLI_SIGN_;
    private static final SubLSymbol $sym163$TRILLION_LITERAL_;
    private static final SubLSymbol $sym164$BUILD_TRILLION;
    private static final SubLSymbol $sym165$TRILLION_SIGN_;
    private static final SubLSymbol $sym166$BUILD_INTEGER;
    private static final SubLSymbol $sym167$INTEGER_SIGN_;
    private static final SubLSymbol $sym168$STANDARD_DOZEN_SIGN_;
    private static final SubLSymbol $sym169$EXTENDED_DOZEN_SIGN_;
    private static final SubLSymbol $sym170$BUILD_NUMBER;
    private static final SubLSymbol $sym171$NUMBER_SIGN_;
    private static final SubLSymbol $sym172$DENOMINATOR_SIGN_;
    private static final SubLSymbol $sym173$BUILD_FRACTION;
    private static final SubLFloat $float174$0_5;
    private static final SubLSymbol $sym175$HALF_SIGN_;
    private static final SubLSymbol $sym176$BUILD_HALF;
    private static final SubLList $list177;
    private static final SubLSymbol $sym178$BUILD_FLOAT;
    private static final SubLSymbol $sym179$MINUS_LITERAL_;
    private static final SubLSymbol $sym180$BUILD_NEGATIVE_NUMBER;
    private static final SubLObject $const181$Unity;
    private static final SubLSymbol $sym182$NULL;
    private static final SubLSymbol $sym183$SIGN_INFO;
    private static final SubLSymbol $sym184$_;
    private static final SubLList $list185;
    private static final SubLSymbol $sym186$FROM_LITERAL_;
    private static final SubLSymbol $sym187$BETWEEN_LITERAL_;
    private static final SubLList $list188;
    private static final SubLSymbol $sym189$TO_LITERAL_;
    private static final SubLList $list190;
    private static final SubLList $list191;
    private static final SubLList $list192;
    private static final SubLSymbol $sym193$BUILD_PROPER_INTERVAL;
    private static final SubLSymbol $sym194$PROPER_INTERVAL_SIGN_;
    private static final SubLSymbol $sym195$BUILD_INTERVAL;
    private static final SubLSymbol $sym196$SEQUENCEP;
    private static final SubLString $str197$_;
    private static final SubLString $str198$_;
    private static final SubLSymbol $sym199$MINUS_SIGN_;
    private static final SubLSymbol $sym200$EXPT_OPERATOR_SIGN_;
    private static final SubLSymbol $sym201$BUILD_EXPONENTIATION_PHRASE;
    private static final SubLSymbol $sym202$MULT_SIGN_;
    private static final SubLSymbol $sym203$EXPONENTIATION_SIGN_;
    private static final SubLSymbol $sym204$BUILD_MULTIPLICATION_PHRASE;
    private static final SubLSymbol $sym205$LEX_NUMERALS;
    private static final SubLSymbol $sym206$STRING_TO_INTERVAL_CACHED;
    private static final SubLSymbol $sym207$STRINGP;
    private static final SubLSymbol $kw208$IGNORE_ERRORS_TARGET;
    private static final SubLSymbol $sym209$IGNORE_ERRORS_HANDLER;
    private static final SubLSymbol $sym210$_STRING_TO_INTERVAL_CACHED_CACHING_STATE_;
    private static final SubLInteger $int211$256;
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 2896L)
    public static SubLObject standardize_number_string(final SubLObject string, SubLObject number_type) {
        if (number_type == numeral_parser.UNPROVIDED) {
            number_type = (SubLObject)numeral_parser.$kw13$AMERICAN;
        }
        return string_utilities.remove_substring(string, (SubLObject)numeral_parser.$str14$_);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 3794L)
    public static SubLObject initialize_number_values() {
        final SubLObject number_values = Hashtables.make_hash_table((SubLObject)numeral_parser.$int15$100, Symbols.symbol_function((SubLObject)numeral_parser.EQUALP), (SubLObject)numeral_parser.UNPROVIDED);
        SubLObject cdolist_list_var;
        final SubLObject tables = cdolist_list_var = (SubLObject)ConsesLow.list(new SubLObject[] { numeral_parser.$null$.getGlobalValue(), numeral_parser.$a$.getGlobalValue(), numeral_parser.$digits$.getGlobalValue(), numeral_parser.$teens$.getGlobalValue(), numeral_parser.$fuzzies$.getGlobalValue(), numeral_parser.$atomic_tens$.getGlobalValue(), numeral_parser.$onedozen$.getGlobalValue(), numeral_parser.$onehundred$.getGlobalValue(), numeral_parser.$onethousand$.getGlobalValue(), numeral_parser.$onemillion$.getGlobalValue(), numeral_parser.$onebillion$.getGlobalValue(), numeral_parser.$onetrillion$.getGlobalValue(), numeral_parser.$irregular_denominators$.getGlobalValue() });
        SubLObject table = (SubLObject)numeral_parser.NIL;
        table = cdolist_list_var.first();
        while (numeral_parser.NIL != cdolist_list_var) {
            SubLObject cdolist_list_var_$1 = table;
            SubLObject entry = (SubLObject)numeral_parser.NIL;
            entry = cdolist_list_var_$1.first();
            while (numeral_parser.NIL != cdolist_list_var_$1) {
                Hashtables.sethash(entry.first(), number_values, entry.rest());
                cdolist_list_var_$1 = cdolist_list_var_$1.rest();
                entry = cdolist_list_var_$1.first();
            }
            cdolist_list_var = cdolist_list_var.rest();
            table = cdolist_list_var.first();
        }
        return number_values;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 4596L)
    public static SubLObject number_value(final SubLObject string) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        if (numeral_parser.NIL != string_utilities.empty_string_p(string)) {
            return (SubLObject)numeral_parser.NIL;
        }
        final SubLObject v_object = reader.read_from_string_ignoring_errors(string, (SubLObject)numeral_parser.NIL, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        if (v_object.isNumber()) {
            return v_object;
        }
        final SubLObject lookup_string = (numeral_parser.NIL != parsing_vars.$numeral_parser_case_sensitiveP$.getDynamicValue(thread)) ? string : Strings.string_downcase(string, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        return Hashtables.gethash(lookup_string, numeral_parser.$number_values$.getDynamicValue(thread), Hashtables.gethash(string_utilities.strip_trailer(lookup_string, (SubLObject)numeral_parser.$str16$s), numeral_parser.$number_values$.getDynamicValue(thread), Hashtables.gethash(string_utilities.strip_trailer(lookup_string, (SubLObject)numeral_parser.$str17$th), numeral_parser.$number_values$.getDynamicValue(thread), Hashtables.gethash(string_utilities.strip_trailer(lookup_string, (SubLObject)numeral_parser.$str18$ths), numeral_parser.$number_values$.getDynamicValue(thread), (SubLObject)numeral_parser.UNPROVIDED))));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 5233L)
    public static SubLObject number_string_signP(final SubLObject word) {
        return number_utilities.number_string_p(document.sign_string(word));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 5323L)
    public static SubLObject hyphenated_number_value(final SubLObject string) {
        final SubLObject components = string_utilities.split_string(string, (SubLObject)numeral_parser.$list19);
        return combine_number_values(number_value(components.first()), (SubLObject)numeral_parser.$kw20$PLUS, number_value(conses_high.second(components)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 5679L)
    public static SubLObject combine_number_values(final SubLObject val1, final SubLObject type, final SubLObject val2) {
        assert numeral_parser.NIL != Types.keywordp(type) : type;
        final SubLObject raw_value = (val1.isNumber() && val2.isNumber()) ? combine_non_cycl_number_values(val1, type, val2) : combine_cycl_number_values(val1, type, val2);
        return (type == numeral_parser.$kw22$TIMES && numeral_parser.NIL != number_utilities.extended_potentially_infinite_number_p(raw_value)) ? number_utilities.significant_digits(raw_value, numeral_parser_max_significant_digits(val1, val2)) : raw_value;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 6273L)
    public static SubLObject numeral_parser_max_significant_digits(final SubLObject val1, final SubLObject val2) {
        final SubLObject sd1 = numeral_parser_significant_digits(val1);
        final SubLObject sd2 = numeral_parser_significant_digits(val2);
        return Numbers.max(sd1, sd2);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 6472L)
    public static SubLObject numeral_parser_significant_digits(final SubLObject val) {
        final SubLObject string = Sequences.remove((SubLObject)Characters.CHAR_period, print_high.prin1_to_string(val), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject suffix_start = list_utilities.position_if_not((SubLObject)numeral_parser.$sym23$DIGIT_CHAR_P, string, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        return (numeral_parser.NIL != suffix_start) ? suffix_start : Sequences.length(string);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 6763L)
    public static SubLObject combine_cycl_number_values(final SubLObject val1, final SubLObject type, final SubLObject val2) {
        SubLObject raw_value = (SubLObject)numeral_parser.NIL;
        if (type.eql((SubLObject)numeral_parser.$kw20$PLUS)) {
            raw_value = (SubLObject)ConsesLow.list(numeral_parser.$const24$PlusFn, val1, val2);
        }
        else if (type.eql((SubLObject)numeral_parser.$kw22$TIMES)) {
            raw_value = (SubLObject)ConsesLow.list(numeral_parser.$const25$TimesFn, val1, val2);
        }
        else if (type.eql((SubLObject)numeral_parser.$kw26$DIVIDEDBY)) {
            raw_value = (SubLObject)ConsesLow.list(numeral_parser.$const27$QuotientFn, val1, val2);
        }
        else if (type.eql((SubLObject)numeral_parser.$kw28$TOTHE)) {
            raw_value = (SubLObject)ConsesLow.list(numeral_parser.$const29$ExponentFn, val1, val2);
        }
        return simplifier.simplify_number_expression(raw_value);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 7301L)
    public static SubLObject combine_non_cycl_number_values(final SubLObject val1, final SubLObject type, final SubLObject val2) {
        if (type.eql((SubLObject)numeral_parser.$kw20$PLUS)) {
            return Numbers.add(val1, val2);
        }
        if (type.eql((SubLObject)numeral_parser.$kw22$TIMES)) {
            return Numbers.multiply(val1, val2);
        }
        if (type.eql((SubLObject)numeral_parser.$kw26$DIVIDEDBY)) {
            return Numbers.divide(val1, val2);
        }
        if (type.eql((SubLObject)numeral_parser.$kw28$TOTHE)) {
            return Numbers.expt(val1, val2);
        }
        return (SubLObject)numeral_parser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 7624L)
    public static SubLObject numeral_parser_stringE(final SubLObject string1, final SubLObject string2) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return (numeral_parser.NIL != parsing_vars.$numeral_parser_case_sensitiveP$.getDynamicValue(thread)) ? cycl_string.cycl_stringE(string1, string2) : cycl_string.cycl_string_equal(string1, string2);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 7871L)
    public static SubLObject numeral_parser_charE(final SubLObject char1, final SubLObject char2) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        return (numeral_parser.NIL != parsing_vars.$numeral_parser_case_sensitiveP$.getDynamicValue(thread)) ? Characters.charE(char1, char2) : Characters.char_equal(char1, char2);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 8026L)
    public static SubLObject zero_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str30$zero));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 8151L)
    public static SubLObject indefinite_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw31$INDEFINITE, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 8270L)
    public static SubLObject atomic_ten_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.assoc(document.sign_string(v_object), numeral_parser.$atomic_tens$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 8413L)
    public static SubLObject digit_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.assoc(document.sign_string(v_object), numeral_parser.$digits$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 8806L)
    public static SubLObject deci_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.assoc(document.sign_string(v_object), numeral_parser.$digits$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 8938L)
    public static SubLObject hyphen_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && document.sign_string(v_object).equal((SubLObject)numeral_parser.$str33$_));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 9042L)
    public static SubLObject teen_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.assoc(document.sign_string(v_object), numeral_parser.$teens$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 9173L)
    public static SubLObject fuzzy_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && (numeral_parser.NIL != conses_high.assoc(document.sign_string(v_object), numeral_parser.$fuzzies$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED) || numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw34$FUZZY, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 9391L)
    public static SubLObject non_atomic_ten_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw35$NON_ATOMIC_TEN, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 9518L)
    public static SubLObject hyphenated_non_atomic_ten_signP(final SubLObject v_object) {
        if (numeral_parser.NIL != document.sign_p(v_object)) {
            final SubLObject components = string_utilities.split_string(document.sign_string(v_object), (SubLObject)numeral_parser.$list19);
            return (SubLObject)SubLObjectFactory.makeBoolean(Sequences.length(components).numE((SubLObject)numeral_parser.TWO_INTEGER) && numeral_parser.NIL != conses_high.assoc(components.first(), numeral_parser.$atomic_tens$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED) && numeral_parser.NIL != conses_high.assoc(conses_high.second(components), numeral_parser.$digits$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED));
        }
        return (SubLObject)numeral_parser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 9870L)
    public static SubLObject cent_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw36$CENT, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 9977L)
    public static SubLObject kilo_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw37$KILO, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10084L)
    public static SubLObject fraction_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw38$FRACTION, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10199L)
    public static SubLObject float_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw39$FLOAT, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10308L)
    public static SubLObject number_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw40$NUMBER, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10421L)
    public static SubLObject interval_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw41$INTERVAL, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10538L)
    public static SubLObject proper_interval_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw42$PROPER_INTERVAL, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10669L)
    public static SubLObject milli_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw43$MILLI, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10778L)
    public static SubLObject billi_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw44$BILLI, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10887L)
    public static SubLObject trilli_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw45$TRILLI, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 10998L)
    public static SubLObject integer_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw46$INTEGER, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 11111L)
    public static SubLObject extended_dozen_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw47$EXTENDED_DOZEN, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 11256L)
    public static SubLObject standard_dozen_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw48$STANDARD_DOZEN, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 11401L)
    public static SubLObject extended_hundred_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw49$EXTENDED_HUNDRED, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 11532L)
    public static SubLObject standard_hundred_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw50$STANDARD_HUNDRED, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 11663L)
    public static SubLObject thousand_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw51$THOUSAND, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 11778L)
    public static SubLObject million_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw52$MILLION, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 11891L)
    public static SubLObject billion_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw53$BILLION, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12004L)
    public static SubLObject trillion_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw54$TRILLION, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12119L)
    public static SubLObject and_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str55$and));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12242L)
    public static SubLObject indefinite_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.assoc(document.sign_string(v_object), numeral_parser.$a$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12378L)
    public static SubLObject dozen_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str56$dozen));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12523L)
    public static SubLObject few_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str57$few));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12664L)
    public static SubLObject hundred_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str58$hundred));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12795L)
    public static SubLObject thousand_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str59$thousand));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 12928L)
    public static SubLObject million_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str60$million));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13059L)
    public static SubLObject millions_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str61$millions));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13192L)
    public static SubLObject billions_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str62$billions));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13325L)
    public static SubLObject billion_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str63$billion));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13456L)
    public static SubLObject trillions_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str64$trillions));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13591L)
    public static SubLObject trillion_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str65$trillion));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13724L)
    public static SubLObject first_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str66$first));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13851L)
    public static SubLObject second_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str67$second));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 13980L)
    public static SubLObject seconds_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str68$seconds));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 14111L)
    public static SubLObject atomic_denominator_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL == first_literalP(v_object) && numeral_parser.NIL == second_literalP(v_object) && numeral_parser.NIL == seconds_literalP(v_object) && (numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str69$halves) || numeral_parser.NIL != conses_high.assoc(string_utilities.post_remove(document.sign_string(v_object), (SubLObject)numeral_parser.$str16$s, (SubLObject)numeral_parser.$sym70$NUMERAL_PARSER_CHAR_), numeral_parser.$irregular_denominators$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED) || numeral_parser.NIL != string_utilities.ends_with(document.sign_string(v_object), (SubLObject)numeral_parser.$str17$th, (SubLObject)numeral_parser.UNPROVIDED) || numeral_parser.NIL != string_utilities.ends_with(document.sign_string(v_object), (SubLObject)numeral_parser.$str18$ths, (SubLObject)numeral_parser.UNPROVIDED)) && numeral_parser.NIL != number_value(document.sign_string(v_object)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 14639L)
    public static SubLObject denominator_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && (numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str69$halves) || numeral_parser.NIL != conses_high.assoc(string_utilities.post_remove(document.sign_string(v_object), (SubLObject)numeral_parser.$str16$s, (SubLObject)numeral_parser.$sym70$NUMERAL_PARSER_CHAR_), numeral_parser.$irregular_denominators$.getGlobalValue(), Symbols.symbol_function((SubLObject)numeral_parser.$sym32$NUMERAL_PARSER_STRING_), (SubLObject)numeral_parser.UNPROVIDED) || numeral_parser.NIL != string_utilities.ends_with(document.sign_string(v_object), (SubLObject)numeral_parser.$str17$th, (SubLObject)numeral_parser.UNPROVIDED) || numeral_parser.NIL != string_utilities.ends_with(document.sign_string(v_object), (SubLObject)numeral_parser.$str18$ths, (SubLObject)numeral_parser.UNPROVIDED)) && numeral_parser.NIL != number_value(document.sign_string(v_object)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 15046L)
    public static SubLObject denominator_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw71$DENOMINATOR, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 15167L)
    public static SubLObject half_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str72$half));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 15295L)
    public static SubLObject minus_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && (numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str73$minus) || numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str74$negative) || numeral_parser.NIL != minus_signP(v_object)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 15526L)
    public static SubLObject to_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && (numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str75$to) || numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str33$_)));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 15713L)
    public static SubLObject from_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str76$from));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 15838L)
    public static SubLObject between_literalP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != numeral_parser_stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str77$between));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 15969L)
    public static SubLObject mult_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw78$MULT, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 16076L)
    public static SubLObject expt_operator_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw79$EXPT, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 16192L)
    public static SubLObject exponentiation_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != conses_high.member((SubLObject)numeral_parser.$kw80$EXPONENTIATION, document.sign_category(v_object), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 16319L)
    public static SubLObject minus_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != Strings.stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str33$_, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 16426L)
    public static SubLObject plus_signP(final SubLObject v_object) {
        return (SubLObject)SubLObjectFactory.makeBoolean(numeral_parser.NIL != document.sign_p(v_object) && numeral_parser.NIL != Strings.stringE(document.sign_string(v_object), (SubLObject)numeral_parser.$str81$_, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 16530L)
    public static SubLObject build_denominator(final SubLObject fst) {
        final SubLObject output = finite_state_transducer.fst_output(fst);
        if (numeral_parser.NIL == output) {
            Errors.error((SubLObject)numeral_parser.$str82$Can_t_build_a_denominator_out_of_);
            return (SubLObject)numeral_parser.NIL;
        }
        if (numeral_parser.NIL != list_utilities.singletonP(output)) {
            final SubLObject word = output.first();
            document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw71$DENOMINATOR, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, number_value(document.word_string(word))));
            return word;
        }
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        SubLObject numeric_value = (SubLObject)numeral_parser.ZERO_INTEGER;
        SubLObject cdolist_list_var = output;
        SubLObject dtr = (SubLObject)numeral_parser.NIL;
        dtr = cdolist_list_var.first();
        while (numeral_parser.NIL != cdolist_list_var) {
            final SubLObject dtr_info = document.sign_info(dtr);
            numeric_value = combine_number_values(numeric_value, (SubLObject)numeral_parser.$kw20$PLUS, (numeral_parser.NIL != dtr_info) ? dtr_info : number_value(document.sign_string(dtr)));
            cdolist_list_var = cdolist_list_var.rest();
            dtr = cdolist_list_var.first();
        }
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw71$DENOMINATOR, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, numeric_value));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 18279L)
    public static SubLObject build_zero(final SubLObject fst) {
        final SubLObject word = finite_state_transducer.fst_output(fst).first();
        document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw96$ZERO, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, number_value(document.word_string(word))));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 18631L)
    public static SubLObject build_indefinite(final SubLObject fst) {
        final SubLObject word = finite_state_transducer.fst_output(fst).first();
        document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw31$INDEFINITE, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, number_value(document.word_string(word))));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 19013L)
    public static SubLObject build_deci(final SubLObject fst) {
        final SubLObject word = finite_state_transducer.fst_output(fst).first();
        document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw101$DECI, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, number_value(document.word_string(word))));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 19407L)
    public static SubLObject build_teen(final SubLObject fst) {
        final SubLObject word = finite_state_transducer.fst_output(fst).first();
        document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw105$TEEN, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, number_value(document.word_string(word))));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 19755L)
    public static SubLObject build_fuzzy(final SubLObject fst) {
        final SubLObject word = finite_state_transducer.fst_output(fst).first();
        document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw34$FUZZY, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, number_value(document.word_string(word))));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 20144L)
    public static SubLObject build_atomic_ten(final SubLObject fst) {
        final SubLObject word = finite_state_transducer.fst_output(fst).first();
        document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw110$ATOMIC_TEN, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, number_value(document.word_string(word))));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 20522L)
    public static SubLObject build_hyphenated_non_atomic_ten(final SubLObject fst) {
        final SubLObject word = finite_state_transducer.fst_output(fst).first();
        document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw35$NON_ATOMIC_TEN, document.word_category(word), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, hyphenated_number_value(document.word_string(word))));
        return word;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 20976L)
    public static SubLObject build_non_atomic_ten(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym114$HYPHEN_SIGN_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw35$NON_ATOMIC_TEN), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw20$PLUS, document.sign_info(conses_high.second(normalized_output)))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 21736L)
    public static SubLObject build_cent(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw36$CENT, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 22237L)
    public static SubLObject build_standard_hundred(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw50$STANDARD_HUNDRED, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.$int15$100), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 23385L)
    public static SubLObject build_a_few(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw34$FUZZY, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, numeral_parser.$const131$AFew_Quant));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 23907L)
    public static SubLObject build_extended_hundred(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw49$EXTENDED_HUNDRED, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.$int15$100), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 25056L)
    public static SubLObject build_standard_dozen(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw48$STANDARD_DOZEN, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.TWELVE_INTEGER), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 25938L)
    public static SubLObject build_extended_dozen(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw47$EXTENDED_DOZEN, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.TWELVE_INTEGER), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 26825L)
    public static SubLObject build_kilo(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw37$KILO, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 27300L)
    public static SubLObject build_thousand(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw51$THOUSAND, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.$int143$1000), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 28417L)
    public static SubLObject build_milli(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw43$MILLI, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 28805L)
    public static SubLObject build_million(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw52$MILLION, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.$int149$1000000), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 29927L)
    public static SubLObject build_billi(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw44$BILLI, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 30315L)
    public static SubLObject build_billion(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw53$BILLION, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.$int155$1000000000), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 31440L)
    public static SubLObject build_trilli(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw45$TRILLI, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 31832L)
    public static SubLObject build_trillion(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        final SubLObject normalized_output = Sequences.remove_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), finite_state_transducer.fst_output(fst), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw54$TRILLION, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(combine_number_values(document.sign_info(normalized_output.first()), (SubLObject)numeral_parser.$kw22$TIMES, (SubLObject)numeral_parser.$int161$1000000000000), (SubLObject)numeral_parser.$kw20$PLUS, (SubLObject)((numeral_parser.NIL != document.sign_p(conses_high.third(normalized_output))) ? document.sign_info(conses_high.third(normalized_output)) : numeral_parser.ZERO_INTEGER))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 32967L)
    public static SubLObject build_integer(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw46$INTEGER, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 33321L)
    public static SubLObject build_number(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw40$NUMBER, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 33842L)
    public static SubLObject build_fraction(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw38$FRACTION, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(document.sign_info(finite_state_transducer.fst_output(fst).first()), (SubLObject)numeral_parser.$kw26$DIVIDEDBY, document.sign_info(conses_high.second(finite_state_transducer.fst_output(fst))))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 34560L)
    public static SubLObject build_half(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw40$NUMBER, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw84$INFO, (SubLObject)numeral_parser.$float174$0_5));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 34884L)
    public static SubLObject build_float(final SubLObject fst) {
        final SubLObject output = finite_state_transducer.fst_output(fst);
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw39$FLOAT, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), output), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), output), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(document.sign_info(output.first()), (SubLObject)numeral_parser.$kw20$PLUS, document.sign_info(conses_high.third(output)))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 35515L)
    public static SubLObject build_negative_number(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw40$NUMBER, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, Numbers.minus(document.sign_info(conses_high.second(finite_state_transducer.fst_output(fst))))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 36062L)
    public static SubLObject build_proper_interval(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw42$PROPER_INTERVAL, document.phrase_category(phrase), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, (SubLObject)ConsesLow.cons(numeral_parser.$const181$Unity, Sort.sort(Sequences.delete_if(Symbols.symbol_function((SubLObject)numeral_parser.$sym182$NULL), Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym183$SIGN_INFO), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED), Symbols.symbol_function((SubLObject)numeral_parser.$sym184$_), (SubLObject)numeral_parser.UNPROVIDED))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 37095L)
    public static SubLObject build_interval(final SubLObject fst) {
        final SubLObject sign = finite_state_transducer.fst_output(fst).first();
        document.sign_update(sign, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, conses_high.adjoin((SubLObject)numeral_parser.$kw41$INTERVAL, document.sign_category(sign), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)));
        return sign;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 38090L)
    public static SubLObject lex_numerals(final SubLObject sequence) {
        assert numeral_parser.NIL != Types.sequencep(sequence) : sequence;
        final SubLObject backwardP_var = (SubLObject)numeral_parser.NIL;
        SubLObject length;
        SubLObject v_iteration;
        SubLObject element_num;
        SubLObject word;
        for (length = Sequences.length(sequence), v_iteration = (SubLObject)numeral_parser.NIL, v_iteration = (SubLObject)numeral_parser.ZERO_INTEGER; v_iteration.numL(length); v_iteration = Numbers.add(v_iteration, (SubLObject)numeral_parser.ONE_INTEGER)) {
            element_num = ((numeral_parser.NIL != backwardP_var) ? Numbers.subtract(length, v_iteration, (SubLObject)numeral_parser.ONE_INTEGER) : v_iteration);
            word = Vectors.aref(sequence, element_num);
            if (numeral_parser.NIL != number_utilities.number_string_p(document.word_string(word))) {
                document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw40$NUMBER), (SubLObject)numeral_parser.$kw84$INFO, number_utilities.number_string_value(document.word_string(word))));
            }
            else if (numeral_parser.NIL != Strings.stringE(document.word_string(word), (SubLObject)numeral_parser.$str197$_, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)) {
                document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw78$MULT)));
            }
            else if (numeral_parser.NIL != Strings.stringE(document.word_string(word), (SubLObject)numeral_parser.$str198$_, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED)) {
                document.word_update(word, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw79$EXPT)));
            }
        }
        return sequence;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 39198L)
    public static SubLObject build_exponentiation_phrase(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw80$EXPONENTIATION), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(document.sign_info(finite_state_transducer.fst_output(fst).first()), (SubLObject)numeral_parser.$kw28$TOTHE, document.sign_info(conses_high.third(finite_state_transducer.fst_output(fst))))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 39868L)
    public static SubLObject build_multiplication_phrase(final SubLObject fst) {
        final SubLObject phrase = document.new_phrase((SubLObject)numeral_parser.UNPROVIDED);
        document.phrase_update(phrase, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw83$CATEGORY, (SubLObject)ConsesLow.list((SubLObject)numeral_parser.$kw40$NUMBER), (SubLObject)numeral_parser.$kw85$STRING, string_utilities.bunge(Mapping.mapcar(Symbols.symbol_function((SubLObject)numeral_parser.$sym86$SIGN_STRING), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.UNPROVIDED), (SubLObject)numeral_parser.$kw87$CONSTITUENTS, Functions.apply(Symbols.symbol_function((SubLObject)numeral_parser.$sym88$VECTOR), finite_state_transducer.fst_output(fst)), (SubLObject)numeral_parser.$kw84$INFO, combine_number_values(document.sign_info(finite_state_transducer.fst_output(fst).first()), (SubLObject)numeral_parser.$kw22$TIMES, document.sign_info(conses_high.third(finite_state_transducer.fst_output(fst))))));
        return phrase;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 40715L)
    public static SubLObject string_to_interval(final SubLObject string) {
        return conses_high.copy_tree(string_to_interval_cached(string));
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 41003L)
    public static SubLObject clear_string_to_interval_cached() {
        final SubLObject cs = numeral_parser.$string_to_interval_cached_caching_state$.getGlobalValue();
        if (numeral_parser.NIL != cs) {
            memoization_state.caching_state_clear(cs);
        }
        return (SubLObject)numeral_parser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 41003L)
    public static SubLObject remove_string_to_interval_cached(final SubLObject string) {
        return memoization_state.caching_state_remove_function_results_with_args(numeral_parser.$string_to_interval_cached_caching_state$.getGlobalValue(), (SubLObject)ConsesLow.list(string), (SubLObject)numeral_parser.UNPROVIDED, (SubLObject)numeral_parser.UNPROVIDED);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 41003L)
    public static SubLObject string_to_interval_cached_internal(final SubLObject string) {
        final SubLThread thread = SubLProcess.currentSubLThread();
        assert numeral_parser.NIL != Types.stringp(string) : string;
        SubLObject ans = (SubLObject)numeral_parser.NIL;
        SubLObject ignore_errors_tag = (SubLObject)numeral_parser.NIL;
        try {
            thread.throwStack.push(numeral_parser.$kw208$IGNORE_ERRORS_TARGET);
            final SubLObject _prev_bind_0 = Errors.$error_handler$.currentBinding(thread);
            try {
                Errors.$error_handler$.bind(Symbols.symbol_function((SubLObject)numeral_parser.$sym209$IGNORE_ERRORS_HANDLER), thread);
                try {
                    final SubLObject standardized_number_string = standardize_number_string(string, (SubLObject)numeral_parser.UNPROVIDED);
                    final SubLObject tokens = document.string_wordify(standardized_number_string, (SubLObject)numeral_parser.UNPROVIDED);
                    final SubLObject english_parse = finite_state_cascade_parser.fscp_parse(numeral_parser.$english_interval_parser$.getDynamicValue(thread), tokens);
                    ans = numeric_interval_term_from_fscp_result(english_parse);
                    if (numeral_parser.NIL == ans) {
                        final SubLObject digit_parse = finite_state_cascade_parser.fscp_parse(numeral_parser.$digit_interval_parser$.getDynamicValue(thread), tokens);
                        ans = numeric_interval_term_from_fscp_result(digit_parse);
                    }
                }
                catch (Throwable catch_var) {
                    Errors.handleThrowable(catch_var, (SubLObject)numeral_parser.NIL);
                }
            }
            finally {
                Errors.$error_handler$.rebind(_prev_bind_0, thread);
            }
        }
        catch (Throwable ccatch_env_var) {
            ignore_errors_tag = Errors.handleThrowable(ccatch_env_var, (SubLObject)numeral_parser.$kw208$IGNORE_ERRORS_TARGET);
        }
        finally {
            thread.throwStack.pop();
        }
        return ans;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 41003L)
    public static SubLObject string_to_interval_cached(final SubLObject string) {
        SubLObject caching_state = numeral_parser.$string_to_interval_cached_caching_state$.getGlobalValue();
        if (numeral_parser.NIL == caching_state) {
            caching_state = memoization_state.create_global_caching_state_for_name((SubLObject)numeral_parser.$sym206$STRING_TO_INTERVAL_CACHED, (SubLObject)numeral_parser.$sym210$_STRING_TO_INTERVAL_CACHED_CACHING_STATE_, (SubLObject)numeral_parser.$int211$256, (SubLObject)numeral_parser.EQUAL, (SubLObject)numeral_parser.ONE_INTEGER, (SubLObject)numeral_parser.ZERO_INTEGER);
        }
        SubLObject results = memoization_state.caching_state_lookup(caching_state, string, memoization_state.$memoized_item_not_found$.getGlobalValue());
        if (results.eql(memoization_state.$memoized_item_not_found$.getGlobalValue())) {
            results = Values.arg2(Values.resetMultipleValues(), (SubLObject)Values.multiple_value_list(string_to_interval_cached_internal(string)));
            memoization_state.caching_state_put(caching_state, string, results, (SubLObject)numeral_parser.UNPROVIDED);
        }
        return memoization_state.caching_results(results);
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 41720L)
    public static SubLObject numeric_interval_term_from_fscp_result(final SubLObject fscp_result) {
        if (numeral_parser.NIL != list_utilities.lengthE(fscp_result, (SubLObject)numeral_parser.ONE_INTEGER, (SubLObject)numeral_parser.UNPROVIDED)) {
            final SubLObject first_fscp_result = Sequences.elt(fscp_result, (SubLObject)numeral_parser.ZERO_INTEGER);
            return (SubLObject)((numeral_parser.NIL != document.sign_info(first_fscp_result) && numeral_parser.NIL != interval_signP(first_fscp_result)) ? document.sign_info(first_fscp_result) : numeral_parser.NIL);
        }
        return (SubLObject)numeral_parser.NIL;
    }
    
    @SubLTranslatedFile.SubL(source = "cycl/numeral-parser.lisp", position = 42041L)
    public static SubLObject interval_stringP(final SubLObject string) {
        assert numeral_parser.NIL != Types.stringp(string) : string;
        return string_to_interval(string);
    }
    
    public static SubLObject declare_numeral_parser_file() {
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "standardize_number_string", "STANDARDIZE-NUMBER-STRING", 1, 1, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "initialize_number_values", "INITIALIZE-NUMBER-VALUES", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "number_value", "NUMBER-VALUE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "number_string_signP", "NUMBER-STRING-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "hyphenated_number_value", "HYPHENATED-NUMBER-VALUE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "combine_number_values", "COMBINE-NUMBER-VALUES", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "numeral_parser_max_significant_digits", "NUMERAL-PARSER-MAX-SIGNIFICANT-DIGITS", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "numeral_parser_significant_digits", "NUMERAL-PARSER-SIGNIFICANT-DIGITS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "combine_cycl_number_values", "COMBINE-CYCL-NUMBER-VALUES", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "combine_non_cycl_number_values", "COMBINE-NON-CYCL-NUMBER-VALUES", 3, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "numeral_parser_stringE", "NUMERAL-PARSER-STRING=", 2, 0, false);
        new $numeral_parser_stringE$BinaryFunction();
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "numeral_parser_charE", "NUMERAL-PARSER-CHAR=", 2, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "zero_literalP", "ZERO-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "indefinite_signP", "INDEFINITE-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "atomic_ten_signP", "ATOMIC-TEN-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "digit_signP", "DIGIT-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "deci_signP", "DECI-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "hyphen_signP", "HYPHEN-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "teen_signP", "TEEN-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "fuzzy_signP", "FUZZY-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "non_atomic_ten_signP", "NON-ATOMIC-TEN-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "hyphenated_non_atomic_ten_signP", "HYPHENATED-NON-ATOMIC-TEN-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "cent_signP", "CENT-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "kilo_signP", "KILO-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "fraction_signP", "FRACTION-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "float_signP", "FLOAT-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "number_signP", "NUMBER-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "interval_signP", "INTERVAL-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "proper_interval_signP", "PROPER-INTERVAL-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "milli_signP", "MILLI-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "billi_signP", "BILLI-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "trilli_signP", "TRILLI-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "integer_signP", "INTEGER-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "extended_dozen_signP", "EXTENDED-DOZEN-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "standard_dozen_signP", "STANDARD-DOZEN-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "extended_hundred_signP", "EXTENDED-HUNDRED-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "standard_hundred_signP", "STANDARD-HUNDRED-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "thousand_signP", "THOUSAND-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "million_signP", "MILLION-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "billion_signP", "BILLION-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "trillion_signP", "TRILLION-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "and_literalP", "AND-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "indefinite_literalP", "INDEFINITE-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "dozen_literalP", "DOZEN-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "few_literalP", "FEW-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "hundred_literalP", "HUNDRED-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "thousand_literalP", "THOUSAND-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "million_literalP", "MILLION-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "millions_literalP", "MILLIONS-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "billions_literalP", "BILLIONS-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "billion_literalP", "BILLION-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "trillions_literalP", "TRILLIONS-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "trillion_literalP", "TRILLION-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "first_literalP", "FIRST-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "second_literalP", "SECOND-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "seconds_literalP", "SECONDS-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "atomic_denominator_literalP", "ATOMIC-DENOMINATOR-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "denominator_literalP", "DENOMINATOR-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "denominator_signP", "DENOMINATOR-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "half_signP", "HALF-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "minus_literalP", "MINUS-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "to_literalP", "TO-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "from_literalP", "FROM-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "between_literalP", "BETWEEN-LITERAL?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "mult_signP", "MULT-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "expt_operator_signP", "EXPT-OPERATOR-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "exponentiation_signP", "EXPONENTIATION-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "minus_signP", "MINUS-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "plus_signP", "PLUS-SIGN?", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_denominator", "BUILD-DENOMINATOR", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_zero", "BUILD-ZERO", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_indefinite", "BUILD-INDEFINITE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_deci", "BUILD-DECI", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_teen", "BUILD-TEEN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_fuzzy", "BUILD-FUZZY", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_atomic_ten", "BUILD-ATOMIC-TEN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_hyphenated_non_atomic_ten", "BUILD-HYPHENATED-NON-ATOMIC-TEN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_non_atomic_ten", "BUILD-NON-ATOMIC-TEN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_cent", "BUILD-CENT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_standard_hundred", "BUILD-STANDARD-HUNDRED", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_a_few", "BUILD-A-FEW", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_extended_hundred", "BUILD-EXTENDED-HUNDRED", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_standard_dozen", "BUILD-STANDARD-DOZEN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_extended_dozen", "BUILD-EXTENDED-DOZEN", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_kilo", "BUILD-KILO", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_thousand", "BUILD-THOUSAND", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_milli", "BUILD-MILLI", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_million", "BUILD-MILLION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_billi", "BUILD-BILLI", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_billion", "BUILD-BILLION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_trilli", "BUILD-TRILLI", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_trillion", "BUILD-TRILLION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_integer", "BUILD-INTEGER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_number", "BUILD-NUMBER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_fraction", "BUILD-FRACTION", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_half", "BUILD-HALF", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_float", "BUILD-FLOAT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_negative_number", "BUILD-NEGATIVE-NUMBER", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_proper_interval", "BUILD-PROPER-INTERVAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_interval", "BUILD-INTERVAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "lex_numerals", "LEX-NUMERALS", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_exponentiation_phrase", "BUILD-EXPONENTIATION-PHRASE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "build_multiplication_phrase", "BUILD-MULTIPLICATION-PHRASE", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "string_to_interval", "STRING-TO-INTERVAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "clear_string_to_interval_cached", "CLEAR-STRING-TO-INTERVAL-CACHED", 0, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "remove_string_to_interval_cached", "REMOVE-STRING-TO-INTERVAL-CACHED", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "string_to_interval_cached_internal", "STRING-TO-INTERVAL-CACHED-INTERNAL", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "string_to_interval_cached", "STRING-TO-INTERVAL-CACHED", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "numeric_interval_term_from_fscp_result", "NUMERIC-INTERVAL-TERM-FROM-FSCP-RESULT", 1, 0, false);
        SubLFiles.declareFunction("com.cyc.cycjava.cycl.numeral_parser", "interval_stringP", "INTERVAL-STRING?", 1, 0, false);
        return (SubLObject)numeral_parser.NIL;
    }
    
    public static SubLObject init_numeral_parser_file() {
        numeral_parser.$null$ = SubLFiles.deflexical("*NULL*", (SubLObject)numeral_parser.$list0);
        numeral_parser.$a$ = SubLFiles.deflexical("*A*", (SubLObject)numeral_parser.$list1);
        numeral_parser.$digits$ = SubLFiles.deflexical("*DIGITS*", (SubLObject)numeral_parser.$list2);
        numeral_parser.$teens$ = SubLFiles.deflexical("*TEENS*", (SubLObject)numeral_parser.$list3);
        numeral_parser.$fuzzies$ = SubLFiles.deflexical("*FUZZIES*", (SubLObject)numeral_parser.$list4);
        numeral_parser.$atomic_tens$ = SubLFiles.deflexical("*ATOMIC-TENS*", (SubLObject)numeral_parser.$list5);
        numeral_parser.$onedozen$ = SubLFiles.deflexical("*ONEDOZEN*", (SubLObject)numeral_parser.$list6);
        numeral_parser.$onehundred$ = SubLFiles.deflexical("*ONEHUNDRED*", (SubLObject)numeral_parser.$list7);
        numeral_parser.$onethousand$ = SubLFiles.deflexical("*ONETHOUSAND*", (SubLObject)numeral_parser.$list8);
        numeral_parser.$onemillion$ = SubLFiles.deflexical("*ONEMILLION*", (SubLObject)numeral_parser.$list9);
        numeral_parser.$onebillion$ = SubLFiles.deflexical("*ONEBILLION*", (SubLObject)numeral_parser.$list10);
        numeral_parser.$onetrillion$ = SubLFiles.deflexical("*ONETRILLION*", (SubLObject)numeral_parser.$list11);
        numeral_parser.$irregular_denominators$ = SubLFiles.deflexical("*IRREGULAR-DENOMINATORS*", (SubLObject)numeral_parser.$list12);
        numeral_parser.$number_values$ = SubLFiles.defparameter("*NUMBER-VALUES*", initialize_number_values());
        numeral_parser.$denominator$ = SubLFiles.defparameter("*DENOMINATOR*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym90$ATOMIC_DENOMINATOR_LITERAL_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym92$ATOMIC_TEN_SIGN_), (SubLObject)numeral_parser.$list93), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.TWO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym94$DENOMINATOR_LITERAL_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym95$BUILD_DENOMINATOR)));
        numeral_parser.$zero$ = SubLFiles.defparameter("*ZERO*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym97$ZERO_LITERAL_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym98$BUILD_ZERO)));
        numeral_parser.$indefinite$ = SubLFiles.defparameter("*INDEFINITE*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym99$INDEFINITE_LITERAL_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym100$BUILD_INDEFINITE)));
        numeral_parser.$deci$ = SubLFiles.defparameter("*DECI*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym102$DIGIT_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym103$NUMBER_STRING_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym104$BUILD_DECI)));
        numeral_parser.$teen$ = SubLFiles.defparameter("*TEEN*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym106$TEEN_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym107$BUILD_TEEN)));
        numeral_parser.$fuzzy$ = SubLFiles.defparameter("*FUZZY*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym108$FUZZY_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym109$BUILD_FUZZY)));
        numeral_parser.$atomic_ten$ = SubLFiles.defparameter("*ATOMIC-TEN*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym92$ATOMIC_TEN_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym111$BUILD_ATOMIC_TEN)));
        numeral_parser.$hyphenated_non_atomic_ten$ = SubLFiles.defparameter("*HYPHENATED-NON-ATOMIC-TEN*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym112$HYPHENATED_NON_ATOMIC_TEN_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym113$BUILD_HYPHENATED_NON_ATOMIC_TEN)));
        numeral_parser.$non_atomic_ten$ = SubLFiles.defparameter("*NON-ATOMIC-TEN*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym92$ATOMIC_TEN_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym116$DECI_SIGN_), (SubLObject)numeral_parser.$list93), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym114$HYPHEN_SIGN_), (SubLObject)numeral_parser.$list117), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym116$DECI_SIGN_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym118$BUILD_NON_ATOMIC_TEN)));
        numeral_parser.$cent$ = SubLFiles.defparameter("*CENT*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym116$DECI_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym106$TEEN_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym108$FUZZY_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym92$ATOMIC_TEN_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym119$NON_ATOMIC_TEN_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym103$NUMBER_STRING_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym120$BUILD_CENT)));
        numeral_parser.$standard_hundred$ = SubLFiles.defparameter("*STANDARD-HUNDRED*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym116$DECI_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym123$HUNDRED_LITERAL_), (SubLObject)numeral_parser.$list117), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list126), numeral_parser.$list127, ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list128), ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym129$FRACTION_SIGN_), (SubLObject)numeral_parser.$list128), ConsesLow.listS((SubLObject)numeral_parser.SIX_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list93) }), Symbols.symbol_function((SubLObject)numeral_parser.$sym130$BUILD_STANDARD_HUNDRED)));
        numeral_parser.$a_few$ = SubLFiles.defparameter("*A-FEW*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym132$FEW_LITERAL_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym133$BUILD_A_FEW)));
        numeral_parser.$extended_hundred$ = SubLFiles.defparameter("*EXTENDED-HUNDRED*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym123$HUNDRED_LITERAL_), (SubLObject)numeral_parser.$list117), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list126), numeral_parser.$list127, ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list128), ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list134), ConsesLow.listS((SubLObject)numeral_parser.SIX_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list93) }), Symbols.symbol_function((SubLObject)numeral_parser.$sym135$BUILD_EXTENDED_HUNDRED)));
        numeral_parser.$standard_dozen$ = SubLFiles.defparameter("*STANDARD-DOZEN*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym116$DECI_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym136$DOZEN_LITERAL_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym137$BUILD_STANDARD_DOZEN)));
        numeral_parser.$extended_dozen$ = SubLFiles.defparameter("*EXTENDED-DOZEN*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym136$DOZEN_LITERAL_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym138$BUILD_EXTENDED_DOZEN)));
        numeral_parser.$kilo$ = SubLFiles.defparameter("*KILO*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym139$STANDARD_HUNDRED_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym140$EXTENDED_HUNDRED_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym141$FLOAT_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym103$NUMBER_STRING_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym142$BUILD_KILO)));
        numeral_parser.$thousand$ = SubLFiles.defparameter("*THOUSAND*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym144$KILO_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym145$THOUSAND_LITERAL_), (SubLObject)numeral_parser.$list117), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym144$KILO_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list126), numeral_parser.$list127, ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list128), ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list134), ConsesLow.listS((SubLObject)numeral_parser.SIX_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list93) }), Symbols.symbol_function((SubLObject)numeral_parser.$sym146$BUILD_THOUSAND)));
        numeral_parser.$milli$ = SubLFiles.defparameter("*MILLI*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym144$KILO_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym147$THOUSAND_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym103$NUMBER_STRING_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym148$BUILD_MILLI)));
        numeral_parser.$million$ = SubLFiles.defparameter("*MILLION*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym150$MILLI_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym151$MILLION_LITERAL_), (SubLObject)numeral_parser.$list117), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym150$MILLI_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list126), numeral_parser.$list127, ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list128), ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list134), ConsesLow.listS((SubLObject)numeral_parser.SIX_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list93) }), Symbols.symbol_function((SubLObject)numeral_parser.$sym152$BUILD_MILLION)));
        numeral_parser.$billi$ = SubLFiles.defparameter("*BILLI*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym150$MILLI_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym153$MILLION_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym103$NUMBER_STRING_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym154$BUILD_BILLI)));
        numeral_parser.$billion$ = SubLFiles.defparameter("*BILLION*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym156$BILLI_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym157$BILLION_LITERAL_), (SubLObject)numeral_parser.$list117), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym156$BILLI_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list126), numeral_parser.$list127, ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list128), ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list134), ConsesLow.listS((SubLObject)numeral_parser.SIX_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list93) }), Symbols.symbol_function((SubLObject)numeral_parser.$sym158$BUILD_BILLION)));
        numeral_parser.$trilli$ = SubLFiles.defparameter("*TRILLI*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym156$BILLI_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym159$BILLION_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym103$NUMBER_STRING_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym160$BUILD_TRILLI)));
        numeral_parser.$trillion$ = SubLFiles.defparameter("*TRILLION*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym162$TRILLI_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym163$TRILLION_LITERAL_), (SubLObject)numeral_parser.$list117), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym162$TRILLI_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list126), numeral_parser.$list127, ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list128), ConsesLow.listS((SubLObject)numeral_parser.FOUR_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym125$SIGN_P), (SubLObject)numeral_parser.$list134), ConsesLow.listS((SubLObject)numeral_parser.SIX_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym124$CENT_SIGN_), (SubLObject)numeral_parser.$list93) }), Symbols.symbol_function((SubLObject)numeral_parser.$sym164$BUILD_TRILLION)));
        numeral_parser.$integer$ = SubLFiles.defparameter("*INTEGER*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym162$TRILLI_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym165$TRILLION_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym166$BUILD_INTEGER)));
        numeral_parser.$number$ = SubLFiles.defparameter("*NUMBER*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym167$INTEGER_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym141$FLOAT_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym103$NUMBER_STRING_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym129$FRACTION_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym168$STANDARD_DOZEN_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym169$EXTENDED_DOZEN_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym170$BUILD_NUMBER)));
        numeral_parser.$fraction$ = SubLFiles.defparameter("*FRACTION*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym122$INDEFINITE_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym90$ATOMIC_DENOMINATOR_LITERAL_), (SubLObject)numeral_parser.$list93), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym172$DENOMINATOR_SIGN_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym173$BUILD_FRACTION)));
        numeral_parser.$half$ = SubLFiles.defparameter("*HALF*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym175$HALF_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym176$BUILD_HALF)));
        numeral_parser.$float$ = SubLFiles.defparameter("*FLOAT*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list177, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym167$INTEGER_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), (SubLObject)numeral_parser.$list93), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.TWO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym129$FRACTION_SIGN_), (SubLObject)numeral_parser.$list117)), Symbols.symbol_function((SubLObject)numeral_parser.$sym178$BUILD_FLOAT)));
        numeral_parser.$negative_number_string$ = SubLFiles.defparameter("*NEGATIVE-NUMBER-STRING*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym179$MINUS_LITERAL_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym180$BUILD_NEGATIVE_NUMBER)));
        numeral_parser.$proper_interval$ = SubLFiles.defparameter("*PROPER-INTERVAL*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list185, (SubLObject)ConsesLow.list(new SubLObject[] { ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym129$FRACTION_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym186$FROM_LITERAL_), (SubLObject)numeral_parser.$list91), ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym187$BETWEEN_LITERAL_), (SubLObject)numeral_parser.$list188), ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list93), ConsesLow.listS((SubLObject)numeral_parser.TWO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym189$TO_LITERAL_), (SubLObject)numeral_parser.$list117), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list190), ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym129$FRACTION_SIGN_), (SubLObject)numeral_parser.$list190), ConsesLow.listS((SubLObject)numeral_parser.FIVE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list191), ConsesLow.listS((SubLObject)numeral_parser.FIVE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym129$FRACTION_SIGN_), (SubLObject)numeral_parser.$list191), ConsesLow.listS((SubLObject)numeral_parser.SIX_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym121$AND_LITERAL_), (SubLObject)numeral_parser.$list192), ConsesLow.listS((SubLObject)numeral_parser.SEVEN_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list190), ConsesLow.listS((SubLObject)numeral_parser.SEVEN_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym129$FRACTION_SIGN_), (SubLObject)numeral_parser.$list190) }), Symbols.symbol_function((SubLObject)numeral_parser.$sym193$BUILD_PROPER_INTERVAL)));
        numeral_parser.$interval$ = SubLFiles.defparameter("*INTERVAL*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list89, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym194$PROPER_INTERVAL_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list91)), Symbols.symbol_function((SubLObject)numeral_parser.$sym195$BUILD_INTERVAL)));
        numeral_parser.$english_interval_parser$ = SubLFiles.defparameter("*ENGLISH-INTERVAL-PARSER*", finite_state_cascade_parser.new_finite_state_cascade_parser((SubLObject)ConsesLow.list(new SubLObject[] { numeral_parser.$zero$.getDynamicValue(), numeral_parser.$indefinite$.getDynamicValue(), numeral_parser.$deci$.getDynamicValue(), numeral_parser.$teen$.getDynamicValue(), numeral_parser.$fuzzy$.getDynamicValue(), numeral_parser.$a_few$.getDynamicValue(), numeral_parser.$atomic_ten$.getDynamicValue(), numeral_parser.$hyphenated_non_atomic_ten$.getDynamicValue(), numeral_parser.$denominator$.getDynamicValue(), numeral_parser.$non_atomic_ten$.getDynamicValue(), numeral_parser.$cent$.getDynamicValue(), numeral_parser.$standard_hundred$.getDynamicValue(), numeral_parser.$extended_hundred$.getDynamicValue(), numeral_parser.$standard_dozen$.getDynamicValue(), numeral_parser.$extended_dozen$.getDynamicValue(), numeral_parser.$kilo$.getDynamicValue(), numeral_parser.$thousand$.getDynamicValue(), numeral_parser.$milli$.getDynamicValue(), numeral_parser.$million$.getDynamicValue(), numeral_parser.$billi$.getDynamicValue(), numeral_parser.$billion$.getDynamicValue(), numeral_parser.$trilli$.getDynamicValue(), numeral_parser.$trillion$.getDynamicValue(), numeral_parser.$integer$.getDynamicValue(), numeral_parser.$number$.getDynamicValue(), numeral_parser.$fraction$.getDynamicValue(), numeral_parser.$half$.getDynamicValue(), numeral_parser.$proper_interval$.getDynamicValue(), numeral_parser.$float$.getDynamicValue(), numeral_parser.$kilo$.getDynamicValue(), numeral_parser.$thousand$.getDynamicValue(), numeral_parser.$milli$.getDynamicValue(), numeral_parser.$million$.getDynamicValue(), numeral_parser.$billi$.getDynamicValue(), numeral_parser.$billion$.getDynamicValue(), numeral_parser.$trilli$.getDynamicValue(), numeral_parser.$trillion$.getDynamicValue(), numeral_parser.$integer$.getDynamicValue(), numeral_parser.$number$.getDynamicValue(), numeral_parser.$negative_number_string$.getDynamicValue(), numeral_parser.$proper_interval$.getDynamicValue(), numeral_parser.$interval$.getDynamicValue() }), (SubLObject)numeral_parser.UNPROVIDED));
        numeral_parser.$negative_number$ = SubLFiles.defparameter("*NEGATIVE-NUMBER*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym199$MINUS_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym180$BUILD_NEGATIVE_NUMBER)));
        numeral_parser.$exponentiation$ = SubLFiles.defparameter("*EXPONENTIATION*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym200$EXPT_OPERATOR_SIGN_), (SubLObject)numeral_parser.$list117), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym201$BUILD_EXPONENTIATION_PHRASE)));
        numeral_parser.$multiplication$ = SubLFiles.defparameter("*MULTIPLICATION*", finite_state_transducer.new_finite_state_transducer((SubLObject)numeral_parser.ZERO_INTEGER, (SubLObject)numeral_parser.$list115, (SubLObject)ConsesLow.list((SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ZERO_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym171$NUMBER_SIGN_), (SubLObject)numeral_parser.$list91), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.ONE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym202$MULT_SIGN_), (SubLObject)numeral_parser.$list117), (SubLObject)ConsesLow.listS((SubLObject)numeral_parser.THREE_INTEGER, Symbols.symbol_function((SubLObject)numeral_parser.$sym203$EXPONENTIATION_SIGN_), (SubLObject)numeral_parser.$list93)), Symbols.symbol_function((SubLObject)numeral_parser.$sym204$BUILD_MULTIPLICATION_PHRASE)));
        numeral_parser.$digit_interval_parser$ = SubLFiles.defparameter("*DIGIT-INTERVAL-PARSER*", finite_state_cascade_parser.new_finite_state_cascade_parser((SubLObject)ConsesLow.list(numeral_parser.$negative_number$.getDynamicValue(), numeral_parser.$exponentiation$.getDynamicValue(), numeral_parser.$multiplication$.getDynamicValue(), numeral_parser.$interval$.getDynamicValue()), (SubLObject)numeral_parser.$sym205$LEX_NUMERALS));
        numeral_parser.$string_to_interval_cached_caching_state$ = SubLFiles.deflexical("*STRING-TO-INTERVAL-CACHED-CACHING-STATE*", (SubLObject)numeral_parser.NIL);
        return (SubLObject)numeral_parser.NIL;
    }
    
    public static SubLObject setup_numeral_parser_file() {
        memoization_state.note_globally_cached_function((SubLObject)numeral_parser.$sym206$STRING_TO_INTERVAL_CACHED);
        return (SubLObject)numeral_parser.NIL;
    }
    
    public void declareFunctions() {
        declare_numeral_parser_file();
    }
    
    public void initializeVariables() {
        init_numeral_parser_file();
    }
    
    public void runTopLevelForms() {
        setup_numeral_parser_file();
    }
    
    static {
        // 
        // This method could not be decompiled.
        // 
        // Original Bytecode:
        // 
        //     0: ldc_w           Lcom/cyc/cycjava/cycl/numeral_parser;.class
        //     3: invokevirtual   java/lang/Class.desiredAssertionStatus:()Z
        //     6: ifne            13
        //     9: iconst_1       
        //    10: goto            14
        //    13: iconst_0       
        //    14: putstatic       com/cyc/cycjava/cycl/numeral_parser.$assertionsDisabled:Z
        //    17: new             Lcom/cyc/cycjava/cycl/numeral_parser;
        //    20: dup            
        //    21: invokespecial   com/cyc/cycjava/cycl/numeral_parser.<init>:()V
        //    24: putstatic       com/cyc/cycjava/cycl/numeral_parser.me:Lcom/cyc/tool/subl/util/SubLFile;
        //    27: aconst_null    
        //    28: putstatic       com/cyc/cycjava/cycl/numeral_parser.$null$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    31: aconst_null    
        //    32: putstatic       com/cyc/cycjava/cycl/numeral_parser.$a$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    35: aconst_null    
        //    36: putstatic       com/cyc/cycjava/cycl/numeral_parser.$digits$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    39: aconst_null    
        //    40: putstatic       com/cyc/cycjava/cycl/numeral_parser.$teens$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    43: aconst_null    
        //    44: putstatic       com/cyc/cycjava/cycl/numeral_parser.$fuzzies$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    47: aconst_null    
        //    48: putstatic       com/cyc/cycjava/cycl/numeral_parser.$atomic_tens$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    51: aconst_null    
        //    52: putstatic       com/cyc/cycjava/cycl/numeral_parser.$onedozen$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    55: aconst_null    
        //    56: putstatic       com/cyc/cycjava/cycl/numeral_parser.$onehundred$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    59: aconst_null    
        //    60: putstatic       com/cyc/cycjava/cycl/numeral_parser.$onethousand$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    63: aconst_null    
        //    64: putstatic       com/cyc/cycjava/cycl/numeral_parser.$onemillion$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    67: aconst_null    
        //    68: putstatic       com/cyc/cycjava/cycl/numeral_parser.$onebillion$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    71: aconst_null    
        //    72: putstatic       com/cyc/cycjava/cycl/numeral_parser.$onetrillion$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    75: aconst_null    
        //    76: putstatic       com/cyc/cycjava/cycl/numeral_parser.$irregular_denominators$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    79: aconst_null    
        //    80: putstatic       com/cyc/cycjava/cycl/numeral_parser.$number_values$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    83: aconst_null    
        //    84: putstatic       com/cyc/cycjava/cycl/numeral_parser.$denominator$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    87: aconst_null    
        //    88: putstatic       com/cyc/cycjava/cycl/numeral_parser.$zero$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    91: aconst_null    
        //    92: putstatic       com/cyc/cycjava/cycl/numeral_parser.$indefinite$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    95: aconst_null    
        //    96: putstatic       com/cyc/cycjava/cycl/numeral_parser.$deci$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //    99: aconst_null    
        //   100: putstatic       com/cyc/cycjava/cycl/numeral_parser.$teen$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   103: aconst_null    
        //   104: putstatic       com/cyc/cycjava/cycl/numeral_parser.$fuzzy$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   107: aconst_null    
        //   108: putstatic       com/cyc/cycjava/cycl/numeral_parser.$atomic_ten$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   111: aconst_null    
        //   112: putstatic       com/cyc/cycjava/cycl/numeral_parser.$hyphenated_non_atomic_ten$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   115: aconst_null    
        //   116: putstatic       com/cyc/cycjava/cycl/numeral_parser.$non_atomic_ten$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   119: aconst_null    
        //   120: putstatic       com/cyc/cycjava/cycl/numeral_parser.$cent$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   123: aconst_null    
        //   124: putstatic       com/cyc/cycjava/cycl/numeral_parser.$standard_hundred$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   127: aconst_null    
        //   128: putstatic       com/cyc/cycjava/cycl/numeral_parser.$a_few$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   131: aconst_null    
        //   132: putstatic       com/cyc/cycjava/cycl/numeral_parser.$extended_hundred$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   135: aconst_null    
        //   136: putstatic       com/cyc/cycjava/cycl/numeral_parser.$standard_dozen$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   139: aconst_null    
        //   140: putstatic       com/cyc/cycjava/cycl/numeral_parser.$extended_dozen$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   143: aconst_null    
        //   144: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kilo$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   147: aconst_null    
        //   148: putstatic       com/cyc/cycjava/cycl/numeral_parser.$thousand$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   151: aconst_null    
        //   152: putstatic       com/cyc/cycjava/cycl/numeral_parser.$milli$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   155: aconst_null    
        //   156: putstatic       com/cyc/cycjava/cycl/numeral_parser.$million$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   159: aconst_null    
        //   160: putstatic       com/cyc/cycjava/cycl/numeral_parser.$billi$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   163: aconst_null    
        //   164: putstatic       com/cyc/cycjava/cycl/numeral_parser.$billion$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   167: aconst_null    
        //   168: putstatic       com/cyc/cycjava/cycl/numeral_parser.$trilli$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   171: aconst_null    
        //   172: putstatic       com/cyc/cycjava/cycl/numeral_parser.$trillion$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   175: aconst_null    
        //   176: putstatic       com/cyc/cycjava/cycl/numeral_parser.$integer$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   179: aconst_null    
        //   180: putstatic       com/cyc/cycjava/cycl/numeral_parser.$number$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   183: aconst_null    
        //   184: putstatic       com/cyc/cycjava/cycl/numeral_parser.$fraction$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   187: aconst_null    
        //   188: putstatic       com/cyc/cycjava/cycl/numeral_parser.$half$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   191: aconst_null    
        //   192: putstatic       com/cyc/cycjava/cycl/numeral_parser.$float$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   195: aconst_null    
        //   196: putstatic       com/cyc/cycjava/cycl/numeral_parser.$negative_number_string$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   199: aconst_null    
        //   200: putstatic       com/cyc/cycjava/cycl/numeral_parser.$proper_interval$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   203: aconst_null    
        //   204: putstatic       com/cyc/cycjava/cycl/numeral_parser.$interval$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   207: aconst_null    
        //   208: putstatic       com/cyc/cycjava/cycl/numeral_parser.$english_interval_parser$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   211: aconst_null    
        //   212: putstatic       com/cyc/cycjava/cycl/numeral_parser.$negative_number$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   215: aconst_null    
        //   216: putstatic       com/cyc/cycjava/cycl/numeral_parser.$exponentiation$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   219: aconst_null    
        //   220: putstatic       com/cyc/cycjava/cycl/numeral_parser.$multiplication$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   223: aconst_null    
        //   224: putstatic       com/cyc/cycjava/cycl/numeral_parser.$digit_interval_parser$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   227: aconst_null    
        //   228: putstatic       com/cyc/cycjava/cycl/numeral_parser.$string_to_interval_cached_caching_state$:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //   231: ldc_w           "zero"
        //   234: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   237: getstatic       com/cyc/cycjava/cycl/numeral_parser.ZERO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   240: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   243: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   246: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list0:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   249: ldc_w           "a"
        //   252: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   255: getstatic       com/cyc/cycjava/cycl/numeral_parser.ONE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   258: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   261: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   264: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list1:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   267: bipush          9
        //   269: anewarray       Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //   272: dup            
        //   273: iconst_0       
        //   274: ldc_w           "one"
        //   277: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   280: getstatic       com/cyc/cycjava/cycl/numeral_parser.ONE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   283: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   286: aastore        
        //   287: dup            
        //   288: iconst_1       
        //   289: ldc_w           "two"
        //   292: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   295: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   298: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   301: aastore        
        //   302: dup            
        //   303: iconst_2       
        //   304: ldc_w           "three"
        //   307: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   310: getstatic       com/cyc/cycjava/cycl/numeral_parser.THREE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   313: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   316: aastore        
        //   317: dup            
        //   318: iconst_3       
        //   319: ldc_w           "four"
        //   322: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   325: getstatic       com/cyc/cycjava/cycl/numeral_parser.FOUR_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   328: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   331: aastore        
        //   332: dup            
        //   333: iconst_4       
        //   334: ldc_w           "five"
        //   337: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   340: getstatic       com/cyc/cycjava/cycl/numeral_parser.FIVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   343: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   346: aastore        
        //   347: dup            
        //   348: iconst_5       
        //   349: ldc_w           "six"
        //   352: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   355: getstatic       com/cyc/cycjava/cycl/numeral_parser.SIX_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   358: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   361: aastore        
        //   362: dup            
        //   363: bipush          6
        //   365: ldc_w           "seven"
        //   368: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   371: getstatic       com/cyc/cycjava/cycl/numeral_parser.SEVEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   374: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   377: aastore        
        //   378: dup            
        //   379: bipush          7
        //   381: ldc_w           "eight"
        //   384: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   387: getstatic       com/cyc/cycjava/cycl/numeral_parser.EIGHT_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   390: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   393: aastore        
        //   394: dup            
        //   395: bipush          8
        //   397: ldc_w           "nine"
        //   400: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   403: getstatic       com/cyc/cycjava/cycl/numeral_parser.NINE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   406: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   409: aastore        
        //   410: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:([Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   413: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list2:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   416: bipush          10
        //   418: anewarray       Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //   421: dup            
        //   422: iconst_0       
        //   423: ldc_w           "ten"
        //   426: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   429: getstatic       com/cyc/cycjava/cycl/numeral_parser.TEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   432: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   435: aastore        
        //   436: dup            
        //   437: iconst_1       
        //   438: ldc_w           "eleven"
        //   441: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   444: getstatic       com/cyc/cycjava/cycl/numeral_parser.ELEVEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   447: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   450: aastore        
        //   451: dup            
        //   452: iconst_2       
        //   453: ldc_w           "twelve"
        //   456: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   459: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWELVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   462: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   465: aastore        
        //   466: dup            
        //   467: iconst_3       
        //   468: ldc_w           "thirteen"
        //   471: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   474: getstatic       com/cyc/cycjava/cycl/numeral_parser.THIRTEEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   477: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   480: aastore        
        //   481: dup            
        //   482: iconst_4       
        //   483: ldc_w           "fourteen"
        //   486: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   489: getstatic       com/cyc/cycjava/cycl/numeral_parser.FOURTEEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   492: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   495: aastore        
        //   496: dup            
        //   497: iconst_5       
        //   498: ldc_w           "fifteen"
        //   501: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   504: getstatic       com/cyc/cycjava/cycl/numeral_parser.FIFTEEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   507: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   510: aastore        
        //   511: dup            
        //   512: bipush          6
        //   514: ldc_w           "sixteen"
        //   517: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   520: getstatic       com/cyc/cycjava/cycl/numeral_parser.SIXTEEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   523: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   526: aastore        
        //   527: dup            
        //   528: bipush          7
        //   530: ldc_w           "seventeen"
        //   533: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   536: getstatic       com/cyc/cycjava/cycl/numeral_parser.SEVENTEEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   539: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   542: aastore        
        //   543: dup            
        //   544: bipush          8
        //   546: ldc_w           "eighteen"
        //   549: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   552: getstatic       com/cyc/cycjava/cycl/numeral_parser.EIGHTEEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   555: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   558: aastore        
        //   559: dup            
        //   560: bipush          9
        //   562: ldc_w           "nineteen"
        //   565: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   568: getstatic       com/cyc/cycjava/cycl/numeral_parser.NINETEEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   571: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   574: aastore        
        //   575: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:([Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   578: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list3:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   581: ldc_w           "several"
        //   584: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   587: ldc_w           "Several-Quant"
        //   590: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   593: invokestatic    com/cyc/cycjava/cycl/constant_handles.reader_make_constant_shell:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //   596: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   599: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   602: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list4:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   605: ldc_w           "twenty"
        //   608: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   611: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWENTY_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   614: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   617: ldc_w           "thirty"
        //   620: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   623: bipush          30
        //   625: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   628: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   631: ldc_w           "forty"
        //   634: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   637: bipush          40
        //   639: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   642: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   645: ldc_w           "fifty"
        //   648: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   651: bipush          50
        //   653: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   656: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   659: ldc_w           "sixty"
        //   662: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   665: bipush          60
        //   667: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   670: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   673: ldc_w           "seventy"
        //   676: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   679: bipush          70
        //   681: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   684: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   687: ldc_w           "eighty"
        //   690: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   693: bipush          80
        //   695: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   698: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   701: ldc_w           "ninety"
        //   704: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   707: bipush          90
        //   709: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   712: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   715: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   718: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list5:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   721: ldc_w           "dozen"
        //   724: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   727: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWELVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   730: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   733: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   736: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list6:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   739: ldc_w           "hundred"
        //   742: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   745: bipush          100
        //   747: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   750: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   753: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   756: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list7:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   759: ldc_w           "thousand"
        //   762: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   765: sipush          1000
        //   768: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   771: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   774: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   777: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list8:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   780: ldc_w           "million"
        //   783: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   786: ldc_w           1000000
        //   789: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   792: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   795: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   798: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list9:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   801: ldc_w           "billion"
        //   804: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   807: ldc_w           1000000000
        //   810: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   813: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   816: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   819: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list10:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   822: ldc_w           "trillion"
        //   825: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   828: ldc_w           "1000000000000"
        //   831: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //   834: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   837: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   840: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list11:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //   843: bipush          18
        //   845: anewarray       Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //   848: dup            
        //   849: iconst_0       
        //   850: ldc_w           "first"
        //   853: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   856: getstatic       com/cyc/cycjava/cycl/numeral_parser.ONE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   859: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   862: aastore        
        //   863: dup            
        //   864: iconst_1       
        //   865: ldc_w           "second"
        //   868: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   871: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   874: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   877: aastore        
        //   878: dup            
        //   879: iconst_2       
        //   880: ldc_w           "half"
        //   883: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   886: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   889: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   892: aastore        
        //   893: dup            
        //   894: iconst_3       
        //   895: ldc_w           "halves"
        //   898: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   901: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   904: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   907: aastore        
        //   908: dup            
        //   909: iconst_4       
        //   910: ldc_w           "third"
        //   913: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   916: getstatic       com/cyc/cycjava/cycl/numeral_parser.THREE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   919: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   922: aastore        
        //   923: dup            
        //   924: iconst_5       
        //   925: ldc_w           "quarter"
        //   928: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   931: getstatic       com/cyc/cycjava/cycl/numeral_parser.FOUR_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   934: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   937: aastore        
        //   938: dup            
        //   939: bipush          6
        //   941: ldc_w           "fifth"
        //   944: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   947: getstatic       com/cyc/cycjava/cycl/numeral_parser.FIVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   950: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   953: aastore        
        //   954: dup            
        //   955: bipush          7
        //   957: ldc_w           "eighth"
        //   960: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   963: getstatic       com/cyc/cycjava/cycl/numeral_parser.EIGHT_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   966: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   969: aastore        
        //   970: dup            
        //   971: bipush          8
        //   973: ldc_w           "twelfth"
        //   976: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   979: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWELVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   982: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //   985: aastore        
        //   986: dup            
        //   987: bipush          9
        //   989: ldc_w           "twelvth"
        //   992: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //   995: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWELVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //   998: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1001: aastore        
        //  1002: dup            
        //  1003: bipush          10
        //  1005: ldc_w           "twentieth"
        //  1008: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1011: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWENTY_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  1014: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1017: aastore        
        //  1018: dup            
        //  1019: bipush          11
        //  1021: ldc_w           "thirtieth"
        //  1024: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1027: bipush          30
        //  1029: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1032: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1035: aastore        
        //  1036: dup            
        //  1037: bipush          12
        //  1039: ldc_w           "fortieth"
        //  1042: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1045: bipush          40
        //  1047: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1050: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1053: aastore        
        //  1054: dup            
        //  1055: bipush          13
        //  1057: ldc_w           "fiftieth"
        //  1060: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1063: bipush          50
        //  1065: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1068: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1071: aastore        
        //  1072: dup            
        //  1073: bipush          14
        //  1075: ldc_w           "sixtieth"
        //  1078: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1081: bipush          60
        //  1083: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1086: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1089: aastore        
        //  1090: dup            
        //  1091: bipush          15
        //  1093: ldc_w           "seventieth"
        //  1096: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1099: bipush          70
        //  1101: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1104: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1107: aastore        
        //  1108: dup            
        //  1109: bipush          16
        //  1111: ldc_w           "eightieth"
        //  1114: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1117: bipush          80
        //  1119: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1122: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1125: aastore        
        //  1126: dup            
        //  1127: bipush          17
        //  1129: ldc_w           "ninetieth"
        //  1132: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1135: bipush          90
        //  1137: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1140: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.cons:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCons;
        //  1143: aastore        
        //  1144: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:([Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1147: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list12:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1150: ldc_w           "AMERICAN"
        //  1153: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1156: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw13$AMERICAN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1159: ldc_w           ","
        //  1162: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1165: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str14$_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1168: bipush          100
        //  1170: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1173: putstatic       com/cyc/cycjava/cycl/numeral_parser.$int15$100:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  1176: ldc_w           "s"
        //  1179: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1182: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str16$s:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1185: ldc_w           "th"
        //  1188: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1191: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str17$th:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1194: ldc_w           "ths"
        //  1197: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1200: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str18$ths:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1203: getstatic       com/cyc/tool/subl/jrtl/nativeCode/subLisp/Characters.CHAR_hyphen:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLCharacter;
        //  1206: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1209: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list19:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1212: ldc_w           "PLUS"
        //  1215: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1218: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw20$PLUS:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1221: ldc_w           "KEYWORDP"
        //  1224: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1227: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym21$KEYWORDP:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1230: ldc_w           "TIMES"
        //  1233: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1236: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw22$TIMES:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1239: ldc_w           "DIGIT-CHAR-P"
        //  1242: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1245: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym23$DIGIT_CHAR_P:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1248: ldc_w           "PlusFn"
        //  1251: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1254: invokestatic    com/cyc/cycjava/cycl/constant_handles.reader_make_constant_shell:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1257: putstatic       com/cyc/cycjava/cycl/numeral_parser.$const24$PlusFn:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1260: ldc_w           "TimesFn"
        //  1263: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1266: invokestatic    com/cyc/cycjava/cycl/constant_handles.reader_make_constant_shell:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1269: putstatic       com/cyc/cycjava/cycl/numeral_parser.$const25$TimesFn:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1272: ldc_w           "DIVIDEDBY"
        //  1275: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1278: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw26$DIVIDEDBY:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1281: ldc_w           "QuotientFn"
        //  1284: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1287: invokestatic    com/cyc/cycjava/cycl/constant_handles.reader_make_constant_shell:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1290: putstatic       com/cyc/cycjava/cycl/numeral_parser.$const27$QuotientFn:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1293: ldc_w           "TOTHE"
        //  1296: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1299: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw28$TOTHE:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1302: ldc_w           "ExponentFn"
        //  1305: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1308: invokestatic    com/cyc/cycjava/cycl/constant_handles.reader_make_constant_shell:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1311: putstatic       com/cyc/cycjava/cycl/numeral_parser.$const29$ExponentFn:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  1314: ldc_w           "zero"
        //  1317: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1320: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str30$zero:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1323: ldc_w           "INDEFINITE"
        //  1326: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1329: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw31$INDEFINITE:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1332: ldc_w           "NUMERAL-PARSER-STRING="
        //  1335: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1338: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym32$NUMERAL_PARSER_STRING_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1341: ldc_w           "-"
        //  1344: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1347: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str33$_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1350: ldc_w           "FUZZY"
        //  1353: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1356: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw34$FUZZY:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1359: ldc_w           "NON-ATOMIC-TEN"
        //  1362: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1365: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw35$NON_ATOMIC_TEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1368: ldc_w           "CENT"
        //  1371: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1374: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw36$CENT:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1377: ldc_w           "KILO"
        //  1380: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1383: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw37$KILO:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1386: ldc_w           "FRACTION"
        //  1389: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1392: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw38$FRACTION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1395: ldc_w           "FLOAT"
        //  1398: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1401: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw39$FLOAT:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1404: ldc_w           "NUMBER"
        //  1407: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1410: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw40$NUMBER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1413: ldc_w           "INTERVAL"
        //  1416: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1419: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw41$INTERVAL:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1422: ldc_w           "PROPER-INTERVAL"
        //  1425: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1428: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw42$PROPER_INTERVAL:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1431: ldc_w           "MILLI"
        //  1434: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1437: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw43$MILLI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1440: ldc_w           "BILLI"
        //  1443: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1446: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw44$BILLI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1449: ldc_w           "TRILLI"
        //  1452: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1455: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw45$TRILLI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1458: ldc_w           "INTEGER"
        //  1461: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1464: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw46$INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1467: ldc_w           "EXTENDED-DOZEN"
        //  1470: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1473: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw47$EXTENDED_DOZEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1476: ldc_w           "STANDARD-DOZEN"
        //  1479: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1482: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw48$STANDARD_DOZEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1485: ldc_w           "EXTENDED-HUNDRED"
        //  1488: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1491: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw49$EXTENDED_HUNDRED:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1494: ldc_w           "STANDARD-HUNDRED"
        //  1497: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1500: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw50$STANDARD_HUNDRED:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1503: ldc_w           "THOUSAND"
        //  1506: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1509: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw51$THOUSAND:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1512: ldc_w           "MILLION"
        //  1515: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1518: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw52$MILLION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1521: ldc_w           "BILLION"
        //  1524: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1527: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw53$BILLION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1530: ldc_w           "TRILLION"
        //  1533: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1536: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw54$TRILLION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1539: ldc_w           "and"
        //  1542: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1545: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str55$and:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1548: ldc_w           "dozen"
        //  1551: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1554: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str56$dozen:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1557: ldc_w           "few"
        //  1560: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1563: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str57$few:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1566: ldc_w           "hundred"
        //  1569: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1572: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str58$hundred:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1575: ldc_w           "thousand"
        //  1578: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1581: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str59$thousand:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1584: ldc_w           "million"
        //  1587: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1590: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str60$million:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1593: ldc_w           "millions"
        //  1596: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1599: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str61$millions:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1602: ldc_w           "billions"
        //  1605: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1608: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str62$billions:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1611: ldc_w           "billion"
        //  1614: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1617: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str63$billion:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1620: ldc_w           "trillions"
        //  1623: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1626: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str64$trillions:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1629: ldc_w           "trillion"
        //  1632: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1635: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str65$trillion:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1638: ldc_w           "first"
        //  1641: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1644: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str66$first:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1647: ldc_w           "second"
        //  1650: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1653: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str67$second:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1656: ldc_w           "seconds"
        //  1659: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1662: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str68$seconds:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1665: ldc_w           "halves"
        //  1668: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1671: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str69$halves:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1674: ldc_w           "NUMERAL-PARSER-CHAR="
        //  1677: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1680: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym70$NUMERAL_PARSER_CHAR_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1683: ldc_w           "DENOMINATOR"
        //  1686: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1689: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw71$DENOMINATOR:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1692: ldc_w           "half"
        //  1695: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1698: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str72$half:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1701: ldc_w           "minus"
        //  1704: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1707: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str73$minus:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1710: ldc_w           "negative"
        //  1713: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1716: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str74$negative:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1719: ldc_w           "to"
        //  1722: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1725: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str75$to:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1728: ldc_w           "from"
        //  1731: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1734: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str76$from:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1737: ldc_w           "between"
        //  1740: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1743: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str77$between:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1746: ldc_w           "MULT"
        //  1749: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1752: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw78$MULT:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1755: ldc_w           "EXPT"
        //  1758: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1761: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw79$EXPT:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1764: ldc_w           "EXPONENTIATION"
        //  1767: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1770: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw80$EXPONENTIATION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1773: ldc_w           "+"
        //  1776: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1779: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str81$_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1782: ldc_w           "Can't build a denominator out of nothing!"
        //  1785: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1788: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str82$Can_t_build_a_denominator_out_of_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  1791: ldc_w           "CATEGORY"
        //  1794: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1797: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw83$CATEGORY:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1800: ldc_w           "INFO"
        //  1803: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1806: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw84$INFO:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1809: ldc_w           "STRING"
        //  1812: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1815: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw85$STRING:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1818: ldc_w           "SIGN-STRING"
        //  1821: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1824: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym86$SIGN_STRING:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1827: ldc_w           "CONSTITUENTS"
        //  1830: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1833: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw87$CONSTITUENTS:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1836: ldc_w           "VECTOR"
        //  1839: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1842: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym88$VECTOR:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1845: getstatic       com/cyc/cycjava/cycl/numeral_parser.ONE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  1848: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1851: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list89:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1854: ldc_w           "ATOMIC-DENOMINATOR-LITERAL?"
        //  1857: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1860: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym90$ATOMIC_DENOMINATOR_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1863: ldc_w           "EMIT"
        //  1866: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1869: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1872: getstatic       com/cyc/cycjava/cycl/numeral_parser.ONE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  1875: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1878: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list91:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1881: ldc_w           "ATOMIC-TEN-SIGN?"
        //  1884: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1887: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym92$ATOMIC_TEN_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1890: ldc_w           "EMIT"
        //  1893: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1896: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1899: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  1902: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1905: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list93:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  1908: ldc_w           "DENOMINATOR-LITERAL?"
        //  1911: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1914: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym94$DENOMINATOR_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1917: ldc_w           "BUILD-DENOMINATOR"
        //  1920: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1923: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym95$BUILD_DENOMINATOR:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1926: ldc_w           "ZERO"
        //  1929: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1932: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw96$ZERO:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1935: ldc_w           "ZERO-LITERAL?"
        //  1938: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1941: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym97$ZERO_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1944: ldc_w           "BUILD-ZERO"
        //  1947: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1950: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym98$BUILD_ZERO:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1953: ldc_w           "INDEFINITE-LITERAL?"
        //  1956: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1959: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym99$INDEFINITE_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1962: ldc_w           "BUILD-INDEFINITE"
        //  1965: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1968: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym100$BUILD_INDEFINITE:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1971: ldc_w           "DECI"
        //  1974: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1977: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw101$DECI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1980: ldc_w           "DIGIT-SIGN?"
        //  1983: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1986: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym102$DIGIT_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1989: ldc_w           "NUMBER-STRING-SIGN?"
        //  1992: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1995: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym103$NUMBER_STRING_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  1998: ldc_w           "BUILD-DECI"
        //  2001: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2004: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym104$BUILD_DECI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2007: ldc_w           "TEEN"
        //  2010: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2013: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw105$TEEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2016: ldc_w           "TEEN-SIGN?"
        //  2019: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2022: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym106$TEEN_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2025: ldc_w           "BUILD-TEEN"
        //  2028: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2031: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym107$BUILD_TEEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2034: ldc_w           "FUZZY-SIGN?"
        //  2037: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2040: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym108$FUZZY_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2043: ldc_w           "BUILD-FUZZY"
        //  2046: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2049: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym109$BUILD_FUZZY:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2052: ldc_w           "ATOMIC-TEN"
        //  2055: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2058: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw110$ATOMIC_TEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2061: ldc_w           "BUILD-ATOMIC-TEN"
        //  2064: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2067: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym111$BUILD_ATOMIC_TEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2070: ldc_w           "HYPHENATED-NON-ATOMIC-TEN-SIGN?"
        //  2073: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2076: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym112$HYPHENATED_NON_ATOMIC_TEN_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2079: ldc_w           "BUILD-HYPHENATED-NON-ATOMIC-TEN"
        //  2082: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2085: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym113$BUILD_HYPHENATED_NON_ATOMIC_TEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2088: ldc_w           "HYPHEN-SIGN?"
        //  2091: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2094: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym114$HYPHEN_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2097: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2100: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2103: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list115:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2106: ldc_w           "DECI-SIGN?"
        //  2109: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2112: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym116$DECI_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2115: ldc_w           "EMIT"
        //  2118: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2121: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2124: getstatic       com/cyc/cycjava/cycl/numeral_parser.THREE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2127: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2130: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list117:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2133: ldc_w           "BUILD-NON-ATOMIC-TEN"
        //  2136: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2139: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym118$BUILD_NON_ATOMIC_TEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2142: ldc_w           "NON-ATOMIC-TEN-SIGN?"
        //  2145: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2148: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym119$NON_ATOMIC_TEN_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2151: ldc_w           "BUILD-CENT"
        //  2154: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2157: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym120$BUILD_CENT:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2160: ldc_w           "AND-LITERAL?"
        //  2163: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2166: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym121$AND_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2169: ldc_w           "INDEFINITE-SIGN?"
        //  2172: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2175: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym122$INDEFINITE_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2178: ldc_w           "HUNDRED-LITERAL?"
        //  2181: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2184: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym123$HUNDRED_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2187: ldc_w           "CENT-SIGN?"
        //  2190: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2193: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym124$CENT_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2196: ldc_w           "SIGN-P"
        //  2199: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2202: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym125$SIGN_P:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2205: ldc_w           "REMEMBER"
        //  2208: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2211: ldc_w           "BACKUP"
        //  2214: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2217: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2220: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2223: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2226: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list126:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2229: getstatic       com/cyc/cycjava/cycl/numeral_parser.THREE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2232: ldc_w           "END"
        //  2235: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2238: getstatic       com/cyc/cycjava/cycl/numeral_parser.NIL:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLNil;
        //  2241: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2244: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2247: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list127:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2250: ldc_w           "BACKUP"
        //  2253: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2256: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2259: getstatic       com/cyc/cycjava/cycl/numeral_parser.FIVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2262: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2265: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list128:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2268: ldc_w           "FRACTION-SIGN?"
        //  2271: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2274: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym129$FRACTION_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2277: ldc_w           "BUILD-STANDARD-HUNDRED"
        //  2280: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2283: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym130$BUILD_STANDARD_HUNDRED:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2286: ldc_w           "AFew-Quant"
        //  2289: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  2292: invokestatic    com/cyc/cycjava/cycl/constant_handles.reader_make_constant_shell:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  2295: putstatic       com/cyc/cycjava/cycl/numeral_parser.$const131$AFew_Quant:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  2298: ldc_w           "FEW-LITERAL?"
        //  2301: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2304: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym132$FEW_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2307: ldc_w           "BUILD-A-FEW"
        //  2310: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2313: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym133$BUILD_A_FEW:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2316: ldc_w           "BACKUP"
        //  2319: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2322: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2325: getstatic       com/cyc/cycjava/cycl/numeral_parser.TWO_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2328: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2331: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list134:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2334: ldc_w           "BUILD-EXTENDED-HUNDRED"
        //  2337: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2340: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym135$BUILD_EXTENDED_HUNDRED:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2343: ldc_w           "DOZEN-LITERAL?"
        //  2346: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2349: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym136$DOZEN_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2352: ldc_w           "BUILD-STANDARD-DOZEN"
        //  2355: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2358: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym137$BUILD_STANDARD_DOZEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2361: ldc_w           "BUILD-EXTENDED-DOZEN"
        //  2364: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2367: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym138$BUILD_EXTENDED_DOZEN:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2370: ldc_w           "STANDARD-HUNDRED-SIGN?"
        //  2373: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2376: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym139$STANDARD_HUNDRED_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2379: ldc_w           "EXTENDED-HUNDRED-SIGN?"
        //  2382: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2385: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym140$EXTENDED_HUNDRED_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2388: ldc_w           "FLOAT-SIGN?"
        //  2391: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2394: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym141$FLOAT_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2397: ldc_w           "BUILD-KILO"
        //  2400: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2403: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym142$BUILD_KILO:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2406: sipush          1000
        //  2409: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2412: putstatic       com/cyc/cycjava/cycl/numeral_parser.$int143$1000:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2415: ldc_w           "KILO-SIGN?"
        //  2418: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2421: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym144$KILO_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2424: ldc_w           "THOUSAND-LITERAL?"
        //  2427: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2430: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym145$THOUSAND_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2433: ldc_w           "BUILD-THOUSAND"
        //  2436: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2439: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym146$BUILD_THOUSAND:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2442: ldc_w           "THOUSAND-SIGN?"
        //  2445: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2448: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym147$THOUSAND_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2451: ldc_w           "BUILD-MILLI"
        //  2454: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2457: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym148$BUILD_MILLI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2460: ldc_w           1000000
        //  2463: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2466: putstatic       com/cyc/cycjava/cycl/numeral_parser.$int149$1000000:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2469: ldc_w           "MILLI-SIGN?"
        //  2472: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2475: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym150$MILLI_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2478: ldc_w           "MILLION-LITERAL?"
        //  2481: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2484: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym151$MILLION_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2487: ldc_w           "BUILD-MILLION"
        //  2490: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2493: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym152$BUILD_MILLION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2496: ldc_w           "MILLION-SIGN?"
        //  2499: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2502: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym153$MILLION_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2505: ldc_w           "BUILD-BILLI"
        //  2508: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2511: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym154$BUILD_BILLI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2514: ldc_w           1000000000
        //  2517: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2520: putstatic       com/cyc/cycjava/cycl/numeral_parser.$int155$1000000000:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2523: ldc_w           "BILLI-SIGN?"
        //  2526: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2529: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym156$BILLI_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2532: ldc_w           "BILLION-LITERAL?"
        //  2535: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2538: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym157$BILLION_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2541: ldc_w           "BUILD-BILLION"
        //  2544: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2547: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym158$BUILD_BILLION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2550: ldc_w           "BILLION-SIGN?"
        //  2553: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2556: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym159$BILLION_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2559: ldc_w           "BUILD-TRILLI"
        //  2562: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2565: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym160$BUILD_TRILLI:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2568: ldc_w           "1000000000000"
        //  2571: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2574: putstatic       com/cyc/cycjava/cycl/numeral_parser.$int161$1000000000000:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  2577: ldc_w           "TRILLI-SIGN?"
        //  2580: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2583: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym162$TRILLI_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2586: ldc_w           "TRILLION-LITERAL?"
        //  2589: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2592: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym163$TRILLION_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2595: ldc_w           "BUILD-TRILLION"
        //  2598: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2601: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym164$BUILD_TRILLION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2604: ldc_w           "TRILLION-SIGN?"
        //  2607: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2610: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym165$TRILLION_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2613: ldc_w           "BUILD-INTEGER"
        //  2616: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2619: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym166$BUILD_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2622: ldc_w           "INTEGER-SIGN?"
        //  2625: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2628: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym167$INTEGER_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2631: ldc_w           "STANDARD-DOZEN-SIGN?"
        //  2634: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2637: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym168$STANDARD_DOZEN_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2640: ldc_w           "EXTENDED-DOZEN-SIGN?"
        //  2643: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2646: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym169$EXTENDED_DOZEN_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2649: ldc_w           "BUILD-NUMBER"
        //  2652: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2655: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym170$BUILD_NUMBER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2658: ldc_w           "NUMBER-SIGN?"
        //  2661: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2664: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym171$NUMBER_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2667: ldc_w           "DENOMINATOR-SIGN?"
        //  2670: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2673: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym172$DENOMINATOR_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2676: ldc_w           "BUILD-FRACTION"
        //  2679: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2682: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym173$BUILD_FRACTION:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2685: ldc2_w          0.5
        //  2688: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeDouble:(D)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLDoubleFloat;
        //  2691: putstatic       com/cyc/cycjava/cycl/numeral_parser.$float174$0_5:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFloat;
        //  2694: ldc_w           "HALF-SIGN?"
        //  2697: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2700: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym175$HALF_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2703: ldc_w           "BUILD-HALF"
        //  2706: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2709: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym176$BUILD_HALF:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2712: getstatic       com/cyc/cycjava/cycl/numeral_parser.THREE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2715: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2718: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list177:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2721: ldc_w           "BUILD-FLOAT"
        //  2724: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2727: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym178$BUILD_FLOAT:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2730: ldc_w           "MINUS-LITERAL?"
        //  2733: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2736: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym179$MINUS_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2739: ldc_w           "BUILD-NEGATIVE-NUMBER"
        //  2742: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2745: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym180$BUILD_NEGATIVE_NUMBER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2748: ldc_w           "Unity"
        //  2751: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  2754: invokestatic    com/cyc/cycjava/cycl/constant_handles.reader_make_constant_shell:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  2757: putstatic       com/cyc/cycjava/cycl/numeral_parser.$const181$Unity:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;
        //  2760: ldc_w           "NULL"
        //  2763: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2766: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym182$NULL:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2769: ldc_w           "SIGN-INFO"
        //  2772: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2775: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym183$SIGN_INFO:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2778: ldc_w           "<"
        //  2781: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2784: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym184$_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2787: getstatic       com/cyc/cycjava/cycl/numeral_parser.FOUR_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2790: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2793: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list185:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2796: ldc_w           "FROM-LITERAL?"
        //  2799: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2802: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym186$FROM_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2805: ldc_w           "BETWEEN-LITERAL?"
        //  2808: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2811: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym187$BETWEEN_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2814: ldc_w           "EMIT"
        //  2817: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2820: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2823: getstatic       com/cyc/cycjava/cycl/numeral_parser.FIVE_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2826: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2829: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list188:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2832: ldc_w           "TO-LITERAL?"
        //  2835: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2838: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym189$TO_LITERAL_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2841: ldc_w           "EMIT"
        //  2844: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2847: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2850: getstatic       com/cyc/cycjava/cycl/numeral_parser.FOUR_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2853: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2856: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list190:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2859: ldc_w           "EMIT"
        //  2862: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2865: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2868: getstatic       com/cyc/cycjava/cycl/numeral_parser.SIX_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2871: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2874: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list191:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2877: ldc_w           "EMIT"
        //  2880: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2883: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2886: getstatic       com/cyc/cycjava/cycl/numeral_parser.SEVEN_INTEGER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLFixnum;
        //  2889: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/subLisp/ConsesLow.list:(Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObject;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2892: putstatic       com/cyc/cycjava/cycl/numeral_parser.$list192:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLList;
        //  2895: ldc_w           "BUILD-PROPER-INTERVAL"
        //  2898: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2901: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym193$BUILD_PROPER_INTERVAL:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2904: ldc_w           "PROPER-INTERVAL-SIGN?"
        //  2907: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2910: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym194$PROPER_INTERVAL_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2913: ldc_w           "BUILD-INTERVAL"
        //  2916: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2919: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym195$BUILD_INTERVAL:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2922: ldc_w           "SEQUENCEP"
        //  2925: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2928: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym196$SEQUENCEP:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2931: ldc_w           "*"
        //  2934: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  2937: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str197$_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  2940: ldc_w           "^"
        //  2943: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeString:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  2946: putstatic       com/cyc/cycjava/cycl/numeral_parser.$str198$_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/core/SubLString;
        //  2949: ldc_w           "MINUS-SIGN?"
        //  2952: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2955: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym199$MINUS_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2958: ldc_w           "EXPT-OPERATOR-SIGN?"
        //  2961: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2964: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym200$EXPT_OPERATOR_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2967: ldc_w           "BUILD-EXPONENTIATION-PHRASE"
        //  2970: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2973: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym201$BUILD_EXPONENTIATION_PHRASE:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2976: ldc_w           "MULT-SIGN?"
        //  2979: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2982: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym202$MULT_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2985: ldc_w           "EXPONENTIATION-SIGN?"
        //  2988: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2991: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym203$EXPONENTIATION_SIGN_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  2994: ldc_w           "BUILD-MULTIPLICATION-PHRASE"
        //  2997: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3000: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym204$BUILD_MULTIPLICATION_PHRASE:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3003: ldc_w           "LEX-NUMERALS"
        //  3006: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3009: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym205$LEX_NUMERALS:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3012: ldc_w           "STRING-TO-INTERVAL-CACHED"
        //  3015: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3018: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym206$STRING_TO_INTERVAL_CACHED:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3021: ldc_w           "STRINGP"
        //  3024: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3027: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym207$STRINGP:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3030: ldc_w           "IGNORE-ERRORS-TARGET"
        //  3033: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeKeyword:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3036: putstatic       com/cyc/cycjava/cycl/numeral_parser.$kw208$IGNORE_ERRORS_TARGET:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3039: ldc_w           "IGNORE-ERRORS-HANDLER"
        //  3042: ldc_w           "SUBLISP"
        //  3045: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3048: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym209$IGNORE_ERRORS_HANDLER:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3051: ldc_w           "*STRING-TO-INTERVAL-CACHED-CACHING-STATE*"
        //  3054: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeSymbol:(Ljava/lang/String;)Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3057: putstatic       com/cyc/cycjava/cycl/numeral_parser.$sym210$_STRING_TO_INTERVAL_CACHED_CACHING_STATE_:Lcom/cyc/tool/subl/jrtl/nativeCode/type/symbol/SubLSymbol;
        //  3060: sipush          256
        //  3063: invokestatic    com/cyc/tool/subl/jrtl/nativeCode/type/core/SubLObjectFactory.makeInteger:(I)Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  3066: putstatic       com/cyc/cycjava/cycl/numeral_parser.$int211$256:Lcom/cyc/tool/subl/jrtl/nativeCode/type/number/SubLInteger;
        //  3069: return         
        // 
        // The error that occurred was:
        // 
        // java.lang.NumberFormatException: For input string: "1000000000000"
        //     at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
        //     at java.lang.Integer.parseInt(Integer.java:583)
        //     at java.lang.Integer.parseInt(Integer.java:615)
        //     at com.strobel.decompiler.languages.java.ast.NameVariables.splitName(NameVariables.java:119)
        //     at com.strobel.decompiler.languages.java.ast.NameVariables.addExistingName(NameVariables.java:100)
        //     at com.strobel.decompiler.languages.java.ast.NameVariables.assignNamesToVariables(NameVariables.java:151)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:276)
        //     at com.strobel.decompiler.languages.java.ast.AstMethodBodyBuilder.createMethodBody(AstMethodBodyBuilder.java:99)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethodBody(AstBuilder.java:757)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createMethod(AstBuilder.java:655)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addTypeMembers(AstBuilder.java:532)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeCore(AstBuilder.java:499)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createTypeNoCache(AstBuilder.java:141)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.createType(AstBuilder.java:130)
        //     at com.strobel.decompiler.languages.java.ast.AstBuilder.addType(AstBuilder.java:105)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.buildAst(JavaLanguage.java:71)
        //     at com.strobel.decompiler.languages.java.JavaLanguage.decompileType(JavaLanguage.java:59)
        //     at com.strobel.decompiler.DecompilerDriver.decompileType(DecompilerDriver.java:317)
        //     at com.strobel.decompiler.DecompilerDriver.main(DecompilerDriver.java:141)
        // 
        throw new IllegalStateException("An error occurred while decompiling this method.");
    }
    
    public static final class $numeral_parser_stringE$BinaryFunction extends BinaryFunction
    {
        public $numeral_parser_stringE$BinaryFunction() {
            super(SubLTranslatedFile.extractFunctionNamed("NUMERAL-PARSER-STRING="));
        }
        
        public SubLObject processItem(final SubLObject arg1, final SubLObject arg2) {
            return numeral_parser.numeral_parser_stringE(arg1, arg2);
        }
    }
}
