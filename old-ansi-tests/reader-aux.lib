#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CL-TEST"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-SYNTAX-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-SYNTAX-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-SYNTAX-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|EXPECTED-RESULTS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-SYNTAX-TEST|
       `(|REGRESSION-TEST|::|DEFTEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|*PACKAGE*|
             (|COMMON-LISP|::|FIND-PACKAGE| :|CL-TEST|)))
           ,|CL-TEST|::|FORM|))
         ,@|CL-TEST|::|EXPECTED-RESULTS|))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|FORM| |COMMON-LISP|::|&BODY|
    |CL-TEST|::|EXPECTED-RESULTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-SYNTAX-VECTOR-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-SYNTAX-VECTOR-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-SYNTAX-VECTOR-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|EXPECTED-ELEMENTS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-SYNTAX-VECTOR-TEST|
       `(|CL-TEST|::|DEF-SYNTAX-TEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|LET|
          ((|CL-TEST|::|V|
            (|COMMON-LISP|::|READ-FROM-STRING| ,|CL-TEST|::|FORM|)))
          (|COMMON-LISP|::|ASSERT|
           (|COMMON-LISP|::|SIMPLE-VECTOR-P| |CL-TEST|::|V|))
          |CL-TEST|::|V|)
         ,(|COMMON-LISP|::|APPLY| #'|COMMON-LISP|::|VECTOR|
           |CL-TEST|::|EXPECTED-ELEMENTS|)))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|FORM| |COMMON-LISP|::|&BODY|
    |CL-TEST|::|EXPECTED-ELEMENTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-SYNTAX-BIT-VECTOR-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-SYNTAX-BIT-VECTOR-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-SYNTAX-BIT-VECTOR-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|EXPECTED-ELEMENTS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-SYNTAX-BIT-VECTOR-TEST|
       `(|CL-TEST|::|DEF-SYNTAX-TEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|LET|
          ((|CL-TEST|::|V|
            (|COMMON-LISP|::|READ-FROM-STRING| ,|CL-TEST|::|FORM|)))
          (|COMMON-LISP|::|ASSERT|
           (|COMMON-LISP|::|SIMPLE-BIT-VECTOR-P| |CL-TEST|::|V|))
          |CL-TEST|::|V|)
         ,(|COMMON-LISP|::|MAKE-ARRAY|
           (|COMMON-LISP|::|LENGTH| |CL-TEST|::|EXPECTED-ELEMENTS|)
           :|ELEMENT-TYPE| '|COMMON-LISP|::|BIT| :|INITIAL-CONTENTS|
           |CL-TEST|::|EXPECTED-ELEMENTS|)))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|FORM| |COMMON-LISP|::|&BODY|
    |CL-TEST|::|EXPECTED-ELEMENTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-SYNTAX-UNINTERN-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-SYNTAX-UNINTERN-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-SYNTAX-UNINTERN-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3. 3.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|STRING| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-SYNTAX-UNINTERN-TEST|
       `(|REGRESSION-TEST|::|DEFTEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|LET|
          ((|CL-TEST|::|S|
            (|COMMON-LISP|::|READ-FROM-STRING|
             ,(|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING| "#:"
               |COMMON-LISP|::|STRING|))))
          (|COMMON-LISP|::|VALUES|
           (|COMMON-LISP|::|SYMBOL-PACKAGE| |CL-TEST|::|S|)
           (|COMMON-LISP|::|SYMBOL-NAME| |CL-TEST|::|S|)))
         |COMMON-LISP|::|NIL|
         ,(|COMMON-LISP|::|STRING-UPCASE| |COMMON-LISP|::|STRING|)))))))
  '(|CL-TEST|::|NAME| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-SYNTAX-ARRAY-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-SYNTAX-ARRAY-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-SYNTAX-ARRAY-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|EXPECTED-RESULT| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-SYNTAX-ARRAY-TEST|
       `(|CL-TEST|::|DEF-SYNTAX-TEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|LET|
          ((|CL-TEST|::|V|
            (|COMMON-LISP|::|READ-FROM-STRING| ,|CL-TEST|::|FORM|)))
          (|COMMON-LISP|::|ASSERT|
           (|COMMON-LISP|::|TYPEP| |CL-TEST|::|V|
            '|COMMON-LISP|::|SIMPLE-ARRAY|))
          (|COMMON-LISP|::|ASSERT|
           (|COMMON-LISP|::|NOT|
            (|COMMON-LISP|::|ARRAY-HAS-FILL-POINTER-P| |CL-TEST|::|V|)))
          (|COMMON-LISP|::|ASSERT|
           (|COMMON-LISP|::|EQL|
            (|COMMON-LISP|::|ARRAY-ELEMENT-TYPE| |CL-TEST|::|V|)
            (|COMMON-LISP|::|UPGRADED-ARRAY-ELEMENT-TYPE| |COMMON-LISP|::|T|)))
          |CL-TEST|::|V|)
         ,(|COMMON-LISP|::|EVAL| |CL-TEST|::|EXPECTED-RESULT|)))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|FORM| |CL-TEST|::|EXPECTED-RESULT|)))
