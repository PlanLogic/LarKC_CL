(|SYSTEM|::|VERSION| '(20080430.))
#0Y_ #0Y |CHARSET|::|UTF-8|
#Y(#:|1 6 (IN-PACKAGE :CL-TEST)-1|
   #17Y(00 00 00 00 00 00 00 00 20 01 DA 31 F6 0F 01 19 01)
   ("CL-TEST" |COMMON-LISP|::|*PACKAGE*|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|8 9 (EVAL-WHEN (:LOAD-TOPLEVEL :COMPILE-TOPLEVEL :EXECUTE) (COMPILE-AND-LOAD "random-aux.lsp"))-2|
   #15Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 19 01)
   ("random-aux.lsp" |COMMON-LISP-USER|::|COMPILE-AND-LOAD|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|11 11 (DEFPARAMETER *HASH-TABLE-TEST-ITERS* 1000)-3|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 31 62 DB DC 31 5A C6 19 01)
   ((|COMMON-LISP|::|SPECIAL| |CL-TEST|::|*HASH-TABLE-TEST-ITERS*|)
    |CL-TEST|::|*HASH-TABLE-TEST-ITERS*| 1000.)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
#Y(#:|13 87 (DEFUN TEST-HASH-TABLE-1 (&REST ARGS) ...)-4|
   #20Y(00 00 00 00 00 00 00 00 20 01 DA 2F 01 DA DC 32 9C C5 19 01)
   (|CL-TEST|::|TEST-HASH-TABLE-1| |SYSTEM|::|REMOVE-OLD-DEFINITIONS|
    #Y(|CL-TEST|::|TEST-HASH-TABLE-1|
       #378Y(00 00 00 00 00 00 00 00 27 16 00 2B 01 DA A0 37 00 0B 00 00 AE DB
             38 01 8F 9F 03 14 1B 08 DC 1B 05 DE 6F 05 2F 06 AC DD 38 03 8D C1
             74 68 01 00 8E 2B 0C E1 6F 05 2F 06 1B 73 E2 6F 05 2F 06 68 01 00
             8F 2B 75 9E 2B 02 6B 09 E4 72 3B 00 0B 01 00 D0 0B 01 01 14 6B 0C
             1B 81 15 68 05 00 71 73 68 04 01 8E 13 80 96 E7 6F 05 2F 06 1B 6D
             B0 6F 13 AC 68 07 00 B5 38 02 71 C8 93 00 38 AD 68 0A 00 38 01 31
             6E 42 02 92 00 0F EE 6F 05 2F 06 93 00 78 1B 05 EF 6F 05 2F 06 95
             02 AE 8F 13 75 AE B4 31 B8 68 0B 00 B0 AD B6 31 6F 16 05 1B 80 BC
             F1 6F 05 2F 06 AD 68 0A 00 38 01 31 6E 43 14 F0 8F 14 6D 68 07 01
             32 B1 0B 07 01 AD A3 7A 06 08 00 5D 0B 07 00 68 09 00 AE AD B4 31
             6F 16 03 1B 80 8A 06 05 00 1D 80 84 14 6F 13 9F 34 1B 80 7C AC 32
             AE 59 16 01 1C 12 E9 6F 05 2F 06 68 05 00 6F 0E AC 8E 1E 6A 16 01
             1D 6E AF 6D 10 01 EB 38 01 72 F7 AC EC 90 01 31 FF 54 AC F2 90 01
             31 42 B0 6F 13 AC 68 07 00 B5 38 02 71 C8 93 00 0C 14 A1 34 16 02
             1B 36 F4 6F 05 2F 06 AD 68 0A 00 38 01 31 6E 43 14 F3 8F 14 6D AD
             68 0A 00 8D 70 0C F5 6F 05 2F 06 1B 72 F7 6F 05 2F 06 AD 68 0A 00
             38 01 31 6E 43 14 F6 8F 14 6D 16 02 16 02 85 01 AD AD 91 01 34 FE
             E4 00 19 08)
       (#.#'|COMMON-LISP|::|MAKE-HASH-TABLE| :|TEST| |COMMON-LISP|::|EQL|
        #1=(|COMMON-LISP|::|EQ| |COMMON-LISP|::|EQL| |COMMON-LISP|::|EQUAL|
            |COMMON-LISP|::|EQUALP|)
        (|COMMON-LISP|::|MEMBER| |CL-TEST|::|TEST| '#1#)
        |SYSTEM|::|ASSERT-ERROR-STRING| |SYSTEM|::|SIMPLE-ASSERT-FAILED|
        (|COMMON-LISP|::|HASH-TABLE-P| |CL-TEST|::|TABLE|)
        (|COMMON-LISP|::|TYPEP| |CL-TEST|::|TABLE|
         '|COMMON-LISP|::|HASH-TABLE|)
        |CL-TEST|::|*UNIVERSE*| |COMMON-LISP|::|VECTOR| 0.
        |CL-TEST|::|*HASH-TABLE-TEST-ITERS*|
        (|COMMON-LISP|::|EQL|
         (|COMMON-LISP|::|HASH-TABLE-COUNT| |CL-TEST|::|TABLE|)
         |COMMON-LISP|::|COUNT|)
        |COMMON-LISP|::|HASH-TABLE-SIZE|
        (|COMMON-LISP|::|LET|
         ((|CL-TEST|::|SIZE|
           (|COMMON-LISP|::|HASH-TABLE-SIZE| |CL-TEST|::|TABLE|)))
         (|COMMON-LISP|::|AND| (|COMMON-LISP|::|INTEGERP| |CL-TEST|::|SIZE|)
          (|COMMON-LISP|::|>=| |CL-TEST|::|SIZE| 0.)))
        #Y(|CL-TEST|::|TEST-HASH-TABLE-1-%REMOVE-PAIR|
           #120Y(00 00 00 00 01 00 00 00 26 02 69 00 02 32 B2 0C 00 02 94 01 95
                 02 AD 69 01 01 38 01 31 6E 42 02 92 00 0F DB 6F 02 2F 03 93 00
                 78 1B 05 DE 6F 02 2F 03 AE AE 8F 13 76 B1 69 00 01 38 06 CA F9
                 E0 32 69 0C 00 01 16 02 1B 05 E1 6F 02 2F 03 AD 69 01 01 8D 70
                 74 AD 69 01 01 38 01 31 6E 42 02 93 00 08 E2 6F 02 2F 03 92 00
                 78 93 01 08 E3 6F 02 2F 03 92 01 78 00 19 06)
           (|COMMON-LISP|::|NIL| |CL-TEST|::|PRESENT-P|
            |SYSTEM|::|ASSERT-ERROR-STRING| |SYSTEM|::|SIMPLE-ASSERT-FAILED|
            (|COMMON-LISP|::|EQL| |CL-TEST|::|EXPECTED-VALUE|
             |CL-TEST|::|VALUE|)
            |COMMON-LISP|::|EQ| 1.
            (|COMMON-LISP|::|REMHASH| |CL-TEST|::|KEY| |CL-TEST|::|TABLE|)
            (|COMMON-LISP|::|NOT| |CL-TEST|::|PRESENT-P|)
            (|COMMON-LISP|::|NULL| |CL-TEST|::|VALUE|))
           (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
           (|CL-TEST|::|RPAIR|) |COMMON-LISP|::|NIL| 1)
        3. 1. |CL-TEST|::|RANDOM-FROM-SEQ| |CL-TEST|::|PRESENT-P|
        (|COMMON-LISP|::|EQL| (|COMMON-LISP|::|CDR| |CL-TEST|::|PAIR|)
         |CL-TEST|::|VALUE|)
        #2=(|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
        (|COMMON-LISP|::|EQUAL|
         (|COMMON-LISP|::|MULTIPLE-VALUE-LIST|
          (|COMMON-LISP|::|GETHASH| |CL-TEST|::|NEW-ELEM| |CL-TEST|::|TABLE|))
         '#2#)
        2. #3=(|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
        (|COMMON-LISP|::|EQUAL|
         (|COMMON-LISP|::|MULTIPLE-VALUE-LIST|
          (|COMMON-LISP|::|GETHASH| |CL-TEST|::|KEY| |CL-TEST|::|TABLE|))
         '#3#)
        (|COMMON-LISP|::|NOT|
         (|COMMON-LISP|::|REMHASH| |CL-TEST|::|KEY| |CL-TEST|::|TABLE|))
        #4=(|COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
        (|COMMON-LISP|::|EQUAL|
         (|COMMON-LISP|::|MULTIPLE-VALUE-LIST|
          (|COMMON-LISP|::|GETHASH| |CL-TEST|::|KEY| |CL-TEST|::|TABLE|))
         '#4#))
       (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|)
       (|COMMON-LISP|::|&REST| |CL-TEST|::|ARGS|) |COMMON-LISP|::|NIL| 1))
   (|COMMON-LISP|::|T| |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
