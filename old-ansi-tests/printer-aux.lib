#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CL-TEST"))
(|COMMON-LISP-USER|::|COMPILE-AND-LOAD| "random-aux.lsp")
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-PRINT-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-PRINT-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-PRINT-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|RESULT| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CL-TEST|::|BINDINGS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-PRINT-TEST|
       `(|REGRESSION-TEST|::|DEFTEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|IF|
          (|CL-TEST|::|EQUALPT|
           (|CL-TEST|::|MY-WITH-STANDARD-IO-SYNTAX|
            (|COMMON-LISP|::|LET|
             ((|COMMON-LISP|::|*PRINT-READABLY*| |COMMON-LISP|::|NIL|))
             (|COMMON-LISP|::|LET| ,|CL-TEST|::|BINDINGS|
              (|COMMON-LISP|::|WITH-OUTPUT-TO-STRING|
               (|COMMON-LISP|::|*STANDARD-OUTPUT*|)
               (|COMMON-LISP|::|PRIN1| ,|CL-TEST|::|FORM|)))))
           ,|CL-TEST|::|RESULT|)
          |COMMON-LISP|::|T| ,|CL-TEST|::|RESULT|)
         |COMMON-LISP|::|T|))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|FORM| |CL-TEST|::|RESULT|
    |COMMON-LISP|::|&REST| |CL-TEST|::|BINDINGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-PPRINT-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-PPRINT-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-PPRINT-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|EXPECTED-VALUE| (|COMMON-LISP|::|CADDDR| . #1#))
       (#2=#:|G28160| (|COMMON-LISP|::|CDDDDR| . #1#))
       (|CL-TEST|::|MARGIN|
        (|COMMON-LISP|::|LET|
         ((#3=#:|KWD-ARG-28161|
           (|COMMON-LISP|::|GETF| #2# ':|MARGIN| '#4=(|COMMON-LISP|::|NIL|))))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #3# '#4#)
          (|COMMON-LISP|::|PROGN| 100.) #3#)))
       (|CL-TEST|::|MISER|
        (|COMMON-LISP|::|LET|
         ((#5=#:|KWD-ARG-28162| (|COMMON-LISP|::|GETF| #2# ':|MISER| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #5# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #5#)))
       (|CL-TEST|::|CIRCLE|
        (|COMMON-LISP|::|LET|
         ((#6=#:|KWD-ARG-28163| (|COMMON-LISP|::|GETF| #2# ':|CIRCLE| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #6# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #6#)))
       (|CL-TEST|::|LEN|
        (|COMMON-LISP|::|LET|
         ((#7=#:|KWD-ARG-28164| (|COMMON-LISP|::|GETF| #2# ':|LEN| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #7# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #7#)))
       (|CL-TEST|::|PRETTY|
        (|COMMON-LISP|::|LET|
         ((#8=#:|KWD-ARG-28165| (|COMMON-LISP|::|GETF| #2# ':|PRETTY| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #8# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|T|) #8#)))
       (|CL-TEST|::|ESCAPE|
        (|COMMON-LISP|::|LET|
         ((#9=#:|KWD-ARG-28166| (|COMMON-LISP|::|GETF| #2# ':|ESCAPE| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #9# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #9#)))
       (|CL-TEST|::|READABLY|
        (|COMMON-LISP|::|LET|
         ((#10=#:|KWD-ARG-28167|
           (|COMMON-LISP|::|GETF| #2# ':|READABLY| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #10# '#4#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|NIL|) #10#)))
       (|COMMON-LISP|::|PACKAGE|
        (|COMMON-LISP|::|LET|
         ((#11=#:|KWD-ARG-28168| (|COMMON-LISP|::|GETF| #2# ':|PACKAGE| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #11# '#4#)
          (|COMMON-LISP|::|PROGN|
           #12=(|COMMON-LISP|::|FIND-PACKAGE| "CL-TEST"))
          #11#))))
      (|SYSTEM|::|KEYWORD-TEST| #2#
       '(:|PACKAGE| :|READABLY| :|ESCAPE| :|PRETTY| :|LEN| :|CIRCLE| :|MISER|
         :|MARGIN|))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-PPRINT-TEST|
       `(|REGRESSION-TEST|::|DEFTEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|*PRINT-PRETTY*| ,|CL-TEST|::|PRETTY|)
            (|COMMON-LISP|::|*PRINT-ESCAPE*| ,|CL-TEST|::|ESCAPE|)
            (|COMMON-LISP|::|*PRINT-READABLY*| ,|CL-TEST|::|READABLY|)
            (|COMMON-LISP|::|*PRINT-RIGHT-MARGIN*| ,|CL-TEST|::|MARGIN|)
            (|COMMON-LISP|::|*PACKAGE*| ,|COMMON-LISP|::|PACKAGE|)
            (|COMMON-LISP|::|*PRINT-LENGTH*| ,|CL-TEST|::|LEN|)
            (|COMMON-LISP|::|*PRINT-MISER-WIDTH*| ,|CL-TEST|::|MISER|)
            (|COMMON-LISP|::|*PRINT-CIRCLE*| ,|CL-TEST|::|CIRCLE|))
           ,|CL-TEST|::|FORM|))
         ,|CL-TEST|::|EXPECTED-VALUE|))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|FORM| |CL-TEST|::|EXPECTED-VALUE|
    |COMMON-LISP|::|&KEY| (|CL-TEST|::|MARGIN| 100.)
    (|CL-TEST|::|MISER| |COMMON-LISP|::|NIL|)
    (|CL-TEST|::|CIRCLE| |COMMON-LISP|::|NIL|)
    (|CL-TEST|::|LEN| |COMMON-LISP|::|NIL|)
    (|CL-TEST|::|PRETTY| |COMMON-LISP|::|T|)
    (|CL-TEST|::|ESCAPE| |COMMON-LISP|::|NIL|)
    (|CL-TEST|::|READABLY| |COMMON-LISP|::|NIL|)
    (|COMMON-LISP|::|PACKAGE| #12#))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-PPBLOCK-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-PPBLOCK-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-PPBLOCK-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|EXPECTED-VALUE| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CL-TEST|::|KEY-ARGS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-PPBLOCK-TEST|
       `(|CL-TEST|::|DEF-PPRINT-TEST| ,|CL-TEST|::|NAME|
         (|COMMON-LISP|::|WITH-OUTPUT-TO-STRING|
          (|COMMON-LISP|::|*STANDARD-OUTPUT*|)
          (|COMMON-LISP|::|PPRINT-LOGICAL-BLOCK|
           (|COMMON-LISP|::|*STANDARD-OUTPUT*| |COMMON-LISP|::|NIL|)
           ,|CL-TEST|::|FORM|))
         ,|CL-TEST|::|EXPECTED-VALUE| ,@|CL-TEST|::|KEY-ARGS|))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|FORM| |CL-TEST|::|EXPECTED-VALUE|
    |COMMON-LISP|::|&REST| |CL-TEST|::|KEY-ARGS|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-TEST|::|*RANDOM-READ-CHECK-DEBUG*|))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOMLY-CHECK-READABILITY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|OBJ| |COMMON-LISP|::|&KEY|
    (|CL-TEST|::|CAN-FAIL| |COMMON-LISP|::|NIL|)
    (|CL-TEST|::|TEST| #'|COMMON-LISP|::|EQUAL|)
    (|CL-TEST|::|READABLE| |COMMON-LISP|::|T|)
    (|CL-TEST|::|CIRCLE| |COMMON-LISP|::|NIL| |CL-TEST|::|CIRCLE-P|)
    (|CL-TEST|::|ESCAPE| |COMMON-LISP|::|NIL| |CL-TEST|::|ESCAPE-P|)
    (|COMMON-LISP|::|GENSYM| |COMMON-LISP|::|NIL| |CL-TEST|::|GENSYM-P|)
    (|COMMON-LISP|::|DEBUG| |CL-TEST|::|*RANDOM-READ-CHECK-DEBUG*|))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|PARSE-ESCAPED-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|ESCAPED-EQUAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|LIST1| |CL-TEST|::|LIST2|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|SIMILAR-UNINTERNED-SYMBOLS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|S1| |CL-TEST|::|S2|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|MAKE-RANDOM-CONS-TREE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|SIZE|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|MAKE-RANDOM-VECTOR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|SIZE|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|FUNCALL-WITH-PRINT-BINDINGS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|FUN| |COMMON-LISP|::|&KEY|
    ((:|ARRAY| |COMMON-LISP|::|*PRINT-ARRAY*|) |COMMON-LISP|::|*PRINT-ARRAY*|)
    ((:|BASE| |COMMON-LISP|::|*PRINT-BASE*|) |COMMON-LISP|::|*PRINT-BASE*|)
    ((:|CASE| |COMMON-LISP|::|*PRINT-CASE*|) |COMMON-LISP|::|*PRINT-CASE*|)
    ((:|CIRCLE| |COMMON-LISP|::|*PRINT-CIRCLE*|)
     |COMMON-LISP|::|*PRINT-CIRCLE*|)
    ((:|ESCAPE| |COMMON-LISP|::|*PRINT-ESCAPE*|)
     |COMMON-LISP|::|*PRINT-ESCAPE*|)
    ((:|GENSYM| |COMMON-LISP|::|*PRINT-GENSYM*|)
     |COMMON-LISP|::|*PRINT-GENSYM*|)
    ((:|LENGTH| |COMMON-LISP|::|*PRINT-LENGTH*|)
     |COMMON-LISP|::|*PRINT-LENGTH*|)
    ((:|LEVEL| |COMMON-LISP|::|*PRINT-LEVEL*|) |COMMON-LISP|::|*PRINT-LEVEL*|)
    ((:|LINES| |COMMON-LISP|::|*PRINT-LINES*|) |COMMON-LISP|::|*PRINT-LINES*|)
    ((:|MISER-WIDTH| |COMMON-LISP|::|*PRINT-MISER-WIDTH*|)
     |COMMON-LISP|::|*PRINT-MISER-WIDTH*|)
    ((:|PPRINT-DISPATCH| |COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|)
     |COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|)
    ((:|PRETTY| |COMMON-LISP|::|*PRINT-PRETTY*|)
     |COMMON-LISP|::|*PRINT-PRETTY*|)
    ((:|RADIX| |COMMON-LISP|::|*PRINT-RADIX*|) |COMMON-LISP|::|*PRINT-RADIX*|)
    ((:|READABLY| |COMMON-LISP|::|*PRINT-READABLY*|)
     |COMMON-LISP|::|*PRINT-READABLY*|)
    ((:|RIGHT-MARGIN| |COMMON-LISP|::|*PRINT-RIGHT-MARGIN*|)
     |COMMON-LISP|::|*PRINT-RIGHT-MARGIN*|)
    ((:|STREAM| |COMMON-LISP|::|*STANDARD-OUTPUT*|)
     |COMMON-LISP|::|*STANDARD-OUTPUT*|))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|OUTPUT-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|OBJ| |COMMON-LISP|::|&KEY|
    (|CL-TEST|::|FUN| #'|COMMON-LISP|::|WRITE|)
    ((:|ARRAY| |COMMON-LISP|::|*PRINT-ARRAY*|) |COMMON-LISP|::|*PRINT-ARRAY*|)
    ((:|BASE| |COMMON-LISP|::|*PRINT-BASE*|) |COMMON-LISP|::|*PRINT-BASE*|)
    ((:|CASE| |COMMON-LISP|::|*PRINT-CASE*|) |COMMON-LISP|::|*PRINT-CASE*|)
    ((:|CIRCLE| |COMMON-LISP|::|*PRINT-CIRCLE*|)
     |COMMON-LISP|::|*PRINT-CIRCLE*|)
    ((:|ESCAPE| |COMMON-LISP|::|*PRINT-ESCAPE*|)
     |COMMON-LISP|::|*PRINT-ESCAPE*|)
    ((:|GENSYM| |COMMON-LISP|::|*PRINT-GENSYM*|)
     |COMMON-LISP|::|*PRINT-GENSYM*|)
    ((:|LENGTH| |COMMON-LISP|::|*PRINT-LENGTH*|)
     |COMMON-LISP|::|*PRINT-LENGTH*|)
    ((:|LEVEL| |COMMON-LISP|::|*PRINT-LEVEL*|) |COMMON-LISP|::|*PRINT-LEVEL*|)
    ((:|LINES| |COMMON-LISP|::|*PRINT-LINES*|) |COMMON-LISP|::|*PRINT-LINES*|)
    ((:|MISER-WIDTH| |COMMON-LISP|::|*PRINT-MISER-WIDTH*|)
     |COMMON-LISP|::|*PRINT-MISER-WIDTH*|)
    ((:|PPRINT-DISPATCH| |COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|)
     |COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|)
    ((:|PRETTY| |COMMON-LISP|::|*PRINT-PRETTY*|)
     |COMMON-LISP|::|*PRINT-PRETTY*|)
    ((:|RADIX| |COMMON-LISP|::|*PRINT-RADIX*|) |COMMON-LISP|::|*PRINT-RADIX*|)
    ((:|READABLY| |COMMON-LISP|::|*PRINT-READABLY*|)
     |COMMON-LISP|::|*PRINT-READABLY*|)
    ((:|RIGHT-MARGIN| |COMMON-LISP|::|*PRINT-RIGHT-MARGIN*|)
     |COMMON-LISP|::|*PRINT-RIGHT-MARGIN*|)
    ((:|STREAM| |COMMON-LISP|::|*STANDARD-OUTPUT*|)
     |COMMON-LISP|::|*STANDARD-OUTPUT*|))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|MAKE-RANDOM-KEY-PARAM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|MAKE-RANDOM-KEY-INTEGER-OR-NIL-PARAM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|NAME| |CL-TEST|::|BOUND|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|MAKE-RANDOM-WRITE-ARGS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|FILTER-UNREADABLE-FORMS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-RANDOM-WRITE-TEST-FUN|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-RANDOM-WRITE-TEST-FUN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-RANDOM-WRITE-TEST-FUN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|WRITE-ARGS| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|TEST-FN| (|COMMON-LISP|::|CADDDR| . #1#))
       (#2=#:|G28699| (|COMMON-LISP|::|CDDDDR| . #1#))
       (|CL-TEST|::|PREFIX|
        (|COMMON-LISP|::|LET|
         ((#3=#:|KWD-ARG-28700|
           (|COMMON-LISP|::|GETF| #2# ':|PREFIX| '#4=(|COMMON-LISP|::|NIL|))))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #3# '#4#)
          (|COMMON-LISP|::|PROGN| #5="") #3#)))
       (|CL-TEST|::|SUFFIX|
        (|COMMON-LISP|::|LET|
         ((#6=#:|KWD-ARG-28701| (|COMMON-LISP|::|GETF| #2# ':|SUFFIX| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #6# '#4#)
          (|COMMON-LISP|::|PROGN| #7="") #6#))))
      (|SYSTEM|::|KEYWORD-TEST| #2# '(:|SUFFIX| :|PREFIX|))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-RANDOM-WRITE-TEST-FUN|
       `(|COMMON-LISP|::|DEFUN| ,|CL-TEST|::|NAME|
         (|CL-TEST|::|N| |COMMON-LISP|::|&KEY| (|CL-TEST|::|SIZE| 10.))
         (|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|ARGS|
          |COMMON-LISP|::|=| (|CL-TEST|::|MAKE-RANDOM-WRITE-ARGS|)
          |CL-TEST|::|FOR| |COMMON-LISP|::|PACKAGE| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|FIND-PACKAGE|
           (|CL-TEST|::|RANDOM-FROM-SEQ| #("CL-TEST" "CL-USER" "KEYWORD")))
          |CL-TEST|::|FOR| |CL-TEST|::|OBJ| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|LET|
           ((|CL-TEST|::|*RANDOM-READABLE*| |COMMON-LISP|::|T|))
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|SPECIAL| |CL-TEST|::|*RANDOM-READABLE*|))
           (|CL-TEST|::|RANDOM-THING|
            (|COMMON-LISP|::|RANDOM| |CL-TEST|::|SIZE|)))
          |CL-TEST|::|FOR| |CL-TEST|::|S1| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|*PACKAGE*| |COMMON-LISP|::|PACKAGE|))
           (|COMMON-LISP|::|WITH-OUTPUT-TO-STRING| (|CL-TEST|::|S|)
            (|COMMON-LISP|::|APPLY| #'|COMMON-LISP|::|WRITE| |CL-TEST|::|OBJ|
             :|STREAM| |CL-TEST|::|S| ,@|CL-TEST|::|WRITE-ARGS|
             |CL-TEST|::|ARGS|)))
          |CL-TEST|::|FOR| |CL-TEST|::|S2| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|*PACKAGE*| |COMMON-LISP|::|PACKAGE|))
           (|COMMON-LISP|::|WITH-OUTPUT-TO-STRING|
            (|COMMON-LISP|::|*STANDARD-OUTPUT*|)
            (|COMMON-LISP|::|APPLY| #'|CL-TEST|::|OUTPUT-TEST| |CL-TEST|::|OBJ|
             :|FUN| ,|CL-TEST|::|TEST-FN| |CL-TEST|::|ARGS|)))
          |CL-TEST|::|REPEAT| |CL-TEST|::|N| |COMMON-LISP|::|UNLESS|
          (|COMMON-LISP|::|STRING=|
           (|CL-TEST|::|FILTER-UNREADABLE-FORMS|
            (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING|
             ,|CL-TEST|::|PREFIX| |CL-TEST|::|S1| ,|CL-TEST|::|SUFFIX|))
           (|CL-TEST|::|FILTER-UNREADABLE-FORMS| |CL-TEST|::|S2|))
          |CL-TEST|::|COLLECT|
          (|COMMON-LISP|::|LIST| |CL-TEST|::|OBJ| |CL-TEST|::|S1|
           |CL-TEST|::|S2| |CL-TEST|::|ARGS|))))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|WRITE-ARGS| |CL-TEST|::|TEST-FN|
    |COMMON-LISP|::|&KEY| (|CL-TEST|::|PREFIX| #5#)
    (|CL-TEST|::|SUFFIX| #7#))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-WRITE-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|N| |COMMON-LISP|::|&KEY| (|CL-TEST|::|SIZE| 10.))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-PRIN1-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|N| |COMMON-LISP|::|&KEY| (|CL-TEST|::|SIZE| 10.))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-PRINC-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|N| |COMMON-LISP|::|&KEY| (|CL-TEST|::|SIZE| 10.))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-PRINT-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|N| |COMMON-LISP|::|&KEY| (|CL-TEST|::|SIZE| 10.))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-PPRINT-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|N| |COMMON-LISP|::|&KEY| (|CL-TEST|::|SIZE| 10.))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS|
 '|CL-TEST|::|DEF-RANDOM-WRITE-TO-STRING-TEST-FUN|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-RANDOM-WRITE-TO-STRING-TEST-FUN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-RANDOM-WRITE-TO-STRING-TEST-FUN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|WRITE-ARGS| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|TEST-FN| (|COMMON-LISP|::|CADDDR| . #1#))
       (#2=#:|G28855| (|COMMON-LISP|::|CDDDDR| . #1#))
       (|CL-TEST|::|PREFIX|
        (|COMMON-LISP|::|LET|
         ((#3=#:|KWD-ARG-28856|
           (|COMMON-LISP|::|GETF| #2# ':|PREFIX| '#4=(|COMMON-LISP|::|NIL|))))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #3# '#4#)
          (|COMMON-LISP|::|PROGN| #5="") #3#)))
       (|CL-TEST|::|SUFFIX|
        (|COMMON-LISP|::|LET|
         ((#6=#:|KWD-ARG-28857| (|COMMON-LISP|::|GETF| #2# ':|SUFFIX| '#4#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #6# '#4#)
          (|COMMON-LISP|::|PROGN| #7="") #6#))))
      (|SYSTEM|::|KEYWORD-TEST| #2# '(:|SUFFIX| :|PREFIX|))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-RANDOM-WRITE-TO-STRING-TEST-FUN|
       `(|COMMON-LISP|::|DEFUN| ,|CL-TEST|::|NAME| (|CL-TEST|::|N|)
         (|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|ARGS|
          |COMMON-LISP|::|=| (|CL-TEST|::|MAKE-RANDOM-WRITE-ARGS|)
          |CL-TEST|::|FOR| |COMMON-LISP|::|PACKAGE| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|FIND-PACKAGE|
           (|CL-TEST|::|RANDOM-FROM-SEQ| #("CL-TEST" "CL-USER" "KEYWORD")))
          |CL-TEST|::|FOR| |CL-TEST|::|OBJ| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|LET|
           ((|CL-TEST|::|*RANDOM-READABLE*| |COMMON-LISP|::|T|))
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|SPECIAL| |CL-TEST|::|*RANDOM-READABLE*|))
           (|CL-TEST|::|RANDOM-THING| (|COMMON-LISP|::|RANDOM| 10.)))
          |CL-TEST|::|FOR| |CL-TEST|::|S1| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|*PACKAGE*| |COMMON-LISP|::|PACKAGE|))
           (|COMMON-LISP|::|WITH-OUTPUT-TO-STRING| (|CL-TEST|::|S|)
            (|COMMON-LISP|::|APPLY| #'|COMMON-LISP|::|WRITE| |CL-TEST|::|OBJ|
             :|STREAM| |CL-TEST|::|S| ,@|CL-TEST|::|WRITE-ARGS|
             |CL-TEST|::|ARGS|)))
          |CL-TEST|::|FOR| |CL-TEST|::|S2| |COMMON-LISP|::|=|
          (|COMMON-LISP|::|LET|
           ((|COMMON-LISP|::|*PACKAGE*| |COMMON-LISP|::|PACKAGE|))
           (|COMMON-LISP|::|APPLY| ,|CL-TEST|::|TEST-FN| |CL-TEST|::|OBJ|
            |CL-TEST|::|ARGS|))
          |CL-TEST|::|REPEAT| |CL-TEST|::|N| |COMMON-LISP|::|UNLESS|
          (|COMMON-LISP|::|STRING=|
           (|CL-TEST|::|FILTER-UNREADABLE-FORMS|
            (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING|
             ,|CL-TEST|::|PREFIX| |CL-TEST|::|S1| ,|CL-TEST|::|SUFFIX|))
           (|CL-TEST|::|FILTER-UNREADABLE-FORMS| |CL-TEST|::|S2|))
          |CL-TEST|::|COLLECT|
          (|COMMON-LISP|::|LIST| |CL-TEST|::|OBJ| |CL-TEST|::|S1|
           |CL-TEST|::|S2|))))))))
  '(|CL-TEST|::|NAME| |CL-TEST|::|WRITE-ARGS| |CL-TEST|::|TEST-FN|
    |COMMON-LISP|::|&KEY| (|CL-TEST|::|PREFIX| #5#)
    (|CL-TEST|::|SUFFIX| #7#))))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-WRITE-TO-STRING-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-PRIN1-TO-STRING-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|RANDOM-PRINC-TO-STRING-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|N|)))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|DECODE-FIXED-DECIMAL-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-TEST|::|S|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEF-FORMAT-TEST|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEF-FORMAT-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEF-FORMAT-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5. 6.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|STRING| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|ARGS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CL-TEST|::|EXPECTED-OUTPUT| (|COMMON-LISP|::|FIFTH| . #1#))
       (|CL-TEST|::|NUM-LEFT|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|CDR| . #2=((|COMMON-LISP|::|CDDDDR| . #1#)))
         (|COMMON-LISP|::|CADR| . #2#) 0.)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEF-FORMAT-TEST|
       (|COMMON-LISP|::|ASSERT| (|COMMON-LISP|::|SYMBOLP| |CL-TEST|::|NAME|))
       (|COMMON-LISP|::|LET*|
        ((|CL-TEST|::|S| (|COMMON-LISP|::|SYMBOL-NAME| |CL-TEST|::|NAME|))
         (|CL-TEST|::|EXPECTED-PREFIX|
          (|COMMON-LISP|::|STRING| '|CL-TEST|::|FORMAT.|))
         (|CL-TEST|::|EXPECTED-PREFIX-LENGTH|
          (|COMMON-LISP|::|LENGTH| |CL-TEST|::|EXPECTED-PREFIX|)))
        (|COMMON-LISP|::|ASSERT|
         (|COMMON-LISP|::|>=| (|COMMON-LISP|::|LENGTH| |CL-TEST|::|S|)
          |CL-TEST|::|EXPECTED-PREFIX-LENGTH|))
        (|COMMON-LISP|::|ASSERT|
         (|COMMON-LISP|::|STRING-EQUAL|
          (|COMMON-LISP|::|SUBSEQ| |CL-TEST|::|S| 0.
           |CL-TEST|::|EXPECTED-PREFIX-LENGTH|)
          |CL-TEST|::|EXPECTED-PREFIX|))
        (|COMMON-LISP|::|LET*|
         ((|CL-TEST|::|FORMATTER-TEST-NAME-STRING|
           (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING|
            (|COMMON-LISP|::|STRING| '|CL-TEST|::|FORMATTER.|)
            (|COMMON-LISP|::|SUBSEQ| |CL-TEST|::|S|
             |CL-TEST|::|EXPECTED-PREFIX-LENGTH|)))
          (|CL-TEST|::|FORMATTER-TEST-NAME|
           (|COMMON-LISP|::|INTERN| |CL-TEST|::|FORMATTER-TEST-NAME-STRING|
            (|COMMON-LISP|::|SYMBOL-PACKAGE| |CL-TEST|::|NAME|)))
          (|CL-TEST|::|FORMATTER-FORM|
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|STRINGP| |COMMON-LISP|::|STRING|)
            `(|COMMON-LISP|::|FORMATTER| ,|COMMON-LISP|::|STRING|)
            (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|FORMATTER|
             (|COMMON-LISP|::|EVAL| |COMMON-LISP|::|STRING|)))))
         `(|COMMON-LISP|::|PROGN|
           (|REGRESSION-TEST|::|DEFTEST| ,|CL-TEST|::|NAME|
            (|COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|
             (|COMMON-LISP|::|LET|
              ((|COMMON-LISP|::|*PRINT-READABLY*| |COMMON-LISP|::|NIL|)
               (|COMMON-LISP|::|*PACKAGE*|
                (|COMMON-LISP|::|SYMBOL-PACKAGE| '|CL-TEST|::|ABC|)))
              (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
               ,|COMMON-LISP|::|STRING| ,@|CL-TEST|::|ARGS|)))
            ,|CL-TEST|::|EXPECTED-OUTPUT|)
           (|REGRESSION-TEST|::|DEFTEST| ,|CL-TEST|::|FORMATTER-TEST-NAME|
            (|COMMON-LISP|::|LET|
             ((|CL-TEST|::|FN| ,|CL-TEST|::|FORMATTER-FORM|)
              (|CL-TEST|::|ARGS| (|COMMON-LISP|::|LIST| ,@|CL-TEST|::|ARGS|)))
             (|COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|
              (|COMMON-LISP|::|LET|
               ((|COMMON-LISP|::|*PRINT-READABLY*| |COMMON-LISP|::|NIL|)
                (|COMMON-LISP|::|*PACKAGE*|
                 (|COMMON-LISP|::|SYMBOL-PACKAGE| '|CL-TEST|::|ABC|)))
               (|COMMON-LISP|::|WITH-OUTPUT-TO-STRING|
                (|COMMON-LISP|::|STREAM|)
                (|COMMON-LISP|::|LET|
                 ((|CL-TEST|::|TAIL|
                   (|COMMON-LISP|::|APPLY| |CL-TEST|::|FN|
                    |COMMON-LISP|::|STREAM| |CL-TEST|::|ARGS|)))
                 (|COMMON-LISP|::|ASSERT|
                  (|COMMON-LISP|::|=|
                   (|COMMON-LISP|::|LENGTH| |CL-TEST|::|TAIL|)
                   ,|CL-TEST|::|NUM-LEFT|)
                  (|CL-TEST|::|TAIL|) "Tail is ~A, length should be ~A"
                  |CL-TEST|::|TAIL| ,|CL-TEST|::|NUM-LEFT|))))))
            ,|CL-TEST|::|EXPECTED-OUTPUT|)))))))))
  '(|CL-TEST|::|NAME| |COMMON-LISP|::|STRING| |CL-TEST|::|ARGS|
    |CL-TEST|::|EXPECTED-OUTPUT| |COMMON-LISP|::|&OPTIONAL|
    (|CL-TEST|::|NUM-LEFT| 0.))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|FORMATTER-CALL-TO-STRING|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|FORMATTER-CALL-TO-STRING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|FORMATTER-CALL-TO-STRING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|FN|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|FORMATTER-CALL-TO-STRING|
       (|COMMON-LISP|::|LET|
        ((|COMMON-LISP|::|STREAM| (|COMMON-LISP|::|GENSYM| "S")))
        `(|COMMON-LISP|::|WITH-OUTPUT-TO-STRING| (,|COMMON-LISP|::|STREAM|)
          (|COMMON-LISP|::|ASSERT|
           (|COMMON-LISP|::|EQUAL|
            (|COMMON-LISP|::|FUNCALL| ,|CL-TEST|::|FN| ,|COMMON-LISP|::|STREAM|
             ,@|CL-TEST|::|ARGS| '|CL-TEST|::|A|)
            '(|CL-TEST|::|A|))))))))))
  '(|CL-TEST|::|FN| |COMMON-LISP|::|&BODY| |CL-TEST|::|ARGS|)))
