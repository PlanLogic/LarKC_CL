#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CL-TEST"))
(|SYSTEM|::|C-DEFUN| '|CL-TEST|::|MAKE-DEF-COND-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-TEST|::|NAME| |COMMON-LISP|::|&REST| |CL-TEST|::|SUFFIXES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-TEST|::|DEFINE-CONDITION-WITH-TESTS|)
(|SYSTEM|::|%PUTD| '|CL-TEST|::|DEFINE-CONDITION-WITH-TESTS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-TEST|::|DEFINE-CONDITION-WITH-TESTS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Create a condition and some associated tests."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4. 4.
       |COMMON-LISP|::|T|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-TEST|::|NAME-SYMBOL|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-TEST|::|PARENTS| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-TEST|::|SLOT-SPECS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CL-TEST|::|OPTIONS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-TEST|::|DEFINE-CONDITION-WITH-TESTS|
       (|COMMON-LISP|::|ASSERT|
        (|COMMON-LISP|::|SYMBOLP| |CL-TEST|::|NAME-SYMBOL|))
       (|COMMON-LISP|::|DOLIST| (|CL-TEST|::|PARENT| |CL-TEST|::|PARENTS|)
        (|COMMON-LISP|::|ASSERT|
         (|COMMON-LISP|::|SYMBOLP| |CL-TEST|::|PARENT|)))
       (|COMMON-LISP|::|LET|
        ((|CL-TEST|::|NAME|
          (|COMMON-LISP|::|SYMBOL-NAME| |CL-TEST|::|NAME-SYMBOL|)))
        `(|COMMON-LISP|::|EVAL-WHEN|
          (:|LOAD-TOPLEVEL| :|COMPILE-TOPLEVEL| :|EXECUTE|)
          (|CL-TEST|::|REPORT-AND-IGNORE-ERRORS|
           (|COMMON-LISP|::|EVAL|
            '(|COMMON-LISP|::|DEFINE-CONDITION| ,|CL-TEST|::|NAME-SYMBOL|
              ,|CL-TEST|::|PARENTS| ,|CL-TEST|::|SLOT-SPECS|
              ,@|CL-TEST|::|OPTIONS|)))
          ,@(|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|PARENT|
             |CL-TEST|::|IN|
             (|COMMON-LISP|::|ADJOIN| '|COMMON-LISP|::|CONDITION|
              |CL-TEST|::|PARENTS|)
             |CL-TEST|::|COLLECT|
             `(|REGRESSION-TEST|::|DEFTEST|
               ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
                 "IS-SUBTYPE-OF/" |CL-TEST|::|PARENT|)
               (|CL-TEST|::|SUBTYPEP*| ',|CL-TEST|::|NAME-SYMBOL|
                ',|CL-TEST|::|PARENT|)
               |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
          ,@(|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|PARENT|
             |CL-TEST|::|IN|
             (|COMMON-LISP|::|ADJOIN| '|COMMON-LISP|::|CONDITION|
              |CL-TEST|::|PARENTS|)
             |CL-TEST|::|COLLECT|
             `(|REGRESSION-TEST|::|DEFTEST|
               ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
                 "IS-SUBTYPE-OF-2/" |CL-TEST|::|PARENT|)
               (|CL-TEST|::|CHECK-ALL-SUBTYPEP| ',|CL-TEST|::|NAME-SYMBOL|
                ',|CL-TEST|::|PARENT|)
               |COMMON-LISP|::|NIL|))
          ,@(|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|PARENT|
             |CL-TEST|::|IN|
             (|COMMON-LISP|::|ADJOIN| '|COMMON-LISP|::|CONDITION|
              |CL-TEST|::|PARENTS|)
             |CL-TEST|::|COLLECT|
             `(|REGRESSION-TEST|::|DEFTEST|
               ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
                 "IS-NOT-SUPERTYPE-OF/" |CL-TEST|::|PARENT|)
               (|CL-TEST|::|SUBTYPEP*| ',|CL-TEST|::|PARENT|
                ',|CL-TEST|::|NAME-SYMBOL|)
               |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|))
          ,@(|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|PARENT|
             |CL-TEST|::|IN|
             (|COMMON-LISP|::|ADJOIN| '|COMMON-LISP|::|CONDITION|
              |CL-TEST|::|PARENTS|)
             |CL-TEST|::|COLLECT|
             `(|REGRESSION-TEST|::|DEFTEST|
               ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME| "IS-A/"
                 |CL-TEST|::|PARENT|)
               (|COMMON-LISP|::|LET|
                ((|CL-TEST|::|C|
                  (|COMMON-LISP|::|MAKE-CONDITION|
                   ',|CL-TEST|::|NAME-SYMBOL|)))
                (|CL-TEST|::|NOTNOT-MV|
                 (|COMMON-LISP|::|TYPEP| |CL-TEST|::|C|
                  ',|CL-TEST|::|PARENT|)))
               |COMMON-LISP|::|T|))
          ,@(|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|PARENT|
             |CL-TEST|::|IN|
             (|COMMON-LISP|::|ADJOIN| '|COMMON-LISP|::|CONDITION|
              |CL-TEST|::|PARENTS|)
             |CL-TEST|::|COLLECT|
             `(|REGRESSION-TEST|::|DEFTEST|
               ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
                 "IS-SUBCLASS-OF/" |CL-TEST|::|PARENT|)
               (|CL-TEST|::|SUBTYPEP*|
                (|CLOS|::|FIND-CLASS| ',|CL-TEST|::|NAME-SYMBOL|)
                (|CLOS|::|FIND-CLASS| ',|CL-TEST|::|PARENT|))
               |COMMON-LISP|::|T| |COMMON-LISP|::|T|))
          ,@(|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|PARENT|
             |CL-TEST|::|IN|
             (|COMMON-LISP|::|ADJOIN| '|COMMON-LISP|::|CONDITION|
              |CL-TEST|::|PARENTS|)
             |CL-TEST|::|COLLECT|
             `(|REGRESSION-TEST|::|DEFTEST|
               ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
                 "IS-NOT-SUPERCLASS-OF/" |CL-TEST|::|PARENT|)
               (|CL-TEST|::|SUBTYPEP*|
                (|CLOS|::|FIND-CLASS| ',|CL-TEST|::|PARENT|)
                (|CLOS|::|FIND-CLASS| ',|CL-TEST|::|NAME-SYMBOL|))
               |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|))
          ,@(|COMMON-LISP|::|LOOP| |CL-TEST|::|FOR| |CL-TEST|::|PARENT|
             |CL-TEST|::|IN|
             (|COMMON-LISP|::|ADJOIN| '|COMMON-LISP|::|CONDITION|
              |CL-TEST|::|PARENTS|)
             |CL-TEST|::|COLLECT|
             `(|REGRESSION-TEST|::|DEFTEST|
               ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
                 "IS-A-MEMBER-OF-CLASS/" |CL-TEST|::|PARENT|)
               (|COMMON-LISP|::|LET|
                ((|CL-TEST|::|C|
                  (|COMMON-LISP|::|MAKE-CONDITION|
                   ',|CL-TEST|::|NAME-SYMBOL|)))
                (|CL-TEST|::|NOTNOT-MV|
                 (|COMMON-LISP|::|TYPEP| |CL-TEST|::|C|
                  (|CLOS|::|FIND-CLASS| ',|CL-TEST|::|PARENT|))))
               |COMMON-LISP|::|T|))
          (|REGRESSION-TEST|::|DEFTEST|
           ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
             "HANDLER-CASE-1")
           (|COMMON-LISP|::|LET|
            ((|CL-TEST|::|C|
              (|COMMON-LISP|::|MAKE-CONDITION| ',|CL-TEST|::|NAME-SYMBOL|)))
            (|CL-TEST|::|HANDLER-CASE|
             (|CL-TEST|::|NORMALLY| (|COMMON-LISP|::|SIGNAL| |CL-TEST|::|C|))
             (,|CL-TEST|::|NAME-SYMBOL| (|CL-TEST|::|C1|)
              (|CL-TEST|::|EQT| |CL-TEST|::|C| |CL-TEST|::|C1|))))
           |COMMON-LISP|::|T|)
          (|REGRESSION-TEST|::|DEFTEST|
           ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
             "HANDLER-CASE-2")
           (|COMMON-LISP|::|LET|
            ((|CL-TEST|::|C|
              (|COMMON-LISP|::|MAKE-CONDITION| ',|CL-TEST|::|NAME-SYMBOL|)))
            (|CL-TEST|::|HANDLER-CASE|
             (|CL-TEST|::|NORMALLY| (|COMMON-LISP|::|SIGNAL| |CL-TEST|::|C|))
             (|COMMON-LISP|::|CONDITION| (|CL-TEST|::|C1|)
              (|CL-TEST|::|EQT| |CL-TEST|::|C| |CL-TEST|::|C1|))))
           |COMMON-LISP|::|T|)
          ,@(|COMMON-LISP|::|UNLESS|
             (|COMMON-LISP|::|SOME|
              #'(|COMMON-LISP|::|LAMBDA| (|CL-TEST|::|CT|)
                 (|COMMON-LISP|::|SUBTYPEP| |CL-TEST|::|CT|
                  '|COMMON-LISP|::|ERROR|))
              |CL-TEST|::|PARENTS|)
             `((|REGRESSION-TEST|::|DEFTEST|
                ,(|CL-TEST|::|MAKE-DEF-COND-NAME| |CL-TEST|::|NAME|
                  "HANDLER-CASE-3")
                (|COMMON-LISP|::|LET|
                 ((|CL-TEST|::|C|
                   (|COMMON-LISP|::|MAKE-CONDITION|
                    ',|CL-TEST|::|NAME-SYMBOL|)))
                 (|CL-TEST|::|HANDLER-CASE|
                  (|CL-TEST|::|NORMALLY|
                   (|COMMON-LISP|::|SIGNAL| |CL-TEST|::|C|))
                  (|COMMON-LISP|::|ERROR| |COMMON-LISP|::|NIL|
                   |COMMON-LISP|::|NIL|)
                  (,|CL-TEST|::|NAME-SYMBOL| (|CL-TEST|::|C2|)
                   (|CL-TEST|::|EQT| |CL-TEST|::|C| |CL-TEST|::|C2|))))
                |COMMON-LISP|::|T|))))))))))
  '(|CL-TEST|::|NAME-SYMBOL| |CL-TEST|::|PARENTS| |CL-TEST|::|SLOT-SPECS|
    |COMMON-LISP|::|&REST| |CL-TEST|::|OPTIONS|)))
