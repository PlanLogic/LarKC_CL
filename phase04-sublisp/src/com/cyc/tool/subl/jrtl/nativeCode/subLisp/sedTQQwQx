/*
 * SubLMain.java
 *
 * Created on December 13, 2005, 1:41 PM
 */

package com.cyc.tool.subl.jrtl.nativeCode.subLisp;

// Internal imports
import com.cyc.tool.subl.jrtl.nativeCode.commonLisp.Interpreter;
import com.cyc.tool.subl.jrtl.nativeCode.commonLisp.Main;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.AbstractSubLSequence;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLEnvironment;
import com.cyc.tool.subl.util.*;

// External imports
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObjectFactory;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLProcess;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLSymbol;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLObject;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLPackage;
import com.cyc.tool.subl.jrtl.nativeCode.type.core.SubLString;
import com.cyc.tool.subl.jrtl.nativeCode.type.exception.ResumeException;
import com.cyc.tool.subl.jrtl.nativeCode.type.operator.SubLFunction;
import com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLNil;
import com.cyc.tool.subl.jrtl.translatedCode.sublisp.reader;
import com.cyc.tool.subl.ui.SubLReaderPanel;
import java.io.InputStream;
import java.io.PrintStream;
import java.lang.management.ManagementFactory;
import java.lang.management.MemoryMXBean;
import java.lang.management.MemoryNotificationInfo;
import java.lang.management.MemoryPoolMXBean;
import java.lang.management.MemoryType;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.Semaphore;
import javax.management.Notification;
import javax.management.NotificationEmitter;


/**
 * Typical arguments: -i "/cyc/top/init/jrtl-init.lisp"
 * Typical Java params: -server -Xms256m -Xmx776m -Xss1m -XX:MaxPermSize=128m
 * Typical working directory: /home/<user>/cvs/head/cycorp/cyc/top/
 * @author goolsbey, tbrussea
 */
public class SubLMain {
  
  //// Constructors
  
  /** There should only ever be one instance of this */
  private SubLMain() {
    
  }
  
  //// Public Area
  
  public static InputStream ORIGINAL_IN_STREAM = System.in;
  public static PrintStream ORIGINAL_OUT_STREAM = System.out;
  public static PrintStream ORIGINAL_ERR_STREAM = System.err;
  
  public static SubLMain me = new SubLMain();
  
  public void doSystemCleanupAndExit(int code) {
    System.exit(code);
  }
  
  
  //// Initializers
  
  /** This is unfortunately public so it can be called by unit tests */
  public static void initializeSubL(String[] args) {
    try {
    	//if (Site.isSubLisp) Interpreter.initializeLisp();
      PatchFileLoader.PATCH_FILE_LOADER.loadClass("com.cyc.tool.subl.jrtl.nativeCode.type.symbol.SubLPackage", true);
    } catch (Exception e) {
      e.printStackTrace(); // @hack
    }
    SubLPackage.initPackages();
    try {
      PatchFileLoader.PATCH_FILE_LOADER.loadClass("com.cyc.tool.subl.jrtl.nativeCode.subLisp.CommonSymbols", true);
      SubLSymbol sym = CommonSymbols.EQ; // @hack to make sure this get initialized first
    } catch (Exception e) {
      e.printStackTrace(); // @hack
    }
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Packages");
    SubLPackage.setCurrentPackage(SubLPackage.SUBLISP_PACKAGE);
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Equality");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.SubLSpecialOperatorDeclarations");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Numbers");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Strings");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Types");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.ConsesLow");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Alien");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Values");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Characters");
    BinaryFunction.initialize(); // this must come after Equality -APB
    
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Semaphores");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Dynamic");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Errors");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Environment");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Eval");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Filesys");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Functions");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Guids");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Hashtables");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.JavaLink");
    //SubLFiles.initialize("Keyhashes");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Locks");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.ReadWriteLocks");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapper");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Mapping");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.PrintLow");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Processes");
        try {
            SubLPackage.setCurrentPackage(SubLPackage.CYC_PACKAGE);
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Regex");
        }
        finally {
            SubLPackage.setCurrentPackage(SubLPackage.SUBLISP_PACKAGE);
        }
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sequences");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sort");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Storage");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.StreamsLow");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Structures");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Sxhash");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Symbols");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.SystemInfo");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Tcp");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Threads");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Time");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.UserIO");
    SubLFiles.initialize("com.cyc.tool.subl.jrtl.nativeCode.subLisp.Vectors");
    
    // SubLFiles.initialize("SubL");
    // translated RTL extensions
    // these are in the order they are initialized in the C RTL
